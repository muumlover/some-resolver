/*!
 * Tencent Video Player creative plugins.
 * @Copyright 2020
 * modify at: 2020-04-10 17:4:22
 * power by Tencent Video FE Team
 */
!function (e) {
    var t = {};

    function r(i) {
        if (t[i]) return t[i].exports;
        var n = t[i] = {i: i, l: !1, exports: {}};
        return e[i].call(n.exports, n, n.exports, r), n.l = !0, n.exports
    }

    r.m = e, r.c = t, r.d = function (e, t, i) {
        r.o(e, t) || Object.defineProperty(e, t, {configurable: !1, enumerable: !0, get: i})
    }, r.n = function (e) {
        var t = e && e.__esModule ? function () {
            return e["default"]
        } : function () {
            return e
        };
        return r.d(t, "a", t), t
    }, r.o = function (e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
    }, r.p = "", r(r.s = 22)
}([function (e, t, r) {
    "use strict";
    e.exports = function (e) {
        return {
            log: function () {
                var t = Array.prototype.slice.call(arguments), r = new Date,
                    i = [r.getHours(), r.getMinutes(), r.getSeconds(), r.getMilliseconds()].join(":");
                t.unshift(e ? "[" + i + " TxpCreativePlayer/" + e + "]" : ""), function () {
                    window.TxpCreativePlayer && TxpCreativePlayer.debug && window.console && window.console.log && window.console.log.apply(window.console, arguments)
                }.apply(null, t)
            }, err: function () {
                var t = Array.prototype.slice.call(arguments), r = new Date,
                    i = [r.getHours(), r.getMinutes(), r.getSeconds(), r.getMilliseconds()].join(":");
                t.unshift(e ? "[" + i + " TxpCreativePlayer/" + e + "]" : ""), function () {
                    window.TxpCreativePlayer && TxpCreativePlayer.debug && window.console && window.console.error && window.console.error.apply(window.console, arguments)
                }.apply(null, t)
            }
        }
    }
}, function (e, t, r) {
    "use strict";
    e.exports = {
        AD_STOP: "innerStopAdEvt",
        AD_SHOW: "innerShowAdEvt",
        AD_HIDE: "innerHideAdEvt",
        REPORT_EVENT: {
            AD_VIEW: "reportAdView",
            AD_GET_INFO: "reportAdGetInfo",
            AD_GET_INFO_ERROR: "reportAdGetInfoError",
            AD_LOAD_COMPLETE: "reportAdLoadComplete",
            AD_END: "reportAdEnd",
            AD_CLICK: "reportAdClick",
            AD_SCREEN_SHOT: "reportAdScreenShot",
            AD_DURING: "reportAdDuring",
            AD_MIND_CZC: "reportCzcMind",
            AD_DP3_CZC: "reportCzcDp3",
            AD_POINT_VIEW: "reportPointView",
            AD_3PARTY_VIEW: "report3PartyView",
            NEW_DP3: "newDp3"
        },
        TXPLAYER_EVENT: {
            AD_REQUEST_ORDER: "requestOrderEvt",
            AD_GET_INFO: "getAdInfoEvt",
            AD_LOAD_START: "loadStartEvt",
            AD_LOAD_READY: "loadReadyEvt",
            AD_LOAD_PROGRESS: "loadProgressEvt",
            AD_LOAD_COMPLETE: "loadCompleteEvt",
            AD_ENTER_COUNTDOWN: "enterCountdownEvt",
            AD_ENTER_COUNTDOWN_COMPLETE: "enterCountdownCompleteEvt",
            AD_PLAY_START: "playStartEvt",
            AD_PLAY_END: "playEndEvt",
            AD_PLAY_ERROR: "playErrorEvt",
            AD_SHOW: "showAdEvt",
            AD_STOP: "stopAdEvt",
            AD_EXIT_WINDOW_FULLSCREEN: "exitWindowFullscreen",
            AD_EXIT_BROWSER_FULLSCREEN: "exitBrowserFullscreen",
            AD_MOVE_IN: "moveinAd",
            AD_MOVE_OUT: "moveoutAd",
            AD_REPORT: "reportAd"
        },
        TXPLAYER_API: {
            UP_BARRAGE_ZINDEX: "upBarrageZindex",
            RESET_BARRAGE_ZINDEX: "resetBarrageZindex",
            GET_PLAYSTATE: "getPlayState",
            GET_CONTROL_STATUS: "getControlStatus",
            GET_VOLUME: "getVolume"
        },
        UI_EVENT: {
            VIDEO_SKIP_TEXT: "videoSkipTextClickEvt",
            VIDEO_CLOSE_BUTTON_CLICK: "videoCloseButtonClickEvt",
            VIDEO_NO_SKIP_CLOSE_BUTTON_CLICK: "videoNoSkipCloseButtonClickEvt",
            VIDEO_NO_SKIP_KNOW_BUTTON_CLICK: "videoNoSkipKnowButtonClickEvt",
            VIDEO_NO_SKIP_BUTTON_CLICK: "videoNoSkipButtonClickEvt",
            VIDEO_LINK_AREA_CLICK: "videoLinkAreaClickEvt",
            VIDEO_DETAIL_BUTTON_CLICK: "videoDetailButtonClickEvt",
            VIDEO_VOLUME_BUTTON_CLICK: "videoVolumeButtonClickEvt"
        },
        VPAID_EVENT: {
            AdLoaded: "AdLoaded",
            AdStarted: "AdStarted",
            AdStopped: "AdStopped",
            AdSkipped: "AdSkipped",
            AdSkippableStateChange: "AdSkippableStateChange",
            AdSizeChange: "AdSizeChange",
            AdLinearChange: "AdLinearChange",
            AdDurationChange: "AdDurationChange",
            AdExpandedChange: "AdExpandedChange",
            AdVideoStart: "AdVideoStart",
            AdVideoFirstQuartile: "AdVideoFirstQuartile",
            AdVideoMidpoint: "AdVideoMidpoint",
            AdVideoThirdQuartile: "AdVideoThirdQuartile",
            AdVideoComplete: "AdVideoComplete",
            AdVolumeChange: "AdVolumeChange",
            AdImpression: "AdImpression",
            AdClickThru: "AdClickThru",
            AdInteraction: "AdInteraction",
            AdUserAcceptInvitation: "AdUserAcceptInvitation",
            AdUserMinimize: "AdUserMinimize",
            AdUserClose: "AdUserClose",
            AdPaused: "AdPaused",
            AdPlaying: "AdPlaying",
            AdLog: "AdLog",
            AdError: "AdError",
            AdPauseTimeCount: "AdPauseTimeCount",
            AdResumeTimeCount: "AdResumeTimeCount"
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    };
    e.exports = {
        getScale: function (e, t, r, i, n) {
            var a, o, s;
            return a = r / e, o = i / t, s = Math.min(a, o), n && (n.width = parseInt(n.width * s), n.height = parseInt(n.height * s)), s || 1
        }, checkSuffix: function (e, t) {
            if (!e) return !1;
            e = e.toLowerCase();
            var r = /\.(\w+)(?:$|\?|\#)/.exec(e);
            if (!r || !r[1]) return !1;
            if (!t) return r[1];
            if ("string" == typeof t) return r[1] === t;
            if (t instanceof Array) {
                for (var i = t.length - 1; i >= 0; i--) if (r[1] === t[i]) return !0;
                return !1
            }
        }, loadJs: function (e, t, r, i) {
            var n = document.createElement("script");
            n.type = "text/javascript", n.charset = "UTF-8", n.src = e.replace(/http(s)?:/, location.protocol);
            var a = !1;
            if (n.onerror = function (e) {
                a = !0, t({src: e.target.src, error: {type: "jserror", code: 404}})
            }, n.addEventListener ? n.addEventListener("load", function () {
                a = !0, t()
            }, !1) : n.attachEvent && n.attachEvent("onreadystatechange", function () {
                "loaded" == window.event.srcElement.readyState && (a = !0, t())
            }), i) {
                var o = document.createElement("base");
                o.href = n.src.match(/.+\//)[0], i.getElementsByTagName("head")[0].appendChild(o)
            }
            r ? r.appendChild(n) : document.getElementsByTagName("head")[0].appendChild(n), setTimeout(function () {
                a || (t && t({src: e, error: {type: "js timeout", code: 502}}), t = function () {
                })
            }, 5e3)
        }, appendParamsToUrl: function (e, t) {
            return "string" == typeof e && t && (e += (-1 == e.indexOf("?") ? "?" : "&") + this.param2url(t)), e
        }, param2url: function (e) {
            if ("object" == (void 0 === e ? "undefined" : i(e))) {
                var t = [];
                for (var r in e) e.hasOwnProperty(r) && t.push(r + "=" + e[r]);
                return t.join("&")
            }
            return ""
        }, url2Obj: function (e) {
            var t = {};
            if (!e) return t;
            var r = document.createElement("a");
            r.href = e;
            var i = r.search || "";
            return i ? ((i = i.replace(/^\?/, "").split("&")).forEach(function (e) {
                var r = e.split("=");
                t[r[0]] = r[1]
            }), t) : t
        }, refreshUrlParamOrder: function (e) {
            if (!e) return "";
            var t = document.createElement("a");
            t.href = e;
            var r = t.search || "";
            if (!r) return e;
            if ((r = r.replace(/^\?/, "").split("&")).sort(function () {
                return .5 - Math.random() > 0 ? 1 : -1
            }), r[0] && /^vkey/.test(r[0]) && r.length > 1) {
                var i = r[0];
                r[0] = r[1], r[1] = i
            }
            return r = r.join("&"), t.href.replace(t.search, "?" + r)
        }, getVideoType: function () {
            var e = "";
            return window.COVER_INFO && window.COVER_INFO.typeid ? e = +window.COVER_INFO.typeid : window.VIDEO_INFO && window.VIDEO_INFO.type && (e = +window.VIDEO_INFO.type), e
        }, getUA: function (e) {
            if (!e) return "unknown";
            var t = -1,
                r = (e = e.toLowerCase()).match(/(?:metasr.\d*|qqlive.\d*|qqbrowser.\d*|maxthon.\d*|theworld|lbbrowser|firefox.\d*|opera.\d*|bidubrowser.\d*)/);
            if (null !== r) return r[0].replace(" ", "").replace("/", "");
            if (e.indexOf("android") > -1) return "android";
            if (e.indexOf("iphone") > -1) return "iphone";
            if (e.indexOf("ipad") > -1) return "ipad";
            if ((t = e.indexOf("chrome")) > -1) return "chrome" + parseInt(e.substr(t + 7, 4));
            if ((t = e.indexOf("safari")) > -1) return "safari";
            var i = e.indexOf("msie");
            if (i > -1) return "ie" + parseInt(e.substr(i + 5, 2));
            if (e.indexOf("trident") > -1) {
                var n = e.indexOf("rv:");
                if (n > -1) return "ie" + parseInt(e.substr(n + 3, 2))
            }
            return e
        }, cookie: {
            set: function (e, t, r, i, n) {
                if (n) {
                    var a = new Date, o = new Date;
                    o.setTime(a.getTime() + 36e5 * n)
                }
                return document.cookie = e + "=" + t + "; " + (n ? "expires=" + o.toGMTString() + "; " : "") + (i ? "path=" + i + "; " : "path=/; ") + (r ? "domain=" + r + ";" : "domain=" + window.location.host + ";"), !0
            }, get: function (e) {
                var t = new RegExp("(?:^|;+|\\s+)" + e + "=([^;]*)"), r = document.cookie.match(t);
                return r ? r[1] : ""
            }, del: function (e, t, r) {
                var i = new Date;
                i.setTime(i.getTime() - 1), document.cookie = e + "=; expires=" + i.toGMTString() + ";" + (r ? "path=" + r + "; " : "path=/; ") + (t ? "domain=" + t + ";" : "domain=" + window.location.host + ";")
            }
        }
    }
}, function (e, t, r) {
    "use strict";
    e.exports = {
        LD: "LD",
        HT: "HT",
        ZC: "ZC",
        CZC: "CZC",
        ZT: "ZT",
        KB: "KB",
        PSJ: "PSJ",
        PPB: "PPB",
        PVL: "PVL",
        ZI: "ZI",
        PDF: "PDF",
        BS: "BS",
        TP: "TP",
        VIN: "VIN",
        PHLS: "PHLS"
    }
}, function (e, t, r) {
    "use strict";
    e.exports = {INIT: 0, LOADING: 1, LOAD_READY: 2, PLAYING: 3, PAUSED: 4, END: -1, WAIT_FOR_STOP: -2}
}, function (e, t, r) {
    "use strict";
    var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }, n = "undefined" != typeof Txplayer && Txplayer.dataset.hideClass || "txp_none", a = {}, o = 1;
    e.exports = {
        attr: function (e, t, r) {
            if (!e) return "";
            if (t) {
                if (void 0 !== r) return e.setAttribute(t, r);
                if ("src" !== t) return e.getAttribute(t);
                e.src = src
            }
            return ""
        }, removeAttr: function (e, t) {
            e && t && ("src" === t ? delete e.src : e.removeAttribute(t))
        }, css: function (e, t, r) {
            if (!e) return "";
            if (t) {
                if (void 0 === r && "string" == typeof t) {
                    var n = {};
                    try {
                        n = document.defaultView.getComputedStyle(e, null)
                    } catch (s) {
                        n = e.currentStyle
                    }
                    return n[t]
                }
                if (void 0 === r && "object" === (void 0 === t ? "undefined" : i(t))) {
                    var a = t;
                    for (var o in a) a.hasOwnProperty(o) && (/width|height|left|right|top|bottom/.test(o) && "number" == typeof a[o] && (a[o] = a[o] + "px"), e.style[o] = a[o])
                } else "string" == typeof t && "string" == typeof r && (/width|height|left|right|top|bottom/i.test(t) && "number" == typeof r && (r += "px"), e.style[t] = r)
            }
        }, append: function () {
            var e = Array.prototype.slice.call(arguments), t = e.shift();
            if (t) for (var r = 0, i = e.length; r < i; r++) t.appendChild(e[r])
        }, addClass: function (e, t) {
            if (!this.hasClass(e, t)) if (e.className && 0 !== e.className.length) {
                var r = e.className.split(" ");
                r.push(t), e.className = r.join(" ")
            } else e.className = t
        }, removeClass: function (e, t) {
            if (this.hasClass(e, t)) {
                var r = e.className.split(" "), i = r.indexOf(t);
                r.splice(i, 1), e.className = r.join(" ")
            }
        }, hasClass: function (e, t) {
            return e.className && e.className.indexOf(t) > -1
        }, hide: function (e) {
            this.addClass(e, n)
        }, show: function (e) {
            this.removeClass(e, n)
        }, on: function () {
            var e = Array.prototype.slice.call(arguments), t = e.shift();
            if (t && (function (e) {
                e._zid || (e._zid = o++)
            }(t), e.length >= 2)) {
                var r = function (e, t, r) {
                    var i = e._zid, n = {evt: t};
                    return a[i] || (a[i] = {}), n.cb = function (e) {
                        r(e)
                    }, a[i][t] || (a[i][t] = []), a[i][t].push(n), n
                }(t, e[0], e[1]), i = e[2];
                void 0 !== i && (i = !1), "function" == typeof t.addEventListener ? t.addEventListener(e[0], r.cb, i) : "function" == typeof t.attachEvent ? t.attachEvent(e[0], r.cb, i) : t["on" + e[0]] = r.cb
            }
        }, _removeListener: function (e, t, r, i) {
            void 0 === i && (i = !1), "function" == typeof e.removeEventListener ? e.removeEventListener(t, r, i) : "function" == typeof e.detachEvent ? e.detachEvent("on" + t, r, i) : e["on" + t] = null
        }, off: function () {
            var e = Array.prototype.slice.call(arguments), t = e.shift(), r = this;
            if (t) {
                var i = e[2];
                if (2 === arguments.length) ((function (e, t) {
                    var r = e._zid, i = [];
                    return a[r] && (i = a[r][t]), i
                })(t, e[0], e[1]) || []).forEach(function (e) {
                    r._removeListener(t, e.evt, e.cb, !1)
                }), function (e, t, r) {
                    var i = e._zid;
                    a[i] && (t ? delete a[i][t] : delete a[i])
                }(t, e[0], e[1]); else arguments.length > 2 && this._removeListener(t, e[0], e[1], i)
            }
        }, text: function () {
            var e = Array.prototype.slice.call(arguments), t = e.shift();
            if (t) if (1 === e.length) t.textContent = e[0]; else if (0 === e.length) return t.textContent
        }, html: function () {
            var e = Array.prototype.slice.call(arguments), t = e.shift();
            if (t) return 1 !== e.length ? t.innerHTML : void (t.innerHTML = e[0])
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(4), a = r(3), o = r(1), s = r(0)("base/adBase"), d = r(2), l = r(9), u = 0;
    e.exports = function () {
        function e(t) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), s.log("new AdBase", t), this._name = "adBase", this.infos = t.infos, this.info = t.infos && t.infos[0] ? t.infos[0] : null, this.scene = t.scene, this.dataset = t.dataset, this.$dom = t.dom, this.message = t.message, this.adplayer = t.adplayer, this._canPlay = !1, this._isShow = !1, this._state = n.INIT, this._isSmallWindow = !1
        }

        return i(e, [{
            key: "_loadReadyHandler", value: function (e) {
                this._canPlay = !0, this._state = n.loadReady, this._emitEvent(o.TXPLAYER_EVENT.AD_LOAD_READY, e)
            }
        }, {
            key: "_emitEvent", value: function (e, t) {
                void 0 === t && (t = {
                    adtype: this.adtype,
                    adinfo: this.info,
                    isWholeScene: this.isWholeScene
                }), this.message && this.message.emit(e, t)
            }
        }, {
            key: "callOuterApi", value: function (e) {
                var t = this.adplayer.getConf();
                if (t.playerMethod && "function" == typeof t.playerMethod[e]) {
                    var r = Array.prototype.slice.call(arguments);
                    return r.shift(), t.playerMethod[e].apply(null, r)
                }
            }
        }, {
            key: "initUI", value: function (e, t, r) {
                var i = e.layer;
                if (i) {
                    var n = this.template(r);
                    if (!i.innerHTML || -1 == i.innerHTML.indexOf(n)) {
                        var a = document.createElement("div");
                        a.innerHTML = n, i.appendChild(a.children[0])
                    }
                    for (var o in r) r.hasOwnProperty(o) && (t["$" + o] = i.querySelector('[data-role="' + r[o] + '"]'))
                }
            }
        }, {
            key: "addEvent", value: function () {
            }
        }, {
            key: "removeEvent", value: function () {
            }
        }, {
            key: "load", value: function () {
                if (this._state = n.LOADING, this.info && this.info.isEmpty && !this.info.isVideoAd) {
                    if (this.adtype == a.PDF) return;
                    this.message.emit(o.REPORT_EVENT.AD_VIEW, {adInfo: this.info})
                }
            }
        }, {
            key: "play", value: function () {
                if (this._state = n.PLAYING, !this._isStart) {
                    this._isStart = !0;
                    var e = this.adtype;
                    e !== a.PDF && e !== a.PPB && e !== a.PVL && this.message.emit(o.TXPLAYER_EVENT.AD_SHOW, {adtype: e})
                }
            }
        }, {
            key: "pause", value: function () {
                this._state = n.PAUSED
            }
        }, {
            key: "resume", value: function () {
                this._state = n.PLAYING
            }
        }, {
            key: "mute", value: function () {
            }
        }, {
            key: "unMute", value: function () {
            }
        }, {
            key: "setVolume", value: function () {
            }
        }, {
            key: "resize", value: function (e) {
            }
        }, {
            key: "setFullScreen", value: function () {
            }
        }, {
            key: "setSmallWindow", value: function (e) {
                this._isSmallWindow = e && e.isSmallWindow
            }
        }, {
            key: "stop", value: function (e) {
                this._isStart = !1, this.removeEvent(), this._state = n.END, this._emitEvent(o.AD_STOP, e), this.adtype !== a.LD && this.adtype !== a.KB && this.adtype !== a.HT && this.adtype !== a.ZC && this.message.emit(o.TXPLAYER_EVENT.AD_STOP, {adtype: this.adtype})
            }
        }, {
            key: "waitForStop", value: function () {
                this._state = n.WAIT_FOR_STOP
            }
        }, {
            key: "show", value: function () {
                if (!this._isShow) {
                    this._isShow = !0;
                    var e = this.adtype;
                    e !== a.LD && e !== a.KB && e !== a.HT && e !== a.ZC && e !== a.PSJ && e !== a.PDF && e !== a.PPB && e !== a.PVL && this.message.emit(o.TXPLAYER_EVENT.AD_SHOW, {adtype: e})
                }
                this._emitEvent(o.AD_SHOW), this.showTime || (this.showTime = +new Date)
            }
        }, {
            key: "hide", value: function () {
                this._isShow = !1, this._emitEvent(o.AD_HIDE)
            }
        }, {
            key: "destroy", value: function () {
            }
        }, {
            key: "openLink", value: function () {
                if (this.info && this.info.link) {
                    var e = (new Date).getTime();
                    if (e - u < 300) s.log("click too fast"); else {
                        u = e;
                        var t = this.adplayer.getConf(), r = t && t.playerData && t.playerData.playerPfEx || "",
                            i = d.appendParamsToUrl(this.info.link, {pf_ex: r || "", appversion: l});
                        window.open(i), this._emitEvent(o.REPORT_EVENT.AD_CLICK, {
                            adInfo: this.info,
                            adclick: this.info.order_id,
                            clicktime: +new Date - this.showTime,
                            scene: this.scene
                        })
                    }
                }
            }
        }, {
            key: "template", value: function (e) {
                return ""
            }
        }, {
            key: "adtype", get: function () {
                return this.info ? this.info.adtype : ""
            }
        }, {
            key: "isWholeScene", get: function () {
                return !!this.scene && this.scene.isWholeScene
            }
        }, {
            key: "canPlay", get: function () {
                return this._canPlay
            }
        }, {
            key: "state", get: function () {
                return this._state
            }
        }, {
            key: "isShow", get: function () {
                return this._isShow
            }
        }]), e
    }()
}, function (e, t, r) {
    (function (i, n) {
        var a;
        !function (i) {
            var o = i.Promise, s = o && "resolve" in o && "reject" in o && "all" in o && "race" in o && function () {
                var e;
                return new o(function (t) {
                    e = t
                }), "function" == typeof e
            }();
            void 0 !== t && t ? (t.Promise = s ? o : D, t.Polyfill = D) : (a = function () {
                return s ? o : D
            }.call(t, r, t, e)) === undefined || (e.exports = a);
            var d = "pending", l = "sealed", u = "fulfilled", c = "rejected", h = function () {
            };

            function f(e) {
                return "[object Array]" === Object.prototype.toString.call(e)
            }

            var p, v = void 0 !== n ? n : setTimeout, y = [];

            function g() {
                for (var e = 0; e < y.length; e++) y[e][0](y[e][1]);
                y = [], p = !1
            }

            function m(e, t) {
                y.push([e, t]), p || (p = !0, v(g, 0))
            }

            function E(e) {
                var t = e.owner, r = t.state_, i = t.data_, n = e[r], a = e.then;
                if ("function" == typeof n) {
                    r = u;
                    try {
                        i = n(i)
                    } catch (o) {
                        b(a, o)
                    }
                }
                _(a, i) || (r === u && T(a, i), r === c && b(a, i))
            }

            function _(e, t) {
                var r;
                try {
                    if (e === t) throw new TypeError("A promises callback cannot return that same promise.");
                    if (t && ("function" == typeof t || "object" == typeof t)) {
                        var i = t.then;
                        if ("function" == typeof i) return i.call(t, function (i) {
                            r || (r = !0, t !== i ? T(e, i) : A(e, i))
                        }, function (t) {
                            r || (r = !0, b(e, t))
                        }), !0
                    }
                } catch (n) {
                    return r || b(e, n), !0
                }
                return !1
            }

            function T(e, t) {
                e !== t && _(e, t) || A(e, t)
            }

            function A(e, t) {
                e.state_ === d && (e.state_ = l, e.data_ = t, m(S, e))
            }

            function b(e, t) {
                e.state_ === d && (e.state_ = l, e.data_ = t, m(R, e))
            }

            function w(e) {
                var t = e.then_;
                e.then_ = undefined;
                for (var r = 0; r < t.length; r++) E(t[r])
            }

            function S(e) {
                e.state_ = u, w(e)
            }

            function R(e) {
                e.state_ = c, w(e)
            }

            function D(e) {
                if ("function" != typeof e) throw new TypeError("Promise constructor takes a function argument");
                if (this instanceof D == !1) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                this.then_ = [], function (e, t) {
                    function r(e) {
                        b(t, e)
                    }

                    try {
                        e(function (e) {
                            T(t, e)
                        }, r)
                    } catch (i) {
                        r(i)
                    }
                }(e, this)
            }

            D.prototype = {
                constructor: D, state_: d, then_: null, data_: undefined, then: function (e, t) {
                    var r = {owner: this, then: new this.constructor(h), fulfilled: e, rejected: t};
                    return this.state_ === u || this.state_ === c ? m(E, r) : this.then_.push(r), r.then
                }, "catch": function (e) {
                    return this.then(null, e)
                }
            }, D.all = function (e) {
                if (!f(e)) throw new TypeError("You must pass an array to Promise.all().");
                return new this(function (t, r) {
                    var i = [], n = 0;

                    function a(e) {
                        return n++, function (r) {
                            i[e] = r, --n || t(i)
                        }
                    }

                    for (var o, s = 0; s < e.length; s++) (o = e[s]) && "function" == typeof o.then ? o.then(a(s), r) : i[s] = o;
                    n || t(i)
                })
            }, D.race = function (e) {
                if (!f(e)) throw new TypeError("You must pass an array to Promise.race().");
                return new this(function (t, r) {
                    for (var i, n = 0; n < e.length; n++) (i = e[n]) && "function" == typeof i.then ? i.then(t, r) : t(i)
                })
            }, D.resolve = function (e) {
                return e && "object" == typeof e && e.constructor === this ? e : new this(function (t) {
                    t(e)
                })
            }, D.reject = function (e) {
                return new this(function (t, r) {
                    r(e)
                })
            }
        }("undefined" != typeof window ? window : void 0 !== i ? i : "undefined" != typeof self ? self : this)
    }).call(t, r(8), r(14).setImmediate)
}, function (e, t) {
    var r;
    r = function () {
        return this
    }();
    try {
        r = r || Function("return this")() || (0, eval)("this")
    } catch (i) {
        "object" == typeof window && (r = window)
    }
    e.exports = r
}, function (e, t, r) {
    "use strict";
    e.exports = "1.0.145"
}, function (e, t, r) {
    "use strict";
    var i = r(45)();
    e.exports = function (e) {
        return e !== i && null !== e
    }
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(0)("material/vpaid"), a = r(2), o = r(5), s = r(12), d = r(3), l = r(1).VPAID_EVENT, u = r(18),
        c = {NOT_START: 0, READY: 1, LOAD_COMPLETE: 2, PLAYING: 3, PAUSE: 4, END: 5, STOP: 6}, h = 0, f = function () {
            function e(t) {
                !function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.instanceCount = h++, n.log("new Vpaid:", this.instanceCount), this.init(t), this.playState = c.NOT_START
            }

            return i(e, [{
                key: "init", value: function (e) {
                    this.params = e, this.wrapper = e.container, this.outerEvents = e.events;
                    this.playTimer = new s, this.iframe = document.createElement("iframe"), this.iframe.id = "adLoaderIframe" + this.instanceCount, this.iframe.name = "adLoaderIframe" + this.instanceCount, this.iframe.frameBorder = 0;
                    try {
                        this.iframe.setAttribute("allow", "autoplay")
                    } catch (t) {
                        n.log('iframe.setAttribute("allow", "autoplay") : ', t)
                    }
                    o.css(this.iframe, {
                        position: "absolute",
                        top: 0,
                        left: 0,
                        width: "100%",
                        height: "100%",
                        background: "none",
                        "pointer-events": "auto"
                    }), this.wrapper.appendChild(this.iframe), o.css(this.iframe.contentWindow.document.body, {overflow: "hidden"})
                }
            }, {
                key: "loadAd", value: function (e) {
                    n.log("load vpaid:", e, this.instanceCount), this.loadParams = e, this.outerEvents = e.events, this.api = e.api, this.info = e.info, this.duration = parseInt(e.adInfo.duration);
                    var t = this;
                    e.adInfo.richRes || (n.log("load vpaid error, richRes is empty."), this.callOuterEvents(l.AdError, this.loadParams), this.stopAd()), setTimeout(function () {
                        var r = a.appendParamsToUrl(e.adInfo.richRes, {t: (new Date).getTime()});
                        n.log("\u5bcc\u5a92\u4f53js\u5f00\u59cb\u52a0\u8f7d\uff1a", r, t.iframe.contentWindow, t.instanceCount), a.loadJs(r, t.onInitAd.bind(t), t.iframe.contentWindow.document.body, t.iframe.contentWindow.document)
                    }, 100)
                }
            }, {
                key: "onInitAd", value: function (e) {
                    var t, r = this;
                    if (e && e.error) return n.log("\u5bcc\u5a92\u4f53js\u52a0\u8f7d\u5931\u8d25\uff1a", e.error, this.instanceCount), this.loadParams.error = e.error, this.callOuterEvents(l.AdError, this.loadParams), void this.stopAd();
                    if (n.log("vpaid params", this.params), this.params && this.params.adInfo) {
                        this.params.adInfo.adtype != d.ZI && this.params.adInfo.adtype !== d.LD || (o.on(this.iframe.contentWindow.document.body, "click", function (e) {
                            n.log("\u70b9\u51fb\u4e86\u5bcc\u5a92\u4f53iframe"), e.currentTarget !== e.target && e.target.dataset.click || (clearTimeout(t), t = setTimeout(function () {
                                var e = r.safeCallOuterApi("getPlayState");
                                e === u.PLAYING ? r.safeCallOuterApi("userPausePlayer") : e === u.PAUSE && r.safeCallOuterApi("userPlay")
                            }, 300))
                        }), o.on(this.iframe.contentWindow.document.body, "dblclick", function (e) {
                            clearTimeout(t), r.safeCallOuterApi("toggleWindowFullScreen")
                        })), this.events = {
                            AdLoaded: l.AdLoaded,
                            AdStarted: l.AdStarted,
                            AdStopped: l.AdStopped,
                            AdPaused: l.AdPaused,
                            AdPlaying: l.AdPlaying,
                            AdError: l.AdError,
                            AdVideoStart: l.AdVideoStart,
                            AdClickThru: l.AdClickThru,
                            AdVideoComplete: l.AdVideoComplete,
                            AdPauseTimeCount: l.AdPauseTimeCount,
                            AdResumeTimeCount: l.AdResumeTimeCount
                        };
                        var i = this, a = i.iframe.contentWindow.getVPAIDAd;
                        if (a && "function" == typeof a) {
                            for (var s in i.VPAIDCreative = a(), this.events) i.VPAIDCreative.subscribe(i.onSubscribe, s, i);
                            setTimeout(function () {
                                i.VPAIDCreative.initAd(i.params.adWidth || i.params.playerData.playerWidth, i.params.adHeight || i.params.playerData.playerHeight, "normal", 0, i.loadParams.adInfo.richData)
                            }, 10)
                        }
                    }
                }
            }, {
                key: "onSubscribe", value: function (e, t) {
                    this.events[e] && this[this.events[e]](t)
                }
            }, {
                key: "safeCallOuterApi", value: function () {
                    var e = Array.prototype.slice.call(arguments).shift();
                    if (this.api && e && this.api[e]) try {
                        return this.api[e]()
                    } catch (t) {
                        n.log("call outer api error: ", e, ", ", t)
                    }
                }
            }, {
                key: "safeCallCreativeMethod", value: function () {
                    var e = Array.prototype.slice.call(arguments), t = e.shift();
                    if (this.VPAIDCreative && t && this.VPAIDCreative[t]) try {
                        return this.VPAIDCreative[t].apply(this.VPAIDCreative, e)
                    } catch (r) {
                        n.log("call vpaid method error: ", t, ", ", r)
                    }
                }
            }, {
                key: "resize", value: function (e, t) {
                    this.safeCallCreativeMethod("resizeAd", e, t)
                }
            }, {
                key: "mute", value: function (e) {
                    this.safeCallCreativeMethod("mute", e)
                }
            }, {
                key: "setVolume", value: function (e) {
                    this.safeCallCreativeMethod("setAdVolume", e), !TxpCreativePlayer.fromPcClient && this.api.getBrowserDisableIframeAutoPlay() && (0 === e ? this.mute(!0) : this.mute(!1))
                }
            }, {
                key: "setPos", value: function (e) {
                    this.safeCallCreativeMethod("setPos", e)
                }
            }, {
                key: "continueTimeout", value: function () {
                    var e = this;
                    this.duration > 0 && this.params.adInfo.adtype != d.ZT && this.params.adInfo.adtype != d.ZI && this.playTimer.on(this.duration, function () {
                        e.callOuterEvents(l.AdVideoComplete, e.loadParams), e.stopAd(), n.log("rich ad timeout !!!!  ", e.loadParams, e.instanceCount)
                    })
                }
            }, {
                key: "play", value: function () {
                    this.VPAIDCreative && (this.continueTimeout(), this.playState === c.PAUSE ? (this.safeCallCreativeMethod("resumeAd"), this.playTimer.go()) : this.playState === c.PAUSE && this.playState === c.STOP && this.playState === c.END || this.safeCallCreativeMethod("startAd"))
                }
            }, {
                key: "pause", value: function () {
                    this.playState !== c.PAUSE && this.VPAIDCreative && (this.safeCallCreativeMethod("pauseAd"), this.playTimer.pause())
                }
            }, {
                key: "stopAd", value: function () {
                    this.playState !== c.STOP && (this.playTimer && this.playTimer.clear(), this.VPAIDCreative && (this.safeCallCreativeMethod("stopAd"), this.destroy()))
                }
            }, {
                key: "callOuterEvents", value: function (e, t) {
                    if (n.log("callOuterEvents: ", e, t), this.outerEvents && "function" == typeof this.outerEvents[e]) try {
                        this.outerEvents[e](t)
                    } catch (r) {
                        n.log("callOuterEvents error: ", r)
                    }
                }
            }, {
                key: "destroy", value: function () {
                    n.log("vpaid destroy.", this.instanceCount), this.playTimer && this.playTimer.clear(), this.wrapper && this.iframe && this.wrapper.contains(this.iframe) && this.wrapper.removeChild(this.iframe)
                }
            }]), e
        }();
    for (var p in l) l.hasOwnProperty(p) && (f.prototype[p] || (f.prototype[p] = function (e) {
        return function (t) {
            var r = this;
            return e === l.AdPaused && (this.playState = c.PAUSE), e !== l.AdStarted && e !== l.AdPlaying || (this.playState = c.PLAYING), e === l.AdLoaded && (this.playState = c.LOAD_COMPLETE), e !== l.AdStopped && e !== l.AdError || (this.playState = c.STOP), e !== l.AdStopped && e !== l.AdError || setTimeout(function () {
                r.destroy()
            }, 100), this.callOuterEvents(e, t)
        }
    }(p)));
    e.exports = f
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.timer = null, this.startTime = null, this.during = 0, this.remain = -1, this.callback = null
        }

        return i(e, [{
            key: "on", value: function (e, t) {
                var r = this;
                e < 0 || "function" == typeof t && (this.clearTimer(), this.during = e, this.callback = t, this.timer = setTimeout(function () {
                    r.callback && r.callback(), r.clear()
                }, e), this.startTime = (new Date).getTime())
            }
        }, {
            key: "pause", value: function () {
                var e = (new Date).getTime() - this.startTime;
                e > this.during || (this.remain = this.during - e, this.clearTimer())
            }
        }, {
            key: "go", value: function () {
                this.remain < 0 || this.on(this.remain, this.callback)
            }
        }, {
            key: "clearTimer", value: function () {
                this.timer && (clearTimeout(this.timer), this.timer = null), this.startTime = null, this.during = 0
            }
        }, {
            key: "clear", value: function () {
                this.clearTimer(), this.callback = null, this.remain = -1
            }
        }]), e
    }();
    e.exports = n
}, function (e, t, r) {
    "use strict";
    var i = Object.prototype.hasOwnProperty, n = Object.prototype.toString, a = Object.defineProperty,
        o = Object.getOwnPropertyDescriptor, s = function (e) {
            return "function" == typeof Array.isArray ? Array.isArray(e) : "[object Array]" === n.call(e)
        }, d = function (e) {
            if (!e || "[object Object]" !== n.call(e)) return !1;
            var t, r = i.call(e, "constructor"),
                a = e.constructor && e.constructor.prototype && i.call(e.constructor.prototype, "isPrototypeOf");
            if (e.constructor && !r && !a) return !1;
            for (t in e) ;
            return void 0 === t || i.call(e, t)
        }, l = function (e, t) {
            a && "__proto__" === t.name ? a(e, t.name, {
                enumerable: !0,
                configurable: !0,
                value: t.newValue,
                writable: !0
            }) : e[t.name] = t.newValue
        }, u = function (e, t) {
            if ("__proto__" === t) {
                if (!i.call(e, t)) return;
                if (o) return o(e, t).value
            }
            return e[t]
        };
    e.exports = function c() {
        var e, t, r, i, n, a, o = arguments[0], h = 1, f = arguments.length, p = !1;
        for ("boolean" == typeof o && (p = o, o = arguments[1] || {}, h = 2), (null == o || "object" != typeof o && "function" != typeof o) && (o = {}); h < f; ++h) if (null != (e = arguments[h])) for (t in e) r = u(o, t), o !== (i = u(e, t)) && (p && i && (d(i) || (n = s(i))) ? (n ? (n = !1, a = r && s(r) ? r : []) : a = r && d(r) ? r : {}, l(o, {
            name: t,
            newValue: c(p, a, i)
        })) : void 0 !== i && l(o, {name: t, newValue: i}));
        return o
    }
}, function (e, t, r) {
    (function (e) {
        var i = void 0 !== e && e || "undefined" != typeof self && self || window, n = Function.prototype.apply;

        function a(e, t) {
            this._id = e, this._clearFn = t
        }

        t.setTimeout = function () {
            return new a(n.call(setTimeout, i, arguments), clearTimeout)
        }, t.setInterval = function () {
            return new a(n.call(setInterval, i, arguments), clearInterval)
        }, t.clearTimeout = t.clearInterval = function (e) {
            e && e.close()
        }, a.prototype.unref = a.prototype.ref = function () {
        }, a.prototype.close = function () {
            this._clearFn.call(i, this._id)
        }, t.enroll = function (e, t) {
            clearTimeout(e._idleTimeoutId), e._idleTimeout = t
        }, t.unenroll = function (e) {
            clearTimeout(e._idleTimeoutId), e._idleTimeout = -1
        }, t._unrefActive = t.active = function (e) {
            clearTimeout(e._idleTimeoutId);
            var t = e._idleTimeout;
            t >= 0 && (e._idleTimeoutId = setTimeout(function () {
                e._onTimeout && e._onTimeout()
            }, t))
        }, r(15), t.setImmediate = "undefined" != typeof self && self.setImmediate || void 0 !== e && e.setImmediate || this && this.setImmediate, t.clearImmediate = "undefined" != typeof self && self.clearImmediate || void 0 !== e && e.clearImmediate || this && this.clearImmediate
    }).call(t, r(8))
}, function (e, t, r) {
    (function (e, t) {
        !function (e, r) {
            "use strict";
            if (!e.setImmediate) {
                var i, n = 1, a = {}, o = !1, s = e.document, d = Object.getPrototypeOf && Object.getPrototypeOf(e);
                d = d && d.setTimeout ? d : e, "[object process]" === {}.toString.call(e.process) ? i = function (e) {
                    t.nextTick(function () {
                        u(e)
                    })
                } : function () {
                    if (e.postMessage && !e.importScripts) {
                        var t = !0, r = e.onmessage;
                        return e.onmessage = function () {
                            t = !1
                        }, e.postMessage("", "*"), e.onmessage = r, t
                    }
                }() ? function () {
                    var t = "setImmediate$" + Math.random() + "$", r = function (r) {
                        r.source === e && "string" == typeof r.data && 0 === r.data.indexOf(t) && u(+r.data.slice(t.length))
                    };
                    e.addEventListener ? e.addEventListener("message", r, !1) : e.attachEvent("onmessage", r), i = function (r) {
                        e.postMessage(t + r, "*")
                    }
                }() : e.MessageChannel ? function () {
                    var e = new MessageChannel;
                    e.port1.onmessage = function (e) {
                        u(e.data)
                    }, i = function (t) {
                        e.port2.postMessage(t)
                    }
                }() : s && "onreadystatechange" in s.createElement("script") ? function () {
                    var e = s.documentElement;
                    i = function (t) {
                        var r = s.createElement("script");
                        r.onreadystatechange = function () {
                            u(t), r.onreadystatechange = null, e.removeChild(r), r = null
                        }, e.appendChild(r)
                    }
                }() : i = function (e) {
                    setTimeout(u, 0, e)
                }, d.setImmediate = function (e) {
                    "function" != typeof e && (e = new Function("" + e));
                    for (var t = new Array(arguments.length - 1), r = 0; r < t.length; r++) t[r] = arguments[r + 1];
                    var o = {callback: e, args: t};
                    return a[n] = o, i(n), n++
                }, d.clearImmediate = l
            }

            function l(e) {
                delete a[e]
            }

            function u(e) {
                if (o) setTimeout(u, 0, e); else {
                    var t = a[e];
                    if (t) {
                        o = !0;
                        try {
                            !function (e) {
                                var t = e.callback, i = e.args;
                                switch (i.length) {
                                    case 0:
                                        t();
                                        break;
                                    case 1:
                                        t(i[0]);
                                        break;
                                    case 2:
                                        t(i[0], i[1]);
                                        break;
                                    case 3:
                                        t(i[0], i[1], i[2]);
                                        break;
                                    default:
                                        t.apply(r, i)
                                }
                            }(t)
                        } finally {
                            l(e), o = !1
                        }
                    }
                }
            }
        }("undefined" == typeof self ? void 0 === e ? this : e : self)
    }).call(t, r(8), r(16))
}, function (e, t) {
    var r, i, n = e.exports = {};

    function a() {
        throw new Error("setTimeout has not been defined")
    }

    function o() {
        throw new Error("clearTimeout has not been defined")
    }

    function s(e) {
        if (r === setTimeout) return setTimeout(e, 0);
        if ((r === a || !r) && setTimeout) return r = setTimeout, setTimeout(e, 0);
        try {
            return r(e, 0)
        } catch (t) {
            try {
                return r.call(null, e, 0)
            } catch (t) {
                return r.call(this, e, 0)
            }
        }
    }

    !function () {
        try {
            r = "function" == typeof setTimeout ? setTimeout : a
        } catch (e) {
            r = a
        }
        try {
            i = "function" == typeof clearTimeout ? clearTimeout : o
        } catch (e) {
            i = o
        }
    }();
    var d, l = [], u = !1, c = -1;

    function h() {
        u && d && (u = !1, d.length ? l = d.concat(l) : c = -1, l.length && f())
    }

    function f() {
        if (!u) {
            var e = s(h);
            u = !0;
            for (var t = l.length; t;) {
                for (d = l, l = []; ++c < t;) d && d[c].run();
                c = -1, t = l.length
            }
            d = null, u = !1, function (e) {
                if (i === clearTimeout) return clearTimeout(e);
                if ((i === o || !i) && clearTimeout) return i = clearTimeout, clearTimeout(e);
                try {
                    i(e)
                } catch (t) {
                    try {
                        return i.call(null, e)
                    } catch (t) {
                        return i.call(this, e)
                    }
                }
            }(e)
        }
    }

    function p(e, t) {
        this.fun = e, this.array = t
    }

    function v() {
    }

    n.nextTick = function (e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
        l.push(new p(e, t)), 1 !== l.length || u || s(f)
    }, p.prototype.run = function () {
        this.fun.apply(null, this.array)
    }, n.title = "browser", n.browser = !0, n.env = {}, n.argv = [], n.version = "", n.versions = {}, n.on = v, n.addListener = v, n.once = v, n.off = v, n.removeListener = v, n.removeAllListeners = v, n.emit = v, n.prependListener = v, n.prependOnceListener = v, n.listeners = function (e) {
        return []
    }, n.binding = function (e) {
        throw new Error("process.binding is not supported")
    }, n.cwd = function () {
        return "/"
    }, n.chdir = function (e) {
        throw new Error("process.chdir is not supported")
    }, n.umask = function () {
        return 0
    }
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }(), n = function S(e, t, r) {
        null === e && (e = Function.prototype);
        var i = Object.getOwnPropertyDescriptor(e, t);
        if (i === undefined) {
            var n = Object.getPrototypeOf(e);
            return null === n ? undefined : S(n, t, r)
        }
        if ("value" in i) return i.value;
        var a = i.get;
        return a === undefined ? undefined : a.call(r)
    };
    var a = r(6), o = r(60), s = r(11), d = r(12), l = r(61), u = r(5), c = r(2), h = r(0), f = r(62), p = r(1),
        v = p.VPAID_EVENT, y = r(3), g = r(4), m = r(65), E = r(9), _ = r(66), T = r(67), A = r(69), b = !1;

    function w() {
        if (!/mobile|mqqbrowser|android|iphone/gi.test(navigator.userAgent)) try {
            var e = window.$;
            if (!e) return;
            var t = e('<div class="adsbox" style="position:absolute;left:-9999px;top:-9999px;width:1px;height:1px;"></div>').appendTo(e(document.body)),
                r = e('<div class="side_ad" style="position:absolute;left:-9999px;top:-9999px;width:1px;height:1px;"></div>').appendTo(e(document.body));
            window.setTimeout(function () {
                try {
                    b = !0, 0 !== t[0].offsetHeight && r.is(":visible") || (TxpCreativePlayer.adBlockEnabled = !0), t.remove(), r.remove()
                } catch (e) {
                }
            }, 100)
        } catch (i) {
        }
    }

    window.document && document.body ? w() : window.document.addEventListener && document.addEventListener("readystatechange", function () {
        b || "interactive" != document.readyState && "complete" != document.readyState || w()
    }), e.exports = function (e) {
        function t(e) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, t);
            var r = function (e, t) {
                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
            return r.logger = h("base/videoAdBase(" + e._name + ")"), r.message = e.message, r.adplayer = e.adplayer, r.videoAdUi = r.adplayer.videoAdUi, r.conf = r.adplayer.getConf(), TxpCreativePlayer.fromPcClient || (r.blockScreen = new A(r.conf, r.adplayer.$dom.$videoAd.$videoBlackScreen)), r.reset(), r.initVideo(), r.bindVideoEvent(), r.bindVideoUiEvent(), r.bindBrowserEvent(), r.initOrderResource(e.infos), r.geturls = new T, r
        }

        return function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }(t, a), i(t, [{
            key: "reset", value: function () {
                if (this.queue && this.queue.length > 0) for (var e = 0, t = this.queue.length; e < t; e++) this._clearAdTimer(this.queue[e]);
                this.volume = 0, this.$videos = [], this.queue = [], this.emptyQueue = [], this.richMediaMap = {}, this.currentAdIndex = 0, this.nextAdIndex = 0, this.rollbackAdIndex = 0, this.duration = 0, this.countdown = 0, this.showCountdown = 0, this.isLoadComplete = !1, this.prevCurrentTime = -1, this.$currentVideo = null, this.$preloadVideo = null, this.ordertype = "", this.isEmpty = !1, this.emptyCount = 0, this.errorCount = 0, this.firstShowTrueView = !1, this.isTrueView = !1, this.rfid = "", this.errorCode = "", this.currentPlayAdType = "", this.isMute = !1, this.hasReportVideoEnd = !1, this.hasDestroy = !1, this.userCloseOrderId = "", this.firstViewTime = 0, this.firstLoadingStartTime = 0, this.firstLoadingEndTime = 0, this.playedTime = 0, this.setViewMonitor = !1, this.hasReportPlayStartArr = [], this.hasPlaying = []
            }
        }, {
            key: "load", value: function () {
                this._state !== g.WAIT_FOR_STOP && n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "load", this).call(this)
            }
        }, {
            key: "play", value: function () {
                if (this.currentPlayAdType = this.ordertype, this.ordertype === y.HT && this._state === g.WAIT_FOR_STOP) return n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "pause", this).call(this), void this.reportVideoEnd();
                this._state !== g.PLAYING && ((this.$currentVideo || this.richMediaPlayer) && this.queue[this.currentAdIndex].status === g.PAUSED ? this.resume() : this.start(this.currentAdIndex))
            }
        }, {
            key: "resume", value: function () {
                var e = this;
                n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "resume", this).call(this);
                var r = this.queue[this.currentAdIndex];
                if (r) if (r.isRichMedia && this.richMediaPlayer) this.richMediaPlayer.play(), this.startCountDown(); else if (this.$currentVideo) {
                    var i = this.$currentVideo.play();
                    i && i["catch"](function (t) {
                        e.logger.log("resume:", t)
                    }), this.startCountDown()
                }
            }
        }, {
            key: "pause", value: function () {
                if (this._state !== g.PAUSED) {
                    n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "pause", this).call(this);
                    var e = this.queue[this.currentAdIndex];
                    e && (e.isRichMedia && this.richMediaPlayer ? (this.richMediaPlayer.pause(), this.stopCountDown()) : this.$currentVideo && (this.$currentVideo.pause(), this.stopCountDown()))
                }
            }
        }, {
            key: "mute", value: function () {
                this.$videos.forEach(function (e) {
                    e.el.muted = !0
                }), this.richMediaPlayer && this.richMediaPlayer.mute(!0)
            }
        }, {
            key: "unMute", value: function () {
                this.$videos.forEach(function (e) {
                    e.el.muted = !1
                }), this.richMediaPlayer && this.richMediaPlayer.mute(!1)
            }
        }, {
            key: "setVolume", value: function (e) {
                e = Math.max(0, Math.min(1, e / 100)), this.volume = e, this.isMute = 0 === this.volume, this.$videos.forEach(function (t) {
                    t.el.volume = e
                }), this.richMediaPlayer && this.richMediaPlayer.setVolume(100 * e), this.isMute ? this.mute() : this.unMute(), this.videoAdUi.updateVideoVolumeBtn({mute: this.isMute})
            }
        }, {
            key: "resize", value: function (e) {
                var t = e.width, r = e.height;
                this.richMediaPlayer && this.richMediaPlayer.resize(t, r)
            }
        }, {
            key: "adjustUI", value: function (e) {
                if (e) {
                    var t = (e.top || 10) + "px", r = (e.bottom || 10) + "px";
                    this.videoAdUi.adjustVideoAdControl({top: t, bottom: r})
                }
            }
        }, {
            key: "stop", value: function (e) {
                this.blockScreen && this.blockScreen.reset(), this.reportVideoEnd(e)
            }
        }, {
            key: "clearVideoDom", value: function () {
                var e = this;
                this.logger.log("clearVideoDom");
                var t = this.adplayer.$dom.$videoAd.$videoAdContainer.querySelectorAll("video");
                (t = Array.prototype.slice.call(t)).forEach(function (t) {
                    if (t) try {
                        u.removeAttr(t, "src"), t.pause(), e.adplayer.$dom.$videoAd.$videoAdContainer.removeChild(t)
                    } catch (r) {
                        e.logger.err("clearVideoDom: ", r)
                    }
                })
            }
        }, {
            key: "initVideo", value: function () {
                this.clearVideoDom(), this.volume = Math.min(1, Math.max(0, this.callOuterApi(p.TXPLAYER_API.GET_VOLUME) / 100));
                for (var e = 0; e < 2; e++) {
                    var t = document.createElement("video");
                    t.crossOrigin = "*", u.hide(t), u.attr(t, "data-idx", e), this.$videos.push({
                        el: t,
                        status: m.EMPTY,
                        vindex: -1
                    }), this.adplayer.$dom.$videoAd.$videoAdContainer.appendChild(t), t.volume = Math.min(1, Math.max(0, this.callOuterApi(p.TXPLAYER_API.GET_VOLUME) / 100)), new o(this.$videos[e].el, "", {
                        preload: "none",
                        style: {position: "absolute", top: 0, left: 0}
                    })
                }
                this.volume ? this.unMute() : this.mute()
            }
        }, {
            key: "initOrderResource", value: function (e) {
                var t = this, r = e.length > 0 && e[0].isAutoPlay, i = 0, n = 0;
                e && e.length || (this.isEmpty = !0), this.ordertype = e.adtype === y.KB ? y.LD : e.adtype, this.orderList = e;
                var a = 0, o = 0, s = 0;
                e.forEach(function (e, r) {
                    if (e.adtype === y.KB ? (o++, e.orderIdx = o) : (s++, e.orderIdx = s), t.ordertype || (t.ordertype = e.adtype === y.KB ? y.LD : e.adtype), t.rfid || (t.rfid = e.rfid), e.isEmpty) i++, t.emptyQueue.push({
                        adtype: e.adtype,
                        _index: r,
                        realDuration: 0,
                        duration: 0,
                        loadStartTime: 0,
                        loadCompleteTime: 0,
                        viewTime: 0,
                        orderId: e.order_id
                    }), t.message.emit(p.REPORT_EVENT.AD_VIEW, {adInfo: t.orderList[r], scene: t.scene}); else {
                        var d = e.creative ? e.creative[0].material[0] : {}, l = parseInt(e.duration / 1e3, 10);
                        t.duration += l, d.url && e.order_id && (e.adtype !== y.KB && (t.showCountdown += l), a++, t.queue.push({
                            tpIndex: a,
                            _index: r,
                            index: n,
                            fileSize: (+d.cs || 0) / 1024,
                            playStartTime: 0,
                            loadStartTime: 0,
                            loadCompleteTime: 0,
                            viewStartTime: 0,
                            viewTime: 0,
                            adtype: e.adtype,
                            status: g.INIT,
                            speed: 0,
                            loadedPercent: 0,
                            url: c.refreshUrlParamOrder(d.url),
                            link: e.link,
                            duration: l,
                            width: d.width,
                            height: d.height,
                            orderId: e.order_id,
                            vid: d.vid || e.vid,
                            adFlag: e.adFlag,
                            isRichMedia: e.isRichMedia || !1,
                            isTrueView: e.isTrueView || !1,
                            isVip: e.userIsVip || !1,
                            canSkip: e.canSkip || !1,
                            displayCode: e.display_code,
                            dspName: e.dsp_name,
                            noClick: e.no_click,
                            hasReportView: !1,
                            hasReportLoadComplete: !1,
                            reportUrlView: e.reportUrlView
                        })), e.isRichMedia && (t.queue[n].adInfo = e), n++
                    }
                }), this.countdown = this.duration, this.emptyCount = i, this.isTrueView = ("in" === this.conf.playerData.playerPf || "client" === this.conf.playerData.playerPf) && 1 === this.queue.length && this.queue[0].isTrueView, e && this.emptyCount === e.length && (this.isEmpty = !0), this.isEmpty ? (this.logger.log("\u7a7a\u8ba2\u5355"), this.reportVideoEnd()) : (this.logger.log("\u4e00\u5171\u6709[" + this.queue.length + "]\u4e2a\u975e\u7a7a\u8ba2\u5355\uff0c\u603b\u65f6\u957f: ", this.duration, "s"), this.lastVideoIndex = this.queue.length - 1, r ? (this.readyToPlay = !0, this.play()) : this.preloadNext(this.currentAdIndex))
            }
        }, {
            key: "updateVideoUi", value: function (e) {
                var t = this.videoAdUi;
                t.resetVideoUi();
                var r = this.queue[e];
                if (r) {
                    r.viewStartTime = +new Date;
                    var i = !!r.isRichMedia;
                    this.showCloseButton = "function" == typeof this.conf.playerMethod.showOpenVIPGuide;
                    if (this.canClickToStopAd = !1, this.showCloseButton = this.showCloseButton || this.canClickToStopAd, this.canSkip = r.canSkip, this.logger.log("\u66f4\u65b0\u89c6\u56fe: \u7b2c", e, "\u4e2a"), t.updateVideoLayer(!0), t.updateVideoAdInner(!0), "VipDisplay" === r.displayCode ? t.updateVideoAdControl(!1) : t.updateVideoAdControl(!0), i ? (t.updateVideoRichMediaAdContainer(i), t.updateVideoAdLayer(!i)) : (t.updateVideoAdLayer(!i), t.updateVideoRichMediaAdContainer(i)), t.updateVideoDSP(r.dspName), t.toggleVideoCountDown(this.showCountdown > 0), r.isRichMedia || !r.link || "N" != r.noClick ? t.updateLinkArea(!1) : t.updateLinkArea(!0), r.link && "N" == r.noClick ? t.updateDetail(!0) : t.updateDetail(!1), t.updateVideoVolumeBtn({mute: this.isMute}), !r.canSkip) return t.showVideoForbidSkipAd(r.adFlag), void t.toggleVideoCountDown(!1);
                    if (r.adtype === y.KB) {
                        if (!this.showCloseButton) return void t.updateCloseButton({show: !1});
                        t.updateCloseButton({text: "\u5173\u95ed\u8be5\u5e7f\u544a", show: !0})
                    }
                    if (r.isVip && this.showCloseButton) {
                        var n = "VipCommand" === r.displayCode,
                            a = {showCloseButton: !0, showVipCommand: n, showVipClick: !n};
                        return n && t.updateDetail(!1), t.updateSkipTips(a), void t.toggleVideoCountDown(!0)
                    }
                    this.isTrueView && (this.canClickToStopAd = !0, t.updateTrueview({
                        countdown: this.firstShowTrueView ? 0 : 5,
                        showCloseButton: this.showCloseButton,
                        duration: r.duration
                    }), this.firstShowTrueView = !0), t.updateSkipTips({
                        isTrueView: this.isTrueView,
                        showVipClick: !1,
                        showCloseButton: this.showCloseButton,
                        shortVideo: !1
                    })
                }
            }
        }, {
            key: "startCountDown", value: function () {
                var e = this;
                "running" !== this.countDownStatus && (this.countDownStatus = "running", this.showCountdown > 0 && this.setCountdonw(), this.countDownInterval = setInterval(function () {
                    if (e.countdown = e.countdown - 1, e.showCountdown = e.showCountdown - 1, 0 === e.countdown && e.videoAdUi.resetVideoUi(), e.countdown <= 0) {
                        if (e.stopCountDown(), e.videoAdUi.updateVideoCountDown(""), e.videoAdUi.toggleVideoCountDown(!1), e.queue.length > 0) {
                            var t = 1e3 * (e.duration - e.playedTime);
                            setTimeout(function () {
                                if (e.queue.length > 0 && !e.hasReportVideoEnd) {
                                    if (e.logger.log("\u5012\u8ba1\u65f6\u7ed3\u675f\u4e86"), e.$currentVideo && e.currentAdIndex === e.lastVideoIndex) {
                                        var t = e.$currentVideo.currentTime / e.$currentVideo.duration;
                                        t >= 0 && t < .5 && (e.logger.log("\u6700\u540e\u4e00\u4e2avideo\uff0c\u64ad\u653e\u65f6\u95f4\u4e0d\u8db3\u4e00\u534a\uff0c\u8ba4\u4e3a\u5361\u987f\u800c\u7ed3\u675f"), e.errorCode = 2201)
                                    } else e.currentAdIndex < e.lastVideoIndex && (e.logger.log("\u6700\u540e\u6709\u5e7f\u544a\u6ca1\u64ad\u653e\uff0c\u8ba4\u4e3a\u5361\u987f\u800c\u7ed3\u675f"), e.errorCode = 2201);
                                    e.reportVideoEnd()
                                }
                            }, t)
                        }
                    } else "running" === e.countDownStatus && (e.showCountdown > 0 ? (e.playedTime++, e.setCountdonw()) : (e.videoAdUi.updateVideoCountDown(""), e.videoAdUi.toggleVideoCountDown(!1)))
                }, 1e3))
            }
        }, {
            key: "stopCountDown", value: function () {
                clearInterval(this.countDownInterval), this.countDownStatus = "stop"
            }
        }, {
            key: "startRichMedia", value: function () {
                this.richMediaPlayer && (this.richMediaPlayer.setVolume(100 * this.volume), this.startCountDown(), this.richMediaPlayer.play())
            }
        }, {
            key: "start", value: function (e) {
                var t = this.queue[e];
                if (this.logger.log("\u5f00\u59cb\u64ad\u653e: \u7b2c", e, "\u4e2a"), this.adViewMonitor || (this.adViewMonitor = new l(this.adplayer.$dom.$videoAd.$videoContainer)), t.isRichMedia) t.status === g.INIT ? (this.currentAdIndex = e, this.preloadRichMedia(e, !0), this._startAdTimer(14, t), this.updateVideoUi(e)) : t.status === g.LOAD_READY && this.richMediaMap["rich_" + e] && (this.currentAdIndex = e, this.richMediaPlayer = this.richMediaMap["rich_" + e], this.updateVideoUi(e), t.playStartTime || (t.playStartTime = +new Date), this.startRichMedia(), this.adViewMonitor.start(t), this._startAdTimer(14, t)); else if (t && t.url) {
                    this.showCloseButton = "function" == typeof this.conf.playerMethod.showOpenVIPGuide;
                    this.canClickToStopAd = !1, this.showCloseButton = this.showCloseButton || this.canClickToStopAd, this.setCountdonw(), this._resetFreeVideo();
                    var r = this._getVideoByIndex(e);
                    r || ((r = this._getFreeVideo()).vindex = e);
                    var i = r && r.el;
                    i && (this.logger.log("-==>>> start: ", r.vindex, r.status), r.status === m.EMPTY ? (r.status = m.PLAYING, this.playUrl(t)) : r.status === m.PRELOADING && (r.status = m.PLAYING, this.playVideo(r)), this.updateVideoUi(e), i.preload = "auto", u.show(i), this._hideFreeVideo(), this.currentAdIndex = e, this.$currentVideo = i)
                } else e < this.lastVideoIndex ? this.start(e++) : (this.logger.log("\u53ef\u64ad\u7d22\u5f15\u8d85\u51fa\u8303\u56f4"), this.reportVideoEnd())
            }
        }, {
            key: "setCountdonw", value: function () {
                this.showCloseButton ? this.videoAdUi.updateVideoCountDown(this.showCountdown) : this.videoAdUi.updateVideoCountDownHtml('<span style="color:#fff;">\u5e7f\u544a\u5269\u4f59: </span><span>' + this.showCountdown + '</span><span style="color:#fff;">\u79d2</span>')
            }
        }, {
            key: "_clearAdTimer", value: function (e) {
                this.logger.log("--==>>>_clearAdTimer, orderInfo.index: ", e.index), e && e.adPlayTimer && e.adPlayTimer.clear()
            }
        }, {
            key: "_startAdTimer", value: function (e, t) {
                var r = this;
                this.logger.log("--==>>>_startAdTimer, orderInfo.index: ", t.index);
                var i = this._getVideoByIndex(t.index);
                t.adPlayTimer || (t.adPlayTimer = new d), t.adPlayTimer.clear(), t.adPlayTimer.on(1e3 * e, function () {
                    if (r.logger.log("--==>>>\u8ba2\u5355\u8d85\u65f6, orderInfo.index: " + t.index + ", vid: " + t.vid), t.isRichMedia || i.status != m.PLAYING) t.isRichMedia && r.richMediaPlayer && (t && t.status >= g.INIT && t.status < g.LOAD_READY ? (r.countdown += e, r.logger.log("\u5bcc\u5a92\u4f53\u5361\u987f" + e + "\u79d2\u8d85\u65f6\uff0c\u89e6\u53d1\u5bcc\u5a92\u4f53\u7ed3\u675f\uff0c\u76f4\u63a5\u4e0b\u4e00\u4e2a"), r.errorCode = 2201, r.richmediaPlayer.stopAd()) : r.logger.log("rich end startAdTimer")); else {
                        var n = t.loadedPercent || r._getVideoBufferPercent(i.el);
                        if (!t || t.isRichMedia || 0 != n && i.el.currentTime) r.logger.log("currentvideo end startAdTimer"); else {
                            r.countdown += e, r.logger.log("\u64ad\u653e\u5361\u987f" + e + "\u79d2\u8d85\u65f6\uff0c\u89e6\u53d1\u5f53\u524d\u89c6\u9891\u64ad\u653e\u5931\u8d25"), r.errorCode = 2201;
                            try {
                                i.el.pause(), i.el.src = "", i.el.load(), t.detailErrCode = 10
                            } catch (o) {
                            }
                        }
                    }
                    if (t.isRichMedia || i.status != m.PRELOADING) r.logger.log("end startAdTimer"); else {
                        var a = r._getVideoBufferPercent(i.el);
                        0 == a ? (r.logger.log("\u9884\u52a0\u8f7d" + e + "\u79d2\u8d85\u65f6\uff0c\u89e6\u53d1\u9519\u8bef\uff0c\u76f4\u63a5\u4e0b\u4e00\u4e2a. \u5df2\u52a0\u8f7d\uff1a", 100 * a, "%, \u5f53\u524d\u8d44\u6e90url: ", i.el.url), r.errorCode = 2201, i.el.src = "", i.el.load(), t.detailErrCode = 20) : r.logger.log("preloadvideo end startAdTimer")
                    }
                })
            }
        }, {
            key: "preloadNext", value: function (e, t) {
                if (!this.queue || 0 === this.queue.length) return this.logger.log("\u961f\u5217\u4e3a\u7a7a\uff0c\u4e0d\u8fdb\u884c\u9884\u52a0\u8f7d\uff0c\u76f4\u63a5\u8fd4\u56de."), void (this.currentAdIndex >= this.lastVideoIndex && this.reportVideoEnd(!0));
                if (e !== this.nextAdIndex || 0 === e) {
                    if (e > this.lastVideoIndex) return this.isLoadComplete = !0, this.logger.log("\u6240\u6709\u5e7f\u544a\u52a0\u8f7d\u5b8c\u6210\uff0c\u76f4\u63a5\u8fd4\u56de"), void (this.currentAdIndex >= this.lastVideoIndex && this.reportVideoEnd(!0));
                    var r = this.nextAdIndex;
                    this.nextAdIndex = e;
                    var i = this.queue[e];
                    if (i.isRichMedia) this.richMediaPlayer ? (this.logger.log("\u5f53\u524d\u6b63\u5728\u64ad\u653e\u5bcc\u5a92\u4f53\uff0c\u6ca1\u6709\u529e\u6cd5\u9884\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u5bcc\u5a92\u4f53\uff0c\u53ea\u80fd\u7b49\u64ad\u5b8c\uff0c\u56de\u9000nextAdIndex\u7b49\u5f85\u4e0b\u4e00\u6b21\u9884\u52a0\u8f7d\uff0c\u5148\u8fd9\u6837\u7b80\u5355\u5904\u7406\u5427"), this.nextAdIndex = r) : (this.logger.log("[\u5bcc\u5a92\u4f53]\u5f00\u59cb\u9884\u52a0\u8f7d: \u7b2c", this.nextAdIndex, "\u4e2a"), this.preloadRichMedia(e, !!t), this._startAdTimer(14, i)); else if (i && i.url && i.status === g.INIT) {
                        this.logger.log("\u5f00\u59cb\u9884\u52a0\u8f7d: \u7b2c", this.nextAdIndex, "\u4e2a"), i.status = g.LOADING, this._resetFreeVideo();
                        var n = this._getFreeVideo(), a = n && n.el;
                        this.$preloadVideo = a, a ? (n.status = m.PRELOADING, n.vindex = this.nextAdIndex, a.preload = "auto", a.src = i.url, i.url || (i.detailErrCode = 60), this._startAdTimer(14, i), this.rollbackAdIndex = 0) : (this.logger.log("\u6ca1\u6709\u7a7a\u95f2\u7684video\u53ef\u4ee5\u7528\u6765\u9884\u52a0\u8f7d\uff0c\u56de\u9000nextAdIndex\uff0c\u91cd\u7f6e\u5f53\u524d\u9884\u52a0\u8f7d\u7684\u89c6\u9891\u52a0\u8f7d\u72b6\u6001\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u9884\u52a0\u8f7d.", r), this.rollbackAdIndex = this.nextAdIndex, this.nextAdIndex = r, i.status = g.INIT)
                    }
                } else this.currentAdIndex >= this.lastVideoIndex && (this.logger.log("\u6700\u540e\u4e00\u4e2a\u9884\u52a0\u8f7d\u5b8c\u6210\u7684\u89c6\u9891\u548c\u5f53\u524d\u9884\u52a0\u8f7d\u7684\u89c6\u9891\u662f\u540c\u4e00\u4e2a\uff0c\u6240\u4ee5\u4e0d\u7528\u518d\u9884\u52a0\u8f7d\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de. report"), this.reportVideoEnd(!0))
            }
        }, {
            key: "preloadRichMedia", value: function (e, t) {
                var r = this.queue[e];
                r.status = g.LOADING;
                var i = new s({
                    adInfo: r.adInfo,
                    playerData: this.conf.playerData,
                    container: this.adplayer.$dom.$videoAd.$videoRichMediaAdContainer,
                    api: this.conf.playerMethod
                });
                if (this.richMediaPlayer = this.richMediaMap["rich_" + r.index] = i, this.richMediaPlayer) {
                    var n = {};
                    n[v.AdLoaded] = this.onVpaidAdLoaded.bind(this, r, t), n[v.AdStarted] = this.onVpaidAdStarted.bind(this), n[v.AdVideoStart] = this.onVpaidAdVideoStart.bind(this), n[v.AdClickThru] = this.onVpaidAdClickThru.bind(this), n[v.AdStopped] = this.onVpaidAdStopped.bind(this, r), n[v.AdVideoComplete] = this.onVpaidAdVideoComplete.bind(this), n[v.AdError] = this.onVpaidAdError.bind(this, r), n[v.AdPlaying] = this.onVpaidAdPlaying.bind(this), n[v.AdPaused] = this.onVpaidAdPaused.bind(this), n[v.AdPauseTimeCount] = this.onVpaidAdPauseTimeCount.bind(this), n[v.AdResumeTimeCount] = this.onVpaidAdResumeTimeCount.bind(this), r.loadStartTime = +new Date, i.loadAd({
                        api: this.conf.playerMethod,
                        index: Object.keys(this.richMediaMap).length,
                        preload: !1,
                        adInfo: r.adInfo,
                        events: n
                    }), this.firstLoadingStartTime || (this.firstLoadingStartTime = +new Date), this.logger.log("6072 loadStart", r.tpIndex), this.message.emit(p.TXPLAYER_EVENT.AD_LOAD_START, {
                        adtype: r.adtype === y.KB ? y.LD : r.adtype,
                        duration: 1e3 * +r.duration,
                        index: r.tpIndex
                    }), r.status = g.LOAD_READY
                }
            }
        }, {
            key: "playNext", value: function (e) {
                if (this.stopCountDown(), this.currentAdIndex >= this.lastVideoIndex || e > this.lastVideoIndex) return this.logger.log("\u5f53\u524d\u64ad\u653e\u7684\u662f\u6700\u540e\u4e00\u4e2a, \u4e0d\u518d\u64ad\u653e\u4e0b\u4e00\u4e2a"), void this.reportVideoEnd();
                e = e || this.currentAdIndex + 1;
                var t = this.queue[e];
                if (t) {
                    var r = t.status !== g.END;
                    this.logger.log("\u64ad\u653e\u4e0b\u4e00\u4e2a: index: ", e, ", \u72b6\u6001\u662f\u5426\u53ef\u64ad: ", r), r ? this.start(e) : this.playNext(e + 1)
                }
            }
        }, {
            key: "destroy", value: function () {
                if (!this.hasDestroy) {
                    var e = this.ordertype;
                    this.pause(), this.videoAdUi.hideAll(), this.$videos.forEach(function (e) {
                        if (u.hide(e.el), e.hls) {
                            if (e.hlsEvt) for (var t in e.hlsEvt) e.hls.off(t, e.hlsEvt[t]);
                            e.hls.destroy(), e.hls = null
                        }
                    }), this.unbindVideoEvent(), this.unbindBrowserEvent(), this.clearVideoDom(), this.reset(), this.richMediaPlayer && (this.richMediaPlayer.stopAd(), this.richMediaPlayer = null), this.unbindVideoUiEvent(), this.hasDestroy = !0, n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "stop", this).call(this, {
                        adtype: e,
                        removeType: !0
                    })
                }
            }
        }, {
            key: "reportVideoEnd", value: function (e, t) {
                this.blockScreen && !e ? this.blockScreen.isNeedShow(this.reportVideoEndImpl.bind(this)) : this.reportVideoEndImpl(e, t)
            }
        }, {
            key: "reportVideoEndImpl", value: function (e, r) {
                var i, a, o = this;
                if (r) u(); else {
                    var s = !1;
                    if (TxpCreativePlayer.fromPcClient && (this.dataset.playerIsSkipPrelude && this.dataset.playtime >= this.dataset.playerEndTime || !this.dataset.playerIsSkipPrelude && this.dataset.playtime >= this.dataset.playerDuration) && (s = !0), e || this.ordertype !== y.HT || this.currentPlayAdType === y.HT || this._state === g.WAIT_FOR_STOP || s) {
                        if (!this.hasReportVideoEnd) {
                            this.hasReportVideoEnd = !0, this.logger.log("\u6240\u6709\u5e7f\u544a\u64ad\u653e\u5b8c\u6210"), clearTimeout(this.vpaidPauseTimeCountHandler), this.stopCountDown(), u();
                            var d = 0, l = 0;
                            i.forEach(function (e) {
                                d += e
                            }), a.forEach(function (e) {
                                l += e
                            }), this.message.emit(p.TXPLAYER_EVENT.AD_STOP, {
                                index: this.currentAdIndex,
                                rfid: this.rfid,
                                adtype: this.ordertype,
                                isAllAdEnd: Math.abs(d - l) < 5e3
                            }), this.destroy()
                        }
                    } else n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "waitForStop", this).call(this)
                }

                function u() {
                    i = o.isEmpty ? [] : o.queue.map(function (e) {
                        return 1e3 * e.duration
                    }), a = o.isEmpty ? [] : o.queue.map(function (e) {
                        return "undefined" != typeof e.realDuration ? e.realDuration : e.playStartTime ? +new Date - e.playStartTime : 0
                    });
                    var e = 0;
                    o.isEmpty || o.queue.forEach(function (t, r) {
                        t.viewTime ? (o.logger.log("viewTime_" + r, t.viewTime), e += t.viewTime) : t.viewStartTime && (o.logger.log("viewTime_" + r, +new Date - t.viewStartTime), e += +new Date - t.viewStartTime)
                    }), o.logger.log("report", p.REPORT_EVENT.AD_END), o.message.emit(p.REPORT_EVENT.AD_END, {
                        adInfo: {
                            list: o.orderList,
                            adtype: o.ordertype
                        },
                        rfid: o.rfid,
                        adtype: o.ordertype,
                        errorcode: o.errorCode,
                        adclose: o.userCloseOrderId,
                        closetime: o.userCloseOrderId ? 1e3 * (o.duration - o.countdown) : "",
                        adtt: e,
                        adfbt: o.isEmpty ? "" : o.firstLoadingEndTime && o.firstLoadingStartTime ? Math.abs(o.firstLoadingEndTime - o.firstLoadingStartTime) : -1,
                        videopt: i,
                        videott: a,
                        firstview: o.isEmpty ? "" : o.firstViewTime || -1
                    })
                }
            }
        }, {
            key: "onVideoLoadStart", value: function (e) {
                if (e.src) {
                    var t = u.attr(e, "data-idx");
                    this.firstLoadingStartTime || (this.firstLoadingStartTime = +new Date);
                    var r = this._getTargetOrderInfo(t);
                    this.logger.log("loadstart index: ", r.tpIndex), r && (r.loadStartTime = +new Date, this.logger.log("6072 loadStart", r.tpIndex), this.message.emit(p.TXPLAYER_EVENT.AD_LOAD_START, {
                        adtype: r.adtype === y.KB ? y.LD : r.adtype,
                        duration: 1e3 * +r.duration,
                        index: r.tpIndex
                    }))
                }
            }
        }, {
            key: "onVideoCanPlay", value: function (e) {
                var t = u.attr(e, "data-idx"), r = this._getTargetOrderInfo(t);
                if (this.logger.log("canplay duration: ", e.duration, ", idx: ", t), r) {
                    var i = +new Date, n = this._getVideoBufferPercent(e);
                    r.loadedPercent = n, r.speed = n & r.fileSize / (i - r.loadStartTime) * 1e3, 1 == r.tpIndex && this.hasReportPlayStartArr && -1 == this.hasReportPlayStartArr.indexOf(r.tpIndex) && (this.logger.log("6072 playStart", r.tpIndex), this.hasReportPlayStartArr.push(r.tpIndex), this.message.emit(p.TXPLAYER_EVENT.AD_PLAY_START, {
                        adtype: r.adtype === y.KB ? y.LD : r.adtype,
                        index: r.tpIndex,
                        vid: r.vid,
                        duration: r.duration,
                        src: r.url
                    })), this.canPlay || this.ordertype === y.ZC ? !this.canPlay && this.ordertype === y.ZC && r.loadedPercent >= .05 && (this.logger.log(this.ordertype + " is Ready."), this._loadReadyHandler({
                        displayCode: r.displayCode,
                        adtype: r.adtype === y.KB ? y.LD : r.adtype,
                        index: r.index,
                        speed: r.speed
                    })) : (this.logger.log(this.ordertype + " is Ready."), this._loadReadyHandler({
                        adtype: r.adtype === y.KB ? y.LD : r.adtype,
                        index: r.index,
                        speed: r.speed
                    }))
                }
            }
        }, {
            key: "onVideoProgress", value: function (e) {
                var t = this._getTargetOrderInfo(u.attr(e, "data-idx")), r = 0, i = !1, n = t ? t.index : -1;
                if (t) {
                    var a = +new Date;
                    r = this._getVideoBufferPercent(e), t.loadedPercent = r, i = r > .99, t.speed = r & t.fileSize / (a - t.loadStartTime) * 1e3, this.message.emit(p.TXPLAYER_EVENT.AD_LOAD_PROGRESS, {
                        adtype: t.adtype === y.KB ? y.LD : t.adtype,
                        index: t.tpIndex,
                        speed: t.speed
                    }), this.logger.log("progress percent: ", r)
                }
                t && i && !this.isLoadComplete && !t.loadCompleteTime && (this.logger.log("report[video progress]", p.REPORT_EVENT.AD_LOAD_COMPLETE, n), this.logger.log("progress...."), this._handleVideoLoadComplete(t, n, n === this.currentAdIndex)), t && !this.canPlay && this.ordertype === y.ZC && t.loadedPercent >= .05 && (this.logger.log(this.ordertype + " is Ready."), this._loadReadyHandler({
                    displayCode: t.displayCode,
                    adtype: t.adtype === y.KB ? y.LD : t.adtype,
                    index: t.index,
                    speed: t.speed
                }))
            }
        }, {
            key: "_handleVideoLoadComplete", value: function (e, t, r) {
                e.loadCompleteTime = +new Date, e.speed = e.fileSize / (e.loadCompleteTime - e.loadStartTime) * 1e3, e.status = g.LOAD_READY, e.hasReportLoadComplete || (e.hasReportLoadComplete = !0, this.message.emit(p.REPORT_EVENT.AD_LOAD_COMPLETE, {
                    adInfo: this.orderList[e._index],
                    adload: e.loadCompleteTime - e.loadStartTime,
                    tpindex: e.tpIndex,
                    oid: e.orderId,
                    errorcode: ""
                }), this.message.emit(p.TXPLAYER_EVENT.AD_LOAD_COMPLETE, {
                    adtype: e.adtype === y.KB ? y.LD : e.adtype,
                    index: e.tpIndex,
                    isAllEnd: t === this.lastVideoIndex,
                    speed: e.speed
                })), this._doPreloadNextVideo(e, t, r)
            }
        }, {
            key: "_doPreloadNextVideo", value: function (e, t, r) {
                this.isLoadComplete = t >= this.lastVideoIndex, t < this.lastVideoIndex ? r ? (this.logger.log("[\u5f53\u524d]\u52a0\u8f7d\u5b8c\u6210:", t, "\uff0c\u9884\u52a0\u8f7d\u4e0b\u4e00\u4e2a"), this.preloadNext(this.currentAdIndex + 1)) : (this.logger.log("[\u9884\u52a0\u8f7d]\u52a0\u8f7d\u5b8c\u6210: ", t, "\uff0c\u9884\u52a0\u8f7d\u4e0b\u4e00\u4e2a"), this.preloadNext(t + 1)) : this.isLoadComplete && this.logger.log("\u6240\u6709\u5e7f\u544a\u52a0\u8f7d\u5b8c\u6210")
            }
        }, {
            key: "onVideoTimeupdate", value: function (e) {
                var t = parseInt(e.currentTime);
                if (0 !== e.currentTime && (0 === e.currentTime || t !== this.prevCurrentTime)) {
                    this.prevCurrentTime = t;
                    var r = this._getVideoBufferPercent(e), i = this._getTargetOrderInfo(u.attr(e, "data-idx")),
                        n = r > .99, a = i ? i.index : -1;
                    i && (i.loadedPercent = r, i.realDuration = parseInt(1e3 * e.currentTime, 10)), n && a === this.currentAdIndex && !this.isLoadComplete && (i.loadCompleteTime ? this.rollbackAdIndex && this.rollbackAdIndex <= this.lastVideoIndex && this._getFreeVideo() && (this.logger.log("\u56de\u9000\u7684\u5143\u7d20\u53ef\u4ee5\u5f00\u59cb\u8fdb\u884c\u52a0\u8f7d\u4e86"), this.preloadNext(this.rollbackAdIndex)) : (this.logger.log("\u5f53\u524dvideo\u5df2\u7ecf\u52a0\u8f7d\u5b8c", a), this.logger.log("report[video timeupdate]", p.REPORT_EVENT.AD_LOAD_COMPLETE, a), this._handleVideoLoadComplete(i, a, !0)))
                }
            }
        }, {
            key: "onVideoPlaying", value: function (e) {
                var r = u.attr(e, "data-idx"), i = this._getTargetOrderInfo(r);
                if (n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "play", this).call(this), i) {
                    this._clearAdTimer(i), i._tempErrorCode = 0, this.blockScreen && this.blockScreen.onAdPlaying(), i.status = g.PLAYING, this.firstViewTime || (this.firstViewTime = parseInt(window.performance.now(), 10)), i.hasReportView || (i.hasReportView = !0, this.logger.log("report", p.REPORT_EVENT.AD_VIEW, i.index), this.message.emit(p.REPORT_EVENT.AD_VIEW, {
                        adInfo: this.orderList[i._index],
                        scene: this.scene
                    })), this.firstViewTime || (this.firstViewTime = parseInt(window.performance.now(), 10)), this.firstLoadingEndTime || (this.firstLoadingEndTime = +new Date), this.logger.log("\u7b2c", i.index, "\u4e2a\u5f00\u64ad\u4e86"), this.hasPlaying && -1 == this.hasPlaying.indexOf(i.tpIndex) && (this.hasPlaying.push(i.tpIndex), this.startCountDown()), 1 != i.tpIndex && this.hasReportPlayStartArr && -1 == this.hasReportPlayStartArr.indexOf(i.tpIndex) && (this.logger.log("6072 oldPlayStart", i.tpIndex), this.hasReportPlayStartArr.push(i.tpIndex), this.message.emit(p.TXPLAYER_EVENT.AD_PLAY_START, {
                        adtype: i.adtype === y.KB ? y.LD : i.adtype,
                        index: i.tpIndex,
                        vid: i.vid,
                        duration: i.duration,
                        src: i.url
                    })), this.queue[this.currentAdIndex].status = g.PLAYING;
                    var a = this.queue[this.currentAdIndex];
                    this.setViewMonitor || (this.setViewMonitor = !0, this._reportScreenShot({
                        video: this.$currentVideo,
                        oid: a.orderId,
                        index: i.index,
                        vid: a.vid,
                        empty: this.info.isEmpty
                    }), this.adViewMonitor.start(a))
                }
            }
        }, {
            key: "onVideoPause", value: function (e) {
                var t = u.attr(e, "data-idx"), r = this._getTargetOrderInfo(t);
                r && (this.message.emit(p.TXPLAYER_EVENT.AD_PAUSE, {
                    adtype: r.adtype === y.KB ? y.LD : r.adtype,
                    index: r.tpIndex
                }), r.status = g.PAUSED)
            }
        }, {
            key: "onVideoResume", value: function (e) {
                var t = u.attr(e, "data-idx");
                if (e.currentTime > 0) {
                    t = u.attr(e, "data-idx");
                    var r = this._getTargetOrderInfo(t);
                    r && (this.message.emit(p.TXPLAYER_EVENT.AD_RESUME, {
                        adtype: r.adtype === y.KB ? y.LD : r.adtype,
                        index: r.tpIndex
                    }), r.status = g.PLAYING)
                }
            }
        }, {
            key: "playVideo", value: function (e) {
                var t = this;
                if (this.logger.log("-==>>> playVideo: (video.vindex/video.status)", e.vindex, e.status), e.status == m.PLAYING) {
                    var r = e.el.play();
                    r && r["catch"](function (e) {
                        t.logger.log("playUrl: ", e)
                    })
                }
            }
        }, {
            key: "playUrl", value: function (e) {
                var t, r = this, i = this._getVideoByIndex(e.index);
                if (this.logger.log("-==>>> playUrl: (video.vindex/video.status)", i.vindex, i.status), i.bakUrlData) if (0 < i.bakUrlData.urls.length) if ("hls" == i.bakUrlData.type && _.isSupported()) {
                    if (i.hls) {
                        if (i.hlsEvt) for (var n in i.hlsEvt) i.hls.off(n, i.hlsEvt[n]);
                        i.hls.destroy(), i.hls = null
                    }
                    if (!i.hls) for (var n in i.hls = new _, i.hlsEvt = {}, i.hlsEvt[_.Events.MANIFEST_PARSED] = function () {
                        r.playVideo(i)
                    }, i.hlsEvt[_.Events.ERROR] = function (t, n) {
                        r.logger.log("-==>>> playUrl, hls error: (orderInfo.index/orderInfo.vid/error)", e.index, e.vid, n), i.el.src = "", i.el.load(), e.detailErrCode = 30
                    }, i.hlsEvt) i.hls.on(n, i.hlsEvt[n]);
                    i.bakUrlData.m3u8 ? (t = i.bakUrlData.urls.shift(), i.hls.url = t, i.hls.trigger("hlsManifestLoading", {
                        url: t,
                        m3u8: i.bakUrlData.m3u8
                    }), setTimeout(function () {
                        i.hls.coreComponents[0].loadsuccess({data: i.bakUrlData.m3u8, url: t}, {
                            loaded: 1,
                            retry: 1,
                            tfirst: 1,
                            tload: 1,
                            total: 1,
                            trequest: 1
                        }, {type: "manifest", url: t}), i.bakUrlData.m3u8 = void 0
                    }, 50), this.logger.log("-==>>> playUrl, ZC_m3u8: (orderInfo.index/orderInfo.vid)", e.index, e.vid)) : (t = i.bakUrlData.urls.shift(), i.hls.loadSource(t), this.logger.log("-==>>> playUrl, url_m3u8: (orderInfo.index/orderInfo.vid)", e.index, e.vid)), i.hls.attachMedia(i.el), this._startAdTimer(14, e)
                } else t = i.bakUrlData.urls.shift(), i.el.src = t || "", t || (e.detailErrCode = 70), this.playVideo(i), this.logger.log("-==>>> playUrl, mp4: (orderInfo.index/orderInfo.vid)", e.index, e.vid), this._startAdTimer(14, e); else i.el.src = "", i.el.load(), i.failAll = !0, e.detailErrCode = 40; else i.el.src = e.url || "", e.url || (e.detailErrCode = 50), this.playVideo(i), this._startAdTimer(14, e)
            }
        }, {
            key: "loadBakUrl", value: function (e) {
                var t = this;
                this.logger.log("\u5f00\u59cb\u8bf7\u6c42hls\u5730\u5740: \u7b2c", e.index, "\u4e2a, vid: ", e.vid), this.geturls.requestVideoUrlsByVid({
                    vid: e.vid,
                    flowid: this.conf.playerData.playerFlowid,
                    guid: this.conf.playerData.playerGuid,
                    onSucc: function (r) {
                        t.loadUrlSucc(e, r)
                    },
                    onFail: function (r) {
                        t.loadUrlFail(e, r)
                    }
                })
            }
        }, {
            key: "loadUrlSucc", value: function (e, t) {
                this.logger.log("loadUrlSucc: \u7b2c" + e.index + "\u4e2a, vid: " + e.vid + ", \u5907\u4efd\u5730\u5740\u6570\uff1a" + (t && t.urls ? t.urls.length : 0));
                var r = this._getVideoByIndex(e.index);
                e && t && t.urls && t.urls.length > 0 ? (r.bakUrlData = t, this.playUrl(e)) : this.onVideoError(r.el, !0)
            }
        }, {
            key: "loadUrlFail", value: function (e, t) {
                this.logger.log("loadUrlFail: \u7b2c", e.index, "\u4e2a, ", t);
                var r = this._getVideoByIndex(e.index);
                this.onVideoError(r.el, !0)
            }
        }, {
            key: "onVideoError", value: function (e, t) {
                if (!this.isLoadComplete) {
                    var r = u.attr(e, "data-idx"), i = this._getTargetOrderInfo(r);
                    if (i) {
                        i.loadStartTime - +new Date < 500 && TxpCreativePlayer.adBlockEnabled && (i._tempErrorCode = 6);
                        var n = this._getVideoByIndex(i.index);
                        if (this.logger.log("-==>>> onVideoError: (video.vindex/video.status)", n.vindex, n.status, ", has adb: ", TxpCreativePlayer.adBlockEnabled), this._clearAdTimer(i), this.logger.log("\u89c6\u9891\u51fa\u9519: \u7b2c", i.index, "\u4e2a, vid: ", i.vid), !t && !n.failAll) return void (n.bakUrlData ? (this.logger.log("-==>>> onVideoError: \u6709\u5907\u4efd\u5730\u5740", n.bakUrlData.urls ? n.bakUrlData.urls.length : 0), this.playUrl(i)) : (this.logger.log("-==>>> onVideoError: \u6ca1\u6709\u5907\u4efd\u5730\u5740"), this.loadBakUrl(i)));
                        this.logger.log("-==>>> onVideoError: \u6700\u7ec8\u7ed3\u675f, \u7b2c", i.index, "\u4e2a, vid: ", i.vid), n.status = m.ERROR, i.viewStartTime && (i.viewTime = +new Date - i.viewStartTime), i.status = g.END, i.realDuration = parseInt(1e3 * e.currentTime, 10), this.prevCurrentTime = 0, this.errorCount++, i.loadCompleteTime || (i.loadCompleteTime = +new Date), i.hasReportLoadComplete || (i.hasReportLoadComplete = !0, this.logger.log("report[video error]", p.REPORT_EVENT.AD_LOAD_COMPLETE, i._index), this.message.emit(p.REPORT_EVENT.AD_LOAD_COMPLETE, {
                            adInfo: this.orderList[i._index],
                            adload: i.loadCompleteTime - i.loadStartTime,
                            tpindex: i.tpIndex,
                            oid: i.orderId,
                            errMsg: i.url,
                            errorcode: 2301
                        }));
                        var a = e.error.message || "", o = e.error.code;
                        a || e.currentSrc == e.src || (a = "MEDIA_ELEMENT_ERROR: Empty src attribute"), 6 == +i._tempErrorCode ? (o = i._tempErrorCode, i._tempErrorCode = 0, this.blockScreen && (this.blockScreen.errorByADBlock = !0)) : "MEDIA_ELEMENT_ERROR: Empty src attribute" === a && (o = 5), "undefined" != typeof e.readyState && (a += ";readyState:" + e.readyState), "undefined" != typeof e.networkState && (a += ";networkState:" + e.networkState);
                        var s = e.error && e.error.constructor && e.error.constructor.name;
                        this.logger.log("6072 playError: (orderInfo.index/orderInfo.vid/errorCode)", i.index, i.vid, o), this.message.emit(p.TXPLAYER_EVENT.AD_PLAY_ERROR, {
                            adtype: i.adtype === y.KB ? y.LD : i.adtype,
                            index: i.tpIndex,
                            vid: i.vid,
                            duration: i.duration,
                            errorCode: o,
                            detailErrCode: i.detailErrCode,
                            errorMessage: a || s || "",
                            preload: i.index !== this.currentAdIndex,
                            src: i.url,
                            isAllEnd: this.currentAdIndex === i.index && i.index === this.lastVideoIndex
                        }), i.index !== this.currentAdIndex && i.index === this.lastVideoIndex && this.message.emit(p.TXPLAYER_EVENT.AD_LOAD_COMPLETE, {
                            adtype: i.adtype === y.KB ? y.LD : i.adtype,
                            index: i.tpIndex,
                            errorCode: o,
                            errorMessage: a,
                            isAllEnd: !0
                        }), this.countdown = this.countdown - i.duration, i.adtype !== y.KB && (this.showCountdown = this.showCountdown - i.duration), i.index === this.currentAdIndex ? this.currentPlayAdType ? (this.logger.log("\u5f53\u524d\u89c6\u9891\u5931\u8d25\u4e86\uff0c\u5f53\u524d\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\uff0c\u76f4\u63a5\u64ad\u653e\u4e0b\u4e00\u4e2a"), this.playNext()) : (this.logger.log("\u5f53\u524d\u89c6\u9891\u5931\u8d25\u4e86\uff0c\u4f46\u662f\u8fd8\u6ca1\u6709\u8c03\u7528\u8fc7play\uff0c\u76f4\u63a5\u9884\u52a0\u8f7d\u4e0b\u4e00\u4e2a."), this.currentAdIndex <= this.lastVideoIndex ? (this.currentAdIndex = this.currentAdIndex + 1, this.preloadNext(i.index + 1)) : (this.logger.log("\u6240\u6709\u90fd\u64ad\u5b8c\u4e86"), this.reportVideoEnd())) : (this.logger.log("\u9884\u52a0\u8f7d\u52a0\u8f7d\u4e0b\u4e00\u4e2a"), this.preloadNext(i.index + 1)), this.setViewMonitor = !1
                    }
                    this.errorCount == this.orderList.length && (this.errorCode = 2201)
                }
            }
        }, {
            key: "onVideoEnded", value: function (e) {
                var t = u.attr(e, "data-idx"), r = this._getTargetOrderInfo(t);
                r && (this.logger.log("\u64ad\u653e\u5b8c\u6210: \u7b2c", this.currentAdIndex, "\u4e2a"), this._clearAdTimer(r), this._getVideoByIndex(r.index).status = m.END, r.viewStartTime && (r.viewTime = +new Date - r.viewStartTime), r.status = g.END, r.realDuration = parseInt(1e3 * e.duration, 10), this.message.emit(p.TXPLAYER_EVENT.AD_PLAY_END, {
                    adInfo: this.orderList[r._index],
                    adtype: r.adtype === y.KB ? y.LD : r.adtype,
                    index: r.tpIndex,
                    errorcode: 0
                }), this.setViewMonitor = !1), this.playNext(), this.prevCurrentTime = 0
            }
        }, {
            key: "bindVideoEvent", value: function () {
                for (var e = 0, t = this.$videos.length; e < t; e++) this.dobindVideoEvent(this.$videos[e].el)
            }
        }, {
            key: "unbindVideoEvent", value: function () {
                for (var e = 0, t = this.$videos.length; e < t; e++) this.doUnbindVideoEvent(this.$videos[e].el);
                this._videoEvents = {}
            }
        }, {
            key: "dobindVideoEvent", value: function (e) {
                var t = this;
                for (var r in this._videoEvents || (this._videoEvents = {
                    loadstart: function (e) {
                        t.onVideoLoadStart(e.target)
                    }, progress: function (e) {
                        t.onVideoProgress(e.target)
                    }, canplay: function (e) {
                        t.onVideoCanPlay(e.target)
                    }, playing: function (e) {
                        t.onVideoPlaying(e.target)
                    }, play: function (e) {
                        t.onVideoResume(e.target)
                    }, pause: function (e) {
                        t.onVideoPause(e.target)
                    }, timeupdate: function (e) {
                        t.onVideoTimeupdate(e.target)
                    }, error: function (e) {
                        t.onVideoError(e.target)
                    }, ended: function (e) {
                        t.onVideoEnded(e.target)
                    }
                }), this._videoEvents) this._videoEvents.hasOwnProperty(r) && u.on(e, r, this._videoEvents[r])
            }
        }, {
            key: "doUnbindVideoEvent", value: function (e) {
                if (this._videoEvents) for (var t in this._videoEvents) this._videoEvents.hasOwnProperty(t) && u.off(e, t, this._videoEvents[t])
            }
        }, {
            key: "bindVideoUiEvent", value: function () {
                var e = this;

                function t() {
                    if (this.canClickToStopAd) {
                        var e = this.queue[this.currentAdIndex];
                        return e.viewStartTime && (e.viewTime = +new Date - e.viewStartTime), this.userCloseOrderId = e.orderId, this.logger.log("\u7528\u6237\u70b9\u51fb\u4e86\u5173\u95ed"), void this.reportVideoEnd()
                    }
                    this.showCloseButton && (this.pause(), this.conf.playerMethod.showOpenVIPGuide && this.conf.playerMethod.showOpenVIPGuide())
                }

                function r() {
                    var e = this.queue[this.currentAdIndex];
                    if (e.link && "N" == e.noClick) {
                        this.logger.log("report", p.REPORT_EVENT.AD_CLICK), this.message.emit(p.REPORT_EVENT.AD_CLICK, {
                            adInfo: this.orderList[e._index],
                            adclick: e.link ? e.orderId : "",
                            clicktime: 1e3 * (this.duration - this.countdown),
                            scene: this.scene
                        });
                        var t = this.adplayer.getConf(), r = t && t.playerData && t.playerData.playerPfEx || "",
                            i = c.appendParamsToUrl(e.link, {pf_ex: r || "", appversion: E});
                        window.open(i)
                    }
                }

                function i(e) {
                    e ? this.pause() : this.resume(), this.videoAdUi.updateNoSkipDialog({show: e})
                }

                this.message.on(p.UI_EVENT.VIDEO_SKIP_TEXT, function (r) {
                    e.canSkip ? e.videoAdUi.trueViewInterval || t.apply(e) : i.apply(e, [!0])
                }), this.message.on(p.UI_EVENT.VIDEO_CLOSE_BUTTON_CLICK, function (r) {
                    t.apply(e)
                }), this.message.on(p.UI_EVENT.VIDEO_LINK_AREA_CLICK, function (t) {
                    r.apply(e)
                }), this.message.on(p.UI_EVENT.VIDEO_DETAIL_BUTTON_CLICK, function (t) {
                    r.apply(e)
                }), this.message.on(p.UI_EVENT.VIDEO_NO_SKIP_BUTTON_CLICK, function (t) {
                    i.apply(e, [!0])
                }), this.message.on(p.UI_EVENT.VIDEO_NO_SKIP_KNOW_BUTTON_CLICK, function (t) {
                    i.apply(e, [!1])
                }), this.message.on(p.UI_EVENT.VIDEO_NO_SKIP_CLOSE_BUTTON_CLICK, function (t) {
                    i.apply(e, [!1])
                }), this.message.on(p.UI_EVENT.VIDEO_VOLUME_BUTTON_CLICK, function (t) {
                    e.isMute = !e.isMute, e.isMute ? e.setVolume(0) : e.setVolume(Math.min(100, Math.max(0, e.callOuterApi(p.TXPLAYER_API.GET_VOLUME)))), e.videoAdUi.updateVideoVolumeBtn({mute: e.isMute})
                })
            }
        }, {
            key: "unbindVideoUiEvent", value: function () {
                f(this.message, p.UI_EVENT.VIDEO_SKIP_TEXT), f(this.message, p.UI_EVENT.VIDEO_CLOSE_BUTTON_CLICK), f(this.message, p.UI_EVENT.VIDEO_LINK_AREA_CLICK), f(this.message, p.UI_EVENT.VIDEO_DETAIL_BUTTON_CLICK), f(this.message, p.UI_EVENT.VIDEO_NO_SKIP_BUTTON_CLICK), f(this.message, p.UI_EVENT.VIDEO_NO_SKIP_KNOW_BUTTON_CLICK), f(this.message, p.UI_EVENT.VIDEO_NO_SKIP_CLOSE_BUTTON_CLICK)
            }
        }, {
            key: "onVpaidAdLoaded", value: function (e, t) {
                this.firstLoadingEndTime || (this.firstLoadingEndTime = +new Date), this.logger.log("[\u5bcc\u5a92\u4f53]\u52a0\u8f7d\u5b8c\u6210: \u7b2c", e.index, "\u4e2a"), this.canPlay || this._loadReadyHandler({
                    adtype: e.adtype === y.KB ? y.LD : e.adtype,
                    index: e.index,
                    speed: e.speed
                }), e.loadCompleteTime = +new Date, e.hasReportLoadComplete || (e.hasReportLoadComplete = !0, this._clearAdTimer(e), this.logger.log("report[rich]", p.REPORT_EVENT.AD_LOAD_COMPLETE), this.message.emit(p.REPORT_EVENT.AD_LOAD_COMPLETE, {
                    adInfo: this.orderList[e._index],
                    adload: e.loadCompleteTime - e.loadStartTime,
                    tpindex: e.tpIndex,
                    oid: e.orderId,
                    errorcode: 0
                })), t && (e.playStartTime || (e.playStartTime = +new Date), this.startRichMedia())
            }
        }, {
            key: "onVpaidAdStarted", value: function () {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u64ad\u653e\u5f00\u59cb: \u7b2c", this.currentAdIndex, "\u4e2a");
                var e = this.queue[this.currentAdIndex];
                e.hasReportView || (e.hasReportView = !0, this.message.emit(p.REPORT_EVENT.AD_VIEW, {
                    adInfo: this.orderList[e._index],
                    scene: this.scene
                })), this.firstViewTime || (this.firstViewTime = parseInt(window.performance.now(), 10)), this.logger.log("6072 playStart", e.tpIndex), this.message.emit(p.TXPLAYER_EVENT.AD_PLAY_START, {
                    adtype: e.adtype === y.KB ? y.LD : e.adtype,
                    index: e.tpIndex,
                    vid: e.vid,
                    duration: e.duration,
                    src: e.src
                });
                var t = this.queue[this.currentAdIndex + 1];
                t && !t.isRichMedia && this.preloadNext(this.currentAdIndex + 1)
            }
        }, {
            key: "onVpaidAdVideoStart", value: function () {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u89c6\u9891\u5f00\u59cb\u64ad\u653e: \u7b2c", this.currentAdIndex, "\u4e2a")
            }
        }, {
            key: "onVpaidAdPlaying", value: function () {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u6062\u590d\u64ad\u653e"), this.startCountDown(), n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "play", this).call(this)
            }
        }, {
            key: "onVpaidAdPaused", value: function () {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u6682\u505c\u64ad\u653e"), this.stopCountDown()
            }
        }, {
            key: "onVpaidAdPauseTimeCount", value: function () {
                var e = this;
                this.logger.log("[\u5bcc\u5a92\u4f53]\u6682\u505c\u5012\u8ba1\u65f6"), this.stopCountDown(), clearTimeout(this.vpaidPauseTimeCountHandler), this.vpaidPauseTimeCountHandler = setTimeout(function () {
                    e.startCountDown()
                }, 3e3), this.richMediaPlayer && this.richMediaPlayer.continueTimeout()
            }
        }, {
            key: "onVpaidAdResumeTimeCount", value: function () {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u6062\u590d\u5012\u8ba1\u65f6"), clearTimeout(this.vpaidPauseTimeCountHandler), this.startCountDown()
            }
        }, {
            key: "onVpaidAdClickThru", value: function () {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u70b9\u51fb\u5bcc\u5a92\u4f53: \u7b2c", this.currentAdIndex, "\u4e2a");
                var e = this.queue[this.currentAdIndex];
                if (e.link && "N" == e.noClick) {
                    var t = this.adplayer.getConf(), r = t && t.playerData && t.playerData.playerPfEx || "",
                        i = c.appendParamsToUrl(e.link, {pf_ex: r || "", appversion: E});
                    window.open(i)
                }
            }
        }, {
            key: "onVpaidAdVideoComplete", value: function () {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u64ad\u653e\u7ed3\u675f: \u7b2c", this.currentAdIndex, "\u4e2a");
                var e = this.queue[this.currentAdIndex];
                e.viewStartTime && (e.viewTime = +new Date - e.viewStartTime), e.status = g.END, e.realDuration = e.playStartTime ? +new Date - e.playStartTime : 0, this.richMediaPlayer.destroy();
                this.queue[this.currentAdIndex + 1];
                this.richMediaPlayer = null, this.playNext()
            }
        }, {
            key: "onVpaidAdStopped", value: function (e) {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u5e7f\u544a\u505c\u6b62: \u7b2c", this.currentAdIndex, "\u4e2a"), e.status = g.END
            }
        }, {
            key: "onVpaidAdError", value: function (e) {
                this.logger.log("[\u5bcc\u5a92\u4f53]\u52a0\u8f7d\u5931\u8d25"), e.loadCompleteTime || (e.loadCompleteTime = +new Date), e.hasReportLoadComplete || (e.hasReportLoadComplete = !0, this._clearAdTimer(e), this.logger.log("report[rich error]", p.REPORT_EVENT.AD_LOAD_COMPLETE, e.index), e.viewStartTime && (e.viewTime = +new Date - e.viewStartTime), e.realDuration = e.playStartTime ? +new Date - e.playStartTime : 0, this._emitEvent(p.REPORT_EVENT.AD_LOAD_COMPLETE, {
                    adInfo: this.orderList[e._index],
                    adload: e.loadCompleteTime - e.loadStartTime,
                    tpindex: e.tpIndex,
                    oid: e.orderId,
                    errorcode: 2301
                })), e.status = g.END;
                var t = this.queue[this.currentAdIndex];
                this.logger.log("6072 playError", e.tpIndex), this.message.emit(p.TXPLAYER_EVENT.AD_PLAY_ERROR, {
                    adtype: e.adtype,
                    index: e.tpIndex,
                    vid: e.vid,
                    duration: e.duration,
                    errorCode: 404,
                    errorMessage: "richMediaLoadError",
                    preload: e.index !== this.currentAdIndex,
                    src: e.url,
                    isAllEnd: this.currentAdIndex === e.index && e.index === this.lastVideoIndex
                }), this.countdown = this.countdown - e.duration, e.adtype !== y.KB && (this.showCountdown = this.showCountdown - e.duration), t.tpIndex === e.tpIndex ? this.playNext() : this.preloadNext(this.nextAdIndex + 1)
            }
        }, {
            key: "bindBrowserEvent", value: function () {
                var e = this;
                this.unbindBrowserEvent(), this.logger.log("add:_browserBeforeUnload"), this._browserBeforeUnload = function () {
                    e.unbindBrowserEvent(), e.logger.log("report:_browserBeforeUnload");
                    var t = e.queue[e.currentAdIndex];
                    t && (t.viewStartTime && (t.viewTime = +new Date - t.viewStartTime), e.userCloseOrderId = t.orderId, e.rfid = "", e.reportVideoEnd(!0, !0))
                }, window.addEventListener("beforeunload", this._browserBeforeUnload)
            }
        }, {
            key: "unbindBrowserEvent", value: function () {
                this.logger.log("remove:_browserBeforeUnload"), window.removeEventListener("beforeunload", this._browserBeforeUnload)
            }
        }, {
            key: "_getFreeVideo", value: function () {
                for (var e = 0, t = this.$videos.length; e < t; e++) if (this.$videos[e].status === m.EMPTY) return this.$videos[e];
                return null
            }
        }, {
            key: "_resetFreeVideo", value: function () {
                for (var e = 0, t = this.$videos.length; e < t; e++) this.$videos[e].status > m.PLAYING && (this.$videos[e].status = m.EMPTY, this.$videos[e].bakUrlData = void 0, this.$videos[e].failAll = !1)
            }
        }, {
            key: "_hideFreeVideo", value: function () {
                for (var e = 0, t = this.$videos.length; e < t; e++) this.$videos[e].status !== m.PLAYING && u.hide(this.$videos[e].el)
            }
        }, {
            key: "_getVideoBufferPercent", value: function (e) {
                var t = 0;
                if (e && e.buffered && e.buffered.length > 0) try {
                    t = (e.buffered.end(0) - e.buffered.start(0)) / e.duration
                } catch (r) {
                }
                return t
            }
        }, {
            key: "_getTargetOrderInfo", value: function (e) {
                for (var t = 0, r = this.$videos.length; t < r; t++) if (u.attr(this.$videos[t].el, "data-idx") == e) return this.queue[this.$videos[t].vindex];
                return null
            }
        }, {
            key: "_getVideoByIndex", value: function (e) {
                for (var t = 0, r = this.$videos.length; t < r; t++) if (this.$videos[t].vindex === e) return this.$videos[t];
                return null
            }
        }, {
            key: "_reportScreenShot", value: function (e) {
                var t = this, r = 1e3 * Math.ceil(5 * Math.random());
                e.time = r;
                var i = setTimeout(function () {
                    t.message.emit(p.REPORT_EVENT.AD_SCREEN_SHOT, e), clearTimeout(i)
                }, r)
            }
        }]), t
    }()
}, function (e, t, r) {
    "use strict";
    e.exports = {END: 0, PLAYING: 1, PAUSE: 2, LOADING: 3}
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = 0, a = +new Date, o = r(7).Promise;
    e.exports = function () {
        function e(t) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.image = null, this.conf = t || {}
        }

        return i(e, [{
            key: "load", value: function () {
                var e = this;
                if (this.image) return o.resolve(this.image);
                var t = this.conf;
                return new o(function (r, i) {
                    var o = new Image;
                    for (var s in o.id = "adplayer_image_material_" + a + "_" + n, o.style.width = "100%", o.style.height = "100%", t.style) t.style.hasOwnProperty(s) && (o.style[s] = t.style[s]);
                    o.onload = function () {
                        this.image = o, n++, r(this.image)
                    }.bind(e), o.onerror = function (e) {
                        i(e)
                    }.bind(e), o.src = t.url
                })
            }
        }, {
            key: "destroy", value: function () {
                this.image && (this.image.src = "", this.image = null)
            }
        }]), e
    }()
}, function (e, t, r) {
    "use strict";
    var i = r(7).Promise;

    function n(e, t) {
        if ("string" != typeof t) return null;
        var r = t.split("."), i = r[0], n = "";
        r.length > 1 && (n = r[1]);
        var a = e.store;
        if (a.hasOwnProperty(i)) {
            if (!n) return a[i];
            if (a[i].hasOwnProperty(n)) return a[i][n]
        }
    }

    function a() {
        var e = new XMLHttpRequest;
        return e.open("GET", "//dp3.qq.com/dynamic?pf=h5&sdktype=3&chid=-1&appversion=171101&get_type=sdkconfig"), new i(function (t, r) {
            e.onreadystatechange = function () {
                if ("200" == e.status && 4 == e.readyState) {
                    var r = e.responseText, i = {adflag: {}};
                    try {
                        var n = document.createElement("div");
                        n.innerHTML = r, Array.prototype.forEach.call(n.querySelectorAll(".item"), function (e) {
                            var t = e.querySelector(".key").innerText, r = e.querySelector(".value").innerText;
                            i.adflag[t] = r
                        }), n = null
                    } catch (a) {
                    }
                    if (Object.keys(i.adflag).length) return void t(JSON.stringify(i));
                    t(JSON.stringify({adflag: {PSJ: 1, PPB: 0, PVL: 0, PDF: 0}}))
                }
            }, e.onerror = e.ontimeout = function () {
                t(JSON.stringify({adflag: {PSJ: 0, PPB: 0, PVL: 0, PDF: 0}}))
            }, e.send(null)
        })
    }

    function o(e) {
        var t = {store: e = JSON.parse(e), t: (new Date).getTime()};
        return function (e, t) {
            window.localStorage && window.localStorage.setItem(e, t)
        }("dp3config", JSON.stringify(t)), t
    }

    e.exports = function (e) {
        return function (e) {
            return new i(function (t, r) {
                var i = function (e) {
                    return window.localStorage ? window.localStorage.getItem(e) : null
                }("dp3config");
                if (i) {
                    var s = JSON.parse(i);
                    (new Date).getTime() - s.t > 36e5 ? a().then(function (r) {
                        t(n(o(r), e))
                    })["catch"](r) : t(n(s, e))
                } else a().then(function (r) {
                    t(n(o(r), e))
                })["catch"](r)
            })
        }(e ? "adflag." + e : "adflag")
    }
}, function (e, t, r) {
    "use strict";
    e.exports = r(55)
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(9), a = r(23), o = r(24), s = r(25), d = r(29), l = r(1), u = r(3), c = r(4), h = r(0)("index"),
        f = r(57), p = r(58), v = null, y = null, g = function () {
            function e(t) {
                !function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.hasLoadEndingAd = !1;
                var r = +new Date;
                if (e.instance[r] = this, h.log("new TxpCreativePlayer", t), !t) throw Error("\u521d\u59cb\u5316\u53c2\u6570\u4e0d\u80fd\u4e3a\u7a7a!");
                this._initController(t)
            }

            return i(e, [{
                key: "_initController", value: function (e) {
                    this.controllers = {}, this.controllers.confController = new o(this), this.setConf(e), this.controllers.orderController = new s(this), this.controllers.adController = new d(this)
                }
            }, {
                key: "emitToPlayer", value: function (e, t) {
                    var r = this.getConf().playerMsg;
                    r && r.broadcast && r.broadcast(e, t)
                }
            }, {
                key: "init", value: function (e) {
                    this.controllers.confController.setConf(e), this.controllers.adController.init(e)
                }
            }, {
                key: "setOrder", value: function (e) {
                    this.controllers.adController.initOrderReport(e), this.controllers.orderController.setOrder(e)
                }
            }, {
                key: "checkPSJAction", value: function (e, t, r) {
                    e >= t.getStartSec() - 6 && e < t.getStartSec() - 1 ? t.status == a.INIT ? (this.loadAd(t.orderList, t).then(function () {
                        t.status = a.LOADING
                    }), h.log("load PSJ")) : t.status == a.PLAYING && (t.status = a.INIT, this.stopAd(t.orderList)) : e >= t.getStartSec() - 1 && e < t.getEndSec(r.playerDuration) - 1 ? (e == t.getStartSec() - 1 && t.status == a.PLAYING && (t.status = a.INIT, this.stopAd(t.orderList)), t.status == a.INIT ? (this.loadAd(t.orderList, t).then(function () {
                        t.status = a.LOADING
                    }), h.log("load PSJ")) : t.status != a.LOADING && t.status != a.PLAYING || (t.status = a.PLAYING, this.playAd(t.orderList, t), h.log("play PSJ"))) : t.status != a.INIT && (t.status = a.INIT, this.stopAd(t.orderList), h.log("stop PSJ"))
                }
            }, {
                key: "checkPHLSAction", value: function (e, t, r) {
                    e >= t.getStartSec() - 2 && e <= t.getStartSec() ? t.status == a.INIT && (this.loadAd(t.orderList, t).then(function () {
                        t.status = a.LOADING
                    }), h.log("load PHLS")) : e > t.getStartSec() && e <= t.getEndSec(r.playerDuration) ? t.status == a.INIT ? (this.loadAd(t.orderList, t).then(function () {
                        t.status = a.LOADING
                    }), h.log("load PHLS")) : t.status != a.LOADING && t.status != a.PLAYING || (t.status = a.PLAYING, this.playAd(t.orderList, t), h.log("play PHLS")) : t.status != a.INIT && (t.status = a.INIT, this.stopAd(t.orderList), h.log("stop PHLS"))
                }
            }, {
                key: "setPlaytime", value: function (e) {
                    var t = this, r = this.dataset;
                    r.playtime = e, this.hasLoadEndingAd || (!r.playerIsSkipPrelude && r.playerDuration && r.playerDuration - e <= 10 || r.playerIsSkipPrelude && r.playerEndTime > 0 && r.playerEndTime - e <= 10 || r.playerIsSkipPrelude && r.playerEndTime > 0 && e > r.playerEndTime) && (this.hasLoadEndingAd = !0, this.emitToPlayer(l.TXPLAYER_EVENT.AD_REQUEST_ORDER, {adtype: u.HT})), (v = this.controllers.orderController.sceneInfos) && v.length && v.forEach(function (i) {
                        var n = i.getStartSec(), o = i.getEndSec(r.playerDuration);
                        if (i.orderList && n > 0) switch (i.orderType) {
                            case u.VIN:
                                e >= n && e <= o ? i.status == a.INIT && (h.log("load VIN"), t.loadAd(i.orderList, i).then(function () {
                                    i.status = a.PLAYING, t.playAd(i.orderList, i), h.log("play VIN")
                                })) : i.status != a.INIT && (i.status = a.INIT, t.stopAd(i.orderList), h.log("stop VIN"));
                                break;
                            case u.ZC:
                                if (!t.hasLoadEndingAd) if (i.status == a.INIT) {
                                    if (e >= i.getStartSec() - 12 && e <= i.getStartSec() + 12) {
                                        i.status = a.LOADING;
                                        var s = t.controllers.orderController.getOrdersByType(u.ZC), d = i.orderList;
                                        d.adcost = s.adcost, d.errorcode = s.errorcode, t.loadAd(d, i)
                                    }
                                } else i.status == a.LOADING ? (y = t.controllers.adController.getAd(i.orderList)) && y.canPlay && (i.status = a.PLAYING) : i.status == a.PLAYING && (y = t.controllers.adController.getAd(i.orderList)) && y.state == c.END && (i.status = a.END);
                                break;
                            case u.ZI:
                            case u.BS:
                                e == i.getStartSec() ? i.status == a.INIT && (i.status = a.LOADING, t.loadAd(i.orderList, i)) : e > i.getStartSec() && e <= i.getEndSec(r.playerDuration) ? i.status == a.LOADING && (y = t.controllers.adController.getAd(i.orderList)) && y.canPlay && (i.status = a.PLAYING, t.playAd(i.orderList, i), h.log("play BS")) : i.status != a.INIT && (i.status = a.INIT, t.stopAd(i.orderList));
                                break;
                            case u.PSJ:
                                var l = i.getIsAbsoluteTime() ? +new Date / 1e3 : e;
                                t.checkPSJAction(l, i, r);
                                break;
                            case u.PHLS:
                                t.checkPHLSAction(e, i, r);
                                break;
                            case u.CZC:
                                e >= i.getStartSec() - 2 && e <= i.getStartSec() ? i.status == a.INIT && (t.loadAd(i.orderList, i).then(function () {
                                    i.status = a.LOADING
                                }), h.log("load CZC")) : e > i.getStartSec() && e <= i.getEndSec(r.playerDuration) ? i.status == a.INIT ? (t.loadAd(i.orderList, i).then(function () {
                                    i.status = a.LOADING
                                }), h.log("load CZC")) : i.status != a.LOADING && i.status != a.PLAYING || (i.status = a.PLAYING, t.playAd(i.orderList, i), h.log("play CZC")) : i.status != a.INIT && (i.status = a.INIT, t.stopAd(i.orderList), h.log("stop CZC"))
                        }
                    })
                }
            }, {
                key: "dataset", get: function () {
                    return this.getConf().playerData
                }
            }]), e
        }();
    f.install(g), p.install(g), g.version = n, g.loadNextPart = function () {
        g.adClass.loadNextPart()
    }, g.instance = {}, g.EVENT = l, g.AD_TYPE = u, g.Logger = h, g.fromPcClient = !1, g.debug = /debugad=1/.test(location.search || ""), window.TxpCreativePlayer || (window.TxpCreativePlayer = g), e.exports = g
}, function (e, t, r) {
    "use strict";
    e.exports = {INIT: 0, LOADING: 2, LOAD_READY: 4, PLAYING: 6, END: -1}
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(13), a = r(0)("controller/confController"), o = function () {
        function e(t) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), a.log("new ConfController"), this.defaultConf = {
                playerMsg: null,
                playerDom: {
                    pvlAdLayer: null,
                    ppbAdLayer: null,
                    pdfAdLayer: null,
                    videoAdLayer: null,
                    interactiveAdLayer: null
                },
                playerMethod: {},
                playerData: {
                    playerWidth: 0,
                    playerHeight: 0,
                    playerLeft: 0,
                    playerTop: 0,
                    playtime: 0,
                    playerEndTime: 0,
                    playerDuration: 0,
                    playerFrom: "",
                    playerPlatform: "",
                    playerPf: "",
                    playerPfEx: "",
                    playerVersion: "",
                    playerCid: "",
                    playerVid: "",
                    playerFlowid: "",
                    playerGuid: "",
                    playerPt: "",
                    playerPu: 0,
                    playerTrialerMode: !1,
                    playerAdExt: "",
                    playerType: "",
                    playerIsSkipPrelude: !1,
                    playerVptag: ""
                }
            }
        }

        return i(e, [{
            key: "setConf", value: function () {
                var e = Array.prototype.slice.call(arguments, 0), t = e.length;
                if (0 !== t) if (this.conf) {
                    if (1 === t) {
                        var r = e[0];
                        for (var i in r) r.hasOwnProperty(i) && (this.conf[i] = n(this.conf[i], r[i]))
                    } else if (2 === t && "string" == typeof e[0]) {
                        var a = e[0].split(".");
                        if (1 === a.length) this.conf[e[0]] = e[1]; else {
                            for (var o = this.conf[a[0]], s = 1; s < a.length; s++) o = o[a[s]];
                            o = e[1]
                        }
                    }
                } else this.conf = n(this.defaultConf, e[0])
            }
        }, {
            key: "getConf", value: function () {
                return this.conf
            }
        }]), e
    }();
    e.exports = o
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(3), a = r(26), o = r(0)("controller/orderController"), s = [n.ZC, n.BS, n.ZI, n.TP, n.PSJ],
        d = function () {
            function e(t) {
                !function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.adplayer = t, this.dataset = this.adplayer.dataset, this.reset()
            }

            return i(e, [{
                key: "reset", value: function () {
                    this.sceneInfos = [], this.adtypeMap = {}, this.watchbuys = []
                }
            }, {
                key: "setOrder", value: function (e, t) {
                    if (o.log("order: ", e), !(e = a.parse(e))) return null;
                    if (e.sceneInfos && e.sceneInfos.length && (this.sceneInfos = this.checkScenesConflict(e), this.watchbuys = e.watchbuys, this.setPageWatchBuyData()), e.adtypeMap) for (var r in e.adtypeMap) this.adtypeMap[r] = e.adtypeMap[r];
                    return t && e.adtypeMap ? e.adtypeMap[t] : e.adtypeMap
                }
            }, {
                key: "setPageWatchBuyData", value: function () {
                    this.watchbuys && this.watchbuys.length > 0 && "function" == typeof window.__flashplayer_watchAndBuyList && window.__flashplayer_watchAndBuyList(this.watchbuys)
                }
            }, {
                key: "clearPageWatchBuyData", value: function () {
                    this.watchbuys = []
                }
            }, {
                key: "checkScenesConflict", value: function (e) {
                    var t = e.sceneInfos, r = e.fields;
                    if (t) {
                        if (r && r[0] && r[0].videotag && r[0].videotag[0] && r[0].videotag[0].ts && r[0].videotag[0].ts.t) {
                            var i = r[0].videotag[0].ts.t[0], a = void 0;
                            i && i.forEach(function (e) {
                                a = parseInt(.001 * e.pt), t.forEach(function (e) {
                                    e.orderType != n.BS || e.isEmpty || e.isConflictMark || e.getEndSec() < a - 10 || e.getStartSec() > a + 15 + 10 || (e.isConflictMark = !0)
                                })
                            })
                        }
                        var o = void 0, d = void 0, l = t.length, u = void 0, c = void 0;
                        for (o = 0; o < l; o++) if ((u = t[o]) && !u.isEmpty && !u.isWholeScene && !u.isConflictMark) for (d = o + 1; d < l; d++) if ((c = t[d]) && !c.isEmpty && !c.isWholeScene && !c.isConflictMark && this.isSceneConflict(u, c)) {
                            if ((u.orderType === n.CZC || u.orderType === n.PHLS) && c.orderType == n.ZC) {
                                c.isConflictMark = !0;
                                break
                            }
                            if (u.orderType == n.ZC && (c.orderType === n.CZC || c.orderType === n.PHLS)) {
                                u.isConflictMark = !0;
                                break
                            }
                            if (u.orderType == n.CZC || c.orderType == n.CZC) break;
                            if (s.indexOf(u.orderType) > s.indexOf(c.orderType)) {
                                u.isConflictMark = !0;
                                break
                            }
                            c.isConflictMark = !0
                        }
                        return t = t.filter(function (e) {
                            return !e.isConflictMark
                        })
                    }
                }
            }, {
                key: "isSceneConflict", value: function (e, t) {
                    var r = e.getStartSec(), i = e.getEndSec(), n = t.getStartSec();
                    return !(t.getEndSec() < r - 10 || n > i + 10)
                }
            }, {
                key: "getOrdersByType", value: function (e) {
                    return this.adtypeMap[e]
                }
            }, {
                key: "isOrderEmpty", value: function (e) {
                    if (!e) return !0;
                    var t = e instanceof Array ? e : this.getOrdersByType(e);
                    return !t || 0 === t.length || t.every(function (e) {
                        return e.isEmpty
                    })
                }
            }, {
                key: "getOrderDuration", value: function (e) {
                    if (!e) return 0;
                    var t = 0, r = e instanceof Array ? e : this.getOrdersByType(e);
                    return r && 0 !== r.length ? (r.forEach(function (e) {
                        t += +e.duration
                    }), t / 1e3) : 0
                }
            }]), e
        }();
    e.exports = d
}, function (e, t, r) {
    "use strict";
    var i = r(27), n = r(28), a = r(3), o = r(2), s = {VIDEO: "mp4", PIC: ["jpg", "png", "jpeg"], PSJ: "mp4"},
        d = {LD: ["richMediaJs"], ZI: ["richMediaJs", "res"], ZT: ["richMediaJs"]};

    function l(e, t, r) {
        return e + "_" + t + "_" + r
    }

    function u(e) {
        for (var t = e ? e.length : 0, r = void 0, i = [], n = 0; n < t; n++) r = e[n], i[n] = {
            index: r.index,
            url: r.url || "",
            width: r.width,
            height: r.height,
            md5: r.md5,
            vid: r.vid,
            cs: r.cs,
            ds: r.ds
        };
        return i
    }

    function c(e) {
        switch (e) {
            case a.LD:
            case a.HT:
            case a.ZC:
                return d.LD;
            case a.ZI:
                return d.ZI;
            case a.ZT:
                return d.ZT
        }
        return null
    }

    function h(e) {
        var t = {};
        if (!e) return t;
        var r = "";
        try {
            r = decodeURIComponent(e)
        } catch (n) {
        }
        var i = void 0;
        return r.split("&").forEach(function (e) {
            if ((i = e.split("="))[0] && (t[i[0]] = i[1], i[1])) switch (i[0]) {
                case"richdata":
                case"watch_buy":
                    var r = i[1];
                    try {
                        r = decodeURIComponent(i[1])
                    } catch (n) {
                        r = i[1]
                    }
                    try {
                        t[i[0]] = JSON.parse(r)
                    } catch (n) {
                        t[i[0]] = {}
                    }
            }
        }), t
    }

    e.exports = {
        parse: function (e) {
            if (!e) return null;
            var t = {}, r = {}, d = [], f = [], p = void 0, v = void 0, y = void 0, g = void 0, m = void 0, E = void 0,
                _ = void 0, T = void 0, A = void 0, b = void 0, w = void 0, S = void 0, R = function (e) {
                    var t = {};
                    if ("undefined" != typeof e.anchor_binding) for (var r = 0, i = e.anchor_binding.length || 0; r < i; r++) {
                        var n = e.anchor_binding[r];
                        n.order_list && n.order_list.length && n.order_list.forEach(function (e) {
                            var r = e.order_id + "_" + e.cre_id;
                            t[r] || (t[r] = []), t[r].push(n.time)
                        })
                    }
                    return t
                }(e);
            for (var D in e.adList && e.adList.item && function () {
                var i = void 0;
                v = e.adList.item.length || 0;
                var d = function () {
                    var d = [];
                    if ((i = e.adList.item[p]).creative) for (g = i.creative.length, y = 0; y < g; y++) {
                        m = i.creative[y], d[y] = {
                            id: m.id || "0",
                            duration: m.duration || 5e3,
                            material: u(m.material)
                        };
                        var f = {};
                        m.reportUrlOther && (f.reportUrlOther = m.reportUrlOther), m.reportUrlSDK && (f.reportUrlSDK = m.reportUrlSDK), m.clickReportUrlOther && (f.clickReportUrlOther = m.clickReportUrlOther), d[y].creport = f
                    } else i.image && (d[0] = {id: "0", duration: i.duration, material: u(i.image)});
                    d.forEach(function (u) {
                        for (var f = R[i.order_id + "_" + u.id], p = 0, v = f ? f.length : 1; p < v; p++) {
                            var y = new n;
                            if (y.order_id = i.order_id, y.adtype = i.type, y.display_code = i.display_code, y.duration = i.duration || 0, y.no_click = i.no_click, y.inner_jump = i.inner_jump, y.privacy_url = i.privacy_url, y.privacy_type = i.privacy_type, y.dsp_name = i.dsp_name || "", y.expired_time = i.expired_time, y.link = i.link || "", y.reportTime = i.ReportTime || 0, y.reportUrl = i.reportUrl || "", y.reportUrlOther = i.reportUrlOther, y.reportUrlSDK = i.reportUrlSDK, y.clickReportUrlOther = i.clickReportUrlOther, y.reportUrlView = i.reportUrlView, y.extParams = h(i.params), y.creative = d, y.setCurCreative(u.id), y.getCurCreative() && y.getCurCreative().duration > 0 && (y.duration = y.getCurCreative().duration), y.setCurMaterial(0), A = y.getCurMaterial() ? y.getCurMaterial().url : "", y.canPlay = o.checkSuffix(A, y.isVideoAd ? s.VIDEO : s.PIC), y.adtype == a.PSJ && (T = y.getCurCreative() ? y.getCurCreative().material : null) instanceof Array) for (_ = T.length || 0, E = 0; E < _; E++) if (o.checkSuffix(T[E].url, s.PSJ)) {
                                y.setCurMaterial(E), y.canPlay = !0;
                                break
                            }
                            if (S = c(y.adtype), y.isRichMedia && S) for (w = S.length || 0, b = 0; b < w; b++) if (y.richData && y.richData.plugins && y.richData.plugins[S[b]]) {
                                y.richType = S[b], y.richRes = y.richData.plugins[S[b]];
                                break
                            }
                            y.adLoc = e.adLoc, y.adGetv = e.adGetv, 0 == p && (r[y.adtype] || (r[y.adtype] = []), r[y.adtype].push(y)), t[l(y.order_id, u.id, f ? f[p] : 0)] = y
                        }
                    })
                };
                for (p = 0; p < v; p++) d()
            }(), "undefined" != typeof e.anchor_binding && function () {
                var r = void 0, n = void 0, o = void 0;
                for (v = e.anchor_binding.length || 0, p = 0; p < v; p++) n = e.anchor_binding[p], (r = new i).scene_id = n.scene_id, r.time = n.time || 0, r.end_time = n.end_time || r.time, r.adunit_id = n.adunit_id || "", n.order_list && n.order_list.length && (r.orderList = [], n.order_list.forEach(function (e) {
                    if (o = t[l(e.order_id, e.cre_id, r.time)]) {
                        o.link = e.link, o.reportTime = e.report_time || 0, o.reportUrl = e.report_url, "1" == e.report_range && (o.reportRange = 1, o.reportBegin = e.report_begin, o.reportEnd = e.report_end), o.is_time_target = +e.is_time_target, o.time_stamp = e.time_stamp, o.time_offset = +(e.time_offset || 0), o.setCurCreative(e.cre_id);
                        var i = o.getCurCreative();
                        if (i && i.duration > 0 && (o.duration = i.duration), i && i.creport) {
                            var n = i.creport;
                            Object.keys(n).length && ["reportUrlOther", "clickReportUrlOther", "reportUrlView"].forEach(function (e) {
                                if (n[e] && n[e].reportitem && n[e].reportitem.length) {
                                    n.dreport = n.dreport || {}, n.dreport.reportitem = n.dreport.reportitem || [];
                                    var t = n[e].reportitem;
                                    t.forEach(function (e, r) {
                                        "1" == e.report_range && (n.dreport.reportitem.push(e), t.splice(r, 1))
                                    })
                                }
                            })
                        }
                        e.anchor ? o.anchor = {
                            pos_x: e.anchor.pos_x,
                            pos_y: e.anchor.pos_y,
                            pos_h: e.anchor.pos_h,
                            pos_w: e.anchor.pos_w,
                            begin: e.anchor.begin,
                            end: e.anchor.end,
                            interval: e.anchor.interval,
                            ratio: e.anchor.ratio
                        } : o.anchor = null, r.orderList.push(o)
                    }
                })), (o = r.orderList ? r.orderList[0] : null) && (o.adtype == a.PSJ && o.anchor && o.anchor.end && o.anchor.interval && 1 !== o.is_time_target ? r.isWholeScene = !0 : r.isWholeScene = !1, o.adtype == a.BS && f.push({
                    order_id: o.order_id,
                    scene_id: r.scene_id,
                    link: o.link,
                    params: {watch_buy: o.watchBuyData},
                    play_mtime: .001 * r.time
                })), d[p] = r
            }(), r) r[D] && (r[D].adcost = e.adcost, r[D].errorcode = e.errorcode);
            return f.length > 0 && f.sort(function (e, t) {
                return e.play_mtime <= t.play_mtime ? -1 : 1
            }), {adtypeMap: r, sceneInfos: d, fields: e.fields, watchbuys: f}
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(3), a = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.scene_id = "", this.time = 15e3, this.orderList = null, this.status = 0, this.isWholeScene = !1
        }

        return i(e, [{
            key: "getStartSec", value: function () {
                var e = this.firstOrder;
                if (e && e.adtype == n.PSJ && e.anchor && e.anchor.begin) return this.getIsAbsoluteTime() ? parseInt(e.anchor.begin, 10) : parseInt(.001 * e.anchor.begin, 10);
                var t = parseInt(.001 * this.time, 10);
                return e && e.adtype == n.PHLS ? t + parseInt(.001 * e.time_offset, 10) : t
            }
        }, {
            key: "getIsAbsoluteTime", value: function () {
                var e = this.firstOrder;
                return !!e && 1 === e.is_time_target
            }
        }, {
            key: "getEndSec", value: function (e) {
                var t = this.firstOrder;
                return t ? t.adtype == n.PSJ && t.anchor && this.getIsAbsoluteTime() ? parseInt(this.getStartSec() + .001 * t.duration, 10) : t.adtype == n.PSJ && this.isWholeScene && t.anchor ? parseInt(parseInt(e) - .001 * parseInt(t.anchor.end), 10) : t.adtype == n.VIN ? .001 * parseInt(this.end_time) : parseInt(this.getStartSec() + .001 * t.duration, 10) : -1
            }
        }, {
            key: "isEmpty", get: function () {
                return !this.orderList || 0 === !this.orderList.length || this.orderList.every(function (e) {
                    return e.isEmpty
                })
            }
        }, {
            key: "orderType", get: function () {
                var e = this.firstOrder;
                return e ? e.adtype : ""
            }
        }, {
            key: "firstOrder", get: function () {
                return this.orderList ? this.orderList[0] : null
            }
        }]), e
    }();
    e.exports = a
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(3), a = r(2), o = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.order_id = "", this.adtype = "", this.display_code = "", this.duration = "", this.no_click = "N", this.inner_jump = "N", this.privacy_url = "", this.privacy_type = "", this.dsp_name = "", this.expired_time = 0, this.creative = null, this.link = "", this.reportTime = 0, this.reportUrl = "", this.reportUrlOther = null, this.reportUrlSDK = null, this.clickReportUrlOther = null, this.reportUrlView = null, this.anchor = null, this.adLoc = null, this.adGetv = null, this.orderIdx = 0, this._cre_id = "", this._curCreative = null, this._materialIdx = 0, this._curMaterial = null, this.extParams = null, this.richType = "", this.richRes = null, this.canPlay = !0, this.isTrueview = !1, this.forbidSkip = !1, this.isVip = !1, this.vid = ""
        }

        return i(e, [{
            key: "getCurCreative", value: function () {
                return this._curCreative ? this._curCreative : this.creative && this.creative.length ? this.creative[0] : null
            }
        }, {
            key: "setCurCreative", value: function (e) {
                if (this.creative) {
                    this._cre_id = e;
                    for (var t = this.creative.length || 0, r = void 0, i = 0; i < t; i++) if ((r = this.creative[i]) && r.id == this._cre_id) {
                        this._curCreative = r;
                        break
                    }
                }
            }
        }, {
            key: "getCurMaterial", value: function () {
                return this._curMaterial
            }
        }, {
            key: "setCurMaterial", value: function (e) {
                if (this._materialIdx = e, this.getCurCreative() && this.getCurCreative().material) {
                    var t = this.getCurCreative().material;
                    t instanceof Array ? this._curMaterial = t[this._materialIdx] || t[0] : this._curMaterial = t
                }
            }
        }, {
            key: "onlyId", get: function () {
                return this.order_id + "_" + this._cre_id
            }
        }, {
            key: "creId", get: function () {
                return this._cre_id
            }
        }, {
            key: "oadId", get: function () {
                return this.adLoc ? this.adLoc.aid : 0
            }
        }, {
            key: "adFlag", get: function () {
                return this.adLoc ? this.adLoc.adFlag : 0
            }
        }, {
            key: "isEmpty", get: function () {
                return parseInt(this.order_id) < 100 || "Empty" == this.display_code
            }
        }, {
            key: "richData", get: function () {
                return this.extParams ? this.extParams.richdata : null
            }
        }, {
            key: "watchBuyData", get: function () {
                return this.extParams ? this.extParams.watch_buy : null
            }
        }, {
            key: "isRichMedia", get: function () {
                return this.display_code && "RichVideoFront" == this.display_code
            }
        }, {
            key: "isVideoAd", get: function () {
                switch (this.adtype) {
                    case n.LD:
                    case n.HT:
                    case n.ZC:
                    case n.KB:
                        return !0
                }
                return !1
            }
        }, {
            key: "isAutoPlay", get: function () {
                switch (this.adtype) {
                    case n.ZC:
                    case n.HT:
                        return !1
                }
                return !0
            }
        }, {
            key: "canSkip", get: function () {
                return !this.adLoc || 0 == this.adLoc.adFlag
            }
        }, {
            key: "userIsVip", get: function () {
                return this.adLoc && 1 == this.adLoc.isvip
            }
        }, {
            key: "rfid", get: function () {
                return this.adLoc ? this.adLoc.rfid : ""
            }
        }, {
            key: "isTrueView", get: function () {
                return this.richData && this.richData.plugins && "N" != this.richData.plugins.trueview
            }
        }, {
            key: "plugType", get: function () {
                return this.richData && this.richData.plugins ? this.richData.plugins.plugType : ""
            }
        }, {
            key: "locId", get: function () {
                return this.reportUrl && a.url2Obj(this.reportUrl).loc || ""
            }
        }]), e
    }();
    e.exports = o
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();

    function n(e, t, r) {
        return t in e ? Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = r, e
    }

    var a = r(30), o = r(31), s = r(1), d = r(0)("controller/adController"), l = r(37), u = r(53), c = r(3),
        h = function () {
            function e(t) {
                !function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.adplayer = t, this.message = new l, this.adService = new a(this.adplayer, this.message), this.adReporter = new o, this.bindPlayerEvent(), this.listenReportEvents()
            }

            return i(e, [{
                key: "init", value: function () {
                    if (!this.adplayer.videoAdUi) {
                        var e = this.adplayer.getConf();
                        this.adplayer.$dom = {}, this.adplayer.videoAdUi = new u({
                            adplayer: this.adplayer,
                            conf: e,
                            message: this.message
                        })
                    }
                }
            }, {
                key: "initOrderReport", value: function (e) {
                    this.adReporter.init({
                        adplayer: this.adplayer,
                        playerData: this.adplayer.getConf().playerData,
                        orderList: e.adList,
                        adcost: e.adcost,
                        message: this.message
                    }), this.reportEvents = {}
                }
            }, {
                key: "bindPlayerEvent", value: function () {
                    for (var e in s.TXPLAYER_EVENT) if (s.TXPLAYER_EVENT.hasOwnProperty(e)) {
                        var t = this;
                        !function (e) {
                            t.message.on(s.TXPLAYER_EVENT[e], function (r) {
                                d.log("emitToPlayer: ", e);
                                try {
                                    t.message.emit[s[e]]
                                } catch (i) {
                                }
                                t.adplayer.emitToPlayer(s.TXPLAYER_EVENT[e], r)
                            })
                        }(e)
                    }
                }
            }, {
                key: "getAd", value: function (e) {
                    return this.adService.getAd(e)
                }
            }, {
                key: "preloadAd", value: function (e) {
                    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                    this.adService.preloadAd(e, t), this.adReporter.reportAd(e)
                }
            }, {
                key: "loadAd", value: function (e) {
                    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                    return this.adService.loadAd(e, t)
                }
            }, {
                key: "playAd", value: function () {
                    this.adService.playAd.apply(this.adService, arguments)
                }
            }, {
                key: "pauseAd", value: function () {
                    this.adService.pauseAd.apply(this.adService, arguments)
                }
            }, {
                key: "stopAd", value: function () {
                    this.adService.stopAd.apply(this.adService, arguments)
                }
            }, {
                key: "stopAllAd", value: function () {
                    this.adService.stopAllAd.apply(this.adService, arguments)
                }
            }, {
                key: "readRfId", value: function () {
                    var e = "";
                    if ("undefined" != typeof window.localStorage) try {
                        e = window.localStorage["TxpCreativePlayer-rfid"]
                    } catch (t) {
                    }
                    return e || ""
                }
            }, {
                key: "muteAd", value: function () {
                    this.adService.muteAd.apply(this.adService, arguments)
                }
            }, {
                key: "unMuteAd", value: function () {
                    this.adService.unMuteAd.apply(this.adService, arguments)
                }
            }, {
                key: "setAdVolume", value: function () {
                    this.adService.setAdVolume.apply(this.adService, arguments)
                }
            }, {
                key: "resizeAd", value: function () {
                    this.adService.resizeAd.apply(this.adService, arguments)
                }
            }, {
                key: "adjustUI", value: function () {
                    this.adService.adjustUI.apply(this.adService, arguments)
                }
            }, {
                key: "hideAdBeforeResize", value: function () {
                    this.adService.hideAdBeforeResize.apply(this.adService, arguments)
                }
            }, {
                key: "setAdFullscreen", value: function () {
                    this.adService.setAdFullscreen.apply(this.adService, arguments)
                }
            }, {
                key: "setAdSmallWindow", value: function (e) {
                    this.adService.setAdSmallWindow.apply(this.adService, arguments)
                }
            }, {
                key: "setAdPosition", value: function (e) {
                    this.adService.setAdPosition.apply(this.adService, arguments)
                }
            }, {
                key: "reportAd", value: function (e) {
                    return this.adService.reportAd.apply(this.adService, arguments)
                }
            }, {
                key: "seekStart", value: function (e) {
                    this.adService.seekStart.apply(this.adService, arguments)
                }
            }, {
                key: "listenReportEvents", value: function () {
                    var e, t = this, r = this;
                    this.reportEvents = (n(e = {}, s.REPORT_EVENT.AD_DP3_CZC, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_DP3_CZC, e);
                        try {
                            r.adReporter.reportCzcDp3(e)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_MIND_CZC, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_MIND_CZC, e);
                        try {
                            r.adReporter.reportAdMind(e)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_DURING, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_DURING, e);
                        try {
                            r.adReporter.reportAdData(e, !e.isOther)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_POINT_VIEW, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_POINT_VIEW, e);
                        try {
                            r.adReporter.reportAdData(e, !0)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_3PARTY_VIEW, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_3PARTY_VIEW, e);
                        try {
                            r.adReporter.reportAdData(e)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_SCREEN_SHOT, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_SCREEN_SHOT, e);
                        try {
                            r.adReporter.reportAdScreenShot(e)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_GET_INFO_ERROR, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_GET_INFO_ERROR, e);
                        try {
                            r.adReporter.reportDp3Error(e)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_VIEW, function (e) {
                        d.log("report: ", s.REPORT_EVENT.AD_VIEW, e.adInfo);
                        try {
                            r.adReporter.reportAd(e)
                        } catch (t) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_GET_INFO, function (e) {
                        var t = {
                            adtype: e.adtype || "",
                            errMsg: e.errMsg || "",
                            adInfo: e.adInfo,
                            adcost: e.adcost || "",
                            errorcode: e.errorCode || ""
                        };
                        d.log("ad_get_info-report: ", s.REPORT_EVENT.AD_GET_INFO, e);
                        try {
                            r.adReporter.reportDp3(1, t), r.adReporter.reportVideoDp3(1, t)
                        } catch (i) {
                        }
                    }), n(e, s.REPORT_EVENT.NEW_DP3, function (e) {
                        r.adReporter.reportNewDp3(e, e.adInfo)
                    }), n(e, s.REPORT_EVENT.AD_END, function (e) {
                        var t = {
                            adclose: e.adclose || "",
                            closetime: e.closetime || "",
                            adfbt: e.adfbt || "",
                            adtt: e.adtt || "",
                            firstview: e.firstview || "",
                            videott: e.videott || "",
                            videopt: e.videopt || "",
                            errorcode: e.errorcode || "",
                            adInfo: e.adInfo
                        };
                        if (d.log("report: ", s.REPORT_EVENT.AD_END, e), e.adInfo.list && e.adInfo.list.length > 0) for (var i = 0, n = e.adInfo.list.length; i < n; i++) if (e.adInfo.list[i] && e.adInfo.list[i].delayReportTimeoutIds) for (var a in e.adInfo.list[i].delayReportTimeoutIds) d.log("\u6e05\u9664\u5ef6\u65f6\u4e0a\u62a5, order_id/timeid: ", e.adInfo.list[i].order_id, a), clearTimeout(a);
                        try {
                            var o = e.adInfo;
                            !o || o.adtype != c.LD && o.adtype != c.KB && o.adtype != c.ZC && o.adtype != c.HT || (r.adReporter.reportDp3(2, t), r.adReporter.reportVideoDp3(2, t))
                        } catch (l) {
                        }
                    }), n(e, s.REPORT_EVENT.AD_LOAD_COMPLETE, function (e) {
                        var t = {
                            errorcode: e.errorcode,
                            adload: e.adload || "",
                            tpindex: e.tpindex || "",
                            oid: e.oid || e.adInfo.order_id || "",
                            adInfo: e.adInfo
                        };
                        try {
                            r.adReporter.reportDp3(3, t), r.adReporter.reportVideoDp3(3, t)
                        } catch (i) {
                        }
                        d.log("report: ", s.REPORT_EVENT.AD_LOAD_COMPLETE, e)
                    }), n(e, s.REPORT_EVENT.AD_CLICK, function (e) {
                        var t = {adclick: e.adclick, clicktime: e.clicktime || "", adInfo: e.adInfo};
                        try {
                            var i = e.adInfo;
                            !i || i.adtype != c.LD && i.adtype != c.KB && i.adtype != c.ZC && i.adtype != c.HT || (r.adReporter.reportDp3(4, t), r.adReporter.reportVideoDp3(4, t)), r.adReporter.reportOtherAdClick(e)
                        } catch (n) {
                        }
                        d.log("report: ", s.REPORT_EVENT.AD_CLICK, e)
                    }), e), Object.keys(this.reportEvents).forEach(function (e) {
                        var r = t.reportEvents[e];
                        t.message.on(e, r)
                    })
                }
            }]), e
        }();
    e.exports = h
}, function (e, t, r) {
    "use strict";
    var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }, n = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var a = r(3), o = r(4), s = r(1), d = r(0)("service/adService"), l = r(7).Promise;
    e.exports = function () {
        function e(t, r) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.adplayer = t, this.message = r, this.adplayer.adMap = this.adMap = {};
            var i = this;
            this.message.on(s.AD_SHOW, function (e) {
                e && i.isNeedCheckType(e.adtype) && (d.log("ad show, adtype=" + e.adtype), i.checkSceneShow())
            }), this.message.on(s.AD_HIDE, function (e) {
                e && !e.isWholeScene && i.isNeedCheckType(e.adtype) && (d.log("ad hide, adtype=" + e.adtype), i.checkSceneShow())
            }), this.message.on(s.AD_STOP, function (e) {
                if (e) {
                    if (e.removeType && e.adtype) return delete i.adMap[e.adtype], void d.log("ad stop and removeTypeFromAdMap, adtype=" + e.adtype + ", isWholeScene=" + e.isWholeScene);
                    var t = void 0, r = void 0, n = void 0;
                    if (e.adinfo) for (var a in n = i.getAd(e.adinfo), i.adMap) if ((t = i.adMap[a]) && (r = t.indexOf(n), !/PPB|PDF/gi.test(a) && r > -1)) {
                        t.splice(r, 1, undefined), d.log("ad stop and removeFromAdMap, adtype=" + e.adinfo.adtype + ", isWholeScene=" + e.isWholeScene);
                        break
                    }
                }
            })
        }

        return n(e, [{
            key: "checkSceneShow", value: function () {
                var e = void 0, t = !1, r = [];
                for (var i in this.adMap) (e = this.adMap[i]) && e.length && e.forEach(function (e) {
                    e && (e.isWholeScene ? r.push(e) : e.isShow && e.info && "PPB" !== e.info.adtype && "PDF" !== e.info.adtype && "CZC" !== e.info.adtype && (t = !0))
                });
                r.forEach(function (e) {
                    t ? e.isShow && (e.hide(!0), d.log("and ad hide, adtype=" + e.adtype + ", isWholeScene=" + e.isWholeScene)) : e.isShow || (e.show(!0), d.log("and ad show, adtype=" + e.adtype + ", isWholeScene=" + e.isWholeScene))
                })
            }
        }, {
            key: "isNeedCheckType", value: function (e) {
                switch (e) {
                    case a.ZT:
                    case a.ZI:
                    case a.TP:
                    case a.PSJ:
                    case a.BS:
                    case a.PHLS:
                        return !0
                }
                return !1
            }
        }, {
            key: "loadAd", value: function (e) {
                var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                if (!e) return l.resolve();
                var r = void 0;
                if (e[0] && e[0].adtype === a.PSJ) {
                    if (r = this.getAd(a.PSJ), 1 === e[0].is_time_target && r && !r.isWholeScene) return l.reject();
                    t && !t.isWholeScene && r && r.scene && r.scene.getIsAbsoluteTime() && r.stop()
                } else (r = this.getAd(e)) && r.stop();
                var i = this._createAd(e, this.adplayer.$dom, t);
                return i ? (i.load(), l.resolve()) : l.reject()
            }
        }, {
            key: "_reportAdGetInfo", value: function (e) {
                e.adtype != a.CZC && e.adtype != a.PHLS && e.adtype != a.VIN && this.message.emit(s.REPORT_EVENT.AD_GET_INFO, {
                    errMsg: e.list.errMsg || "",
                    adInfo: e,
                    adcost: e.list.adcost,
                    errorCode: e.list.errorcode,
                    adtype: e.adtype,
                    duration: this.adplayer.getOrderDuration(e.list),
                    isEmpty: this.adplayer.isOrderEmpty(e.list)
                })
            }
        }, {
            key: "_createAd", value: function (e, t) {
                var r, i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
                if (!(e = this._getParam(e)).adtype || !e.list) return null;
                var n = e.adtype, d = {
                    infos: e.list,
                    dom: t,
                    scene: i,
                    dataset: this.adplayer.dataset,
                    message: this.message,
                    adplayer: this.adplayer
                };
                switch (this._reportAdGetInfo(e), n) {
                    case a.LD:
                        this.message.emit(s.TXPLAYER_EVENT.AD_GET_INFO, {
                            adtype: n,
                            duration: this.adplayer.getOrderDuration(e.list),
                            isEmpty: this.adplayer.isOrderEmpty(e.list)
                        }), r = TxpCreativePlayer.adClass.make("LoadingAd", d);
                        break;
                    case a.HT:
                        r = TxpCreativePlayer.adClass.make("EndingAd", d);
                        break;
                    case a.ZC:
                        r = TxpCreativePlayer.adClass.make("ZcAd", d);
                        break;
                    case a.ZT:
                        r = TxpCreativePlayer.adClass.make("ZtAd", d);
                        break;
                    case a.ZI:
                        r = TxpCreativePlayer.adClass.make("IvbAd", d);
                        break;
                    case a.BS:
                        r = TxpCreativePlayer.adClass.make("BuyAd", d);
                        break;
                    case a.PSJ:
                        r = TxpCreativePlayer.adClass.make("FlowAd", d);
                        break;
                    case a.PDF:
                    case a.PPB:
                    case a.PVL:
                        d.dom = this.adplayer.getConf().playerDom[n.toLowerCase() + "AdLayer"], r = TxpCreativePlayer.adClass.make("EmbedAd", d);
                        break;
                    case a.CZC:
                        r = TxpCreativePlayer.adClass.make("CzcAd", d);
                        break;
                    case a.PHLS:
                        r = TxpCreativePlayer.adClass.make("PHLSAd", d);
                        break;
                    case a.VIN:
                        r = TxpCreativePlayer.adClass.make("VinAd", d);
                        break;
                    default:
                        r = null
                }
                if (r) {
                    if (r.state !== o.END) {
                        this.adMap[n] || (this.adMap[n] = []);
                        var l = this.adMap[n];
                        if (l.length > 0) if (e.adtype == a.LD || e.adtype == a.ZC || e.adtype == a.HT) for (var u = 0; u < l.length; u++) {
                            try {
                                l[u] && l[u].stop()
                            } catch (c) {
                            }
                            l.splice(u, 1), u--
                        }
                        l.push(r)
                    }
                    return r
                }
            }
        }, {
            key: "_getParam", value: function (e) {
                if (!e) return e;
                var t = void 0;
                return "string" == typeof e ? {
                    adtype: t = e,
                    list: this.adplayer.getOrdersByType(t)
                } : e instanceof Array ? {
                    adtype: t = e.adtype || (e[0] ? e[0].adtype : ""),
                    list: e
                } : "object" === (void 0 === e ? "undefined" : i(e)) ? {adtype: t = e.adtype || "", list: [e]} : e
            }
        }, {
            key: "getAd", value: function (e) {
                if (!e) return null;
                var t = void 0, r = void 0, n = void 0, a = void 0;
                for (var o in this.adMap) for (a = (t = this.adMap[o]) ? t.length : 0, n = 0; n < a; n++) if (r = t[n]) if ("string" == typeof e) {
                    if (r.adtype == e) {
                        if (r._isForceHide) continue;
                        return r
                    }
                } else if (e instanceof Array) {
                    if (r.infos && r.infos == e) return r
                } else if ("object" === (void 0 === e ? "undefined" : i(e)) && r.info && (r.info == e || r.info.onlyId == e.onlyId && r.info && r.info.adtype === e.adtype)) return r;
                return null
            }
        }, {
            key: "_broadcastToAllAd", value: function () {
                var e = this;
                if (this.adMap) {
                    var t = Array.prototype.slice.call(arguments), r = t[0];
                    t.shift();
                    var i = function (i) {
                        e.adMap[i] && e.adMap[i].forEach(function (e) {
                            try {
                                e && "function" == typeof e[r] && e[r].apply(e, t)
                            } catch (n) {
                                d.log("\u5e7f\u544a\u7c7b\u578b[" + i + "]\u8c03\u7528[" + r + "]\u62a5\u9519\uff1a", n)
                            }
                        })
                    };
                    for (var n in this.adMap) {
                        i(n)
                    }
                }
            }
        }, {
            key: "playAd", value: function (e) {
                var t = this;
                d.log("playAd", e);
                var r = this.getAd(e);
                if (r && r.canPlay) d.log("play"), r.play(); else if (r && r._state === o.WAIT_FOR_STOP) d.log("stop"), r.stop(); else if (!r) if (e === a.HT) {
                    var i = function () {
                        t.endingAdTimeoutHandler = setTimeout(function () {
                            var r = t.getAd(e);
                            r && r.canPlay && r._state >= o.INIT && r._state <= o.LOAD_READY ? r.play() : r && r.stop && r._state <= o.INIT ? r.stop(!0) : r || t.message.emit(s.TXPLAYER_EVENT.AD_STOP, {adtype: a.HT})
                        }, 1e3)
                    };
                    t.adplayer.hasLoadEndingAd ? (d.log("\u5df2\u7ecf\u8bf7\u6c42\u8fc7\u4e86..."), i()) : setTimeout(function () {
                        t.adplayer.hasLoadEndingAd ? i() : t.adplayer.hasLoadEndingAd = !0
                    }, 500)
                } else this.message.emit(s.TXPLAYER_EVENT.AD_STOP, {adtype: e})
            }
        }, {
            key: "stopAd", value: function (e) {
                var t = this.getAd(e);
                t && t.stop()
            }
        }, {
            key: "pauseAd", value: function (e) {
                var t = this.getAd(e);
                t && t.pause()
            }
        }, {
            key: "reportAd", value: function (e, t) {
                var r, i = this;
                return "string" == typeof e && (r = this.getAd(e)), r ? ("[object Array]" !== Object.prototype.toString.call(r) && (r = [r]), r.forEach(function (e) {
                    e.info && t.view && i.message.emit(s.REPORT_EVENT.AD_VIEW, {adInfo: e.info})
                }), !0) : !!t.info && (this.message.emit(s.REPORT_EVENT.AD_GET_INFO, t.data), !0)
            }
        }, {
            key: "stopAllAd", value: function () {
                clearTimeout(this.endingAdTimeoutHandler), this.adplayer.hasLoadEndingAd = !1, this._broadcastToAllAd("stop", !0);
                var e = this.adplayer.controllers;
                e && e.orderController && e.orderController.reset(), this.adplayer.adMap = this.adMap = {}
            }
        }, {
            key: "muteAd", value: function () {
                this._broadcastToAllAd("mute")
            }
        }, {
            key: "unMuteAd", value: function () {
                this._broadcastToAllAd("unMute")
            }
        }, {
            key: "setAdVolume", value: function (e) {
                this._broadcastToAllAd("setVolume", e)
            }
        }, {
            key: "resizeAd", value: function (e) {
                this._broadcastToAllAd("resize", e)
            }
        }, {
            key: "adjustUI", value: function (e) {
                this._broadcastToAllAd("adjustUI", e)
            }
        }, {
            key: "hideAdBeforeResize", value: function () {
                this._broadcastToAllAd("hideAdBeforeResize")
            }
        }, {
            key: "setAdFullscreen", value: function (e) {
                this._broadcastToAllAd("setFullScreen", e)
            }
        }, {
            key: "setAdSmallWindow", value: function (e) {
                if (e) {
                    var t = this.adplayer.dataset;
                    t.playerWidth = e.width, t.playerHeight = e.height
                }
                this._broadcastToAllAd("setSmallWindow", e)
            }
        }, {
            key: "setAdPosition", value: function (e) {
                this._broadcastToAllAd("setPosition", e)
            }
        }, {
            key: "seekStart", value: function (e) {
                this._broadcastToAllAd("seekStart", e)
            }
        }]), e
    }()
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(9), a = r(32), o = r(33), s = r(35), d = r(36), l = r(13), u = r(0)("modules/adReporter"), c = r(2);
    e.exports = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.adCommonReporter = null, this.adReportDp3 = null, this.screenShotter = null, this.commonCfg = {}, this.screenShotCfg = {}, this.dp3Cfg = {}, this.mindCfg = {}
        }

        return i(e, [{
            key: "init", value: function (e) {
                if (e && e.playerData) {
                    var t = this.playerData = e.playerData;
                    this.adplayer = e.adplayer, this.commonCfg = {
                        from: t.playerFrom,
                        pf: t.playerPf,
                        v: t.playerVersion,
                        dura: t.playerDuration,
                        coverid: t.playerCid,
                        pf_ex: t.playerPfEx,
                        chid: t.playerChid || 0,
                        tpid: t.playerTpid || "",
                        vptag: t.playerVptag,
                        appversion: n
                    }, this.adCommonReporter || (this.adCommonReporter = new a), this.adCommonReporter.init(this.commonCfg, e.message), this.screenShotCfg = {
                        flowid: t.playerFlowid,
                        guid: t.playerGuid,
                        platform: t.playerPlatform,
                        vid: t.playerVid
                    }, this.screenShotter || (this.screenShotter = new o), this.screenShotter.init(this.screenShotCfg), this.dp3Cfg = {
                        appuser: function (e) {
                            if (document.cookie.length > 0) {
                                var t = document.cookie.indexOf(e + "=");
                                if (-1 != t) {
                                    t = t + e.length + 1;
                                    var r = document.cookie.indexOf(";", t);
                                    return -1 == r && (r = document.cookie.length), decodeURIComponent(document.cookie.substring(t, r))
                                }
                            }
                            return ""
                        }("appuser"),
                        flowid: t.playerFlowid,
                        guid: t.playerGuid,
                        pf: t.playerPf,
                        pfEx: t.playerPfEx,
                        chid: t.playerChid || 0,
                        mvid: t.playerVid,
                        videoDuration: t.playerDuration,
                        coverid: t.playerCid,
                        pversion: t.playerVersion,
                        live: 0,
                        version: n,
                        orderList: e.orderList || {},
                        adcost: e.adcost || ""
                    }, this.adReportDp3 || (this.adReportDp3 = new s), this.adReportDp3.init(this.dp3Cfg), this.mindReporter || (this.mindReporter = new d), this.mindReporter.init(this.mindCfg)
                }
            }
        }, {
            key: "reportAd", value: function (e) {
                this.adCommonReporter.reportAd(e)
            }
        }, {
            key: "reportAdData", value: function (e, t) {
                this.adCommonReporter.reportAdData(e, t)
            }
        }, {
            key: "reportOtherAdClick", value: function (e) {
                this.adCommonReporter.reportOtherAdClick(e)
            }
        }, {
            key: "reportDp3", value: function (e, t) {
                this.adReportDp3.reportStep(e, t)
            }
        }, {
            key: "reportNewDp3", value: function (e, t) {
                var r = t && t.extParams && t.extParams.richdata ? t.extParams.richdata.plugins : {},
                    i = this.adplayer.getConf(), n = {
                        bid: "10021013",
                        requestid: "",
                        pf: i.playerData.playerPf,
                        chid: i.playerData.playerChid || "",
                        ts: +new Date,
                        configversion: "",
                        data: "",
                        adtype: e.adtype,
                        flow_id: i.playerData.playerFlowid,
                        live: 0,
                        offline: 0,
                        reportkey: "",
                        preload: 0,
                        page: "",
                        style: "",
                        playmode: "",
                        coverid: i.playerData.coverid || "",
                        vid: i.playerData.playerVid,
                        previd: "",
                        channelid: "",
                        tpid: i.playerData.playerTpid,
                        videoDuration: i.playerData.playerDuration,
                        body: [{
                            errorcode: e.errorcode || "",
                            starttime: e.starttime || 0,
                            fullscreen: 0,
                            muted: 0,
                            userclose: r && "Y" == r.close_ad ? 1 : 0,
                            oid: t ? t.order_id : "",
                            ad_vid: "",
                            cdnUrl: "",
                            dfn: "",
                            lpLoadDuration: "",
                            lpStayDuration: "",
                            playOidDuration: "",
                            errorName: "",
                            errorMsg: "",
                            displayid: "",
                            isEmpty: "",
                            failedUrl: "",
                            clickX: "",
                            clickY: "",
                            soid: "",
                            orderAdType: "",
                            playVidTime: "",
                            anchorid: e.anchorid || "",
                            adtype: e.adtype,
                            allAdDuration: "",
                            adunit_id: e.adunit_id || ""
                        }]
                    };
                u.log("(" + e.adtype + ") reportNewDp3:", n);
                try {
                    var a = new XMLHttpRequest;
                    a.open("POST", "//dp3.qq.com/stdlog", !0), a.responseType = "text", a.timeout = "8000", a.setRequestHeader("Content-type", "text/plain"), a.send(JSON.stringify(n))
                } catch (o) {
                    console.log(o)
                }
            }
        }, {
            key: "reportVideoDp3", value: function (e, t) {
                this.adReportDp3.reportStepForVidoe(e, t)
            }
        }, {
            key: "reportDp3Error", value: function (e) {
                var t = e.playerData, r = e.adcost, i = e.errorCode, a = e.adtype.split("|"), o = {
                    appuser: c.cookie.get("appuser") || "",
                    channel: c.getVideoType(),
                    qq: c.cookie.get("luin") || c.cookie.get("uin") || "",
                    guid: t.playerGuid || "",
                    pf: t.playerPf || "",
                    pfEx: t.playerPfEx || "",
                    chid: t.playerChid || 0,
                    mvid: t.playerVid || "",
                    videoDuration: t.playerDuration || 0,
                    coverid: t.playerCid || "",
                    pversion: t.playerVersion || "",
                    live: 0,
                    version: n,
                    ua: c.getUA(navigator.userAgent),
                    adcost: r || "",
                    errorcode: i
                };
                a.forEach(function (t) {
                    o.adtype = t, function (t) {
                        var r = {bid: "10091006", step: 1};
                        for (var n in 0 != +i && (r.errMsg = e.errMsg || ""), t) r[n] = t[n];
                        try {
                            var a = new XMLHttpRequest;
                            a.open("POST", "//dp3.qq.com/stdlog"), a.responseType = "text", a.timeout = "8000", a.setRequestHeader("Content-type", "text/plain"), a.send(JSON.stringify(r))
                        } catch (o) {
                            u.log("reportErrorByPost:", o)
                        }
                    }(o), function (e, t, r) {
                        var i = c.appendParamsToUrl(e, t);
                        i += "&step=1", r && (i += "&_dc=" + Math.random());
                        var n = new Image;
                        n.onload = n.onerror = function () {
                            n = null
                        }, n.src = i
                    }("//btrace.video.qq.com/kvcollect?BossId=5818&Pwd=1658255276", o, !0)
                })
            }
        }, {
            key: "reportAdScreenShot", value: function (e) {
                this.screenShotter.shot(e)
            }
        }, {
            key: "resetAdScreenShot", value: function () {
                this.screenShotter.reset()
            }
        }, {
            key: "reportAdMind", value: function (e) {
                this.mindReporter.reportMind(e)
            }
        }, {
            key: "reportCzcDp3", value: function (e) {
                var t = this.playerData, r = {
                    appuser: c.cookie.get("appuser") || "",
                    qq: c.cookie.get("luin") || c.cookie.get("uin") || "",
                    flowid: t.playerFlowid,
                    guid: t.playerGuid || "",
                    pf: t.playerPf || "",
                    chid: t.playerChid || 0,
                    vid: t.playerVid || "",
                    coverid: t.playerCid || "",
                    ua: c.getUA(navigator.userAgent)
                };
                !function (e, t) {
                    var r = c.appendParamsToUrl(e, t), i = new Image;
                    i.onload = i.onerror = function () {
                        i = null
                    }, i.src = r
                }("//dp3.qq.com/stdlog?bid=10091007", r = l({}, r, e))
            }
        }]), e
    }()
}, function (e, t, r) {
    "use strict";
    var i = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }, n = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var a = r(13), o = r(0)("modules/adcommonreporter"), s = r(1), d = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.delayReportArr = null, this.list = [], this.timer = null, this.imgObj = null
        }

        return n(e, [{
            key: "init", value: function (e, t) {
                this.config = e, this.message = t
            }
        }, {
            key: "reportAd", value: function (e) {
                var t = this, r = e.adInfo, n = e.scene;
                if (Array.isArray(r) && (r = r[0]), r && "object" == (void 0 === r ? "undefined" : i(r))) {
                    var o = "PSJ" == r.adtype && !n.isWholeScene;
                    if (r.reportUrl && ("CZC" != r.adtype || "CZC" == r.adtype && "1" != r.reportRange)) {
                        var s = {url: document.URL};
                        s = a(s, l(this.config, r)), TxpCreativePlayer.fromPcClient && (s.vptag = this.config.vptag || "");
                        var d = r.reportUrl, h = c(d);
                        s = a(s, h);
                        var f = u(d.split("?")[0], s, !0);
                        this.reportData({
                            adinfo: r,
                            time: o ? 0 : parseInt(r.reportTime) || 0,
                            url: f
                        }, r.adtype + "\u5185\u90e8\u66dd\u5149\u4e0a\u62a5(reportUrl)")
                    }
                    var p = ["reportUrlOther"];
                    if (p.forEach(function (e) {
                        r[e] && Array.isArray(r[e].reportitem) && r[e].reportitem.length && r[e].reportitem.forEach(function (e, i) {
                            e && e.url && t.reportData({
                                adinfo: r,
                                time: o ? 0 : parseInt(e.reporttime) || 0,
                                url: e.url,
                                isOther: !0
                            }, r.adtype + "\u7b2c\u4e09\u65b9\u66dd\u5149\u4e0a\u62a5(reportUrlOther)")
                        })
                    }), "CZC" != r.adtype && p.push("dreport"), r._curCreative && r._curCreative.creport) {
                        var v = r._curCreative.creport;
                        p.forEach(function (e) {
                            v[e] && Array.isArray(v[e].reportitem) && v[e].reportitem.length && v[e].reportitem.forEach(function (e, i) {
                                e && e.url && t.reportData({
                                    adinfo: r,
                                    time: o ? 0 : parseInt(e.reporttime) || 0,
                                    url: e.url,
                                    isOther: !0
                                }, r.adtype + "\u521b\u610f\u7ea7\u522b\u7684\u7b2c\u4e09\u65b9\u4e0a\u62a5(creative.creport)")
                            })
                        })
                    }
                }
            }
        }, {
            key: "reportOtherAdClick", value: function (e) {
                var t = e.adInfo, r = t._curCreative && t._curCreative.creport;
                if (Array.isArray(t) && (t = t[0]), t && "object" == (void 0 === t ? "undefined" : i(t))) {
                    if (t.clickReportUrlOther && t.clickReportUrlOther.reportitem) for (var n = t.clickReportUrlOther.reportitem, a = 0; a < n.length; a++) {
                        "2" != (s = n[a]).reporttype && this.requestReportUrl(s.url)
                    }
                    if (r && r.clickReportUrlOther && r.clickReportUrlOther.reportitem) {
                        var o = r.clickReportUrlOther.reportitem;
                        for (a = 0; a < o.length; a++) {
                            var s;
                            "2" != (s = o[a]).reporttype && this.requestReportUrl(s.url)
                        }
                    }
                }
            }
        }, {
            key: "reportAdData", value: function (e, t) {
                if (t) {
                    var r = {url: document.URL};
                    r = a(r, l(this.config, e.adinfo || {}));
                    var i = u(e.url, r, !0), n = i.split("?")[0], o = c(i);
                    e.adinfo.reportTime && 0 != e.adinfo.reportTime && (o.t = e.adinfo.reportTime), e.url = u(n, o, !1)
                }
                this.reportData(e)
            }
        }, {
            key: "reportData", value: function (e, t) {
                e && (o.log("(" + t + ") report:", "(" + e.time + ")", e.url), e.time > 0 ? this.delayReport(e.url, e.time - 100, e.adinfo, e.isOther) : this.requestReportUrl(e.url))
            }
        }, {
            key: "setReportNull", value: function (e) {
                e.order_id = "1", e.reportUrl = e.reportUrl.replace(/(livemsg\?o\=)(\d+)(\&)/, "$190$3"), e.reportUrlOther = null, e.reportUrlSDK = null
            }
        }, {
            key: "delayReport", value: function (e, t, r, i) {
                var n = this, a = setTimeout(function () {
                    if (clearTimeout(a), r.delayReportTimeoutIds && r.delayReportTimeoutIds[a] && delete r.delayReportTimeoutIds[a], o.log("\u5ef6\u65f6\u4e0a\u62a5\u5b8c\u6210, order_id/time/url: ", r.order_id, t, e), r) {
                        var s = t + 100, d = r.realViewTime;
                        if (i) {
                            if (d && d < s) return;
                            n.requestReportUrl(e)
                        } else {
                            var l = e.split("?")[0], h = c(e);
                            r.reportTime && 0 != r.reportTime && (h.t = r.reportTime), r.isTrueView && d && (h.t = d);
                            var f = u(l, h, !1);
                            n.requestReportUrl(f)
                        }
                    } else n.requestReportUrl(e)
                }, t);
                r.delayReportTimeoutIds || (r.delayReportTimeoutIds = {}), r.delayReportTimeoutIds[a] = 1, o.log("\u5ef6\u65f6\u4e0a\u62a5, order_id/timeid/time/: ", r.order_id, a, t)
            }
        }, {
            key: "requestReportUrl", value: function (e) {
                var t = this;
                -1 == e.indexOf("uniquetimestamp") && (e = u(e, {uniquetimestamp: Date.now()})), this.timer ? this.list.push(e) : (this.timer = setTimeout(function () {
                    t.timeoutHandler()
                }, 1e3), TxpCreativePlayer.fromPcClient ? this.message.emit(s.TXPLAYER_EVENT.AD_REPORT, {data: {reportUrl: e}}) : (this.imgObj = document.createElement("img"), this.imgObj.onerror = t.timeoutHandler.bind(this), this.imgObj.src = e))
            }
        }, {
            key: "timeoutHandler", value: function () {
                if (0 === this.list.length) return this.imgObj = null, void (this.timer = null);
                clearTimeout(this.timer), this.timer = null, this.requestReportUrl(this.list.shift())
            }
        }]), e
    }();

    function l(e, t) {
        var r = {
            oadid: t.oadId || "", vptag: function () {
                for (var e = document.location.toString().toLowerCase(), t = "", r = ["ptag", "adtag", "pgv_ref"], i = 0, n = r.length; i < n && !(t = h(r[i], e)); i++) ;
                if (!t) try {
                    t = sessionStorage.getItem("ptag")
                } catch (o) {
                }
                if (!t) {
                    var a = function (e) {
                        if (void 0 === e || null == e || "" == e) return "";
                        var t = document.createElement("a");
                        return t.href = e, t.hostname
                    }(document.referrer);
                    a && -1 === ["v.qq.com", "film.qq.com", "m.v.qq.com"].indexOf(a) && (t = a.replace(/\./g, "_"))
                }
                t || (t = function (e) {
                    if (document.cookie.length > 0) {
                        var t = document.cookie.indexOf(e + "=");
                        if (-1 != t) {
                            t = t + e.length + 1;
                            var r = document.cookie.indexOf(";", t);
                            return -1 == r && (r = document.cookie.length), decodeURIComponent(document.cookie.substring(t, r))
                        }
                    }
                    return ""
                }("ptag"));
                return t
            }() || "", url: location.href, lcount: t.orderIdx || 1, t: 0
        };
        return "Empty" == t.display_code && (r.chid = e.chid), r = a(r, e)
    }

    function u(e, t, r) {
        return "string" == typeof e && t && (e += (-1 == e.indexOf("?") ? "?" : "&") + function (e, t) {
            var r = [];
            for (var i in e) if (e.hasOwnProperty(i)) {
                var n = e[i];
                r.push(i + "=" + (t ? encodeURIComponent(n) : n))
            }
            return r.join("&")
        }(t, r)), e
    }

    function c(e) {
        var t = e.indexOf("?"), r = {};
        return e.substring(t + 1).split("&").forEach(function (e) {
            var t = e.split("=");
            t.length >= 2 && (r[t.shift()] = t.join("="))
        }), r
    }

    function h(e, t) {
        t = t || document.location.toString();
        var r, i = new RegExp("(^|&|\\\\?)" + e + "=([^&]*)(&|$|#)");
        return (r = t.match(i)) ? r[2] : ""
    }

    e.exports = d
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = {EMPTY: "", AD_ERROR: "1", CORS_ERROR: "2", NOT_SUPPORT: "3", SCRIPT_ERROR: "4"}, a = r(34),
        o = r(2).getUA(window.navigator.userAgent), s = function () {
            function e() {
                !function (e, t) {
                    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                }(this, e), this.hasReport = !1, this.imageExt = "png", this.imageQuality = 1, this.width = 160, this.height = 90, this.reportUrl = location.protocol + "//adss.video.qq.com/report", this.worker = null, this.canvas = null, this.ctx = null, this.errcode = n.EMPTY, this.initWorker(), this.initCanvas(), this.addEventListener()
            }

            return i(e, [{
                key: "init", value: function (e) {
                    this.cfg = e
                }
            }, {
                key: "initWorker", value: function (e) {
                    try {
                        var t = window.URL || window.webkitURL || window.mozURL || window.msURL,
                            r = new Blob(["self.onmessage = function(res) {var data = res.data;var imageData = data.imageData;var width = data.width;var height = data.height;var chunkLength = width * height;for (var i = 0; i < chunkLength * 4; i = i + 4) {var gray = parseInt((imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3);imageData.data[i] = imageData.data[i + 1] = imageData.data[i + 2] = gray;}try { postMessage(imageData); } catch(e) {console.log(e)}}"], {type: "application/javascript"}),
                            i = t.createObjectURL(r);
                        this.worker = new Worker(i)
                    } catch (a) {
                        this.worker = null, this.errcode = n.NOT_SUPPORT
                    }
                }
            }, {
                key: "initCanvas", value: function () {
                    this.canvas = document.createElement("canvas"), this.canvas.setAttribute("width", this.width), this.canvas.setAttribute("height", this.height), this.canvas.style.cssText = "width:" + this.width + "px;height:" + this.height + "px;", this.ctx = this.canvas.getContext("2d")
                }
            }, {
                key: "addEventListener", value: function () {
                    var e = this;
                    this.worker && this.canvas && this.ctx && (this.worker.onmessage = function (t) {
                        e.ctx.putImageData(t.data, 0, 0), e.imageUrl = e.canvas.toDataURL("image/" + e.imageExt, e.imageQuality), e.reportData()
                    }, this.worker.onerror = function (t) {
                        e.errcode = n.SCRIPT_ERROR, e.reportData()
                    })
                }
            }, {
                key: "shot", value: function (e) {
                    if ("safari" !== o && !this.hasReport) {
                        var t = !1;
                        if (e = e || {}, this.ptime = e.time || "", this.orderid = e.oid || "", this.aid = e.vid || "", this.idx = e.index, this.errcode = n.EMPTY, (!e.video && !e.empty || e.video && 0 === e.time && e.video.error && e.video.error.code) && (this.errcode = n.AD_ERROR), e.video && this.worker && this.ctx) try {
                            this.video = e.video, this.ctx.drawImage(this.video, 0, 0, this.width, this.height);
                            var r = this.ctx.getImageData(0, 0, this.width, this.height);
                            t = !0, this.worker.postMessage({imageData: r, width: this.width, height: this.height})
                        } catch (i) {
                            this.errcode = n.CORS_ERROR, t = !1
                        }
                        t || this.reportData()
                    }
                }
            }, {
                key: "reportData", value: function () {
                    if (!this.hasReport) {
                        this.hasReport = !0;
                        var e = this, t = +new Date,
                            r = a("adsafe" + t + this.cfg.flowid + this.cfg.guid + this.cfg.platform + this.cfg.vid), i = {
                                ftime: parseInt(t / 1e3),
                                flow_id: this.cfg.flowid,
                                guid: this.cfg.guid,
                                platform: this.cfg.platform,
                                vid: this.cfg.vid,
                                aidtype: 1,
                                aid: this.aid,
                                idx: this.idx,
                                ptime: this.ptime,
                                orderid: this.orderid,
                                admedia: "",
                                pdata: "",
                                crc: r,
                                errcode: this.errcode
                            };
                        this.imageUrl && (i.pdata = this.imageUrl.replace(/^data\:image\/png\;base64\,/, ""));
                        try {
                            var n = new XMLHttpRequest;
                            n.open("POST", this.reportUrl), n.addEventListener("error", function () {
                                e.reportCgiError(n.status)
                            }), n.send(JSON.stringify(i))
                        } catch (o) {
                        }
                        this.reset()
                    }
                }
            }, {
                key: "reset", value: function () {
                    this.hasReport = !1, this.imageUrl = "", this.aid = "", this.idx = "", this.ptime = "", this.orderid = "", this.errcode = n.EMPTY, this.ctx.clearRect(0, 0, this.width, this.height)
                }
            }, {
                key: "reportCgiError", value: function () {
                }
            }]), e
        }();
    e.exports = s
}, function (e, t, r) {
    "use strict";
    var i;
    "function" == typeof Symbol && Symbol.iterator;
    !function (n) {
        function a(e, t) {
            var r = (65535 & e) + (65535 & t);
            return (e >> 16) + (t >> 16) + (r >> 16) << 16 | 65535 & r
        }

        function o(e, t, r, i, n, o) {
            return a(function (e, t) {
                return e << t | e >>> 32 - t
            }(a(a(t, e), a(i, o)), n), r)
        }

        function s(e, t, r, i, n, a, s) {
            return o(t & r | ~t & i, e, t, n, a, s)
        }

        function d(e, t, r, i, n, a, s) {
            return o(t & i | r & ~i, e, t, n, a, s)
        }

        function l(e, t, r, i, n, a, s) {
            return o(t ^ r ^ i, e, t, n, a, s)
        }

        function u(e, t, r, i, n, a, s) {
            return o(r ^ (t | ~i), e, t, n, a, s)
        }

        function c(e, t) {
            e[t >> 5] |= 128 << t % 32, e[14 + (t + 64 >>> 9 << 4)] = t;
            var r, i, n, o, c, h = 1732584193, f = -271733879, p = -1732584194, v = 271733878;
            for (r = 0; r < e.length; r += 16) i = h, n = f, o = p, c = v, f = u(f = u(f = u(f = u(f = l(f = l(f = l(f = l(f = d(f = d(f = d(f = d(f = s(f = s(f = s(f = s(f, p = s(p, v = s(v, h = s(h, f, p, v, e[r], 7, -680876936), f, p, e[r + 1], 12, -389564586), h, f, e[r + 2], 17, 606105819), v, h, e[r + 3], 22, -1044525330), p = s(p, v = s(v, h = s(h, f, p, v, e[r + 4], 7, -176418897), f, p, e[r + 5], 12, 1200080426), h, f, e[r + 6], 17, -1473231341), v, h, e[r + 7], 22, -45705983), p = s(p, v = s(v, h = s(h, f, p, v, e[r + 8], 7, 1770035416), f, p, e[r + 9], 12, -1958414417), h, f, e[r + 10], 17, -42063), v, h, e[r + 11], 22, -1990404162), p = s(p, v = s(v, h = s(h, f, p, v, e[r + 12], 7, 1804603682), f, p, e[r + 13], 12, -40341101), h, f, e[r + 14], 17, -1502002290), v, h, e[r + 15], 22, 1236535329), p = d(p, v = d(v, h = d(h, f, p, v, e[r + 1], 5, -165796510), f, p, e[r + 6], 9, -1069501632), h, f, e[r + 11], 14, 643717713), v, h, e[r], 20, -373897302), p = d(p, v = d(v, h = d(h, f, p, v, e[r + 5], 5, -701558691), f, p, e[r + 10], 9, 38016083), h, f, e[r + 15], 14, -660478335), v, h, e[r + 4], 20, -405537848), p = d(p, v = d(v, h = d(h, f, p, v, e[r + 9], 5, 568446438), f, p, e[r + 14], 9, -1019803690), h, f, e[r + 3], 14, -187363961), v, h, e[r + 8], 20, 1163531501), p = d(p, v = d(v, h = d(h, f, p, v, e[r + 13], 5, -1444681467), f, p, e[r + 2], 9, -51403784), h, f, e[r + 7], 14, 1735328473), v, h, e[r + 12], 20, -1926607734), p = l(p, v = l(v, h = l(h, f, p, v, e[r + 5], 4, -378558), f, p, e[r + 8], 11, -2022574463), h, f, e[r + 11], 16, 1839030562), v, h, e[r + 14], 23, -35309556), p = l(p, v = l(v, h = l(h, f, p, v, e[r + 1], 4, -1530992060), f, p, e[r + 4], 11, 1272893353), h, f, e[r + 7], 16, -155497632), v, h, e[r + 10], 23, -1094730640), p = l(p, v = l(v, h = l(h, f, p, v, e[r + 13], 4, 681279174), f, p, e[r], 11, -358537222), h, f, e[r + 3], 16, -722521979), v, h, e[r + 6], 23, 76029189), p = l(p, v = l(v, h = l(h, f, p, v, e[r + 9], 4, -640364487), f, p, e[r + 12], 11, -421815835), h, f, e[r + 15], 16, 530742520), v, h, e[r + 2], 23, -995338651), p = u(p, v = u(v, h = u(h, f, p, v, e[r], 6, -198630844), f, p, e[r + 7], 10, 1126891415), h, f, e[r + 14], 15, -1416354905), v, h, e[r + 5], 21, -57434055), p = u(p, v = u(v, h = u(h, f, p, v, e[r + 12], 6, 1700485571), f, p, e[r + 3], 10, -1894986606), h, f, e[r + 10], 15, -1051523), v, h, e[r + 1], 21, -2054922799), p = u(p, v = u(v, h = u(h, f, p, v, e[r + 8], 6, 1873313359), f, p, e[r + 15], 10, -30611744), h, f, e[r + 6], 15, -1560198380), v, h, e[r + 13], 21, 1309151649), p = u(p, v = u(v, h = u(h, f, p, v, e[r + 4], 6, -145523070), f, p, e[r + 11], 10, -1120210379), h, f, e[r + 2], 15, 718787259), v, h, e[r + 9], 21, -343485551), h = a(h, i), f = a(f, n), p = a(p, o), v = a(v, c);
            return [h, f, p, v]
        }

        function h(e) {
            var t, r = "", i = 32 * e.length;
            for (t = 0; t < i; t += 8) r += String.fromCharCode(e[t >> 5] >>> t % 32 & 255);
            return r
        }

        function f(e) {
            var t, r = [];
            for (r[(e.length >> 2) - 1] = void 0, t = 0; t < r.length; t += 1) r[t] = 0;
            var i = 8 * e.length;
            for (t = 0; t < i; t += 8) r[t >> 5] |= (255 & e.charCodeAt(t / 8)) << t % 32;
            return r
        }

        function p(e) {
            var t, r, i = "0123456789abcdef", n = "";
            for (r = 0; r < e.length; r += 1) t = e.charCodeAt(r), n += i.charAt(t >>> 4 & 15) + i.charAt(15 & t);
            return n
        }

        function v(e) {
            return unescape(encodeURIComponent(e))
        }

        function y(e) {
            return function (e) {
                return h(c(f(e), 8 * e.length))
            }(v(e))
        }

        function g(e, t) {
            return function (e, t) {
                var r, i, n = f(e), a = [], o = [];
                for (a[15] = o[15] = void 0, n.length > 16 && (n = c(n, 8 * e.length)), r = 0; r < 16; r += 1) a[r] = 909522486 ^ n[r], o[r] = 1549556828 ^ n[r];
                return i = c(a.concat(f(t)), 512 + 8 * t.length), h(c(o.concat(i), 640))
            }(v(e), v(t))
        }

        function m(e, t, r) {
            return t ? r ? g(t, e) : function (e, t) {
                return p(g(e, t))
            }(t, e) : r ? y(e) : function (e) {
                return p(y(e))
            }(e)
        }

        (i = function () {
            return m
        }.call(t, r, t, e)) === undefined || (e.exports = i)
    }(undefined)
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(0)("modules/adReportDp3"), a = r(2), o = r(3);
    e.exports = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.qq = a.cookie.get("luin") || a.cookie.get("uin") || "", this.adListMap = {}
        }

        return i(e, [{
            key: "init", value: function (e) {
                this.config = e;
                var t = e.orderList || {}, r = function (e) {
                    var t = [], r = e.item;
                    if (r) {
                        var i = "[object Array]" === Object.prototype.toString.call(r) ? r : [r];
                        i.forEach(function (e, r) {
                            e.type && t.indexOf(e.type) < 0 && t.push(e.type)
                        })
                    }
                    return n.log("getTypesFromAdList:", e, t), t.join("_")
                }(t);
                r && (this.adListMap[r] = {list: t, adcost: e.adcost})
            }
        }, {
            key: "getBaseParam", value: function () {
                return n.log("getBaseParam:", this.config), {
                    appuser: a.cookie.get("appuser") || "",
                    guid: this.config.guid || "",
                    pf: this.config.pf,
                    pfEx: this.config.pfEx,
                    chid: this.config.chid,
                    channel: a.getVideoType(),
                    requestid: this.config.flowid || "",
                    mvid: this.config.mvid || "",
                    videoDuration: this.config.videoDuration || 0,
                    coverid: this.config.coverid || "",
                    qq: this.qq,
                    pversion: this.config.pversion,
                    live: 0,
                    version: this.config.version,
                    ua: a.getUA(navigator.userAgent)
                }
            }
        }, {
            key: "parseOrderList", value: function (e) {
                n.log("parseOrderList:", e);
                var t = [], r = [], i = [], a = e.item;
                a && ("[object Array]" === Object.prototype.toString.call(a) ? a : [a]).forEach(function (e, n) {
                    (e = function (e) {
                        var t = JSON.parse(JSON.stringify(e));
                        t.creative ? t.duration = t.creative[0].duration : t.creative = [];
                        t.image && (t.image.length ? t.creative = t.creative.concat(t.image) : t.creative.push(t.image));
                        return t
                    }(e)).order_id && e.duration && (e.duration && i.push(e.duration), "[object Array]" === Object.prototype.toString.call(e.creative) && e.creative.length && (e.creative[0].vid ? r.push(e.creative[0].vid) : e.creative[0].material && e.creative[0].material.length && e.creative[0].material[0].vid && r.push(e.creative[0].material[0].vid)), t.push(e.order_id))
                });
                return {oids: t, vids: r, videopt: i}
            }
        }, {
            key: "handleParams", value: function (e, t, r) {
                if (e) {
                    var i = t.adInfo;
                    i && i.list && i.list.length > 0 && (i = i.list[0]);
                    var a, s, d = {};
                    if (n.log("reportStep", this.config, t), d.adtype = i && i.adtype ? i.adtype : t.adtype, d.adtype) {
                        var l = function (e, t) {
                            var r = {};
                            Object.keys(e).forEach(function (i) {
                                i.indexOf(t) >= 0 && (r = e[i])
                            });
                            var i = JSON.parse(JSON.stringify(r));
                            o.ZC !== t && o.ZI !== t && o.PSJ !== t && o.BS !== t || i.list && i.list.item && i.list.item.length && (i.list.item = i.list.item.filter(function (e) {
                                return e.type === t
                            }));
                            return n.log("getOrderListOfType:", t, i), i
                        }(this.adListMap, d.adtype);
                        if (1 === e || 2 === e) {
                            d.flowid = this.config.flowid, i && (d.soid = function (e, t) {
                                if (!e) return "";
                                var r = {};
                                return (e.indexOf("?") > -1 ? e.split("?")[1] : e).split("&").forEach(function (e) {
                                    var t = e.split("=");
                                    r[t[0]] = t[1]
                                }), r[t] || ""
                            }(i.reportUrl, "soid"), d.isTrueView = i.isTrueView ? 1 : 0, d.adid = i.oadId || "");
                            var u = l && l.list ? this.parseOrderList(l.list) : null;
                            d.oids = u ? u.oids.join(",") : "", d.adtype == o.LD || d.adtype == o.KB || d.adtype == o.ZC || d.adtype == o.HT ? d.vids = u ? u.vids.join(",") : "" : d.vids = ""
                        }
                        return t.errorcode !== undefined && (d.errorcode = t.errorcode), "undefined" != typeof d.errorcode && 0 != d.errorcode && (d.errMsg = t.errMsg || ""), 1 === e ? d.adcost = t.adcost || l.adcost : 2 === e ? (d.adfbt = t.adfbt || "", d.adtt = t.adtt || "", a = t.videopt || [], s = t.videott || [], d.videopt = a.join(",") || "", d.videott = s.join(",") || "", d.errorcode = t.errorcode ? t.errorcode : i && i.errorcode ? 2201 : "", d.adclose = t.adclose || "", d.closetime = t.closetime || "", d.firstview = t.errorcode ? -1 : t.firstview || "") : 3 === e ? (d.adload = t.adload, d.tpindex = t.tpindex, d.oid = t.oid, d.errorcode = t.errorcode || "") : 4 === e && (d.adclick = t.adclick, d.clicktime = t.clicktime), d.timestamp = +new Date, "video" == r && d.timestamp && (d.ctimestamp = d.timestamp, delete d.timestamp), 3 !== e && 4 !== e || (d.timestamp && delete d.timestamp, d.ctimestamp && delete d.ctimestamp, d.flowid && delete d.flowid), d
                    }
                }
            }
        }, {
            key: "reportStep", value: function (e, t) {
                if (e) {
                    var r = this.handleParams(e, t);
                    if (r) {
                        var i = this.getBaseParam();
                        for (var a in i.bid = "10091006", i.step = e, r) i[a] = r[a];
                        try {
                            var o = new XMLHttpRequest;
                            o.open("POST", "//dp3.qq.com/stdlog"), o.responseType = "text", o.timeout = "8000", o.setRequestHeader("Content-type", "text/plain"), o.send(JSON.stringify(i))
                        } catch (s) {
                            n.log("dp3 reportStep:", s)
                        }
                    }
                }
            }
        }, {
            key: "reportStepForVidoe", value: function (e, t) {
                if (e) {
                    var r = "//btrace.video.qq.com/kvcollect?BossId=5818&Pwd=1658255276&" + function (e) {
                        var t = [];
                        for (var r in e) if (e.hasOwnProperty(r)) {
                            var i = e[r];
                            t.push(r + "=" + encodeURIComponent(i))
                        }
                        return t.join("&")
                    }(this.getBaseParam()), i = this.handleParams(e, t, "video");
                    if (i) {
                        var n = a.appendParamsToUrl(r, i);
                        n += "&step=" + e + "&_dc=" + Math.random(), this.report(n)
                    }
                }
            }
        }, {
            key: "report", value: function (e) {
                e && (this.sendReport(e.url || e), n.log("report:", e.url || e))
            }
        }, {
            key: "sendReport", value: function (e, t) {
                var r = "GP_REPORT" + +new Date + ".r" + Math.floor(1e3 * Math.random()), i = this[r] = new Image;
                i.onload = i.onerror = function () {
                    t && t(), delete this[r]
                }, i.src = e
            }
        }]), e
    }()
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(0)("modules/adReportDp3"), a = r(2);
    e.exports = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e)
        }

        return i(e, [{
            key: "init", value: function (e) {
                this.config = e, this.setBaseStepUrl()
            }
        }, {
            key: "setBaseStepUrl", value: function () {
                var e = this.getBaseParam();
                this.baseStepUrl = "http://p.l.qq.com/?t=s" + function (e) {
                    var t = [];
                    for (var r in e) if (e.hasOwnProperty(r)) {
                        var i = e[r];
                        t.push(r + "=" + encodeURIComponent(i))
                    }
                    return t.join("&")
                }(e)
            }
        }, {
            key: "getBaseParam", value: function () {
                return n.log("getBaseParam:", this.config), {}
            }
        }, {
            key: "reportMind", value: function (e) {
                var t = {
                    actid: e.actid,
                    mid: e.orderId,
                    oid: e.orderId,
                    creative_id: e.creative_id,
                    pf: e.pf,
                    locid: e.locId
                }, r = this.handleVers(e.extra);
                r && (t.aver = r);
                var i = a.appendParamsToUrl(this.baseStepUrl, t);
                this.report(i)
            }
        }, {
            key: "report", value: function (e) {
                e && (this.sendReport(e.url || e), n.log("report:", e.url || e))
            }
        }, {
            key: "sendReport", value: function (e, t) {
                var r = "GP_REPORT" + +new Date + ".r" + Math.floor(1e3 * Math.random()), i = this[r] = new Image;
                i.onload = i.onerror = function () {
                    t && t(), delete this[r]
                }, i.src = e
            }
        }, {
            key: "handleVers", value: function (e) {
                e = e || {};
                var t = "";
                for (var r in e) {
                    if (e.hasOwnProperty(r)) t += r + "{" + e[r] + "}"
                }
                return t
            }
        }]), e
    }()
}, function (e, t, r) {
    "use strict";
    var i, n, a, o, s, d, l, u = r(38), c = r(52), h = Function.prototype.apply, f = Function.prototype.call,
        p = Object.create, v = Object.defineProperty, y = Object.defineProperties, g = Object.prototype.hasOwnProperty,
        m = {configurable: !0, enumerable: !1, writable: !0};
    s = {
        on: i = function (e, t) {
            var r;
            return c(t), g.call(this, "__ee__") ? r = this.__ee__ : (r = m.value = p(null), v(this, "__ee__", m), m.value = null), r[e] ? "object" == typeof r[e] ? r[e].push(t) : r[e] = [r[e], t] : r[e] = t, this
        }, once: n = function (e, t) {
            var r, n;
            return c(t), n = this, i.call(this, e, r = function () {
                a.call(n, e, r), h.call(t, this, arguments)
            }), r.__eeOnceListener__ = t, this
        }, off: a = function (e, t) {
            var r, i, n, a;
            if (c(t), !g.call(this, "__ee__")) return this;
            if (!(r = this.__ee__)[e]) return this;
            if ("object" == typeof (i = r[e])) for (a = 0; n = i[a]; ++a) n !== t && n.__eeOnceListener__ !== t || (2 === i.length ? r[e] = i[a ? 0 : 1] : i.splice(a, 1)); else i !== t && i.__eeOnceListener__ !== t || delete r[e];
            return this
        }, emit: o = function (e) {
            var t, r, i, n, a;
            if (g.call(this, "__ee__") && (n = this.__ee__[e])) if ("object" == typeof n) {
                for (r = arguments.length, a = new Array(r - 1), t = 1; t < r; ++t) a[t - 1] = arguments[t];
                for (n = n.slice(), t = 0; i = n[t]; ++t) h.call(i, this, a)
            } else switch (arguments.length) {
                case 1:
                    f.call(n, this);
                    break;
                case 2:
                    f.call(n, this, arguments[1]);
                    break;
                case 3:
                    f.call(n, this, arguments[1], arguments[2]);
                    break;
                default:
                    for (r = arguments.length, a = new Array(r - 1), t = 1; t < r; ++t) a[t - 1] = arguments[t];
                    h.call(n, this, a)
            }
        }
    }, d = {on: u(i), once: u(n), off: u(a), emit: u(o)}, l = y({}, d), e.exports = t = function (e) {
        return null == e ? p(l) : y(Object(e), d)
    }, t.methods = s
}, function (e, t, r) {
    "use strict";
    var i = r(39), n = r(47), a = r(48), o = r(49);
    (e.exports = function (e, t) {
        var r, a, s, d, l;
        return arguments.length < 2 || "string" != typeof e ? (d = t, t = e, e = null) : d = arguments[2], null == e ? (r = s = !0, a = !1) : (r = o.call(e, "c"), a = o.call(e, "e"), s = o.call(e, "w")), l = {
            value: t,
            configurable: r,
            enumerable: a,
            writable: s
        }, d ? i(n(d), l) : l
    }).gs = function (e, t, r) {
        var s, d, l, u;
        return "string" != typeof e ? (l = r, r = t, t = e, e = null) : l = arguments[3], null == t ? t = undefined : a(t) ? null == r ? r = undefined : a(r) || (l = r, r = undefined) : (l = t, t = r = undefined), null == e ? (s = !0, d = !1) : (s = o.call(e, "c"), d = o.call(e, "e")), u = {
            get: t,
            set: r,
            configurable: s,
            enumerable: d
        }, l ? i(n(l), u) : u
    }
}, function (e, t, r) {
    "use strict";
    e.exports = r(40)() ? Object.assign : r(41)
}, function (e, t, r) {
    "use strict";
    e.exports = function () {
        var e, t = Object.assign;
        return "function" == typeof t && (t(e = {foo: "raz"}, {bar: "dwa"}, {trzy: "trzy"}), e.foo + e.bar + e.trzy === "razdwatrzy")
    }
}, function (e, t, r) {
    "use strict";
    var i = r(42), n = r(46), a = Math.max;
    e.exports = function (e, t) {
        var r, o, s, d = a(arguments.length, 2);
        for (e = Object(n(e)), s = function (i) {
            try {
                e[i] = t[i]
            } catch (n) {
                r || (r = n)
            }
        }, o = 1; o < d; ++o) t = arguments[o], i(t).forEach(s);
        if (r !== undefined) throw r;
        return e
    }
}, function (e, t, r) {
    "use strict";
    e.exports = r(43)() ? Object.keys : r(44)
}, function (e, t, r) {
    "use strict";
    e.exports = function () {
        try {
            return Object.keys("primitive"), !0
        } catch (e) {
            return !1
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = r(10), n = Object.keys;
    e.exports = function (e) {
        return n(i(e) ? Object(e) : e)
    }
}, function (e, t, r) {
    "use strict";
    e.exports = function () {
    }
}, function (e, t, r) {
    "use strict";
    var i = r(10);
    e.exports = function (e) {
        if (!i(e)) throw new TypeError("Cannot use null or undefined");
        return e
    }
}, function (e, t, r) {
    "use strict";
    var i = r(10), n = Array.prototype.forEach, a = Object.create;
    e.exports = function (e) {
        var t = a(null);
        return n.call(arguments, function (e) {
            i(e) && function (e, t) {
                var r;
                for (r in e) t[r] = e[r]
            }(Object(e), t)
        }), t
    }
}, function (e, t, r) {
    "use strict";
    e.exports = function (e) {
        return "function" == typeof e
    }
}, function (e, t, r) {
    "use strict";
    e.exports = r(50)() ? String.prototype.contains : r(51)
}, function (e, t, r) {
    "use strict";
    var i = "razdwatrzy";
    e.exports = function () {
        return "function" == typeof i.contains && (!0 === i.contains("dwa") && !1 === i.contains("foo"))
    }
}, function (e, t, r) {
    "use strict";
    var i = String.prototype.indexOf;
    e.exports = function (e) {
        return i.call(this, e, arguments[1]) > -1
    }
}, function (e, t, r) {
    "use strict";
    e.exports = function (e) {
        if ("function" != typeof e) throw new TypeError(e + " is not a function");
        return e
    }
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(54), a = r(56), o = r(0)("base/videoAdUi"), s = r(5), d = r(1);
    e.exports = function () {
        function e(t) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.adplayer = t.adplayer, this.message = t.message, this.renderVideoAdCountdownLayer(t.conf), this.renderVideoAdLayer(t.conf), this.bindVideoAdLayerUiEvent(), this.renderInteractiveAdLayer(t.conf)
        }

        return i(e, [{
            key: "renderVideoAdCountdownLayer", value: function (e) {
                if (e.playerDom.videoAdCountdownLayer) {
                    var t = {countdown: "adplayer-enter-countdown", countdownNum: "adplayer-enter-countdown-num"};
                    for (var r in e.playerDom.videoAdCountdownLayer.innerHTML = n(t), this.adplayer.$dom.$enterCountdown = {}, this.adplayer.$dom.$enterCountdown.layer = e.playerDom.videoAdCountdownLayer, t) t.hasOwnProperty(r) && (this.adplayer.$dom.$enterCountdown["$" + r] = e.playerDom.videoAdCountdownLayer.querySelector('[data-role="' + t[r] + '"]'))
                } else o.log("\u6ca1\u6709\u627e\u5230\u8fdb\u5165\u5e7f\u544a\u5012\u8ba1\u65f6\u5bb9\u5668")
            }
        }, {
            key: "renderVideoAdLayer", value: function (e) {
                if (e.playerDom.videoAdLayer) {
                    var t = {
                        videoContainer: "adplayer-video-container",
                        videoAdInner: "adplayer-video-inner",
                        videoAdContainer: "adplayer-video-ad-container",
                        videoRichMediaAdContainer: "adplayer-video-rich-media-ad-container",
                        videoAdControl: "adplayer-video-ad-control",
                        videoCountDown: "adplayer-video-countdown",
                        videoCloseBtn: "adplayer-video-close-btn",
                        videoSkipText: "adplayer-video-skip-text",
                        videoNoSkipBtn: "adplayer-video-no-skip-btn",
                        videoDetailBtn: "adplayer-video-detail-btn",
                        videoDetailBtnText: "adplayer-video-detail-btn-text",
                        videoLinkArea: "adplayer-video-link-area",
                        videoVolumeBtn: "adplayer-video-volume-btn",
                        videoNoSkipDialog: "adplayer-video-no-skip-dialog",
                        videoNoSkipAuthor: "adplayer-video-no-skip-author",
                        videoNoSkipKnowBtn: "adplayer-video-no-skip-know-btn",
                        videoNoSkipCloseBtn: "adplayer-video-no-skip-close-btn",
                        videoDspNameText: "adplayer-video-dsp-name-text",
                        videoBlackScreen: "aplayer-video-black-screen"
                    };
                    for (var r in e.playerDom.videoAdLayer.innerHTML = a(t), this.adplayer.$dom.$videoAd = {}, this.adplayer.$dom.$videoAd.layer = e.playerDom.videoAdLayer, t) t.hasOwnProperty(r) && (this.adplayer.$dom.$videoAd["$" + r] = e.playerDom.videoAdLayer.querySelector('[data-role="' + t[r] + '"]'));
                    var i = this.adplayer.$dom, n = i.$videoAd;
                    for (var s in this.$videoAd = i.$videoAd, n) n.hasOwnProperty(s) && (this[s] = n[s])
                } else o.log("\u6ca1\u6709\u627e\u5230\u89c6\u9891\u7c7b\u5e7f\u544a\u5bb9\u5668")
            }
        }, {
            key: "renderInteractiveAdLayer", value: function (e) {
                e.playerDom.interactiveAdLayer ? (this.adplayer.$dom.$interactiveAd = {}, this.adplayer.$dom.$interactiveAd.layer = e.playerDom.interactiveAdLayer, this.$interactiveAd = this.adplayer.$dom.$interactiveAd, this.$interactiveAd.layer && s.show(this.$interactiveAd.layer)) : o.log("\u6ca1\u6709\u627e\u5230\u4e92\u52a8\u5e7f\u544a\u5bb9\u5668")
            }
        }, {
            key: "bindVideoAdLayerUiEvent", value: function () {
                var e = this;
                this.$videoAd && (s.on(this.$videoSkipText, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_SKIP_TEXT, {target: t.target})
                }), s.on(this.$videoCloseBtn, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_CLOSE_BUTTON_CLICK, {target: t.target})
                }), s.on(this.$videoNoSkipBtn, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_NO_SKIP_BUTTON_CLICK, {target: t.target})
                }), s.on(this.$videoNoSkipCloseBtn, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_NO_SKIP_CLOSE_BUTTON_CLICK, {target: t.target})
                }), s.on(this.$videoNoSkipKnowBtn, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_NO_SKIP_KNOW_BUTTON_CLICK, {target: t.target})
                }), s.on(this.$videoLinkArea, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_LINK_AREA_CLICK, {target: t.target})
                }), s.on(this.$videoDetailBtn, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_DETAIL_BUTTON_CLICK, {target: t.target})
                }), s.on(this.$videoVolumeBtn, "click", function (t) {
                    e.message.emit(d.UI_EVENT.VIDEO_VOLUME_BUTTON_CLICK, {target: t.target})
                }))
            }
        }, {
            key: "hideAll", value: function () {
                this.resetVideoUi(!0)
            }
        }, {
            key: "resetVideoUi", value: function (e) {
                var t = [this.$videoCountDown, this.$videoCloseBtn, this.$videoSkipText, this.$videoAdControl, this.$videoNoSkipBtn, this.$videoLinkArea, this.$videoDetailBtn, this.$videoNoSkipDialog, this.$videoNoSkipKnowBtn, this.$videoNoSkipCloseBtn];
                e && (t = [this.$videoContainer, this.$videoAdContainer, this.$videoRichMediaAdContainer].concat(t)), t.forEach(function (e) {
                    s.hide(e)
                }), clearInterval(this.trueViewInterval), this.trueViewInterval = null
            }
        }, {
            key: "updateVideoAdInner", value: function (e) {
                e ? s.show(this.$videoAdInner) : s.hide(this.$videoAdInner)
            }
        }, {
            key: "updateVideoLayer", value: function (e) {
                e ? s.show(this.$videoContainer) : s.hide(this.$videoContainer)
            }
        }, {
            key: "updateVideoAdControl", value: function (e) {
                e ? s.show(this.$videoAdControl) : s.hide(this.$videoAdControl)
            }
        }, {
            key: "adjustVideoAdControl", value: function (e) {
                e && (s.css(this.$videoAdControl, "top", e.top), s.css(this.$videoDetailBtn, "bottom", e.bottom))
            }
        }, {
            key: "updateVideoAdLayer", value: function (e) {
                e ? s.show(this.$videoAdContainer) : s.hide(this.$videoAdContainer)
            }
        }, {
            key: "updateVideoRichMediaAdContainer", value: function (e) {
                e ? s.show(this.$videoRichMediaAdContainer) : s.hide(this.$videoRichMediaAdContainer)
            }
        }, {
            key: "updateVideoDSP", value: function (e) {
                e ? (s.text(this.$videoDspNameText, e), s.show(this.$videoDspNameText)) : (s.text(this.$videoDspNameText, ""), s.hide(this.$videoDspNameText))
            }
        }, {
            key: "updateLinkArea", value: function (e) {
                e ? s.show(this.$videoLinkArea) : s.hide(this.$videoLinkArea)
            }
        }, {
            key: "showVideoForbidSkipAd", value: function (e) {
                2 == e ? (s.text(this.$videoNoSkipAuthor, "\u5185\u5bb9\u65b9"), s.text(this.$videoSkipText, "\u5e94\u5185\u5bb9\u65b9\u8981\u6c42\uff0cVIP\u65e0\u6cd5\u514d\u8be5\u7247\u5e7f\u544a"), s.show(this.$videoSkipText), s.show(this.$videoNoSkipBtn)) : 1 == e && (s.text(this.$videoNoSkipAuthor, "\u7248\u6743\u65b9\uff08\u534e\u7eb3\uff09"), s.text(this.$videoSkipText, "\u5e94\u7248\u6743\u65b9\u8981\u6c42\uff0cVIP\u65e0\u6cd5\u514d\u8be5\u7247\u5e7f\u544a"), s.show(this.$videoSkipText), s.show(this.$videoNoSkipBtn)), s.show(this.$videoNoSkipCloseBtn), s.show(this.$videoNoSkipKnowBtn)
            }
        }, {
            key: "toggleVideoCountDown", value: function (e) {
                e ? s.show(this.$videoCountDown) : s.hide(this.$videoCountDown)
            }
        }, {
            key: "updateVideoCountDown", value: function (e) {
                s.html(this.$videoCountDown, e)
            }
        }, {
            key: "updateVideoCountDownHtml", value: function (e) {
                e += "<style>.txp_ad_countdown:after{display:none}</style>", s.html(this.$videoCountDown, e)
            }
        }, {
            key: "updateCloseButton", value: function (e) {
                var t = this.$videoCloseBtn, r = this.$videoSkipText;
                e.show ? (s.show(t), s.show(r)) : (s.hide(t), s.hide(r)), "undefined" != typeof e.text && s.text(r, e.text)
            }
        }, {
            key: "updateDetail", value: function (e) {
                e ? (s.show(this.$videoDetailBtn), s.text(this.$videoDetailBtnText, "\u8be6\u60c5\u70b9\u51fb")) : (s.hide(this.$videoDetailBtn), s.text(this.$videoDetailBtnText, ""))
            }
        }, {
            key: "updateSkipTips", value: function (e) {
                var t = "";
                e.showVipCommand ? t = "\u5173\u95ed\u63a8\u8350" : e.showVipClick ? t = "VIP\u70b9\u51fb\u5173\u95ed\u8be5\u5e7f\u544a" : e.shortVideo ? t = "\u5173\u95ed\u8be5\u5e7f\u544a" : e.isTrueView || (t = "VIP\u53ef\u5173\u95ed\u8be5\u5e7f\u544a"), e.isTrueView ? (this.updateCloseButton({show: !0}), s.text(this.$videoSkipText) || s.hide(this.$videoSkipText), s.hide(this.$videoCloseBtn)) : this.updateCloseButton({
                    show: e.showCloseButton && !e.isTrueView,
                    text: t
                })
            }
        }, {
            key: "updateTrueview", value: function (e) {
                var t = this;
                if (e.showCloseButton) {
                    var r = e.countdown;
                    e.duration <= 10 ? (s.text(this.$videoSkipText, "\u5173\u95ed\u8be5\u5e7f\u544a"), s.show(this.$videoCloseBtn)) : r > 0 ? (s.html(this.$videoSkipText, "\u4f60\u53ef\u4ee5\u5728" + r + "\u79d2\u540e\u5173\u95ed\u8be5\u5e7f\u544a"), s.hide(this.$videoCloseBtn), this.trueViewInterval = setInterval(function () {
                        --r <= 0 ? (clearInterval(t.trueViewInterval), t.trueViewInterval = null, s.text(t.$videoSkipText, "\u5173\u95ed\u8be5\u5e7f\u544a"), s.show(t.$videoCloseBtn)) : (s.html(t.$videoSkipText, "\u4f60\u53ef\u4ee5\u5728" + r + "\u79d2\u540e\u5173\u95ed\u8be5\u5e7f\u544a"), s.hide(t.$videoCloseBtn))
                    }, 1e3)) : (s.text(this.$videoSkipText, "\u5173\u95ed\u8be5\u5e7f\u544a"), s.show(this.$videoCloseBtn))
                } else s.hide(this.$videoSkipText)
            }
        }, {
            key: "updateNoSkipDialog", value: function (e) {
                e.show ? s.show(this.$videoNoSkipDialog) : s.hide(this.$videoNoSkipDialog)
            }
        }, {
            key: "updateVideoVolumeBtn", value: function (e) {
                TxpCreativePlayer.fromPcClient ? s.show(this.$videoVolumeBtn) : s.hide(this.$videoVolumeBtn), e.mute ? s.addClass(this.$videoVolumeBtn, "txp_btn_ad_mute") : s.removeClass(this.$videoVolumeBtn, "txp_btn_ad_mute")
            }
        }]), e
    }()
}, function (e, t, r) {
    var i = r(21);
    e.exports = function (e) {
        "use strict";
        e = e || {};
        var t = "", r = i.$escape, n = e.countdown, a = e.countdownNum;
        return t += '<txpdiv class="txp_ad_control txp_none" data-role="', t += r(n), t += '">\n    <txpdiv class="txp_ad_skip">\n        <txpdiv class="txp_ad_countdown" data-role="', t += r(a), t += '"></txpdiv>\n        <txpdiv class="txp_ad_skip_text">\u8fdb\u5165\u5e7f\u544a</txpdiv>\n    </txpdiv>\n</txpdiv>'
    }
}, function (e, t, r) {
    "use strict";
    (function (t) {
        var r = "undefined" != typeof self ? self : "undefined" != typeof window ? window : void 0 !== t ? t : {},
            i = Object.create(r), n = /["&'<>]/;
        i.$escape = function (e) {
            return function (e) {
                var t = "" + e, r = n.exec(t);
                if (!r) return e;
                var i = "", a = void 0, o = void 0, s = void 0;
                for (a = r.index, o = 0; a < t.length; a++) {
                    switch (t.charCodeAt(a)) {
                        case 34:
                            s = "&#34;";
                            break;
                        case 38:
                            s = "&#38;";
                            break;
                        case 39:
                            s = "&#39;";
                            break;
                        case 60:
                            s = "&#60;";
                            break;
                        case 62:
                            s = "&#62;";
                            break;
                        default:
                            continue
                    }
                    o !== a && (i += t.substring(o, a)), o = a + 1, i += s
                }
                return o !== a ? i + t.substring(o, a) : i
            }(function t(e) {
                "string" != typeof e && (e = e === undefined || null === e ? "" : "function" == typeof e ? t(e.call(e)) : JSON.stringify(e));
                return e
            }(e))
        }, i.$each = function (e, t) {
            if (Array.isArray(e)) for (var r = 0, i = e.length; r < i; r++) t(e[r], r); else for (var n in e) t(e[n], n)
        }, e.exports = i
    }).call(t, r(8))
}, function (e, t, r) {
    var i = r(21);
    e.exports = function (e) {
        "use strict";
        e = e || {};
        var t = "", r = i.$escape, n = e.videoContainer, a = e.videoAdContainer, o = e.videoRichMediaAdContainer,
            s = e.videoBlackScreen, d = e.videoAdInner, l = e.videoLinkArea, u = e.videoDetailBtn,
            c = e.videoDetailBtnText, h = e.videoDspNameText, f = e.videoAdControl, p = e.videoCountDown,
            v = e.videoSkipText, y = e.videoCloseBtn, g = e.videoNoSkipBtn, m = e.videoVolumeBtn,
            E = e.videoNoSkipDialog, _ = e.videoNoSkipKnowBtn, T = e.videoNoSkipCloseBtn;
        return t += '<style>\n    .txp_btn_ad_volume{\n        background: rgba(37, 37, 37, .7) url(https://ca.gtimg.com/adplugin/js/imgs/mutes.png) no-repeat;\n        height: 28px;\n        border: none;\n        border-radius: 14px;\n        width: 28px;\n        margin-left: 8px;\n        user-select: initial;\n        outline: none;\n    }\n    .txp_btn_ad_mute{\n        background-position-y: -28px;\n    }\n    /* adblock */\n    .txp_cac_black_screen {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        z-index: 1000;\n        background-color: #000;\n        text-align: center;\n        display: flex;\n        line-height: 1.5;\n        flex-direction: column;\n        justify-content: center;\n    }\n    .txp_cac_black_screen .txp_cac_black_screen_title {\n        margin-bottom: 15px;\n        font-size: 16px;\n        color: #fff;\n        text-align: center;\n    }\n    .txp_cac_black_screen .txp_cac_black_screen_em {\n        display: inline;\n        color: #ff7000;\n    }\n    \n</style>\n<txpdiv data-role="', t += r(n), t += '" class="txp_ad" style="width: 100%; height: 100%;">\n\n    \x3c!-- \u5e7f\u544a video \u6807\u7b7e\u5bb9\u5668--\x3e\n    <txpdiv data-role="', t += r(a), t += '" style="width: 100%; height: 100%; position: relative;"></txpdiv>\n\n    \x3c!-- \u5e7f\u544a \u5bcc\u5a92\u4f53\u5bb9\u5668\u6807\u7b7e --\x3e\n    <txpdiv data-role="', t += r(o), t += '" style="width: 100%; height: 100%;"></txpdiv>\n\n    <txp data-role="', t += r(s), t += '" class="txp_cac_black_screen txp_none">\n        <txp class="txp_cac_black_screen_title">\u5e7f\u544a\u88ab\u62e6\u622a\u63d2\u4ef6\u8bef\u4f24\u5566\uff0c<txp class="txp_cac_black_screen_em">1</txp>\u79d2\u540e\u64ad\u653e</txp>\n        <txp>\u5173\u95ed\u62e6\u622a\u63d2\u4ef6\u6062\u590d\u6b63\u5e38</txp>\n    </txp>\n\n    \x3c!-- \u5185\u90e8\u533a\u57df --\x3e\n    <txpdiv data-role="', t += r(d), t += '" class="txp_ad_inner txp_none">\n        \x3c!-- \u5e7f\u544a\u70b9\u51fb\u533a\u57df --\x3e\n        <a data-role="', t += r(l), t += '" href="javascript:;" class="txp_ad_link"></a>\n\n        \x3c!-- \u8be6\u60c5\u70b9\u51fb --\x3e\n        <a data-role="', t += r(u), t += '" class="txp_ad_more" href="javascript:;"><txpdiv data-role="', t += r(c), t += '"></txpdiv><txpdiv class="txp_icon_arrow"></txpdiv></a>\n\n        \x3c!-- \u5e95\u90e8\u4ecb\u7ecd --\x3e\n        <txpdiv data-role="', t += r(h), t += '" style="left:10px;bottom:10px;position:absolute;opacity:0.6;font-size:12px;text-shadow:2px 2px #000"></txpdiv>\n\n        \x3c!-- \u65e0\u6cd5\u8df3\u8fc7\u5e7f\u544a\u6309\u94ae --\x3e\n        <txpdiv class="txp_ad_control" data-role="', t += r(f), t += '">\n            <txpdiv class="txp_ad_skip">\n                \x3c!-- \u5012\u8ba1\u65f6 --\x3e\n                <txpdiv data-role="', t += r(p), t += '" class="txp_ad_countdown"></txpdiv>\n\n                \x3c!-- \u8df3\u8fc7\u5e7f\u544a\u6587\u6848\u6216\u8005\u8fdb\u5165\u5e7f\u544a\u6587\u6848 --\x3e\n                <txpdiv data-role="', t += r(v), t += '" class="txp_ad_skip_text" style="cursor: pointer;"></txpdiv>\n\n                \x3c!-- \u5173\u95ed\u5e7f\u544a\u6309\u94ae --\x3e\n                <button data-role="', t += r(y), t += '" class="txp_btn txp_btn_close"></button>\n\n                \x3c!-- \u65e0\u6cd5\u514d\u5e7f\u544a\u8bf4\u660e --\x3e\n                <button data-role="', t += r(g), t += '" class="txp_btn txp_btn_hint" title="\u65e0\u6cd5\u5173\u95ed\u5e7f\u544a\u8bf4\u660e"></button>\n            </txpdiv>\n            <button data-role="', t += r(m), t += '" class="txp_btn txp_btn_ad_volume txp_none" style="z-index: 10;position: relative;">\n            </button>\n        </txpdiv>\n\n        \x3c!-- \u65e0\u6cd5\u514d\u5e7f\u544a\u5f39\u7a97\u8bf4\u660e --\x3e\n        <txpdiv data-role="', t += r(E), t += '" class="txp_ad_dialog txp_none">\n            <txpdiv class="txp_dialog_bd">\n                \u65e0\u6cd5\u5173\u95ed\u5e7f\u544a\u2026\u2026\u7ee7\u7eed\u4e89\u53d6\u5e7f\u544a\u6743\u76ca\u2026\u2026\n            </txpdiv>\n            <txpdiv data-role="', t += r(_), t += '" class="txp_ad_btn">\u6211\u77e5\u9053\u4e86!</txpdiv>\n            <a class="txp_ad_fb" target="_blank" href="http://support.qq.com/write.shtml?fid=850">\u610f\u89c1\u53cd\u9988</a>\n            <button data-role="', t += r(T), t += '" class="txp_btn txp_btn_close"></button>\n        </txpdiv>\n    </txpdiv>\n</txpdiv>'
    }
}, function (e, t, r) {
    "use strict";
    var i = "adController", n = [{k: "setConf", c: ["confController"]}, {k: "getConf", c: ["confController"]}, {
        k: "getOrdersByType",
        c: ["orderController"]
    }, {k: "getOrderDuration", c: ["orderController"]}, {
        k: "isOrderEmpty",
        c: ["orderController"]
    }, {k: "setPageWatchBuyData", c: ["orderController"]}, {
        k: "clearPageWatchBuyData",
        c: ["orderController"]
    }, {k: "preLoadAd", c: [i]}, {k: "loadAd", c: [i]}, {k: "playAd", c: [i]}, {k: "pauseAd", c: [i]}, {
        k: "stopAd",
        c: [i]
    }, {k: "stopAllAd", c: [i]}, {k: "readRfId", c: [i]}, {k: "muteAd", c: [i]}, {
        k: "unMuteAd",
        c: [i]
    }, {k: "setAdVolume", c: [i]}, {k: "resizeAd", c: [i]}, {k: "adjustUI", c: [i]}, {
        k: "hideAdBeforeResize",
        c: [i]
    }, {k: "setAdFullscreen", c: [i]}, {k: "setAdPosition", c: [i]}, {k: "setAdSmallWindow", c: [i]}, {
        k: "reportAd",
        c: [i]
    }, {k: "seekStart", c: [i]}];
    e.exports = {
        install: function (e) {
            n.forEach(function (t) {
                e.prototype[t.k] || (e.prototype[t.k] = function () {
                    for (var e = 0, r = t.c.length; e < r; e++) return this.controllers[t.c[e]][t.k].apply(this.controllers[t.c[e]], Array.prototype.slice.call(arguments))
                })
            })
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = r(59), n = r(70), a = r(71), o = r(72), s = r(2);
    e.exports = {
        install: function (e) {
            e.adClass = {
                loadedCount: 0,
                maxLoadedCount: 3,
                nextPartUrl: "//vm.gtimg.cn/tencentvideo/txpv5/creative/plugins/nextpart",
                nextPartReady: !1,
                hasRequestNextPart: !1,
                make: function () {
                    var e = Array.prototype.slice.call(arguments), t = e[0];
                    e.shift();
                    var r = this.factory;
                    if (r[t] && r[t].ready) return r[t].creater.apply(r[t].creater, e)
                },
                loadNextPart: function () {
                    var t = this, r = e.version;
                    this.loadedCount > 0 && (r += "." + +new Date), this.loadedCount++, !this.hasRequestNextPart && this.loadedCount <= this.maxLoadedCount && s.loadJs(s.appendParamsToUrl(this.nextPartUrl + "." + e.version + ".js", {t: r}), function (e) {
                        e && e.error ? (t.hasRequestNextPart = !1, t.loadNextPart()) : t.hasRequestNextPart = !0
                    })
                },
                factory: {
                    LoadingAd: {
                        ready: !0, creater: function (e) {
                            return e._name = "LoadingAd", new i(e)
                        }
                    }, EmbedAd: {
                        ready: !0, creater: function (e) {
                            return e._name = "EmbedAd", new n(e)
                        }
                    }, EndingAd: {
                        ready: !0, creater: function (e) {
                            return e._name = "EndingAd", new o(e)
                        }
                    }, ZcAd: {
                        ready: !0, creater: function (e) {
                            return e._name = "ZcAd", new a(e)
                        }
                    }
                }
            }
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(17), a = r(1);
    e.exports = function (e) {
        function t(e) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, t);
            var r = function (e, t) {
                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
            return r.message.on(a.TXPLAYER_EVENT.AD_STOP, function (e) {
                "LD" === e.adtype && e.rfid && e.isAllAdEnd && r.saveRfId(e.rfid)
            }), r._name = e._name, r
        }

        return function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }(t, n), i(t, [{
            key: "saveRfId", value: function (e) {
                if ("undefined" != typeof window.localStorage) try {
                    window.localStorage["TxpCreativePlayer-rfid"] = e
                } catch (t) {
                }
            }
        }]), t
    }()
}, function (e, t, r) {
    "use strict";
    e.exports = function i(e, t, r) {
        if (function (e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }(this, i), e) {
            for (var n in t = t || "", (r = r || {}).autoplay && (e.autoplay = !0), e.preload = "undefined" != typeof r.preload && r.preload, t && (e.src = t), e.style.width = "100%", e.style.height = "100%", r.style) r.style.hasOwnProperty(n) && (e.style[n] = r.style[n]);
            this.video = e
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(7).Promise, a = r(2);
    e.exports = function () {
        function e(t) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), t && (this.api = {
                url: "//ra.gtimg.com/web/viewability/viewabilityalone.js",
                startMonitor: null
            }, this.target = t)
        }

        return i(e, [{
            key: "initApi", value: function () {
                var e = this;
                return new n(function (t, r) {
                    a.loadJs(e.api.url, function (i) {
                        i ? r() : crystalViewModule && crystalViewModule.startviewability ? (e.api.startMonitor = crystalViewModule.startviewability, t()) : r()
                    })
                })
            }
        }, {
            key: "getReportData", value: function (e) {
                var t = [], r = e.reportUrlView;
                return r && r.reportitem && r.reportitem.length > 0 ? (r.reportitem.forEach(function (e) {
                    e && e.url && t.push(e.url)
                }), {
                    objectID: [this.target],
                    reportItemUrl: t,
                    oid: e.orderId,
                    duration: 1e3 * e.duration,
                    retry: 0
                }) : null
            }
        }, {
            key: "start", value: function (e) {
                var t = this, r = this.getReportData(e);
                r && (this.api.startMonitor ? this.api.startMonitor(r) : this.initApi().then(function () {
                    t.api.startMonitor(r)
                }))
            }
        }]), e
    }()
}, function (e, t, r) {
    "use strict";
    var i = r(63), n = Object.prototype.hasOwnProperty;
    e.exports = function (e) {
        var t, r = arguments[1];
        if (i(e), r === undefined) n.call(e, "__ee__") && delete e.__ee__; else {
            if (!(t = n.call(e, "__ee__") && e.__ee__)) return;
            t[r] && delete t[r]
        }
    }
}, function (e, t, r) {
    "use strict";
    var i = r(64);
    e.exports = function (e) {
        if (!i(e)) throw new TypeError(e + " is not an Object");
        return e
    }
}, function (e, t, r) {
    "use strict";
    var i = r(10), n = {"function": !0, object: !0};
    e.exports = function (e) {
        return i(e) && n[typeof e] || !1
    }
}, function (e, t, r) {
    "use strict";
    e.exports = {EMPTY: 0, PRELOADING: 1, PLAYING: 2, END: 3, ERROR: 4}
}, function (e, t, r) {
    !function (t, r) {
        e.exports = r()
    }(0, function () {
        return function (e) {
            var t = {};

            function r(i) {
                if (t[i]) return t[i].exports;
                var n = t[i] = {i: i, l: !1, exports: {}};
                return e[i].call(n.exports, n, n.exports, r), n.l = !0, n.exports
            }

            return r.m = e, r.c = t, r.d = function (e, t, i) {
                r.o(e, t) || Object.defineProperty(e, t, {configurable: !1, enumerable: !0, get: i})
            }, r.n = function (e) {
                var t = e && e.__esModule ? function () {
                    return e["default"]
                } : function () {
                    return e
                };
                return r.d(t, "a", t), t
            }, r.o = function (e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }, r.p = "/dist/", r(r.s = 10)
        }([function (e, t, r) {
            "use strict";
            r.d(t, "a", function () {
                return u
            }), r.d(t, "b", function () {
                return c
            });
            var i = r(4), n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                return typeof e
            } : function (e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            };

            function a() {
            }

            var o = {trace: a, debug: a, log: a, warn: a, info: a, error: a}, s = o;
            var d = Object(i.a)();

            function l(e) {
                for (var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) r[i - 1] = arguments[i];
                r.forEach(function (t) {
                    s[t] = e[t] ? e[t].bind(e) : function (e) {
                        var t = d.console[e];
                        return t ? function () {
                            for (var r = arguments.length, i = Array(r), n = 0; n < r; n++) i[n] = arguments[n];
                            i[0] && (i[0] = function (e, t) {
                                return t = "[" + e + "] > " + t
                            }(e, i[0])), t.apply(d.console, i)
                        } : a
                    }(t)
                })
            }

            var u = function (e) {
                if (!0 === e || "object" === (void 0 === e ? "undefined" : n(e))) {
                    l(e, "debug", "log", "info", "warn", "error");
                    try {
                        s.log()
                    } catch (t) {
                        s = o
                    }
                } else s = o
            }, c = s
        }, function (e, t, r) {
            "use strict";
            t.a = {
                MEDIA_ATTACHING: "hlsMediaAttaching",
                MEDIA_ATTACHED: "hlsMediaAttached",
                MEDIA_DETACHING: "hlsMediaDetaching",
                MEDIA_DETACHED: "hlsMediaDetached",
                BUFFER_RESET: "hlsBufferReset",
                BUFFER_CODECS: "hlsBufferCodecs",
                BUFFER_CREATED: "hlsBufferCreated",
                BUFFER_APPENDING: "hlsBufferAppending",
                BUFFER_APPENDED: "hlsBufferAppended",
                BUFFER_EOS: "hlsBufferEos",
                BUFFER_FLUSHING: "hlsBufferFlushing",
                BUFFER_FLUSHED: "hlsBufferFlushed",
                MANIFEST_LOADING: "hlsManifestLoading",
                MANIFEST_LOADED: "hlsManifestLoaded",
                MANIFEST_PARSED: "hlsManifestParsed",
                LEVEL_SWITCHING: "hlsLevelSwitching",
                LEVEL_SWITCHED: "hlsLevelSwitched",
                LEVEL_LOADING: "hlsLevelLoading",
                LEVEL_LOADED: "hlsLevelLoaded",
                LEVEL_UPDATED: "hlsLevelUpdated",
                LEVEL_PTS_UPDATED: "hlsLevelPtsUpdated",
                AUDIO_TRACKS_UPDATED: "hlsAudioTracksUpdated",
                AUDIO_TRACK_SWITCHING: "hlsAudioTrackSwitching",
                AUDIO_TRACK_SWITCHED: "hlsAudioTrackSwitched",
                AUDIO_TRACK_LOADING: "hlsAudioTrackLoading",
                AUDIO_TRACK_LOADED: "hlsAudioTrackLoaded",
                SUBTITLE_TRACKS_UPDATED: "hlsSubtitleTracksUpdated",
                SUBTITLE_TRACK_SWITCH: "hlsSubtitleTrackSwitch",
                SUBTITLE_TRACK_LOADING: "hlsSubtitleTrackLoading",
                SUBTITLE_TRACK_LOADED: "hlsSubtitleTrackLoaded",
                SUBTITLE_FRAG_PROCESSED: "hlsSubtitleFragProcessed",
                INIT_PTS_FOUND: "hlsInitPtsFound",
                FRAG_LOADING: "hlsFragLoading",
                FRAG_LOAD_PROGRESS: "hlsFragLoadProgress",
                FRAG_LOAD_EMERGENCY_ABORTED: "hlsFragLoadEmergencyAborted",
                FRAG_LOADED: "hlsFragLoaded",
                FRAG_DECRYPTED: "hlsFragDecrypted",
                FRAG_PARSING_INIT_SEGMENT: "hlsFragParsingInitSegment",
                FRAG_PARSING_USERDATA: "hlsFragParsingUserdata",
                FRAG_PARSING_METADATA: "hlsFragParsingMetadata",
                FRAG_PARSING_DATA: "hlsFragParsingData",
                FRAG_PARSED: "hlsFragParsed",
                FRAG_BUFFERED: "hlsFragBuffered",
                FRAG_CHANGED: "hlsFragChanged",
                FPS_DROP: "hlsFpsDrop",
                FPS_DROP_LEVEL_CAPPING: "hlsFpsDropLevelCapping",
                ERROR: "hlsError",
                DESTROYING: "hlsDestroying",
                KEY_LOADING: "hlsKeyLoading",
                KEY_LOADED: "hlsKeyLoaded",
                STREAM_STATE_TRANSITION: "hlsStreamStateTransition"
            }
        }, function (e, t, r) {
            "use strict";
            r.d(t, "b", function () {
                return i
            }), r.d(t, "a", function () {
                return n
            });
            var i = {
                NETWORK_ERROR: "networkError",
                MEDIA_ERROR: "mediaError",
                KEY_SYSTEM_ERROR: "keySystemError",
                MUX_ERROR: "muxError",
                OTHER_ERROR: "otherError"
            }, n = {
                KEY_SYSTEM_NO_KEYS: "keySystemNoKeys",
                KEY_SYSTEM_NO_ACCESS: "keySystemNoAccess",
                KEY_SYSTEM_NO_SESSION: "keySystemNoSession",
                KEY_SYSTEM_LICENSE_REQUEST_FAILED: "keySystemLicenseRequestFailed",
                MANIFEST_LOAD_ERROR: "manifestLoadError",
                MANIFEST_LOAD_TIMEOUT: "manifestLoadTimeOut",
                MANIFEST_PARSING_ERROR: "manifestParsingError",
                MANIFEST_INCOMPATIBLE_CODECS_ERROR: "manifestIncompatibleCodecsError",
                LEVEL_LOAD_ERROR: "levelLoadError",
                LEVEL_LOAD_TIMEOUT: "levelLoadTimeOut",
                LEVEL_SWITCH_ERROR: "levelSwitchError",
                AUDIO_TRACK_LOAD_ERROR: "audioTrackLoadError",
                AUDIO_TRACK_LOAD_TIMEOUT: "audioTrackLoadTimeOut",
                FRAG_LOAD_ERROR: "fragLoadError",
                FRAG_LOAD_TIMEOUT: "fragLoadTimeOut",
                FRAG_DECRYPT_ERROR: "fragDecryptError",
                FRAG_PARSING_ERROR: "fragParsingError",
                REMUX_ALLOC_ERROR: "remuxAllocError",
                KEY_LOAD_ERROR: "keyLoadError",
                KEY_LOAD_TIMEOUT: "keyLoadTimeOut",
                BUFFER_ADD_CODEC_ERROR: "bufferAddCodecError",
                BUFFER_APPEND_ERROR: "bufferAppendError",
                BUFFER_APPENDING_ERROR: "bufferAppendingError",
                BUFFER_STALLED_ERROR: "bufferStalledError",
                BUFFER_FULL_ERROR: "bufferFullError",
                BUFFER_SEEK_OVER_HOLE: "bufferSeekOverHole",
                BUFFER_NUDGE_ON_STALL: "bufferNudgeOnStall",
                INTERNAL_EXCEPTION: "internalException"
            }
        }, function (e, t) {
            e.exports = void 0
        }, function (e, t, r) {
            "use strict";
            t.a = function () {
                return "undefined" == typeof window ? self : window
            }
        }, function (e, t, r) {
            !function (t) {
                var r = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/\;?#]*)?(.*?)??(;.*?)?(\?.*?)?(#.*?)?$/,
                    i = /^([^\/;?#]*)(.*)$/, n = /(?:\/|^)\.(?=\/)/g, a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g, o = {
                        buildAbsoluteURL: function (e, t, r) {
                            if (r = r || {}, e = e.trim(), !(t = t.trim())) {
                                if (!r.alwaysNormalize) return e;
                                var n = this.parseURL(e);
                                if (!s) throw new Error("Error trying to parse base URL.");
                                return n.path = o.normalizePath(n.path), o.buildURLFromParts(n)
                            }
                            var a = this.parseURL(t);
                            if (!a) throw new Error("Error trying to parse relative URL.");
                            if (a.scheme) return r.alwaysNormalize ? (a.path = o.normalizePath(a.path), o.buildURLFromParts(a)) : t;
                            var s = this.parseURL(e);
                            if (!s) throw new Error("Error trying to parse base URL.");
                            if (!s.netLoc && s.path && "/" !== s.path[0]) {
                                var d = i.exec(s.path);
                                s.netLoc = d[1], s.path = d[2]
                            }
                            s.netLoc && !s.path && (s.path = "/");
                            var l = {
                                scheme: s.scheme,
                                netLoc: a.netLoc,
                                path: null,
                                params: a.params,
                                query: a.query,
                                fragment: a.fragment
                            };
                            if (!a.netLoc && (l.netLoc = s.netLoc, "/" !== a.path[0])) if (a.path) {
                                var u = s.path, c = u.substring(0, u.lastIndexOf("/") + 1) + a.path;
                                l.path = o.normalizePath(c)
                            } else l.path = s.path, a.params || (l.params = s.params, a.query || (l.query = s.query));
                            return null === l.path && (l.path = r.alwaysNormalize ? o.normalizePath(a.path) : a.path), o.buildURLFromParts(l)
                        }, parseURL: function (e) {
                            var t = r.exec(e);
                            return t ? {
                                scheme: t[1] || "",
                                netLoc: t[2] || "",
                                path: t[3] || "",
                                params: t[4] || "",
                                query: t[5] || "",
                                fragment: t[6] || ""
                            } : null
                        }, normalizePath: function (e) {
                            for (e = e.split("").reverse().join("").replace(n, ""); e.length !== (e = e.replace(a, "")).length;) ;
                            return e.split("").reverse().join("")
                        }, buildURLFromParts: function (e) {
                            return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                        }
                    };
                e.exports = o
            }()
        }, function (e, t) {
            function r() {
                this._events = this._events || {}, this._maxListeners = this._maxListeners || undefined
            }

            function i(e) {
                return "function" == typeof e
            }

            function n(e) {
                return "object" == typeof e && null !== e
            }

            function a(e) {
                return void 0 === e
            }

            e.exports = r, r.EventEmitter = r, r.prototype._events = undefined, r.prototype._maxListeners = undefined, r.defaultMaxListeners = 10, r.prototype.setMaxListeners = function (e) {
                if (!function (e) {
                    return "number" == typeof e
                }(e) || e < 0 || isNaN(e)) throw TypeError("n must be a positive number");
                return this._maxListeners = e, this
            }, r.prototype.emit = function (e) {
                var t, r, o, s, d, l;
                if (this._events || (this._events = {}), "error" === e && (!this._events.error || n(this._events.error) && !this._events.error.length)) {
                    if ((t = arguments[1]) instanceof Error) throw t;
                    var u = new Error('Uncaught, unspecified "error" event. (' + t + ")");
                    throw u.context = t, u
                }
                if (a(r = this._events[e])) return !1;
                if (i(r)) switch (arguments.length) {
                    case 1:
                        r.call(this);
                        break;
                    case 2:
                        r.call(this, arguments[1]);
                        break;
                    case 3:
                        r.call(this, arguments[1], arguments[2]);
                        break;
                    default:
                        s = Array.prototype.slice.call(arguments, 1), r.apply(this, s)
                } else if (n(r)) for (s = Array.prototype.slice.call(arguments, 1), o = (l = r.slice()).length, d = 0; d < o; d++) l[d].apply(this, s);
                return !0
            }, r.prototype.addListener = function (e, t) {
                var o;
                if (!i(t)) throw TypeError("listener must be a function");
                return this._events || (this._events = {}), this._events.newListener && this.emit("newListener", e, i(t.listener) ? t.listener : t), this._events[e] ? n(this._events[e]) ? this._events[e].push(t) : this._events[e] = [this._events[e], t] : this._events[e] = t, n(this._events[e]) && !this._events[e].warned && (o = a(this._maxListeners) ? r.defaultMaxListeners : this._maxListeners) && o > 0 && this._events[e].length > o && (this._events[e].warned = !0, console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[e].length), "function" == typeof console.trace && console.trace()), this
            }, r.prototype.on = r.prototype.addListener, r.prototype.once = function (e, t) {
                if (!i(t)) throw TypeError("listener must be a function");
                var r = !1;

                function n() {
                    this.removeListener(e, n), r || (r = !0, t.apply(this, arguments))
                }

                return n.listener = t, this.on(e, n), this
            }, r.prototype.removeListener = function (e, t) {
                var r, a, o, s;
                if (!i(t)) throw TypeError("listener must be a function");
                if (!this._events || !this._events[e]) return this;
                if (o = (r = this._events[e]).length, a = -1, r === t || i(r.listener) && r.listener === t) delete this._events[e], this._events.removeListener && this.emit("removeListener", e, t); else if (n(r)) {
                    for (s = o; s-- > 0;) if (r[s] === t || r[s].listener && r[s].listener === t) {
                        a = s;
                        break
                    }
                    if (a < 0) return this;
                    1 === r.length ? (r.length = 0, delete this._events[e]) : r.splice(a, 1), this._events.removeListener && this.emit("removeListener", e, t)
                }
                return this
            }, r.prototype.removeAllListeners = function (e) {
                var t, r;
                if (!this._events) return this;
                if (!this._events.removeListener) return 0 === arguments.length ? this._events = {} : this._events[e] && delete this._events[e], this;
                if (0 === arguments.length) {
                    for (t in this._events) "removeListener" !== t && this.removeAllListeners(t);
                    return this.removeAllListeners("removeListener"), this._events = {}, this
                }
                if (i(r = this._events[e])) this.removeListener(e, r); else if (r) for (; r.length;) this.removeListener(e, r[r.length - 1]);
                return delete this._events[e], this
            }, r.prototype.listeners = function (e) {
                return this._events && this._events[e] ? i(this._events[e]) ? [this._events[e]] : this._events[e].slice() : []
            }, r.prototype.listenerCount = function (e) {
                if (this._events) {
                    var t = this._events[e];
                    if (i(t)) return 1;
                    if (t) return t.length
                }
                return 0
            }, r.listenerCount = function (e, t) {
                return e.listenerCount(t)
            }
        }, function (e, t, r) {
            "use strict";
            var i = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return e.isHeader = function (e, t) {
                    return t + 10 <= e.length && 73 === e[t] && 68 === e[t + 1] && 51 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                }, e.isFooter = function (e, t) {
                    return t + 10 <= e.length && 51 === e[t] && 68 === e[t + 1] && 73 === e[t + 2] && e[t + 3] < 255 && e[t + 4] < 255 && e[t + 6] < 128 && e[t + 7] < 128 && e[t + 8] < 128 && e[t + 9] < 128
                }, e.getID3Data = function (t, r) {
                    for (var i = r, n = 0; e.isHeader(t, r);) {
                        n += 10, n += e._readSize(t, r + 6), e.isFooter(t, r + 10) && (n += 10), r += n
                    }
                    return n > 0 ? t.subarray(i, i + n) : undefined
                }, e._readSize = function (e, t) {
                    var r = 0;
                    return r = (127 & e[t]) << 21, r |= (127 & e[t + 1]) << 14, r |= (127 & e[t + 2]) << 7, r |= 127 & e[t + 3]
                }, e.getTimeStamp = function (t) {
                    for (var r = e.getID3Frames(t), i = 0; i < r.length; i++) {
                        var n = r[i];
                        if (e.isTimeStampFrame(n)) return e._readTimeStamp(n)
                    }
                    return undefined
                }, e.isTimeStampFrame = function (e) {
                    return e && "PRIV" === e.key && "com.apple.streaming.transportStreamTimestamp" === e.info
                }, e._getFrameData = function (t) {
                    var r = String.fromCharCode(t[0], t[1], t[2], t[3]), i = e._readSize(t, 4);
                    return {type: r, size: i, data: t.subarray(10, 10 + i)}
                }, e.getID3Frames = function (t) {
                    for (var r = 0, i = []; e.isHeader(t, r);) {
                        for (var n = e._readSize(t, r + 6), a = (r += 10) + n; r + 8 < a;) {
                            var o = e._getFrameData(t.subarray(r)), s = e._decodeFrame(o);
                            s && i.push(s), r += o.size + 10
                        }
                        e.isFooter(t, r) && (r += 10)
                    }
                    return i
                }, e._decodeFrame = function (t) {
                    return "PRIV" === t.type ? e._decodePrivFrame(t) : "T" === t.type[0] ? e._decodeTextFrame(t) : "W" === t.type[0] ? e._decodeURLFrame(t) : undefined
                }, e._readTimeStamp = function (e) {
                    if (8 === e.data.byteLength) {
                        var t = new Uint8Array(e.data), r = 1 & t[3],
                            i = (t[4] << 23) + (t[5] << 15) + (t[6] << 7) + t[7];
                        return i /= 45, r && (i += 47721858.84), Math.round(i)
                    }
                    return undefined
                }, e._decodePrivFrame = function (t) {
                    if (t.size < 2) return undefined;
                    var r = e._utf8ArrayToStr(t.data, !0), i = new Uint8Array(t.data.subarray(r.length + 1));
                    return {key: t.type, info: r, data: i.buffer}
                }, e._decodeTextFrame = function (t) {
                    if (t.size < 2) return undefined;
                    if ("TXXX" === t.type) {
                        var r = 1, i = e._utf8ArrayToStr(t.data.subarray(r));
                        r += i.length + 1;
                        var n = e._utf8ArrayToStr(t.data.subarray(r));
                        return {key: t.type, info: i, data: n}
                    }
                    var a = e._utf8ArrayToStr(t.data.subarray(1));
                    return {key: t.type, data: a}
                }, e._decodeURLFrame = function (t) {
                    if ("WXXX" === t.type) {
                        if (t.size < 2) return undefined;
                        var r = 1, i = e._utf8ArrayToStr(t.data.subarray(r));
                        r += i.length + 1;
                        var n = e._utf8ArrayToStr(t.data.subarray(r));
                        return {key: t.type, info: i, data: n}
                    }
                    var a = e._utf8ArrayToStr(t.data);
                    return {key: t.type, data: a}
                }, e._utf8ArrayToStr = function (e) {
                    for (var t = arguments.length > 1 && arguments[1] !== undefined && arguments[1], r = e.length, i = void 0, n = void 0, a = void 0, o = "", s = 0; s < r;) {
                        if (0 === (i = e[s++]) && t) return o;
                        if (0 !== i && 3 !== i) switch (i >> 4) {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                o += String.fromCharCode(i);
                                break;
                            case 12:
                            case 13:
                                n = e[s++], o += String.fromCharCode((31 & i) << 6 | 63 & n);
                                break;
                            case 14:
                                n = e[s++], a = e[s++], o += String.fromCharCode((15 & i) << 12 | (63 & n) << 6 | (63 & a) << 0)
                        }
                    }
                    return o
                }, e
            }();
            i._utf8ArrayToStr;
            t.a = i
        }, function (e, t, r) {
            "use strict";
            var i = r(0), n = r(1);
            var a = Math.pow(2, 32) - 1, o = function () {
                function e(t, r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.observer = t, this.remuxer = r
                }

                return e.prototype.resetTimeStamp = function (e) {
                    this.initPTS = e
                }, e.prototype.resetInitSegment = function (t, r, i, a) {
                    if (t && t.byteLength) {
                        var o = this.initData = e.parseInitSegment(t);
                        null == r && (r = "mp4a.40.5"), null == i && (i = "avc1.42e01e");
                        var s = {};
                        o.audio && o.video ? s.audiovideo = {
                            container: "video/mp4",
                            codec: r + "," + i,
                            initSegment: a ? t : null
                        } : (o.audio && (s.audio = {
                            container: "audio/mp4",
                            codec: r,
                            initSegment: a ? t : null
                        }), o.video && (s.video = {
                            container: "video/mp4",
                            codec: i,
                            initSegment: a ? t : null
                        })), this.observer.trigger(n.a.FRAG_PARSING_INIT_SEGMENT, {tracks: s})
                    } else r && (this.audioCodec = r), i && (this.videoCodec = i)
                }, e.probe = function (t) {
                    return e.findBox({data: t, start: 0, end: Math.min(t.length, 16384)}, ["moof"]).length > 0
                }, e.bin2str = function (e) {
                    return String.fromCharCode.apply(null, e)
                }, e.readUint16 = function (e, t) {
                    e.data && (t += e.start, e = e.data);
                    var r = e[t] << 8 | e[t + 1];
                    return r < 0 ? 65536 + r : r
                }, e.readUint32 = function (e, t) {
                    e.data && (t += e.start, e = e.data);
                    var r = e[t] << 24 | e[t + 1] << 16 | e[t + 2] << 8 | e[t + 3];
                    return r < 0 ? 4294967296 + r : r
                }, e.writeUint32 = function (e, t, r) {
                    e.data && (t += e.start, e = e.data), e[t] = r >> 24, e[t + 1] = r >> 16 & 255, e[t + 2] = r >> 8 & 255, e[t + 3] = 255 & r
                }, e.findBox = function (t, r) {
                    var i = [], n = void 0, a = void 0, o = void 0, s = void 0, d = void 0, l = void 0, u = void 0;
                    if (t.data ? (l = t.start, s = t.end, t = t.data) : (l = 0, s = t.byteLength), !r.length) return null;
                    for (n = l; n < s;) a = e.readUint32(t, n), o = e.bin2str(t.subarray(n + 4, n + 8)), u = a > 1 ? n + a : s, o === r[0] && (1 === r.length ? i.push({
                        data: t,
                        start: n + 8,
                        end: u
                    }) : (d = e.findBox({
                        data: t,
                        start: n + 8,
                        end: u
                    }, r.slice(1))).length && (i = i.concat(d))), n = u;
                    return i
                }, e.parseSegmentIndex = function (t) {
                    var r = e.findBox(t, ["moov"])[0], i = r ? r.end : null, n = 0, a = e.findBox(t, ["sidx"]),
                        o = void 0;
                    if (!a || !a[0]) return null;
                    o = [];
                    var s = (a = a[0]).data[0];
                    n = 0 === s ? 8 : 16;
                    var d = e.readUint32(a, n);
                    n += 4;
                    n += 0 === s ? 8 : 16, n += 2;
                    var l = a.end + 0, u = e.readUint16(a, n);
                    n += 2;
                    for (var c = 0; c < u; c++) {
                        var h = n, f = e.readUint32(a, h);
                        h += 4;
                        var p = 2147483647 & f;
                        if (1 === (2147483648 & f) >>> 31) return void console.warn("SIDX has hierarchical references (not supported)");
                        var v = e.readUint32(a, h);
                        h += 4, o.push({
                            referenceSize: p,
                            subsegmentDuration: v,
                            info: {duration: v / d, start: l, end: l + p - 1}
                        }), l += p, n = h += 4
                    }
                    return {
                        earliestPresentationTime: 0,
                        timescale: d,
                        version: s,
                        referencesCount: u,
                        references: o,
                        moovEndOffset: i
                    }
                }, e.parseInitSegment = function (t) {
                    var r = [];
                    return e.findBox(t, ["moov", "trak"]).forEach(function (t) {
                        var n = e.findBox(t, ["tkhd"])[0];
                        if (n) {
                            var a = n.data[n.start], o = 0 === a ? 12 : 20, s = e.readUint32(n, o),
                                d = e.findBox(t, ["mdia", "mdhd"])[0];
                            if (d) {
                                o = 0 === (a = d.data[d.start]) ? 12 : 20;
                                var l = e.readUint32(d, o), u = e.findBox(t, ["mdia", "hdlr"])[0];
                                if (u) {
                                    var c = {
                                        soun: "audio",
                                        vide: "video"
                                    }[e.bin2str(u.data.subarray(u.start + 8, u.start + 12))];
                                    if (c) {
                                        var h = e.findBox(t, ["mdia", "minf", "stbl", "stsd"]);
                                        if (h.length) {
                                            h = h[0];
                                            var f = e.bin2str(h.data.subarray(h.start + 12, h.start + 16));
                                            i.b.log("MP4Demuxer:" + c + ":" + f + " found")
                                        }
                                        r[s] = {timescale: l, type: c}, r[c] = {timescale: l, id: s}
                                    }
                                }
                            }
                        }
                    }), r
                }, e.getStartDTS = function (t, r) {
                    var i, n, a = void 0;
                    return a = e.findBox(r, ["moof", "traf"]), i = [].concat.apply([], a.map(function (r) {
                        return e.findBox(r, ["tfhd"]).map(function (i) {
                            var n, a;
                            return n = e.readUint32(i, 4), a = t[n].timescale || 9e4, e.findBox(r, ["tfdt"]).map(function (t) {
                                var r, i = void 0;
                                return r = t.data[t.start], i = e.readUint32(t, 4), 1 === r && (i *= Math.pow(2, 32), i += e.readUint32(t, 8)), i
                            })[0] / a
                        })
                    })), n = Math.min.apply(null, i), isFinite(n) ? n : 0
                }, e.offsetStartDTS = function (t, r, i) {
                    e.findBox(r, ["moof", "traf"]).map(function (r) {
                        return e.findBox(r, ["tfhd"]).map(function (n) {
                            var o = e.readUint32(n, 4), s = t[o].timescale || 9e4;
                            e.findBox(r, ["tfdt"]).map(function (t) {
                                var r = t.data[t.start], n = e.readUint32(t, 4);
                                if (0 === r) e.writeUint32(t, 4, n - i * s); else {
                                    n *= Math.pow(2, 32), n += e.readUint32(t, 8), n -= i * s, n = Math.max(n, 0);
                                    var o = Math.floor(n / (a + 1)), d = Math.floor(n % (a + 1));
                                    e.writeUint32(t, 4, o), e.writeUint32(t, 8, d)
                                }
                            })
                        })
                    })
                }, e.prototype.append = function (t, r, i, a) {
                    var o = this.initData;
                    o || (this.resetInitSegment(t, this.audioCodec, this.videoCodec, !1), o = this.initData);
                    var s, d = this.initPTS;
                    if (d === undefined) {
                        var l = e.getStartDTS(o, t);
                        this.initPTS = d = l - r, this.observer.trigger(n.a.INIT_PTS_FOUND, {initPTS: d})
                    }
                    e.offsetStartDTS(o, t, d), s = e.getStartDTS(o, t), this.remuxer.remux(o.audio, o.video, null, null, s, i, a, t)
                }, e.prototype.destroy = function () {
                }, e
            }();
            t.a = o
        }, function (e, t, r) {
            "use strict";
            var i = r(1), n = r(2);
            var a = function () {
                function e(t, r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.subtle = t, this.aesIV = r
                }

                return e.prototype.decrypt = function (e, t) {
                    return this.subtle.decrypt({name: "AES-CBC", iv: this.aesIV}, t, e)
                }, e
            }();
            var o = function () {
                function e(t, r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.subtle = t, this.key = r
                }

                return e.prototype.expandKey = function () {
                    return this.subtle.importKey("raw", this.key, {name: "AES-CBC"}, !1, ["encrypt", "decrypt"])
                }, e
            }();
            var s = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.initTable()
                }

                return e.prototype.uint8ArrayToUint32Array_ = function (e) {
                    for (var t = new DataView(e), r = new Uint32Array(4), i = 0; i < 4; i++) r[i] = t.getUint32(4 * i);
                    return r
                }, e.prototype.initTable = function () {
                    var e = this.sBox, t = this.invSBox, r = this.subMix, i = r[0], n = r[1], a = r[2], o = r[3],
                        s = this.invSubMix, d = s[0], l = s[1], u = s[2], c = s[3], h = new Uint32Array(256), f = 0,
                        p = 0, v = 0;
                    for (v = 0; v < 256; v++) h[v] = v < 128 ? v << 1 : v << 1 ^ 283;
                    for (v = 0; v < 256; v++) {
                        var y = p ^ p << 1 ^ p << 2 ^ p << 3 ^ p << 4;
                        y = y >>> 8 ^ 255 & y ^ 99, e[f] = y, t[y] = f;
                        var g = h[f], m = h[g], E = h[m], _ = 257 * h[y] ^ 16843008 * y;
                        i[f] = _ << 24 | _ >>> 8, n[f] = _ << 16 | _ >>> 16, a[f] = _ << 8 | _ >>> 24, o[f] = _, _ = 16843009 * E ^ 65537 * m ^ 257 * g ^ 16843008 * f, d[y] = _ << 24 | _ >>> 8, l[y] = _ << 16 | _ >>> 16, u[y] = _ << 8 | _ >>> 24, c[y] = _, f ? (f = g ^ h[h[h[E ^ g]]], p ^= h[h[p]]) : f = p = 1
                    }
                }, e.prototype.expandKey = function (e) {
                    for (var t = this.uint8ArrayToUint32Array_(e), r = !0, i = 0; i < t.length && r;) r = t[i] === this.key[i], i++;
                    if (!r) {
                        this.key = t;
                        var n = this.keySize = t.length;
                        if (4 !== n && 6 !== n && 8 !== n) throw new Error("Invalid aes key size=" + n);
                        var a = this.ksRows = 4 * (n + 6 + 1), o = void 0, s = void 0,
                            d = this.keySchedule = new Uint32Array(a), l = this.invKeySchedule = new Uint32Array(a),
                            u = this.sBox, c = this.rcon, h = this.invSubMix, f = h[0], p = h[1], v = h[2], y = h[3],
                            g = void 0, m = void 0;
                        for (o = 0; o < a; o++) o < n ? g = d[o] = t[o] : (m = g, o % n == 0 ? (m = u[(m = m << 8 | m >>> 24) >>> 24] << 24 | u[m >>> 16 & 255] << 16 | u[m >>> 8 & 255] << 8 | u[255 & m], m ^= c[o / n | 0] << 24) : n > 6 && o % n == 4 && (m = u[m >>> 24] << 24 | u[m >>> 16 & 255] << 16 | u[m >>> 8 & 255] << 8 | u[255 & m]), d[o] = g = (d[o - n] ^ m) >>> 0);
                        for (s = 0; s < a; s++) o = a - s, m = 3 & s ? d[o] : d[o - 4], l[s] = s < 4 || o <= 4 ? m : f[u[m >>> 24]] ^ p[u[m >>> 16 & 255]] ^ v[u[m >>> 8 & 255]] ^ y[u[255 & m]], l[s] = l[s] >>> 0
                    }
                }, e.prototype.networkToHostOrderSwap = function (e) {
                    return e << 24 | (65280 & e) << 8 | (16711680 & e) >> 8 | e >>> 24
                }, e.prototype.decrypt = function (e, t, r, i) {
                    for (var n = this.keySize + 6, a = this.invKeySchedule, o = this.invSBox, s = this.invSubMix, d = s[0], l = s[1], u = s[2], c = s[3], h = this.uint8ArrayToUint32Array_(r), f = h[0], p = h[1], v = h[2], y = h[3], g = new Int32Array(e), m = new Int32Array(g.length), E = void 0, _ = void 0, T = void 0, A = void 0, b = void 0, w = void 0, S = void 0, R = void 0, D = void 0, L = void 0, I = void 0, C = void 0, x = void 0, k = void 0, P = this.networkToHostOrderSwap; t < g.length;) {
                        for (D = P(g[t]), L = P(g[t + 1]), I = P(g[t + 2]), C = P(g[t + 3]), b = D ^ a[0], w = C ^ a[1], S = I ^ a[2], R = L ^ a[3], x = 4, k = 1; k < n; k++) E = d[b >>> 24] ^ l[w >> 16 & 255] ^ u[S >> 8 & 255] ^ c[255 & R] ^ a[x], _ = d[w >>> 24] ^ l[S >> 16 & 255] ^ u[R >> 8 & 255] ^ c[255 & b] ^ a[x + 1], T = d[S >>> 24] ^ l[R >> 16 & 255] ^ u[b >> 8 & 255] ^ c[255 & w] ^ a[x + 2], A = d[R >>> 24] ^ l[b >> 16 & 255] ^ u[w >> 8 & 255] ^ c[255 & S] ^ a[x + 3], b = E, w = _, S = T, R = A, x += 4;
                        E = o[b >>> 24] << 24 ^ o[w >> 16 & 255] << 16 ^ o[S >> 8 & 255] << 8 ^ o[255 & R] ^ a[x], _ = o[w >>> 24] << 24 ^ o[S >> 16 & 255] << 16 ^ o[R >> 8 & 255] << 8 ^ o[255 & b] ^ a[x + 1], T = o[S >>> 24] << 24 ^ o[R >> 16 & 255] << 16 ^ o[b >> 8 & 255] << 8 ^ o[255 & w] ^ a[x + 2], A = o[R >>> 24] << 24 ^ o[b >> 16 & 255] << 16 ^ o[w >> 8 & 255] << 8 ^ o[255 & S] ^ a[x + 3], x += 3, m[t] = P(E ^ f), m[t + 1] = P(A ^ p), m[t + 2] = P(T ^ v), m[t + 3] = P(_ ^ y), f = D, p = L, v = I, y = C, t += 4
                    }
                    return i ? function (e) {
                        var t = e.byteLength, r = t && new DataView(e).getUint8(t - 1);
                        return r ? e.slice(0, t - r) : e
                    }(m.buffer) : m.buffer
                }, e.prototype.destroy = function () {
                    this.key = undefined, this.keySize = undefined, this.ksRows = undefined, this.sBox = undefined, this.invSBox = undefined, this.subMix = undefined, this.invSubMix = undefined, this.keySchedule = undefined, this.invKeySchedule = undefined, this.rcon = undefined
                }, e
            }(), d = r(0), l = r(4);
            var u = Object(l.a)(), c = function () {
                function e(t, r) {
                    var i = (arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {}).removePKCS7Padding,
                        n = i === undefined || i;
                    if (function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.logEnabled = !0, this.observer = t, this.config = r, this.removePKCS7Padding = n, n) try {
                        var a = u.crypto;
                        a && (this.subtle = a.subtle || a.webkitSubtle)
                    } catch (o) {
                    }
                    this.disableWebCrypto = !this.subtle
                }

                return e.prototype.isSync = function () {
                    return this.disableWebCrypto && this.config.enableSoftwareAES
                }, e.prototype.decrypt = function (e, t, r, i) {
                    var n = this;
                    if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                        this.logEnabled && (d.b.log("JS AES decrypt"), this.logEnabled = !1);
                        var l = this.decryptor;
                        l || (this.decryptor = l = new s), l.expandKey(t), i(l.decrypt(e, 0, r, this.removePKCS7Padding))
                    } else {
                        this.logEnabled && (d.b.log("WebCrypto AES decrypt"), this.logEnabled = !1);
                        var u = this.subtle;
                        this.key !== t && (this.key = t, this.fastAesKey = new o(u, t)), this.fastAesKey.expandKey().then(function (o) {
                            new a(u, r).decrypt(e, o)["catch"](function (a) {
                                n.onWebCryptoError(a, e, t, r, i)
                            }).then(function (e) {
                                i(e)
                            })
                        })["catch"](function (a) {
                            n.onWebCryptoError(a, e, t, r, i)
                        })
                    }
                }, e.prototype.onWebCryptoError = function (e, t, r, a, o) {
                    this.config.enableSoftwareAES ? (d.b.log("WebCrypto Error, disable WebCrypto API"), this.disableWebCrypto = !0, this.logEnabled = !0, this.decrypt(t, r, a, o)) : (d.b.error("decrypting error : " + e.message), this.observer.trigger(i.a.ERROR, {
                        type: n.b.MEDIA_ERROR,
                        details: n.a.FRAG_DECRYPT_ERROR,
                        fatal: !0,
                        reason: e.message
                    }))
                }, e.prototype.destroy = function () {
                    var e = this.decryptor;
                    e && (e.destroy(), this.decryptor = undefined)
                }, e
            }();

            function h(e, t) {
                return 255 === e[t] && 240 == (246 & e[t + 1])
            }

            function f(e, t) {
                return 1 & e[t + 1] ? 7 : 9
            }

            function p(e, t) {
                return (3 & e[t + 3]) << 11 | e[t + 4] << 3 | (224 & e[t + 5]) >>> 5
            }

            function v(e, t) {
                return !!(t + 1 < e.length && h(e, t))
            }

            function y(e, t) {
                if (t + 1 < e.length && h(e, t)) {
                    var r = f(e, t);
                    t + 5 < e.length && (r = p(e, t));
                    var i = t + r;
                    if (i === e.length || i + 1 < e.length && h(e, i)) return !0
                }
                return !1
            }

            function g(e, t, r, a, o) {
                if (!e.samplerate) {
                    var s = function (e, t, r, a) {
                        var o, s = void 0, l = void 0, u = void 0, c = void 0, h = navigator.userAgent.toLowerCase(),
                            f = a,
                            p = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                        if (s = 1 + ((192 & t[r + 2]) >>> 6), !((o = (60 & t[r + 2]) >>> 2) > p.length - 1)) return u = (1 & t[r + 2]) << 2, u |= (192 & t[r + 3]) >>> 6, d.b.log("manifest codec:" + a + ",ADTS data:type:" + s + ",sampleingIndex:" + o + "[" + p[o] + "Hz],channelConfig:" + u), /firefox/i.test(h) ? o >= 6 ? (s = 5, c = new Array(4), l = o - 3) : (s = 2, c = new Array(2), l = o) : -1 !== h.indexOf("android") ? (s = 2, c = new Array(2), l = o) : (s = 5, c = new Array(4), a && (-1 !== a.indexOf("mp4a.40.29") || -1 !== a.indexOf("mp4a.40.5")) || !a && o >= 6 ? l = o - 3 : ((a && -1 !== a.indexOf("mp4a.40.2") && (o >= 6 && 1 === u || /vivaldi/i.test(h)) || !a && 1 === u) && (s = 2, c = new Array(2)), l = o)), c[0] = s << 3, c[0] |= (14 & o) >> 1, c[1] |= (1 & o) << 7, c[1] |= u << 3, 5 === s && (c[1] |= (14 & l) >> 1, c[2] = (1 & l) << 7, c[2] |= 8, c[3] = 0), {
                            config: c,
                            samplerate: p[o],
                            channelCount: u,
                            codec: "mp4a.40." + s,
                            manifestCodec: f
                        };
                        e.trigger(i.a.ERROR, {
                            type: n.b.MEDIA_ERROR,
                            details: n.a.FRAG_PARSING_ERROR,
                            fatal: !0,
                            reason: "invalid ADTS sampling index:" + o
                        })
                    }(t, r, a, o);
                    e.config = s.config, e.samplerate = s.samplerate, e.channelCount = s.channelCount, e.codec = s.codec, e.manifestCodec = s.manifestCodec, d.b.log("parsed codec:" + e.codec + ",rate:" + s.samplerate + ",nb channel:" + s.channelCount)
                }
            }

            function m(e) {
                return 9216e4 / e
            }

            function E(e, t, r, i, n) {
                var a = function (e, t, r, i, n) {
                    var a, o = void 0, s = e.length;
                    return a = f(e, t), o = p(e, t), (o -= a) > 0 && t + a + o <= s ? {
                        headerLength: a,
                        frameLength: o,
                        stamp: r + i * n
                    } : undefined
                }(t, r, i, n, m(e.samplerate));
                if (a) {
                    var o = a.stamp, s = a.headerLength, d = a.frameLength,
                        l = {unit: t.subarray(r + s, r + s + d), pts: o, dts: o};
                    return e.samples.push(l), e.len += d, {sample: l, length: d + s}
                }
                return undefined
            }

            var _ = r(7);
            var T = function () {
                function e(t, r, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.observer = t, this.config = i, this.remuxer = r
                }

                return e.prototype.resetInitSegment = function (e, t, r, i) {
                    this._audioTrack = {
                        container: "audio/adts",
                        type: "audio",
                        id: 0,
                        sequenceNumber: 0,
                        isAAC: !0,
                        samples: [],
                        len: 0,
                        manifestCodec: t,
                        duration: i,
                        inputTimeScale: 9e4
                    }
                }, e.prototype.resetTimeStamp = function () {
                }, e.probe = function (e) {
                    if (!e) return !1;
                    for (var t = (_.a.getID3Data(e, 0) || []).length, r = e.length; t < r; t++) if (y(e, t)) return d.b.log("ADTS sync word found !"), !0;
                    return !1
                }, e.prototype.append = function (e, t, r, i) {
                    for (var n = this._audioTrack, a = _.a.getID3Data(e, 0) || [], o = _.a.getTimeStamp(a), s = o ? 90 * o : 9e4 * t, l = 0, u = s, c = e.length, h = a.length, f = [{
                        pts: u,
                        dts: u,
                        data: a
                    }]; h < c - 1;) if (v(e, h) && h + 5 < c) {
                        g(n, this.observer, e, h, n.manifestCodec);
                        var p = E(n, e, h, s, l);
                        if (!p) {
                            d.b.log("Unable to parse AAC frame");
                            break
                        }
                        h += p.length, u = p.sample.pts, l++
                    } else _.a.isHeader(e, h) ? (a = _.a.getID3Data(e, h), f.push({
                        pts: u,
                        dts: u,
                        data: a
                    }), h += a.length) : h++;
                    this.remuxer.remux(n, {samples: []}, {samples: f, inputTimeScale: 9e4}, {samples: []}, t, r, i)
                }, e.prototype.destroy = function () {
                }, e
            }(), A = r(8), b = {
                BitratesMap: [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                SamplingRateMap: [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                SamplesCoefficients: [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]],
                BytesInSlot: [0, 1, 1, 4],
                appendFrame: function (e, t, r, i, n) {
                    if (r + 24 > t.length) return undefined;
                    var a = this.parseHeader(t, r);
                    if (a && r + a.frameLength <= t.length) {
                        var o = i + n * (9e4 * a.samplesPerFrame / a.sampleRate),
                            s = {unit: t.subarray(r, r + a.frameLength), pts: o, dts: o};
                        return e.config = [], e.channelCount = a.channelCount, e.samplerate = a.sampleRate, e.samples.push(s), e.len += a.frameLength, {
                            sample: s,
                            length: a.frameLength
                        }
                    }
                    return undefined
                },
                parseHeader: function (e, t) {
                    var r = e[t + 1] >> 3 & 3, i = e[t + 1] >> 1 & 3, n = e[t + 2] >> 4 & 15, a = e[t + 2] >> 2 & 3,
                        o = e[t + 2] >> 1 & 1;
                    if (1 !== r && 0 !== n && 15 !== n && 3 !== a) {
                        var s = 3 === r ? 3 - i : 3 === i ? 3 : 4, d = 1e3 * b.BitratesMap[14 * s + n - 1],
                            l = 3 === r ? 0 : 2 === r ? 1 : 2, u = b.SamplingRateMap[3 * l + a],
                            c = e[t + 3] >> 6 == 3 ? 1 : 2, h = b.SamplesCoefficients[r][i], f = b.BytesInSlot[i],
                            p = 8 * h * f;
                        return {
                            sampleRate: u,
                            channelCount: c,
                            frameLength: parseInt(h * d / u + o, 10) * f,
                            samplesPerFrame: p
                        }
                    }
                    return undefined
                },
                isHeaderPattern: function (e, t) {
                    return 255 === e[t] && 224 == (224 & e[t + 1]) && 0 != (6 & e[t + 1])
                },
                isHeader: function (e, t) {
                    return !!(t + 1 < e.length && this.isHeaderPattern(e, t))
                },
                probe: function (e, t) {
                    if (t + 1 < e.length && this.isHeaderPattern(e, t)) {
                        var r = this.parseHeader(e, t), i = 4;
                        r && r.frameLength && (i = r.frameLength);
                        var n = t + i;
                        if (n === e.length || n + 1 < e.length && this.isHeaderPattern(e, n)) return !0
                    }
                    return !1
                }
            }, w = b;
            var S = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.data = t, this.bytesAvailable = t.byteLength, this.word = 0, this.bitsAvailable = 0
                }

                return e.prototype.loadWord = function () {
                    var e = this.data, t = this.bytesAvailable, r = e.byteLength - t, i = new Uint8Array(4),
                        n = Math.min(4, t);
                    if (0 === n) throw new Error("no bytes available");
                    i.set(e.subarray(r, r + n)), this.word = new DataView(i.buffer).getUint32(0), this.bitsAvailable = 8 * n, this.bytesAvailable -= n
                }, e.prototype.skipBits = function (e) {
                    var t = void 0;
                    this.bitsAvailable > e ? (this.word <<= e, this.bitsAvailable -= e) : (e -= this.bitsAvailable, e -= (t = e >> 3) >> 3, this.bytesAvailable -= t, this.loadWord(), this.word <<= e, this.bitsAvailable -= e)
                }, e.prototype.readBits = function (e) {
                    var t = Math.min(this.bitsAvailable, e), r = this.word >>> 32 - t;
                    return e > 32 && d.b.error("Cannot read more than 32 bits at a time"), this.bitsAvailable -= t, this.bitsAvailable > 0 ? this.word <<= t : this.bytesAvailable > 0 && this.loadWord(), (t = e - t) > 0 && this.bitsAvailable ? r << t | this.readBits(t) : r
                }, e.prototype.skipLZ = function () {
                    var e = void 0;
                    for (e = 0; e < this.bitsAvailable; ++e) if (0 != (this.word & 2147483648 >>> e)) return this.word <<= e, this.bitsAvailable -= e, e;
                    return this.loadWord(), e + this.skipLZ()
                }, e.prototype.skipUEG = function () {
                    this.skipBits(1 + this.skipLZ())
                }, e.prototype.skipEG = function () {
                    this.skipBits(1 + this.skipLZ())
                }, e.prototype.readUEG = function () {
                    var e = this.skipLZ();
                    return this.readBits(e + 1) - 1
                }, e.prototype.readEG = function () {
                    var e = this.readUEG();
                    return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
                }, e.prototype.readBoolean = function () {
                    return 1 === this.readBits(1)
                }, e.prototype.readUByte = function () {
                    return this.readBits(8)
                }, e.prototype.readUShort = function () {
                    return this.readBits(16)
                }, e.prototype.readUInt = function () {
                    return this.readBits(32)
                }, e.prototype.skipScalingList = function (e) {
                    var t = 8, r = 8, i = void 0;
                    for (i = 0; i < e; i++) 0 !== r && (r = (t + this.readEG() + 256) % 256), t = 0 === r ? t : r
                }, e.prototype.readSPS = function () {
                    var e, t, r, i, n = 0, a = 0, o = 0, s = 0, d = void 0, l = void 0, u = void 0,
                        c = this.readUByte.bind(this), h = this.readBits.bind(this), f = this.readUEG.bind(this),
                        p = this.readBoolean.bind(this), v = this.skipBits.bind(this), y = this.skipEG.bind(this),
                        g = this.skipUEG.bind(this), m = this.skipScalingList.bind(this);
                    if (c(), e = c(), h(5), v(3), c(), g(), 100 === e || 110 === e || 122 === e || 244 === e || 44 === e || 83 === e || 86 === e || 118 === e || 128 === e) {
                        var E = f();
                        if (3 === E && v(1), g(), g(), v(1), p()) for (l = 3 !== E ? 8 : 12, u = 0; u < l; u++) p() && m(u < 6 ? 16 : 64)
                    }
                    g();
                    var _ = f();
                    if (0 === _) f(); else if (1 === _) for (v(1), y(), y(), d = f(), u = 0; u < d; u++) y();
                    g(), v(1), t = f(), r = f(), 0 === (i = h(1)) && v(1), v(1), p() && (n = f(), a = f(), o = f(), s = f());
                    var T = [1, 1];
                    if (p() && p()) switch (c()) {
                        case 1:
                            T = [1, 1];
                            break;
                        case 2:
                            T = [12, 11];
                            break;
                        case 3:
                            T = [10, 11];
                            break;
                        case 4:
                            T = [16, 11];
                            break;
                        case 5:
                            T = [40, 33];
                            break;
                        case 6:
                            T = [24, 11];
                            break;
                        case 7:
                            T = [20, 11];
                            break;
                        case 8:
                            T = [32, 11];
                            break;
                        case 9:
                            T = [80, 33];
                            break;
                        case 10:
                            T = [18, 11];
                            break;
                        case 11:
                            T = [15, 11];
                            break;
                        case 12:
                            T = [64, 33];
                            break;
                        case 13:
                            T = [160, 99];
                            break;
                        case 14:
                            T = [4, 3];
                            break;
                        case 15:
                            T = [3, 2];
                            break;
                        case 16:
                            T = [2, 1];
                            break;
                        case 255:
                            T = [c() << 8 | c(), c() << 8 | c()]
                    }
                    return {
                        width: Math.ceil(16 * (t + 1) - 2 * n - 2 * a),
                        height: (2 - i) * (r + 1) * 16 - (i ? 2 : 4) * (o + s),
                        pixelRatio: T
                    }
                }, e.prototype.readSliceType = function () {
                    return this.readUByte(), this.readUEG(), this.readUEG()
                }, e
            }();
            var R = function () {
                function e(t, r, i, n) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.decryptdata = i, this.discardEPB = n, this.decrypter = new c(t, r, {removePKCS7Padding: !1})
                }

                return e.prototype.decryptBuffer = function (e, t) {
                    this.decrypter.decrypt(e, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, t)
                }, e.prototype.decryptAacSample = function (e, t, r, i) {
                    var n = e[t].unit, a = n.subarray(16, n.length - n.length % 16),
                        o = a.buffer.slice(a.byteOffset, a.byteOffset + a.length), s = this;
                    this.decryptBuffer(o, function (a) {
                        a = new Uint8Array(a), n.set(a, 16), i || s.decryptAacSamples(e, t + 1, r)
                    })
                }, e.prototype.decryptAacSamples = function (e, t, r) {
                    for (; ; t++) {
                        if (t >= e.length) return void r();
                        if (!(e[t].unit.length < 32)) {
                            var i = this.decrypter.isSync();
                            if (this.decryptAacSample(e, t, r, i), !i) return
                        }
                    }
                }, e.prototype.getAvcEncryptedData = function (e) {
                    for (var t = 16 * Math.floor((e.length - 48) / 160) + 16, r = new Int8Array(t), i = 0, n = 32; n <= e.length - 16; n += 160, i += 16) r.set(e.subarray(n, n + 16), i);
                    return r
                }, e.prototype.getAvcDecryptedUnit = function (e, t) {
                    t = new Uint8Array(t);
                    for (var r = 0, i = 32; i <= e.length - 16; i += 160, r += 16) e.set(t.subarray(r, r + 16), i);
                    return e
                }, e.prototype.decryptAvcSample = function (e, t, r, i, n, a) {
                    var o = this.discardEPB(n.data), s = this.getAvcEncryptedData(o), d = this;
                    this.decryptBuffer(s.buffer, function (s) {
                        n.data = d.getAvcDecryptedUnit(o, s), a || d.decryptAvcSamples(e, t, r + 1, i)
                    })
                }, e.prototype.decryptAvcSamples = function (e, t, r, i) {
                    for (; ; t++, r = 0) {
                        if (t >= e.length) return void i();
                        for (var n = e[t].units; !(r >= n.length); r++) {
                            var a = n[r];
                            if (!(a.length <= 48 || 1 !== a.type && 5 !== a.type)) {
                                var o = this.decrypter.isSync();
                                if (this.decryptAvcSample(e, t, r, i, a, o), !o) return
                            }
                        }
                    }
                }, e
            }();
            var D = {video: 1, audio: 2, id3: 3, text: 4}, L = function () {
                function e(t, r, i, n) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.observer = t, this.config = i, this.typeSupported = n, this.remuxer = r, this.sampleAes = null
                }

                return e.prototype.setDecryptData = function (e) {
                    null != e && null != e.key && "SAMPLE-AES" === e.method ? this.sampleAes = new R(this.observer, this.config, e, this.discardEPB) : this.sampleAes = null
                }, e.probe = function (t) {
                    var r = e._syncOffset(t);
                    return !(r < 0) && (r && d.b.warn("MPEG2-TS detected but first sync word found @ offset " + r + ", junk ahead ?"), !0)
                }, e._syncOffset = function (e) {
                    for (var t = Math.min(1e3, e.length - 564), r = 0; r < t;) {
                        if (71 === e[r] && 71 === e[r + 188] && 71 === e[r + 376]) return r;
                        r++
                    }
                    return -1
                }, e.createTrack = function (e, t) {
                    return {
                        container: "video" === e || "audio" === e ? "video/mp2t" : undefined,
                        type: e,
                        id: D[e],
                        pid: -1,
                        inputTimeScale: 9e4,
                        sequenceNumber: 0,
                        samples: [],
                        len: 0,
                        dropped: "video" === e ? 0 : undefined,
                        isAAC: "audio" === e || undefined,
                        duration: "audio" === e ? t : undefined
                    }
                }, e.prototype.resetInitSegment = function (t, r, i, n) {
                    this.pmtParsed = !1, this._pmtId = -1, this._avcTrack = e.createTrack("video", n), this._audioTrack = e.createTrack("audio", n), this._id3Track = e.createTrack("id3", n), this._txtTrack = e.createTrack("text", n), this.aacOverFlow = null, this.aacLastPTS = null, this.avcSample = null, this.audioCodec = r, this.videoCodec = i, this._duration = n
                }, e.prototype.resetTimeStamp = function () {
                }, e.prototype.append = function (t, r, a, o) {
                    var s = void 0, l = t.length, u = void 0, c = void 0, h = void 0, f = void 0, p = !1;
                    this.contiguous = a;
                    var v = this.pmtParsed, y = this._avcTrack, g = this._audioTrack, m = this._id3Track, E = y.pid,
                        _ = g.pid, T = m.pid, A = this._pmtId, b = y.pesData, w = g.pesData, S = m.pesData,
                        R = this._parsePAT, D = this._parsePMT, L = this._parsePES, I = this._parseAVCPES.bind(this),
                        C = this._parseAACPES.bind(this), x = this._parseMPEGPES.bind(this),
                        k = this._parseID3PES.bind(this), P = e._syncOffset(t);
                    for (l -= (l + P) % 188, s = P; s < l; s += 188) if (71 === t[s]) {
                        if (u = !!(64 & t[s + 1]), c = ((31 & t[s + 1]) << 8) + t[s + 2], (48 & t[s + 3]) >> 4 > 1) {
                            if ((h = s + 5 + t[s + 4]) === s + 188) continue
                        } else h = s + 4;
                        switch (c) {
                            case E:
                                u && (b && (f = L(b)) && f.pts !== undefined && I(f, !1), b = {
                                    data: [],
                                    size: 0
                                }), b && (b.data.push(t.subarray(h, s + 188)), b.size += s + 188 - h);
                                break;
                            case _:
                                u && (w && (f = L(w)) && f.pts !== undefined && (g.isAAC ? C(f) : x(f)), w = {
                                    data: [],
                                    size: 0
                                }), w && (w.data.push(t.subarray(h, s + 188)), w.size += s + 188 - h);
                                break;
                            case T:
                                u && (S && (f = L(S)) && f.pts !== undefined && k(f), S = {
                                    data: [],
                                    size: 0
                                }), S && (S.data.push(t.subarray(h, s + 188)), S.size += s + 188 - h);
                                break;
                            case 0:
                                u && (h += t[h] + 1), A = this._pmtId = R(t, h);
                                break;
                            case A:
                                u && (h += t[h] + 1);
                                var O = D(t, h, !0 === this.typeSupported.mpeg || !0 === this.typeSupported.mp3, null != this.sampleAes);
                                (E = O.avc) > 0 && (y.pid = E), (_ = O.audio) > 0 && (g.pid = _, g.isAAC = O.isAAC), (T = O.id3) > 0 && (m.pid = T), p && !v && (d.b.log("reparse from beginning"), p = !1, s = P - 188), v = this.pmtParsed = !0;
                                break;
                            case 17:
                            case 8191:
                                break;
                            default:
                                p = !0
                        }
                    } else this.observer.trigger(i.a.ERROR, {
                        type: n.b.MEDIA_ERROR,
                        details: n.a.FRAG_PARSING_ERROR,
                        fatal: !1,
                        reason: "TS packet did not start with 0x47"
                    });
                    b && (f = L(b)) && f.pts !== undefined ? (I(f, !0), y.pesData = null) : y.pesData = b, w && (f = L(w)) && f.pts !== undefined ? (g.isAAC ? C(f) : x(f), g.pesData = null) : (w && w.size && d.b.log("last AAC PES packet truncated,might overlap between fragments"), g.pesData = w), S && (f = L(S)) && f.pts !== undefined ? (k(f), m.pesData = null) : m.pesData = S, null == this.sampleAes ? this.remuxer.remux(g, y, m, this._txtTrack, r, a, o) : this.decryptAndRemux(g, y, m, this._txtTrack, r, a, o)
                }, e.prototype.decryptAndRemux = function (e, t, r, i, n, a, o) {
                    if (e.samples && e.isAAC) {
                        var s = this;
                        this.sampleAes.decryptAacSamples(e.samples, 0, function () {
                            s.decryptAndRemuxAvc(e, t, r, i, n, a, o)
                        })
                    } else this.decryptAndRemuxAvc(e, t, r, i, n, a, o)
                }, e.prototype.decryptAndRemuxAvc = function (e, t, r, i, n, a, o) {
                    if (t.samples) {
                        var s = this;
                        this.sampleAes.decryptAvcSamples(t.samples, 0, 0, function () {
                            s.remuxer.remux(e, t, r, i, n, a, o)
                        })
                    } else this.remuxer.remux(e, t, r, i, n, a, o)
                }, e.prototype.destroy = function () {
                    this._initPTS = this._initDTS = undefined, this._duration = 0
                }, e.prototype._parsePAT = function (e, t) {
                    return (31 & e[t + 10]) << 8 | e[t + 11]
                }, e.prototype._parsePMT = function (e, t, r, i) {
                    var n, a = void 0, o = {audio: -1, avc: -1, id3: -1, isAAC: !0};
                    for (n = t + 3 + ((15 & e[t + 1]) << 8 | e[t + 2]) - 4, t += 12 + ((15 & e[t + 10]) << 8 | e[t + 11]); t < n;) {
                        switch (a = (31 & e[t + 1]) << 8 | e[t + 2], e[t]) {
                            case 207:
                                if (!i) {
                                    d.b.log("unkown stream type:" + e[t]);
                                    break
                                }
                            case 15:
                                -1 === o.audio && (o.audio = a);
                                break;
                            case 21:
                                -1 === o.id3 && (o.id3 = a);
                                break;
                            case 219:
                                if (!i) {
                                    d.b.log("unkown stream type:" + e[t]);
                                    break
                                }
                            case 27:
                                -1 === o.avc && (o.avc = a);
                                break;
                            case 3:
                            case 4:
                                r ? -1 === o.audio && (o.audio = a, o.isAAC = !1) : d.b.log("MPEG audio found, not supported in this browser for now");
                                break;
                            case 36:
                                d.b.warn("HEVC stream type found, not supported for now");
                                break;
                            default:
                                d.b.log("unkown stream type:" + e[t])
                        }
                        t += 5 + ((15 & e[t + 3]) << 8 | e[t + 4])
                    }
                    return o
                }, e.prototype._parsePES = function (e) {
                    var t = 0, r = void 0, i = void 0, n = void 0, a = void 0, o = void 0, s = void 0, l = void 0,
                        u = void 0, c = e.data;
                    if (!e || 0 === e.size) return null;
                    for (; c[0].length < 19 && c.length > 1;) {
                        var h = new Uint8Array(c[0].length + c[1].length);
                        h.set(c[0]), h.set(c[1], c[0].length), c[0] = h, c.splice(1, 1)
                    }
                    if (1 === ((r = c[0])[0] << 16) + (r[1] << 8) + r[2]) {
                        if ((n = (r[4] << 8) + r[5]) && n > e.size - 6) return null;
                        192 & (i = r[7]) && ((s = 536870912 * (14 & r[9]) + 4194304 * (255 & r[10]) + 16384 * (254 & r[11]) + 128 * (255 & r[12]) + (254 & r[13]) / 2) > 4294967295 && (s -= 8589934592), 64 & i ? ((l = 536870912 * (14 & r[14]) + 4194304 * (255 & r[15]) + 16384 * (254 & r[16]) + 128 * (255 & r[17]) + (254 & r[18]) / 2) > 4294967295 && (l -= 8589934592), s - l > 54e5 && (d.b.warn(Math.round((s - l) / 9e4) + "s delta between PTS and DTS, align them"), s = l)) : l = s), u = (a = r[8]) + 9, e.size -= u, o = new Uint8Array(e.size);
                        for (var f = 0, p = c.length; f < p; f++) {
                            var v = (r = c[f]).byteLength;
                            if (u) {
                                if (u > v) {
                                    u -= v;
                                    continue
                                }
                                r = r.subarray(u), v -= u, u = 0
                            }
                            o.set(r, t), t += v
                        }
                        return n && (n -= a + 3), {data: o, pts: s, dts: l, len: n}
                    }
                    return null
                }, e.prototype.pushAccesUnit = function (e, t) {
                    if (e.units.length && e.frame) {
                        var r = t.samples, i = r.length;
                        !this.config.forceKeyFrameOnDiscontinuity || !0 === e.key || t.sps && (i || this.contiguous) ? (e.id = i, r.push(e)) : t.dropped++
                    }
                    e.debug.length && d.b.log(e.pts + "/" + e.dts + ":" + e.debug)
                }, e.prototype._parseAVCPES = function (e, t) {
                    var r = this, i = this._avcTrack, n = this._parseAVCNALu(e.data), a = void 0, o = this.avcSample,
                        s = void 0, d = !1, l = void 0, u = this.pushAccesUnit.bind(this), c = function (e, t, r, i) {
                            return {key: e, pts: t, dts: r, units: [], debug: i}
                        };
                    e.data = null, o && n.length && !i.audFound && (u(o, i), o = this.avcSample = c(!1, e.pts, e.dts, "")), n.forEach(function (t) {
                        switch (t.type) {
                            case 1:
                                s = !0, o || (o = r.avcSample = c(!0, e.pts, e.dts, "")), o.frame = !0;
                                var n = t.data;
                                if (d && n.length > 4) {
                                    var h = new S(n).readSliceType();
                                    2 !== h && 4 !== h && 7 !== h && 9 !== h || (o.key = !0)
                                }
                                break;
                            case 5:
                                s = !0, o || (o = r.avcSample = c(!0, e.pts, e.dts, "")), o.key = !0, o.frame = !0;
                                break;
                            case 6:
                                s = !0, (a = new S(r.discardEPB(t.data))).readUByte();
                                for (var f = 0, p = 0, v = !1, y = 0; !v && a.bytesAvailable > 1;) {
                                    f = 0;
                                    do {
                                        f += y = a.readUByte()
                                    } while (255 === y);
                                    p = 0;
                                    do {
                                        p += y = a.readUByte()
                                    } while (255 === y);
                                    if (4 === f && 0 !== a.bytesAvailable) {
                                        if (v = !0, 181 === a.readUByte()) if (49 === a.readUShort()) if (1195456820 === a.readUInt()) if (3 === a.readUByte()) {
                                            var g = a.readUByte(), m = 31 & g, E = [g, a.readUByte()];
                                            for (l = 0; l < m; l++) E.push(a.readUByte()), E.push(a.readUByte()), E.push(a.readUByte());
                                            r._insertSampleInOrder(r._txtTrack.samples, {type: 3, pts: e.pts, bytes: E})
                                        }
                                    } else if (p < a.bytesAvailable) for (l = 0; l < p; l++) a.readUByte()
                                }
                                break;
                            case 7:
                                if (s = !0, d = !0, !i.sps) {
                                    var _ = (a = new S(t.data)).readSPS();
                                    i.width = _.width, i.height = _.height, i.pixelRatio = _.pixelRatio, i.sps = [t.data], i.duration = r._duration;
                                    var T = t.data.subarray(1, 4), A = "avc1.";
                                    for (l = 0; l < 3; l++) {
                                        var b = T[l].toString(16);
                                        b.length < 2 && (b = "0" + b), A += b
                                    }
                                    i.codec = A
                                }
                                break;
                            case 8:
                                s = !0, i.pps || (i.pps = [t.data]);
                                break;
                            case 9:
                                s = !1, i.audFound = !0, o && u(o, i), o = r.avcSample = c(!1, e.pts, e.dts, "");
                                break;
                            case 12:
                                s = !1;
                                break;
                            default:
                                s = !1, o && (o.debug += "unknown NAL " + t.type + " ")
                        }
                        o && s && o.units.push(t)
                    }), t && o && (u(o, i), this.avcSample = null)
                }, e.prototype._insertSampleInOrder = function (e, t) {
                    var r = e.length;
                    if (r > 0) {
                        if (t.pts >= e[r - 1].pts) e.push(t); else for (var i = r - 1; i >= 0; i--) if (t.pts < e[i].pts) {
                            e.splice(i, 0, t);
                            break
                        }
                    } else e.push(t)
                }, e.prototype._getLastNalUnit = function () {
                    var e = this.avcSample, t = void 0;
                    if (!e || 0 === e.units.length) {
                        var r = this._avcTrack.samples;
                        e = r[r.length - 1]
                    }
                    if (e) {
                        var i = e.units;
                        t = i[i.length - 1]
                    }
                    return t
                }, e.prototype._parseAVCNALu = function (e) {
                    var t = 0, r = e.byteLength, i = void 0, n = void 0, a = this._avcTrack, o = a.naluState || 0,
                        s = o, d = [], l = void 0, u = -1, c = void 0;
                    for (-1 === o && (u = 0, c = 31 & e[0], o = 0, t = 1); t < r;) if (i = e[t++], o) if (1 !== o) if (i) if (1 === i) {
                        if (u >= 0) l = {data: e.subarray(u, t - o - 1), type: c}, d.push(l); else {
                            var h = this._getLastNalUnit();
                            if (h && (s && t <= 4 - s && h.state && (h.data = h.data.subarray(0, h.data.byteLength - s)), (n = t - o - 1) > 0)) {
                                var f = new Uint8Array(h.data.byteLength + n);
                                f.set(h.data, 0), f.set(e.subarray(0, n), h.data.byteLength), h.data = f
                            }
                        }
                        t < r ? (u = t, c = 31 & e[t], o = 0) : o = -1
                    } else o = 0; else o = 3; else o = i ? 0 : 2; else o = i ? 0 : 1;
                    if (u >= 0 && o >= 0 && (l = {
                        data: e.subarray(u, r),
                        type: c,
                        state: o
                    }, d.push(l)), 0 === d.length) {
                        var p = this._getLastNalUnit();
                        if (p) {
                            var v = new Uint8Array(p.data.byteLength + e.byteLength);
                            v.set(p.data, 0), v.set(e, p.data.byteLength), p.data = v
                        }
                    }
                    return a.naluState = o, d
                }, e.prototype.discardEPB = function (e) {
                    for (var t, r = e.byteLength, i = [], n = 1, a = void 0; n < r - 2;) 0 === e[n] && 0 === e[n + 1] && 3 === e[n + 2] ? (i.push(n + 2), n += 2) : n++;
                    if (0 === i.length) return e;
                    t = r - i.length, a = new Uint8Array(t);
                    var o = 0;
                    for (n = 0; n < t; o++, n++) o === i[0] && (o++, i.shift()), a[n] = e[o];
                    return a
                }, e.prototype._parseAACPES = function (e) {
                    var t, r, a = this._audioTrack, o = e.data, s = e.pts, l = this.aacOverFlow, u = this.aacLastPTS,
                        c = void 0, h = void 0, f = void 0;
                    if (l) {
                        var p = new Uint8Array(l.byteLength + o.byteLength);
                        p.set(l, 0), p.set(o, l.byteLength), o = p
                    }
                    for (h = 0, r = o.length; h < r - 1 && !v(o, h); h++) ;
                    if (h) {
                        var y = void 0, _ = void 0;
                        if (h < r - 1 ? (y = "AAC PES did not start with ADTS header,offset:" + h, _ = !1) : (y = "no ADTS header found in AAC PES", _ = !0), d.b.warn("parsing error:" + y), this.observer.trigger(i.a.ERROR, {
                            type: n.b.MEDIA_ERROR,
                            details: n.a.FRAG_PARSING_ERROR,
                            fatal: _,
                            reason: y
                        }), _) return
                    }
                    if (g(a, this.observer, o, h, this.audioCodec), c = 0, t = m(a.samplerate), l && u) {
                        var T = u + t;
                        Math.abs(T - s) > 1 && (d.b.log("AAC: align PTS for overlapping frames by " + Math.round((T - s) / 90)), s = T)
                    }
                    for (; h < r;) if (v(o, h) && h + 5 < r) {
                        var A = E(a, o, h, s, c);
                        if (!A) break;
                        h += A.length, f = A.sample.pts, c++
                    } else h++;
                    l = h < r ? o.subarray(h, r) : null, this.aacOverFlow = l, this.aacLastPTS = f
                }, e.prototype._parseMPEGPES = function (e) {
                    for (var t = e.data, r = t.length, i = 0, n = 0, a = e.pts; n < r;) if (w.isHeader(t, n)) {
                        var o = w.appendFrame(this._audioTrack, t, n, a, i);
                        if (!o) break;
                        n += o.length, i++
                    } else n++
                }, e.prototype._parseID3PES = function (e) {
                    this._id3Track.samples.push(e)
                }, e
            }();
            var I = function () {
                function e(t, r, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.observer = t, this.config = i, this.remuxer = r
                }

                return e.prototype.resetInitSegment = function (e, t, r, i) {
                    this._audioTrack = {
                        container: "audio/mpeg",
                        type: "audio",
                        id: -1,
                        sequenceNumber: 0,
                        isAAC: !1,
                        samples: [],
                        len: 0,
                        manifestCodec: t,
                        duration: i,
                        inputTimeScale: 9e4
                    }
                }, e.prototype.resetTimeStamp = function () {
                }, e.probe = function (e) {
                    var t = void 0, r = void 0, i = _.a.getID3Data(e, 0);
                    if (i && _.a.getTimeStamp(i) !== undefined) for (t = i.length, r = Math.min(e.length - 1, t + 100); t < r; t++) if (w.probe(e, t)) return d.b.log("MPEG Audio sync word found !"), !0;
                    return !1
                }, e.prototype.append = function (e, t, r, i) {
                    for (var n = _.a.getID3Data(e, 0), a = _.a.getTimeStamp(n), o = a ? 90 * a : 9e4 * t, s = n.length, d = e.length, l = 0, u = 0, c = this._audioTrack, h = [{
                        pts: o,
                        dts: o,
                        data: n
                    }]; s < d;) if (w.isHeader(e, s)) {
                        var f = w.appendFrame(c, e, s, o, l);
                        if (!f) break;
                        s += f.length, u = f.sample.pts, l++
                    } else _.a.isHeader(e, s) ? (n = _.a.getID3Data(e, s), h.push({
                        pts: u,
                        dts: u,
                        data: n
                    }), s += n.length) : s++;
                    this.remuxer.remux(c, {samples: []}, {samples: h, inputTimeScale: 9e4}, {samples: []}, t, r, i)
                }, e.prototype.destroy = function () {
                }, e
            }();
            var C = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return e.getSilentFrame = function (e, t) {
                    switch (e) {
                        case"mp4a.40.2":
                            if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                            if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                            if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                            if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                            if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                            if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                            break;
                        default:
                            if (1 === t) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                            if (2 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                            if (3 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                    }
                    return null
                }, e
            }();
            var x = Math.pow(2, 32) - 1, k = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return e.init = function () {
                    e.types = {
                        avc1: [],
                        avcC: [],
                        btrt: [],
                        dinf: [],
                        dref: [],
                        esds: [],
                        ftyp: [],
                        hdlr: [],
                        mdat: [],
                        mdhd: [],
                        mdia: [],
                        mfhd: [],
                        minf: [],
                        moof: [],
                        moov: [],
                        mp4a: [],
                        ".mp3": [],
                        mvex: [],
                        mvhd: [],
                        pasp: [],
                        sdtp: [],
                        stbl: [],
                        stco: [],
                        stsc: [],
                        stsd: [],
                        stsz: [],
                        stts: [],
                        tfdt: [],
                        tfhd: [],
                        traf: [],
                        trak: [],
                        trun: [],
                        trex: [],
                        tkhd: [],
                        vmhd: [],
                        smhd: []
                    };
                    var t = void 0;
                    for (t in e.types) e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                    var r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                        i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                    e.HDLR_TYPES = {video: r, audio: i};
                    var n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                        a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                    e.STTS = e.STSC = e.STCO = a, e.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), e.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), e.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), e.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                    var o = new Uint8Array([105, 115, 111, 109]), s = new Uint8Array([97, 118, 99, 49]),
                        d = new Uint8Array([0, 0, 0, 1]);
                    e.FTYP = e.box(e.types.ftyp, o, d, o, s), e.DINF = e.box(e.types.dinf, e.box(e.types.dref, n))
                }, e.box = function (e) {
                    for (var t = Array.prototype.slice.call(arguments, 1), r = 8, i = t.length, n = i, a = void 0; i--;) r += t[i].byteLength;
                    for ((a = new Uint8Array(r))[0] = r >> 24 & 255, a[1] = r >> 16 & 255, a[2] = r >> 8 & 255, a[3] = 255 & r, a.set(e, 4), i = 0, r = 8; i < n; i++) a.set(t[i], r), r += t[i].byteLength;
                    return a
                }, e.hdlr = function (t) {
                    return e.box(e.types.hdlr, e.HDLR_TYPES[t])
                }, e.mdat = function (t) {
                    return e.box(e.types.mdat, t)
                }, e.mdhd = function (t, r) {
                    r *= t;
                    var i = Math.floor(r / (x + 1)), n = Math.floor(r % (x + 1));
                    return e.box(e.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 85, 196, 0, 0]))
                }, e.mdia = function (t) {
                    return e.box(e.types.mdia, e.mdhd(t.timescale, t.duration), e.hdlr(t.type), e.minf(t))
                }, e.mfhd = function (t) {
                    return e.box(e.types.mfhd, new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t]))
                }, e.minf = function (t) {
                    return "audio" === t.type ? e.box(e.types.minf, e.box(e.types.smhd, e.SMHD), e.DINF, e.stbl(t)) : e.box(e.types.minf, e.box(e.types.vmhd, e.VMHD), e.DINF, e.stbl(t))
                }, e.moof = function (t, r, i) {
                    return e.box(e.types.moof, e.mfhd(t), e.traf(i, r))
                }, e.moov = function (t) {
                    for (var r = t.length, i = []; r--;) i[r] = e.trak(t[r]);
                    return e.box.apply(null, [e.types.moov, e.mvhd(t[0].timescale, t[0].duration)].concat(i).concat(e.mvex(t)))
                }, e.mvex = function (t) {
                    for (var r = t.length, i = []; r--;) i[r] = e.trex(t[r]);
                    return e.box.apply(null, [e.types.mvex].concat(i))
                }, e.mvhd = function (t, r) {
                    r *= t;
                    var i = Math.floor(r / (x + 1)), n = Math.floor(r % (x + 1)),
                        a = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                    return e.box(e.types.mvhd, a)
                }, e.sdtp = function (t) {
                    var r = t.samples || [], i = new Uint8Array(4 + r.length), n = void 0, a = void 0;
                    for (a = 0; a < r.length; a++) n = r[a].flags, i[a + 4] = n.dependsOn << 4 | n.isDependedOn << 2 | n.hasRedundancy;
                    return e.box(e.types.sdtp, i)
                }, e.stbl = function (t) {
                    return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.STTS), e.box(e.types.stsc, e.STSC), e.box(e.types.stsz, e.STSZ), e.box(e.types.stco, e.STCO))
                }, e.avc1 = function (t) {
                    var r = [], i = [], n = void 0, a = void 0, o = void 0;
                    for (n = 0; n < t.sps.length; n++) o = (a = t.sps[n]).byteLength, r.push(o >>> 8 & 255), r.push(255 & o), r = r.concat(Array.prototype.slice.call(a));
                    for (n = 0; n < t.pps.length; n++) o = (a = t.pps[n]).byteLength, i.push(o >>> 8 & 255), i.push(255 & o), i = i.concat(Array.prototype.slice.call(a));
                    var s = e.box(e.types.avcC, new Uint8Array([1, r[3], r[4], r[5], 255, 224 | t.sps.length].concat(r).concat([t.pps.length]).concat(i))),
                        d = t.width, l = t.height, u = t.pixelRatio[0], c = t.pixelRatio[1];
                    return e.box(e.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, d >> 8 & 255, 255 & d, l >> 8 & 255, 255 & l, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), s, e.box(e.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), e.box(e.types.pasp, new Uint8Array([u >> 24, u >> 16 & 255, u >> 8 & 255, 255 & u, c >> 24, c >> 16 & 255, c >> 8 & 255, 255 & c])))
                }, e.esds = function (e) {
                    var t = e.config.length;
                    return new Uint8Array([0, 0, 0, 0, 3, 23 + t, 0, 1, 0, 4, 15 + t, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([t]).concat(e.config).concat([6, 1, 2]))
                }, e.mp4a = function (t) {
                    var r = t.samplerate;
                    return e.box(e.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, r >> 8 & 255, 255 & r, 0, 0]), e.box(e.types.esds, e.esds(t)))
                }, e.mp3 = function (t) {
                    var r = t.samplerate;
                    return e.box(e.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, r >> 8 & 255, 255 & r, 0, 0]))
                }, e.stsd = function (t) {
                    return "audio" === t.type ? t.isAAC || "mp3" !== t.codec ? e.box(e.types.stsd, e.STSD, e.mp4a(t)) : e.box(e.types.stsd, e.STSD, e.mp3(t)) : e.box(e.types.stsd, e.STSD, e.avc1(t))
                }, e.tkhd = function (t) {
                    var r = t.id, i = t.duration * t.timescale, n = t.width, a = t.height, o = Math.floor(i / (x + 1)),
                        s = Math.floor(i % (x + 1));
                    return e.box(e.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 0, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, n >> 8 & 255, 255 & n, 0, 0, a >> 8 & 255, 255 & a, 0, 0]))
                }, e.traf = function (t, r) {
                    var i = e.sdtp(t), n = t.id, a = Math.floor(r / (x + 1)), o = Math.floor(r % (x + 1));
                    return e.box(e.types.traf, e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n])), e.box(e.types.tfdt, new Uint8Array([1, 0, 0, 0, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, o >> 24, o >> 16 & 255, o >> 8 & 255, 255 & o])), e.trun(t, i.length + 16 + 20 + 8 + 16 + 8 + 8), i)
                }, e.trak = function (t) {
                    return t.duration = t.duration || 4294967295, e.box(e.types.trak, e.tkhd(t), e.mdia(t))
                }, e.trex = function (t) {
                    var r = t.id;
                    return e.box(e.types.trex, new Uint8Array([0, 0, 0, 0, r >> 24, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                }, e.trun = function (t, r) {
                    var i = t.samples || [], n = i.length, a = 12 + 16 * n, o = new Uint8Array(a), s = void 0,
                        d = void 0, l = void 0, u = void 0, c = void 0, h = void 0;
                    for (r += 8 + a, o.set([0, 0, 15, 1, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r], 0), s = 0; s < n; s++) l = (d = i[s]).duration, u = d.size, c = d.flags, h = d.cts, o.set([l >>> 24 & 255, l >>> 16 & 255, l >>> 8 & 255, 255 & l, u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, 255 & u, c.isLeading << 2 | c.dependsOn, c.isDependedOn << 6 | c.hasRedundancy << 4 | c.paddingValue << 1 | c.isNonSync, 61440 & c.degradPrio, 15 & c.degradPrio, h >>> 24 & 255, h >>> 16 & 255, h >>> 8 & 255, 255 & h], 12 + 16 * s);
                    return e.box(e.types.trun, o)
                }, e.initSegment = function (t) {
                    e.types || e.init();
                    var r = e.moov(t), i = void 0;
                    return (i = new Uint8Array(e.FTYP.byteLength + r.byteLength)).set(e.FTYP), i.set(r, e.FTYP.byteLength), i
                }, e
            }();
            var P = function () {
                function e(t, r, i, n) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.observer = t, this.config = r, this.typeSupported = i;
                    var a = navigator.userAgent;
                    this.isSafari = n && n.indexOf("Apple") > -1 && a && !a.match("CriOS"), this.ISGenerated = !1
                }

                return e.prototype.destroy = function () {
                }, e.prototype.resetTimeStamp = function (e) {
                    this._initPTS = this._initDTS = e
                }, e.prototype.resetInitSegment = function () {
                    this.ISGenerated = !1
                }, e.prototype.remux = function (e, t, r, n, a, o, s) {
                    if (this.ISGenerated || this.generateIS(e, t, a), this.ISGenerated) {
                        var l = e.samples.length, u = t.samples.length, c = a, h = a;
                        if (l && u) {
                            var f = (e.samples[0].dts - t.samples[0].dts) / t.inputTimeScale;
                            c += Math.max(0, f), h += Math.max(0, -f)
                        }
                        if (l) {
                            e.timescale || (d.b.warn("regenerate InitSegment as audio detected"), this.generateIS(e, t, a));
                            var p = this.remuxAudio(e, c, o, s);
                            if (u) {
                                var v = void 0;
                                p && (v = p.endPTS - p.startPTS), t.timescale || (d.b.warn("regenerate InitSegment as video detected"), this.generateIS(e, t, a)), this.remuxVideo(t, h, o, v, s)
                            }
                        } else if (u) {
                            var y = this.remuxVideo(t, h, o, 0, s);
                            y && e.codec && this.remuxEmptyAudio(e, c, o, y)
                        }
                    }
                    r.samples.length && this.remuxID3(r, a), n.samples.length && this.remuxText(n, a), this.observer.trigger(i.a.FRAG_PARSED)
                }, e.prototype.generateIS = function (e, t, r) {
                    var a = this.observer, o = e.samples, s = t.samples, l = this.typeSupported, u = "audio/mp4",
                        c = {}, h = {tracks: c}, f = this._initPTS === undefined, p = void 0, v = void 0;
                    if (f && (p = v = Infinity), e.config && o.length && (e.timescale = e.samplerate, d.b.log("audio sampling rate : " + e.samplerate), e.isAAC || (l.mpeg ? (u = "audio/mpeg", e.codec = "") : l.mp3 && (e.codec = "mp3")), c.audio = {
                        container: u,
                        codec: e.codec,
                        initSegment: !e.isAAC && l.mpeg ? new Uint8Array : k.initSegment([e]),
                        metadata: {channelCount: e.channelCount}
                    }, f && (p = v = o[0].pts - e.inputTimeScale * r)), t.sps && t.pps && s.length) {
                        var y = t.inputTimeScale;
                        t.timescale = y, c.video = {
                            container: "video/mp4",
                            codec: t.codec,
                            initSegment: k.initSegment([t]),
                            metadata: {width: t.width, height: t.height}
                        }, f && (p = Math.min(p, s[0].pts - y * r), v = Math.min(v, s[0].dts - y * r), this.observer.trigger(i.a.INIT_PTS_FOUND, {initPTS: p}))
                    }
                    Object.keys(c).length ? (a.trigger(i.a.FRAG_PARSING_INIT_SEGMENT, h), this.ISGenerated = !0, f && (this._initPTS = p, this._initDTS = v)) : a.trigger(i.a.ERROR, {
                        type: n.b.MEDIA_ERROR,
                        details: n.a.FRAG_PARSING_ERROR,
                        fatal: !1,
                        reason: "no audio/video samples found"
                    })
                }, e.prototype.remuxVideo = function (e, t, r, a, o) {
                    var s, l, u, c = 8, h = e.timescale, f = void 0, p = void 0, v = void 0, y = void 0, g = e.samples,
                        m = [], E = g.length, _ = this._PTSNormalize, T = this._initDTS, A = this.nextAvcDts,
                        b = this.isSafari;
                    if (0 !== E) {
                        b && (r |= g.length && A && (o && Math.abs(t - A / h) < .1 || Math.abs(g[0].pts - A - T) < h / 5)), r || (A = t * h), g.forEach(function (e) {
                            e.pts = _(e.pts - T, A), e.dts = _(e.dts - T, A)
                        }), g.sort(function (e, t) {
                            var r = e.dts - t.dts, i = e.pts - t.pts;
                            return r || i || e.id - t.id
                        });
                        var w = g.reduce(function (e, t) {
                            return Math.max(Math.min(e, t.pts - t.dts), -18e3)
                        }, 0);
                        if (w < 0) {
                            d.b.warn("PTS < DTS detected in video samples, shifting DTS by " + Math.round(w / 90) + " ms to overcome this issue");
                            for (var S = 0; S < g.length; S++) g[S].dts += w
                        }
                        var R = g[0];
                        y = Math.max(R.dts, 0), v = Math.max(R.pts, 0);
                        var D = Math.round((y - A) / 90);
                        r && D && (D > 1 ? d.b.log("AVC:" + D + " ms hole between fragments detected,filling it") : D < -1 && d.b.log("AVC:" + -D + " ms overlapping between fragments detected"), y = A, g[0].dts = y, v = Math.max(v - D, A), g[0].pts = v, d.b.log("Video/PTS/DTS adjusted: " + Math.round(v / 90) + "/" + Math.round(y / 90) + ",delta:" + D + " ms")), y, R = g[g.length - 1], u = Math.max(R.dts, 0), l = Math.max(R.pts, 0, u), b && (f = Math.round((u - y) / (g.length - 1)));
                        for (var L = 0, I = 0, C = 0; C < E; C++) {
                            for (var x = g[C], P = x.units, O = P.length, N = 0, M = 0; M < O; M++) N += P[M].data.length;
                            I += N, L += O, x.length = N, x.dts = b ? y + C * f : Math.max(x.dts, y), x.pts = Math.max(x.pts, x.dts)
                        }
                        var V = I + 4 * L + 8;
                        try {
                            p = new Uint8Array(V)
                        } catch (ie) {
                            return void this.observer.trigger(i.a.ERROR, {
                                type: n.b.MUX_ERROR,
                                details: n.a.REMUX_ALLOC_ERROR,
                                fatal: !1,
                                bytes: V,
                                reason: "fail allocating video mdat " + V
                            })
                        }
                        var U = new DataView(p.buffer);
                        U.setUint32(0, V), p.set(k.types.mdat, 4);
                        for (var F = 0; F < E; F++) {
                            for (var B = g[F], G = B.units, j = 0, K = void 0, $ = 0, H = G.length; $ < H; $++) {
                                var W = G[$], Y = W.data, q = W.data.byteLength;
                                U.setUint32(c, q), c += 4, p.set(Y, c), c += q, j += 4 + q
                            }
                            if (b) K = Math.max(0, f * Math.round((B.pts - B.dts) / f)); else {
                                if (F < E - 1) f = g[F + 1].dts - B.dts; else {
                                    var z = this.config, X = B.dts - g[F > 0 ? F - 1 : F].dts;
                                    if (z.stretchShortVideoTrack) {
                                        var Z = z.maxBufferHole, J = Math.floor(Z * h),
                                            Q = (a ? v + a * h : this.nextAudioPts) - B.pts;
                                        Q > J ? ((f = Q - X) < 0 && (f = X), d.b.log("It is approximately " + Q / 90 + " ms to the next segment; using duration " + f / 90 + " ms for the last video frame.")) : f = X
                                    } else f = X
                                }
                                K = Math.round(B.pts - B.dts)
                            }
                            m.push({
                                size: j,
                                duration: f,
                                cts: K,
                                flags: {
                                    isLeading: 0,
                                    isDependedOn: 0,
                                    hasRedundancy: 0,
                                    degradPrio: 0,
                                    dependsOn: B.key ? 2 : 1,
                                    isNonSync: B.key ? 0 : 1
                                }
                            })
                        }
                        this.nextAvcDts = u + f;
                        var ee = e.dropped;
                        if (e.len = 0, e.nbNalu = 0, e.dropped = 0, m.length && navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
                            var te = m[0].flags;
                            te.dependsOn = 2, te.isNonSync = 0
                        }
                        e.samples = m, s = k.moof(e.sequenceNumber++, y, e), e.samples = [];
                        var re = {
                            data1: s,
                            data2: p,
                            startPTS: v / h,
                            endPTS: (l + f) / h,
                            startDTS: y / h,
                            endDTS: this.nextAvcDts / h,
                            type: "video",
                            hasAudio: !1,
                            hasVideo: !0,
                            nb: m.length,
                            dropped: ee
                        };
                        return this.observer.trigger(i.a.FRAG_PARSING_DATA, re), re
                    }
                }, e.prototype.remuxAudio = function (e, t, r, a) {
                    var o = e.inputTimeScale, s = e.timescale, l = o / s, u = (e.isAAC ? 1024 : 1152) * l,
                        c = this._PTSNormalize, h = this._initDTS, f = !e.isAAC && this.typeSupported.mpeg, p = void 0,
                        v = void 0, y = void 0, g = void 0, m = void 0, E = void 0, _ = void 0, T = e.samples, A = [],
                        b = this.nextAudioPts;
                    if (r |= T.length && b && (a && Math.abs(t - b / o) < .1 || Math.abs(T[0].pts - b - h) < 20 * u), T.forEach(function (e) {
                        e.pts = e.dts = c(e.pts - h, t * o)
                    }), 0 !== (T = T.filter(function (e) {
                        return e.pts >= 0
                    })).length) {
                        if (r || (b = a ? t * o : T[0].pts), e.isAAC) for (var w = this.config.maxAudioFramesDrift, S = 0, R = b; S < T.length;) {
                            var D, L = T[S];
                            D = L.pts - R;
                            var I = Math.abs(1e3 * D / o);
                            if (D <= -w * u) d.b.warn("Dropping 1 audio frame @ " + (R / o).toFixed(3) + "s due to " + Math.round(I) + " ms overlap."), T.splice(S, 1), e.len -= L.unit.length; else if (D >= w * u && I < 1e4 && R) {
                                var x = Math.round(D / u);
                                d.b.warn("Injecting " + x + " audio frame @ " + (R / o).toFixed(3) + "s due to " + Math.round(1e3 * D / o) + " ms gap.");
                                for (var P = 0; P < x; P++) {
                                    var O = Math.max(R, 0);
                                    (y = C.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (d.b.log("Unable to get silent frame for given audio codec; duplicating last frame instead."), y = L.unit.subarray()), T.splice(S, 0, {
                                        unit: y,
                                        pts: O,
                                        dts: O
                                    }), e.len += y.length, R += u, S++
                                }
                                L.pts = L.dts = R, R += u, S++
                            } else Math.abs(D), L.pts = L.dts = R, R += u, S++
                        }
                        for (var N = 0, M = T.length; N < M; N++) {
                            var V = T[N], U = V.unit, F = V.pts;
                            if (_ !== undefined) v.duration = Math.round((F - _) / l); else {
                                var B = Math.round(1e3 * (F - b) / o), G = 0;
                                if (r && e.isAAC && B) {
                                    if (B > 0 && B < 1e4) G = Math.round((F - b) / u), d.b.log(B + " ms hole between AAC samples detected,filling it"), G > 0 && ((y = C.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (y = U.subarray()), e.len += G * y.length); else if (B < -12) {
                                        d.b.log("drop overlapping AAC sample, expected/parsed/delta:" + (b / o).toFixed(3) + "s/" + (F / o).toFixed(3) + "s/" + -B + "ms"), e.len -= U.byteLength;
                                        continue
                                    }
                                    F = b
                                }
                                if (E = F, !(e.len > 0)) return;
                                var j = f ? e.len : e.len + 8;
                                p = f ? 0 : 8;
                                try {
                                    g = new Uint8Array(j)
                                } catch (X) {
                                    return void this.observer.trigger(i.a.ERROR, {
                                        type: n.b.MUX_ERROR,
                                        details: n.a.REMUX_ALLOC_ERROR,
                                        fatal: !1,
                                        bytes: j,
                                        reason: "fail allocating audio mdat " + j
                                    })
                                }
                                f || (new DataView(g.buffer).setUint32(0, j), g.set(k.types.mdat, 4));
                                for (var K = 0; K < G; K++) (y = C.getSilentFrame(e.manifestCodec || e.codec, e.channelCount)) || (d.b.log("Unable to get silent frame for given audio codec; duplicating this frame instead."), y = U.subarray()), g.set(y, p), p += y.byteLength, v = {
                                    size: y.byteLength,
                                    cts: 0,
                                    duration: 1024,
                                    flags: {
                                        isLeading: 0,
                                        isDependedOn: 0,
                                        hasRedundancy: 0,
                                        degradPrio: 0,
                                        dependsOn: 1
                                    }
                                }, A.push(v)
                            }
                            g.set(U, p);
                            var $ = U.byteLength;
                            p += $, v = {
                                size: $,
                                cts: 0,
                                duration: 0,
                                flags: {isLeading: 0, isDependedOn: 0, hasRedundancy: 0, degradPrio: 0, dependsOn: 1}
                            }, A.push(v), _ = F
                        }
                        var H = 0, W = A.length;
                        if (W >= 2 && (H = A[W - 2].duration, v.duration = H), W) {
                            this.nextAudioPts = b = _ + l * H, e.len = 0, e.samples = A, m = f ? new Uint8Array : k.moof(e.sequenceNumber++, E / l, e), e.samples = [];
                            var Y = E / o, q = b / o, z = {
                                data1: m,
                                data2: g,
                                startPTS: Y,
                                endPTS: q,
                                startDTS: Y,
                                endDTS: q,
                                type: "audio",
                                hasAudio: !0,
                                hasVideo: !1,
                                nb: W
                            };
                            return this.observer.trigger(i.a.FRAG_PARSING_DATA, z), z
                        }
                        return null
                    }
                }, e.prototype.remuxEmptyAudio = function (e, t, r, i) {
                    var n = e.inputTimeScale, a = n / (e.samplerate ? e.samplerate : n), o = this.nextAudioPts,
                        s = (o !== undefined ? o : i.startDTS * n) + this._initDTS, l = i.endDTS * n + this._initDTS,
                        u = 1024 * a, c = Math.ceil((l - s) / u),
                        h = C.getSilentFrame(e.manifestCodec || e.codec, e.channelCount);
                    if (d.b.warn("remux empty Audio"), h) {
                        for (var f = [], p = 0; p < c; p++) {
                            var v = s + p * u;
                            f.push({unit: h, pts: v, dts: v}), e.len += h.length
                        }
                        e.samples = f, this.remuxAudio(e, t, r)
                    } else d.b.trace("Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!")
                }, e.prototype.remuxID3 = function (e, t) {
                    var r = e.samples.length, n = void 0, a = e.inputTimeScale, o = this._initPTS, s = this._initDTS;
                    if (r) {
                        for (var d = 0; d < r; d++) (n = e.samples[d]).pts = (n.pts - o) / a, n.dts = (n.dts - s) / a;
                        this.observer.trigger(i.a.FRAG_PARSING_METADATA, {samples: e.samples})
                    }
                    e.samples = [], t = t
                }, e.prototype.remuxText = function (e, t) {
                    e.samples.sort(function (e, t) {
                        return e.pts - t.pts
                    });
                    var r = e.samples.length, n = void 0, a = e.inputTimeScale, o = this._initPTS;
                    if (r) {
                        for (var s = 0; s < r; s++) (n = e.samples[s]).pts = (n.pts - o) / a;
                        this.observer.trigger(i.a.FRAG_PARSING_USERDATA, {samples: e.samples})
                    }
                    e.samples = [], t = t
                }, e.prototype._PTSNormalize = function (e, t) {
                    var r = void 0;
                    if (t === undefined) return e;
                    for (r = t < e ? -8589934592 : 8589934592; Math.abs(e - t) > 4294967296;) e += r;
                    return e
                }, e
            }();
            var O = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.observer = t
                }

                return e.prototype.destroy = function () {
                }, e.prototype.resetTimeStamp = function () {
                }, e.prototype.resetInitSegment = function () {
                }, e.prototype.remux = function (e, t, r, n, a, o, s, d) {
                    var l = this.observer, u = "";
                    e && (u += "audio"), t && (u += "video"), l.trigger(i.a.FRAG_PARSING_DATA, {
                        data1: d,
                        startPTS: a,
                        startDTS: a,
                        type: u,
                        hasAudio: !!e,
                        hasVideo: !!t,
                        nb: 1,
                        dropped: 0
                    }), l.trigger(i.a.FRAG_PARSED)
                }, e
            }();
            var N = Object(l.a)(), M = function () {
                function e(t, r, i, n) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.observer = t, this.typeSupported = r, this.config = i, this.vendor = n
                }

                return e.prototype.destroy = function () {
                    var e = this.demuxer;
                    e && e.destroy()
                }, e.prototype.push = function (e, t, r, n, a, o, s, d, l, u, h, f) {
                    if (e.byteLength > 0 && null != t && null != t.key && "AES-128" === t.method) {
                        var p = this.decrypter;
                        null == p && (p = this.decrypter = new c(this.observer, this.config));
                        var v = this, y = void 0;
                        try {
                            y = N.now()
                        } catch (g) {
                            y = Date.now()
                        }
                        p.decrypt(e, t.key.buffer, t.iv.buffer, function (e) {
                            var c = void 0;
                            try {
                                c = N.now()
                            } catch (g) {
                                c = Date.now()
                            }
                            v.observer.trigger(i.a.FRAG_DECRYPTED, {
                                stats: {
                                    tstart: y,
                                    tdecrypt: c
                                }
                            }), v.pushDecrypted(new Uint8Array(e), t, new Uint8Array(r), n, a, o, s, d, l, u, h, f)
                        })
                    } else this.pushDecrypted(new Uint8Array(e), t, new Uint8Array(r), n, a, o, s, d, l, u, h, f)
                }, e.prototype.pushDecrypted = function (e, t, r, a, o, s, d, l, u, c, h, f) {
                    var p = this.demuxer;
                    if (!p || (d || l) && !this.probe(e)) {
                        for (var v = this.observer, y = this.typeSupported, g = this.config, m = [{
                            demux: L,
                            remux: P
                        }, {demux: A.a, remux: O}, {demux: T, remux: P}, {
                            demux: I,
                            remux: P
                        }], E = 0, _ = m.length; E < _; E++) {
                            var b = m[E], w = b.demux.probe;
                            if (w(e)) {
                                var S = this.remuxer = new b.remux(v, g, y, this.vendor);
                                p = new b.demux(v, S, g, y), this.probe = w;
                                break
                            }
                        }
                        if (!p) return void v.trigger(i.a.ERROR, {
                            type: n.b.MEDIA_ERROR,
                            details: n.a.FRAG_PARSING_ERROR,
                            fatal: !0,
                            reason: "no demux matching with content found"
                        });
                        this.demuxer = p
                    }
                    var R = this.remuxer;
                    (d || l) && (p.resetInitSegment(r, a, o, c), R.resetInitSegment()), d && (p.resetTimeStamp(f), R.resetTimeStamp(f)), "function" == typeof p.setDecryptData && p.setDecryptData(t), p.append(e, s, u, h)
                }, e
            }();
            t.a = M
        }, function (e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {value: !0});
            var i = r(5), n = r.n(i), a = r(2), o = r(1), s = r(0),
                d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                    return typeof e
                } : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                };
            var l = new Set(["hlsEventGeneric", "hlsHandlerDestroying", "hlsHandlerDestroyed"]), u = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.hls = t, this.onEvent = this.onEvent.bind(this);
                    for (var r = arguments.length, i = Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++) i[n - 1] = arguments[n];
                    this.handledEvents = i, this.useGenericHandler = !0, this.registerListeners()
                }

                return e.prototype.destroy = function () {
                    this.onHandlerDestroying(), this.unregisterListeners(), this.onHandlerDestroyed()
                }, e.prototype.onHandlerDestroying = function () {
                }, e.prototype.onHandlerDestroyed = function () {
                }, e.prototype.isEventHandler = function () {
                    return "object" === d(this.handledEvents) && this.handledEvents.length && "function" == typeof this.onEvent
                }, e.prototype.registerListeners = function () {
                    this.isEventHandler() && this.handledEvents.forEach(function (e) {
                        if (l.has(e)) throw new Error("Forbidden event-name: " + e);
                        this.hls.on(e, this.onEvent)
                    }, this)
                }, e.prototype.unregisterListeners = function () {
                    this.isEventHandler() && this.handledEvents.forEach(function (e) {
                        this.hls.off(e, this.onEvent)
                    }, this)
                }, e.prototype.onEvent = function (e, t) {
                    this.onEventGeneric(e, t)
                }, e.prototype.onEventGeneric = function (e, t) {
                    try {
                        (function (e, t) {
                            var r = "on" + e.replace("hls", "");
                            if ("function" != typeof this[r]) throw new Error("Event " + e + " has no generic handler in this " + this.constructor.name + " class (tried " + r + ")");
                            return this[r].bind(this, t)
                        }).call(this, e, t).call()
                    } catch (r) {
                        s.b.error("An internal error happened while handling event " + e + '. Error message: "' + r.message + '". Here is a stacktrace:', r), this.hls.trigger(o.a.ERROR, {
                            type: a.b.OTHER_ERROR,
                            details: a.a.INTERNAL_EXCEPTION,
                            fatal: !1,
                            event: e,
                            err: r
                        })
                    }
                }, e
            }(), c = r(8), h = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }

                return function (t, r, i) {
                    return r && e(t.prototype, r), i && e(t, i), t
                }
            }();
            var f = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.method = null, this.key = null, this.iv = null, this._uri = null
                }

                return h(e, [{
                    key: "uri", get: function () {
                        return !this._uri && this.reluri && (this._uri = n.a.buildAbsoluteURL(this.baseuri, this.reluri, {alwaysNormalize: !0})), this._uri
                    }
                }]), e
            }(), p = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }

                return function (t, r, i) {
                    return r && e(t.prototype, r), i && e(t, i), t
                }
            }();
            var v = function () {
                function e() {
                    var t;
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this._url = null, this._byteRange = null, this._decryptdata = null, this.tagList = [], this._elementaryStreams = ((t = {})[e.ElementaryStreamTypes.AUDIO] = !1, t[e.ElementaryStreamTypes.VIDEO] = !1, t)
                }

                return e.prototype.addElementaryStream = function (e) {
                    this._elementaryStreams[e] = !0
                }, e.prototype.hasElementaryStream = function (e) {
                    return !0 === this._elementaryStreams[e]
                }, e.prototype.createInitializationVector = function (e) {
                    for (var t = new Uint8Array(16), r = 12; r < 16; r++) t[r] = e >> 8 * (15 - r) & 255;
                    return t
                }, e.prototype.fragmentDecryptdataFromLevelkey = function (e, t) {
                    var r = e;
                    return e && e.method && e.uri && !e.iv && ((r = new f).method = e.method, r.baseuri = e.baseuri, r.reluri = e.reluri, r.iv = this.createInitializationVector(t)), r
                }, p(e, [{
                    key: "url", get: function () {
                        return !this._url && this.relurl && (this._url = n.a.buildAbsoluteURL(this.baseurl, this.relurl, {alwaysNormalize: !0})), this._url
                    }, set: function (e) {
                        this._url = e
                    }
                }, {
                    key: "programDateTime", get: function () {
                        return !this._programDateTime && this.rawProgramDateTime && (this._programDateTime = new Date(Date.parse(this.rawProgramDateTime))), this._programDateTime
                    }
                }, {
                    key: "byteRange", get: function () {
                        if (!this._byteRange && !this.rawByteRange) return [];
                        if (this._byteRange) return this._byteRange;
                        var e = [];
                        if (this.rawByteRange) {
                            var t = this.rawByteRange.split("@", 2);
                            if (1 === t.length) {
                                var r = this.lastByteRangeEndOffset;
                                e[0] = r || 0
                            } else e[0] = parseInt(t[1]);
                            e[1] = parseInt(t[0]) + e[0], this._byteRange = e
                        }
                        return e
                    }
                }, {
                    key: "byteRangeStartOffset", get: function () {
                        return this.byteRange[0]
                    }
                }, {
                    key: "byteRangeEndOffset", get: function () {
                        return this.byteRange[1]
                    }
                }, {
                    key: "decryptdata", get: function () {
                        return this._decryptdata || (this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn)), this._decryptdata
                    }
                }, {
                    key: "encrypted", get: function () {
                        return !(!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key)
                    }
                }], [{
                    key: "ElementaryStreamTypes", get: function () {
                        return {AUDIO: "audio", VIDEO: "video"}
                    }
                }]), e
            }();
            var y = /^(\d+)x(\d+)$/, g = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g, m = function () {
                function e(t) {
                    for (var r in function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), "string" == typeof t && (t = e.parseAttrList(t)), t) t.hasOwnProperty(r) && (this[r] = t[r])
                }

                return e.prototype.decimalInteger = function (e) {
                    var t = parseInt(this[e], 10);
                    return t > Number.MAX_SAFE_INTEGER ? Infinity : t
                }, e.prototype.hexadecimalInteger = function (e) {
                    if (this[e]) {
                        var t = (this[e] || "0x").slice(2);
                        t = (1 & t.length ? "0" : "") + t;
                        for (var r = new Uint8Array(t.length / 2), i = 0; i < t.length / 2; i++) r[i] = parseInt(t.slice(2 * i, 2 * i + 2), 16);
                        return r
                    }
                    return null
                }, e.prototype.hexadecimalIntegerAsNumber = function (e) {
                    var t = parseInt(this[e], 16);
                    return t > Number.MAX_SAFE_INTEGER ? Infinity : t
                }, e.prototype.decimalFloatingPoint = function (e) {
                    return parseFloat(this[e])
                }, e.prototype.enumeratedString = function (e) {
                    return this[e]
                }, e.prototype.decimalResolution = function (e) {
                    var t = y.exec(this[e]);
                    return null === t ? undefined : {width: parseInt(t[1], 10), height: parseInt(t[2], 10)}
                }, e.parseAttrList = function (e) {
                    var t = void 0, r = {};
                    for (g.lastIndex = 0; null !== (t = g.exec(e));) {
                        var i = t[2];
                        0 === i.indexOf('"') && i.lastIndexOf('"') === i.length - 1 && (i = i.slice(1, -1)), r[t[1]] = i
                    }
                    return r
                }, e
            }(), E = {
                audio: {
                    a3ds: !0,
                    "ac-3": !0,
                    "ac-4": !0,
                    alac: !0,
                    alaw: !0,
                    dra1: !0,
                    "dts+": !0,
                    "dts-": !0,
                    dtsc: !0,
                    dtse: !0,
                    dtsh: !0,
                    "ec-3": !0,
                    enca: !0,
                    g719: !0,
                    g726: !0,
                    m4ae: !0,
                    mha1: !0,
                    mha2: !0,
                    mhm1: !0,
                    mhm2: !0,
                    mlpa: !0,
                    mp4a: !0,
                    "raw ": !0,
                    Opus: !0,
                    samr: !0,
                    sawb: !0,
                    sawp: !0,
                    sevc: !0,
                    sqcp: !0,
                    ssmv: !0,
                    twos: !0,
                    ulaw: !0
                },
                video: {
                    avc1: !0,
                    avc2: !0,
                    avc3: !0,
                    avc4: !0,
                    avcp: !0,
                    drac: !0,
                    dvav: !0,
                    dvhe: !0,
                    encv: !0,
                    hev1: !0,
                    hvc1: !0,
                    mjp2: !0,
                    mp4v: !0,
                    mvc1: !0,
                    mvc2: !0,
                    mvc3: !0,
                    mvc4: !0,
                    resv: !0,
                    rv60: !0,
                    s263: !0,
                    svc1: !0,
                    svc2: !0,
                    "vc-1": !0,
                    vp08: !0,
                    vp09: !0
                }
            };

            function _(e, t) {
                return window.MediaSource.isTypeSupported((t || "video") + '/mp4;codecs="' + e + '"')
            }

            var T = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g, A = /#EXT-X-MEDIA:(.*)/g,
                b = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)(\S+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""), "g"),
                w = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)(.*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/,
                S = /\.(mp4|m4s|m4v|m4a)$/i, R = function () {
                    function e() {
                        !function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, e)
                    }

                    return e.findGroup = function (e, t) {
                        if (!e) return null;
                        for (var r = null, i = 0; i < e.length; i++) {
                            var n = e[i];
                            n.id === t && (r = n)
                        }
                        return r
                    }, e.convertAVC1ToAVCOTI = function (e) {
                        var t = void 0, r = e.split(".");
                        return r.length > 2 ? (t = r.shift() + ".", t += parseInt(r.shift()).toString(16), t += ("000" + parseInt(r.shift()).toString(16)).substr(-4)) : t = e, t
                    }, e.resolve = function (e, t) {
                        return n.a.buildAbsoluteURL(t, e, {alwaysNormalize: !0})
                    }, e.parseMasterPlaylist = function (t, r) {
                        var i = [], n = void 0;

                        function a(e, t) {
                            ["video", "audio"].forEach(function (r) {
                                var i = e.filter(function (e) {
                                    return function (e, t) {
                                        var r = E[t];
                                        return !!r && !0 === r[e.slice(0, 4)]
                                    }(e, r)
                                });
                                if (i.length) {
                                    var n = i.filter(function (e) {
                                        return 0 === e.lastIndexOf("avc1", 0) || 0 === e.lastIndexOf("mp4a", 0)
                                    });
                                    t[r + "Codec"] = n.length > 0 ? n[0] : i[0], e = e.filter(function (e) {
                                        return -1 === i.indexOf(e)
                                    })
                                }
                            }), t.unknownCodecs = e
                        }

                        for (T.lastIndex = 0; null != (n = T.exec(t));) {
                            var o = {}, s = o.attrs = new m(n[1]);
                            o.url = e.resolve(n[2], r);
                            var d = s.decimalResolution("RESOLUTION");
                            d && (o.width = d.width, o.height = d.height), o.bitrate = s.decimalInteger("AVERAGE-BANDWIDTH") || s.decimalInteger("BANDWIDTH"), o.name = s.NAME, a([].concat((s.CODECS || "").split(/[ ,]+/)), o), o.videoCodec && -1 !== o.videoCodec.indexOf("avc1") && (o.videoCodec = e.convertAVC1ToAVCOTI(o.videoCodec)), i.push(o)
                        }
                        return i
                    }, e.parseMasterPlaylistMedia = function (t, r, i) {
                        var n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [], a = void 0, o = [],
                            s = 0;
                        for (A.lastIndex = 0; null !== (a = A.exec(t));) {
                            var d = {}, l = new m(a[1]);
                            if (l.TYPE === i) {
                                if (d.groupId = l["GROUP-ID"], d.name = l.NAME, d.type = i, d["default"] = "YES" === l.DEFAULT, d.autoselect = "YES" === l.AUTOSELECT, d.forced = "YES" === l.FORCED, l.URI && (d.url = e.resolve(l.URI, r)), d.lang = l.LANGUAGE, d.name || (d.name = d.lang), n.length) {
                                    var u = e.findGroup(n, d.groupId);
                                    d.audioCodec = u ? u.codec : n[0].codec
                                }
                                d.id = s++, o.push(d)
                            }
                        }
                        return o
                    }, e.parseLevelPlaylist = function (e, t, r, i, n) {
                        var a = 0, o = 0, d = {type: null, version: null, url: t, fragments: [], live: !0, startSN: 0},
                            l = new f, u = 0, c = null, h = new v, p = void 0, y = void 0;
                        for (b.lastIndex = 0; null !== (p = b.exec(e));) {
                            var g = p[1];
                            if (g) {
                                h.duration = parseFloat(g);
                                var E = (" " + p[2]).slice(1);
                                h.title = E || null, h.tagList.push(E ? ["INF", g, E] : ["INF", g])
                            } else if (p[3]) {
                                if (!isNaN(h.duration)) {
                                    var _ = a++;
                                    h.type = i, h.start = o, h.levelkey = l, h.sn = _, h.level = r, h.cc = u, h.urlId = n, h.baseurl = t, h.relurl = (" " + p[3]).slice(1), d.programDateTime && (c ? h.rawProgramDateTime ? h.pdt = Date.parse(h.rawProgramDateTime) : h.pdt = c.pdt + 1e3 * c.duration : h.pdt = Date.parse(d.programDateTime), h.endPdt = h.pdt + 1e3 * h.duration), d.fragments.push(h), c = h, o += h.duration, h = new v
                                }
                            } else if (p[4]) {
                                if (h.rawByteRange = (" " + p[4]).slice(1), c) {
                                    var T = c.byteRangeEndOffset;
                                    T && (h.lastByteRangeEndOffset = T)
                                }
                            } else if (p[5]) h.rawProgramDateTime = (" " + p[5]).slice(1), h.tagList.push(["PROGRAM-DATE-TIME", h.rawProgramDateTime]), d.programDateTime === undefined && (d.programDateTime = new Date(new Date(Date.parse(p[5])) - 1e3 * o)); else {
                                for (p = p[0].match(w), y = 1; y < p.length && p[y] === undefined; y++) ;
                                var A = (" " + p[y + 1]).slice(1), R = (" " + p[y + 2]).slice(1);
                                switch (p[y]) {
                                    case"#":
                                        h.tagList.push(R ? [A, R] : [A]);
                                        break;
                                    case"PLAYLIST-TYPE":
                                        d.type = A.toUpperCase();
                                        break;
                                    case"MEDIA-SEQUENCE":
                                        a = d.startSN = parseInt(A);
                                        break;
                                    case"TARGETDURATION":
                                        d.targetduration = parseFloat(A);
                                        break;
                                    case"VERSION":
                                        d.version = parseInt(A);
                                        break;
                                    case"EXTM3U":
                                        break;
                                    case"ENDLIST":
                                        d.live = !1;
                                        break;
                                    case"DIS":
                                        u++, h.tagList.push(["DIS"]);
                                        break;
                                    case"DISCONTINUITY-SEQ":
                                        u = parseInt(A);
                                        break;
                                    case"KEY":
                                        var D = new m(A), L = D.enumeratedString("METHOD"), I = D.URI,
                                            C = D.hexadecimalInteger("IV");
                                        L && (l = new f, I && ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(L) >= 0 && (l.method = L, l.baseuri = t, l.reluri = I, l.key = null, l.iv = C));
                                        break;
                                    case"START":
                                        var x = new m(A).decimalFloatingPoint("TIME-OFFSET");
                                        isNaN(x) || (d.startTimeOffset = x);
                                        break;
                                    case"MAP":
                                        var k = new m(A);
                                        h.relurl = k.URI, h.rawByteRange = k.BYTERANGE, h.baseurl = t, h.level = r, h.type = i, h.sn = "initSegment", d.initSegment = h, h = new v;
                                        break;
                                    default:
                                        s.b.warn("line parsed but not handled: " + p)
                                }
                            }
                        }
                        return (h = c) && !h.relurl && (d.fragments.pop(), o -= h.duration), d.totalduration = o, d.averagetargetduration = o / d.fragments.length, d.endSN = a - 1, d.startCC = d.fragments[0] ? d.fragments[0].cc : 0, d.endCC = u, !d.initSegment && d.fragments.length && d.fragments.every(function (e) {
                            return S.test(e.relurl)
                        }) && (s.b.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"), (h = new v).relurl = d.fragments[0].relurl, h.baseurl = t, h.level = r, h.type = i, h.sn = "initSegment", d.initSegment = h, d.needSidxRanges = !0), d
                    }, e
                }(), D = function () {
                    function e(e, t) {
                        for (var r = 0; r < t.length; r++) {
                            var i = t[r];
                            i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                        }
                    }

                    return function (t, r, i) {
                        return r && e(t.prototype, r), i && e(t, i), t
                    }
                }();
            var L = window.performance,
                I = {MANIFEST: "manifest", LEVEL: "level", AUDIO_TRACK: "audioTrack", SUBTITLE_TRACK: "subtitleTrack"},
                C = {MAIN: "main", AUDIO: "audio", SUBTITLE: "subtitle"}, x = function (e) {
                    function t(r) {
                        !function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, t);
                        var i = function (e, t) {
                            if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                            return !t || "object" != typeof t && "function" != typeof t ? e : t
                        }(this, e.call(this, r, o.a.MANIFEST_LOADING, o.a.LEVEL_LOADING, o.a.AUDIO_TRACK_LOADING, o.a.SUBTITLE_TRACK_LOADING));
                        return i.loaders = {}, i
                    }

                    return function (e, t) {
                        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                        e.prototype = Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                    }(t, e), t.canHaveQualityLevels = function (e) {
                        return e !== I.AUDIO_TRACK && e !== I.SUBTITLE_TRACK
                    }, t.mapContextToLevelType = function (e) {
                        switch (e.type) {
                            case I.AUDIO_TRACK:
                                return C.AUDIO;
                            case I.SUBTITLE_TRACK:
                                return C.SUBTITLE;
                            default:
                                return C.MAIN
                        }
                    }, t.getResponseUrl = function (e, t) {
                        var r = e.url;
                        return r !== undefined && 0 !== r.indexOf("data:") || (r = t.url), r
                    }, t.prototype.createInternalLoader = function (e) {
                        var t = this.hls.config, r = t.pLoader, i = t.loader, n = new (r || i)(t);
                        return e.loader = n, this.loaders[e.type] = n, n
                    }, t.prototype.getInternalLoader = function (e) {
                        return this.loaders[e.type]
                    }, t.prototype.resetInternalLoader = function (e) {
                        this.loaders[e] && delete this.loaders[e]
                    }, t.prototype.destroyInternalLoaders = function () {
                        for (var e in this.loaders) {
                            var t = this.loaders[e];
                            t && t.destroy(), this.resetInternalLoader(e)
                        }
                    }, t.prototype.destroy = function () {
                        this.destroyInternalLoaders(), e.prototype.destroy.call(this)
                    }, t.prototype.onManifestLoading = function (e) {
                        e.m3u8 || this.load(e.url, {type: I.MANIFEST, level: 0, id: null})
                    }, t.prototype.onLevelLoading = function (e) {
                        this.load(e.url, {type: I.LEVEL, level: e.level, id: e.id})
                    }, t.prototype.onAudioTrackLoading = function (e) {
                        this.load(e.url, {type: I.AUDIO_TRACK, level: 0, id: e.id})
                    }, t.prototype.onSubtitleTrackLoading = function (e) {
                        this.load(e.url, {type: I.SUBTITLE_TRACK, level: 0, id: e.id})
                    }, t.prototype.load = function (e, t) {
                        var r = this.hls.config;
                        s.b.debug("Loading playlist of type " + t.type + ", level: " + t.level + ", id: " + t.id);
                        var i = this.getInternalLoader(t);
                        if (i) {
                            var n = i.context;
                            if (n && n.url === e) return s.b.trace("playlist request ongoing"), !1;
                            s.b.warn("aborting previous loader for type: " + t.type), i.abort()
                        }
                        var a = void 0, o = void 0, d = void 0, l = void 0;
                        switch (t.type) {
                            case I.MANIFEST:
                                a = r.manifestLoadingMaxRetry, o = r.manifestLoadingTimeOut, d = r.manifestLoadingRetryDelay, l = r.manifestLoadingMaxRetryTimeout;
                                break;
                            case I.LEVEL:
                                a = 0, o = r.levelLoadingTimeOut;
                                break;
                            default:
                                a = r.levelLoadingMaxRetry, o = r.levelLoadingTimeOut, d = r.levelLoadingRetryDelay, l = r.levelLoadingMaxRetryTimeout
                        }
                        i = this.createInternalLoader(t), t.url = e, t.responseType = t.responseType || "";
                        var u = {timeout: o, maxRetry: a, retryDelay: d, maxRetryDelay: l}, c = {
                            onSuccess: this.loadsuccess.bind(this),
                            onError: this.loaderror.bind(this),
                            onTimeout: this.loadtimeout.bind(this)
                        };
                        return s.b.debug("Calling internal loader delegate for URL: " + e), i.load(t, u, c), !0
                    }, t.prototype.loadsuccess = function (e, t, r) {
                        var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
                        if (r.isSidxRequest) return this._handleSidxRequest(e, r), void this._handlePlaylistLoaded(e, t, r, i);
                        this.resetInternalLoader(r.type);
                        var n = e.data;
                        t.tload = L.now(), 0 === n.indexOf("#EXTM3U") ? n.indexOf("#EXTINF:") > 0 || n.indexOf("#EXT-X-TARGETDURATION:") > 0 ? this._handleTrackOrLevelPlaylist(e, t, r, i) : this._handleMasterPlaylist(e, t, r, i) : this._handleManifestParsingError(e, r, "no EXTM3U delimiter", i)
                    }, t.prototype.loaderror = function (e, t) {
                        var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
                        this._handleNetworkError(t, r)
                    }, t.prototype.loadtimeout = function (e, t) {
                        var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
                        this._handleNetworkError(t, r, !0)
                    }, t.prototype._handleMasterPlaylist = function (e, r, i, n) {
                        var a = this.hls, d = e.data, l = t.getResponseUrl(e, i), u = R.parseMasterPlaylist(d, l);
                        if (u.length) {
                            var c = u.map(function (e) {
                                    return {id: e.attrs.AUDIO, codec: e.audioCodec}
                                }), h = R.parseMasterPlaylistMedia(d, l, "AUDIO", c),
                                f = R.parseMasterPlaylistMedia(d, l, "SUBTITLES");
                            if (h.length) {
                                var p = !1;
                                h.forEach(function (e) {
                                    e.url || (p = !0)
                                }), !1 === p && u[0].audioCodec && !u[0].attrs.AUDIO && (s.b.log("audio codec signaled in quality level, but no embedded audio track signaled, create one"), h.unshift({
                                    type: "main",
                                    name: "main"
                                }))
                            }
                            a.trigger(o.a.MANIFEST_LOADED, {
                                levels: u,
                                audioTracks: h,
                                subtitles: f,
                                url: l,
                                stats: r,
                                networkDetails: n
                            })
                        } else this._handleManifestParsingError(e, i, "no level found in manifest", n)
                    }, t.prototype._handleTrackOrLevelPlaylist = function (e, r, i, n) {
                        var a = this.hls, s = i.id, d = i.level, l = i.type, u = t.getResponseUrl(e, i),
                            c = isNaN(s) ? 0 : s, h = isNaN(d) ? c : d, f = t.mapContextToLevelType(i),
                            p = R.parseLevelPlaylist(e.data, u, h, f, c);
                        if (p.tload = r.tload, l === I.MANIFEST) {
                            var v = {url: u, details: p};
                            a.trigger(o.a.MANIFEST_LOADED, {
                                levels: [v],
                                audioTracks: [],
                                url: u,
                                stats: r,
                                networkDetails: n
                            })
                        }
                        if (r.tparsed = L.now(), p.needSidxRanges) {
                            var y = p.initSegment.url;
                            this.load(y, {
                                isSidxRequest: !0,
                                type: l,
                                level: d,
                                levelDetails: p,
                                id: s,
                                rangeStart: 0,
                                rangeEnd: 2048,
                                responseType: "arraybuffer"
                            })
                        } else i.levelDetails = p, this._handlePlaylistLoaded(e, r, i, n)
                    }, t.prototype._handleSidxRequest = function (e, t) {
                        var r = c.a.parseSegmentIndex(new Uint8Array(e.data));
                        r.references.forEach(function (e, r) {
                            var i = e.info, n = t.levelDetails.fragments[r];
                            0 === n.byteRange.length && (n.rawByteRange = String(1 + i.end - i.start) + "@" + String(i.start))
                        }), t.levelDetails.initSegment.rawByteRange = String(r.moovEndOffset) + "@0"
                    }, t.prototype._handleManifestParsingError = function (e, t, r, i) {
                        this.hls.trigger(o.a.ERROR, {
                            type: a.b.NETWORK_ERROR,
                            details: a.a.MANIFEST_PARSING_ERROR,
                            fatal: !0,
                            url: e.url,
                            reason: r,
                            networkDetails: i
                        })
                    }, t.prototype._handleNetworkError = function (e, t) {
                        var r = arguments.length > 2 && arguments[2] !== undefined && arguments[2];
                        s.b.info("A network error occured while loading a " + e.type + "-type playlist");
                        var i = void 0, n = void 0, d = this.getInternalLoader(e);
                        switch (e.type) {
                            case I.MANIFEST:
                                i = r ? a.a.MANIFEST_LOAD_TIMEOUT : a.a.MANIFEST_LOAD_ERROR, n = !0;
                                break;
                            case I.LEVEL:
                                i = r ? a.a.LEVEL_LOAD_TIMEOUT : a.a.LEVEL_LOAD_ERROR, n = !1;
                                break;
                            case I.AUDIO_TRACK:
                                i = r ? a.a.AUDIO_TRACK_LOAD_TIMEOUT : a.a.AUDIO_TRACK_LOAD_ERROR, n = !1;
                                break;
                            default:
                                n = !1
                        }
                        d && (d.abort(), this.resetInternalLoader(e.type)), this.hls.trigger(o.a.ERROR, {
                            type: a.b.NETWORK_ERROR,
                            details: i,
                            fatal: n,
                            url: d.url,
                            loader: d,
                            context: e,
                            networkDetails: t
                        })
                    }, t.prototype._handlePlaylistLoaded = function (e, r, i, n) {
                        var a = i.type, s = i.level, d = i.id, l = i.levelDetails;
                        if (l.targetduration) if (t.canHaveQualityLevels(i.type)) this.hls.trigger(o.a.LEVEL_LOADED, {
                            details: l,
                            level: s || 0,
                            id: d || 0,
                            stats: r,
                            networkDetails: n
                        }); else switch (a) {
                            case I.AUDIO_TRACK:
                                this.hls.trigger(o.a.AUDIO_TRACK_LOADED, {details: l, id: d, stats: r, networkDetails: n});
                                break;
                            case I.SUBTITLE_TRACK:
                                this.hls.trigger(o.a.SUBTITLE_TRACK_LOADED, {
                                    details: l,
                                    id: d,
                                    stats: r,
                                    networkDetails: n
                                })
                        } else this._handleManifestParsingError(e, i, "invalid target duration", n)
                    }, D(t, null, [{
                        key: "ContextType", get: function () {
                            return I
                        }
                    }, {
                        key: "LevelType", get: function () {
                            return C
                        }
                    }]), t
                }(u);
            var k = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.FRAG_LOADING));
                    return i.loaders = {}, i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    var t = this.loaders;
                    for (var r in t) {
                        var i = t[r];
                        i && i.destroy()
                    }
                    this.loaders = {}, e.prototype.destroy.call(this)
                }, t.prototype.onFragLoading = function (e) {
                    var t = e.frag, r = t.type, i = this.loaders, n = this.hls.config, a = n.fLoader, o = n.loader;
                    t.loaded = 0;
                    var d = i[r];
                    d && (s.b.warn("abort previous fragment loader for type: " + r), d.abort()), d = i[r] = t.loader = n.fLoader ? new a(n) : new o(n);
                    var l, u, c = void 0;
                    c = {url: t.url, frag: t, responseType: "arraybuffer", progressData: !1};
                    var h = t.byteRangeStartOffset, f = t.byteRangeEndOffset;
                    isNaN(h) || isNaN(f) || (c.rangeStart = h, c.rangeEnd = f), l = {
                        timeout: n.fragLoadingTimeOut,
                        maxRetry: 0,
                        retryDelay: 0,
                        maxRetryDelay: n.fragLoadingMaxRetryTimeout
                    }, u = {
                        onSuccess: this.loadsuccess.bind(this),
                        onError: this.loaderror.bind(this),
                        onTimeout: this.loadtimeout.bind(this),
                        onProgress: this.loadprogress.bind(this)
                    }, d.load(c, l, u)
                }, t.prototype.loadsuccess = function (e, t, r) {
                    var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null, n = e.data,
                        a = r.frag;
                    a.loader = undefined, this.loaders[a.type] = undefined, this.hls.trigger(o.a.FRAG_LOADED, {
                        payload: n,
                        frag: a,
                        stats: t,
                        networkDetails: i
                    })
                }, t.prototype.loaderror = function (e, t) {
                    var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null, i = t.loader;
                    i && i.abort(), this.loaders[t.type] = undefined, this.hls.trigger(o.a.ERROR, {
                        type: a.b.NETWORK_ERROR,
                        details: a.a.FRAG_LOAD_ERROR,
                        fatal: !1,
                        frag: t.frag,
                        response: e,
                        networkDetails: r
                    })
                }, t.prototype.loadtimeout = function (e, t) {
                    var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null, i = t.loader;
                    i && i.abort(), this.loaders[t.type] = undefined, this.hls.trigger(o.a.ERROR, {
                        type: a.b.NETWORK_ERROR,
                        details: a.a.FRAG_LOAD_TIMEOUT,
                        fatal: !1,
                        frag: t.frag,
                        networkDetails: r
                    })
                }, t.prototype.loadprogress = function (e, t, r) {
                    var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null, n = t.frag;
                    n.loaded = e.loaded, this.hls.trigger(o.a.FRAG_LOAD_PROGRESS, {
                        frag: n,
                        stats: e,
                        networkDetails: i
                    })
                }, t
            }(u);
            var P = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.KEY_LOADING));
                    return i.loaders = {}, i.decryptkey = null, i.decrypturl = null, i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    for (var e in this.loaders) {
                        var t = this.loaders[e];
                        t && t.destroy()
                    }
                    this.loaders = {}, u.prototype.destroy.call(this)
                }, t.prototype.onKeyLoading = function (e) {
                    var t = e.frag, r = t.type, i = this.loaders[r], n = t.decryptdata, a = n.uri;
                    if (a !== this.decrypturl || null === this.decryptkey) {
                        var d = this.hls.config;
                        i && (s.b.warn("abort previous key loader for type:" + r), i.abort()), t.loader = this.loaders[r] = new d.loader(d), this.decrypturl = a, this.decryptkey = null;
                        var l, u, c;
                        l = {url: a, frag: t, responseType: "arraybuffer"}, u = {
                            timeout: d.fragLoadingTimeOut,
                            maxRetry: d.fragLoadingMaxRetry,
                            retryDelay: d.fragLoadingRetryDelay,
                            maxRetryDelay: d.fragLoadingMaxRetryTimeout
                        }, c = {
                            onSuccess: this.loadsuccess.bind(this),
                            onError: this.loaderror.bind(this),
                            onTimeout: this.loadtimeout.bind(this)
                        }, t.loader.load(l, u, c)
                    } else this.decryptkey && (n.key = this.decryptkey, this.hls.trigger(o.a.KEY_LOADED, {frag: t}))
                }, t.prototype.loadsuccess = function (e, t, r) {
                    var i = r.frag;
                    this.decryptkey = i.decryptdata.key = new Uint8Array(e.data), i.loader = undefined, this.loaders[i.type] = undefined, this.hls.trigger(o.a.KEY_LOADED, {frag: i})
                }, t.prototype.loaderror = function (e, t) {
                    var r = t.frag, i = r.loader;
                    i && i.abort(), this.loaders[t.type] = undefined, this.hls.trigger(o.a.ERROR, {
                        type: a.b.NETWORK_ERROR,
                        details: a.a.KEY_LOAD_ERROR,
                        fatal: !1,
                        frag: r,
                        response: e
                    })
                }, t.prototype.loadtimeout = function (e, t) {
                    var r = t.frag, i = r.loader;
                    i && i.abort(), this.loaders[t.type] = undefined, this.hls.trigger(o.a.ERROR, {
                        type: a.b.NETWORK_ERROR,
                        details: a.a.KEY_LOAD_TIMEOUT,
                        fatal: !1,
                        frag: r
                    })
                }, t
            }(u);
            var O = "NOT_LOADED", N = "APPENDING", M = "PARTIAL", V = "OK", U = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.BUFFER_APPENDED, o.a.FRAG_BUFFERED, o.a.FRAG_LOADED));
                    return i.bufferPadding = .2, i.fragments = Object.create(null), i.timeRanges = Object.create(null), i.config = r.config, i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    this.fragments = null, this.timeRanges = null, this.config = null, u.prototype.destroy.call(this), e.prototype.destroy.call(this)
                }, t.prototype.getBufferedFrag = function (e, t) {
                    var r = this.fragments, i = Object.keys(r).filter(function (i) {
                        var n = r[i];
                        if (n.body.type !== t) return !1;
                        if (!n.buffered) return !1;
                        var a = n.body;
                        return a.startPTS <= e && e <= a.endPTS
                    });
                    if (0 === i.length) return null;
                    var n = i.pop();
                    return r[n].body
                }, t.prototype.detectEvictedFragments = function (e, t) {
                    var r = this, i = void 0, n = void 0;
                    Object.keys(this.fragments).forEach(function (a) {
                        var o = r.fragments[a];
                        if (!0 === o.buffered) {
                            var s = o.range[e];
                            if (s) {
                                i = s.time;
                                for (var d = 0; d < i.length; d++) if (n = i[d], !1 === r.isTimeBuffered(n.startPTS, n.endPTS, t)) {
                                    r.removeFragment(o.body);
                                    break
                                }
                            }
                        }
                    })
                }, t.prototype.detectPartialFragments = function (e) {
                    var t = this, r = this.getFragmentKey(e), i = this.fragments[r];
                    i && (i.buffered = !0, Object.keys(this.timeRanges).forEach(function (r) {
                        if (!0 === e.hasElementaryStream(r)) {
                            var n = t.timeRanges[r];
                            i.range[r] = t.getBufferedTimes(e.startPTS, e.endPTS, n)
                        }
                    }))
                }, t.prototype.getBufferedTimes = function (e, t, r) {
                    for (var i = [], n = void 0, a = void 0, o = !1, s = 0; s < r.length; s++) {
                        if (n = r.start(s) - this.bufferPadding, a = r.end(s) + this.bufferPadding, e >= n && t <= a) {
                            i.push({startPTS: Math.max(e, r.start(s)), endPTS: Math.min(t, r.end(s))});
                            break
                        }
                        if (e < a && t > n) i.push({
                            startPTS: Math.max(e, r.start(s)),
                            endPTS: Math.min(t, r.end(s))
                        }), o = !0; else if (t <= n) break
                    }
                    return {time: i, partial: o}
                }, t.prototype.getFragmentKey = function (e) {
                    return e.type + "_" + e.level + "_" + e.urlId + "_" + e.sn
                }, t.prototype.getPartialFragment = function (e) {
                    var t = this, r = void 0, i = void 0, n = void 0, a = null, o = 0;
                    return Object.keys(this.fragments).forEach(function (s) {
                        var d = t.fragments[s];
                        t.isPartial(d) && (i = d.body.startPTS - t.bufferPadding, n = d.body.endPTS + t.bufferPadding, e >= i && e <= n && (r = Math.min(e - i, n - e), o <= r && (a = d.body, o = r)))
                    }), a
                }, t.prototype.getState = function (e) {
                    var t = this.getFragmentKey(e), r = this.fragments[t], i = O;
                    return r !== undefined && (i = r.buffered ? !0 === this.isPartial(r) ? M : V : N), i
                }, t.prototype.isPartial = function (e) {
                    return !0 === e.buffered && (e.range.video !== undefined && !0 === e.range.video.partial || e.range.audio !== undefined && !0 === e.range.audio.partial)
                }, t.prototype.isTimeBuffered = function (e, t, r) {
                    for (var i = void 0, n = void 0, a = 0; a < r.length; a++) {
                        if (i = r.start(a) - this.bufferPadding, n = r.end(a) + this.bufferPadding, e >= i && t <= n) return !0;
                        if (t <= i) return !1
                    }
                    return !1
                }, t.prototype.onFragLoaded = function (e) {
                    var t = e.frag;
                    if (!isNaN(t.sn) && !t.bitrateTest) {
                        var r = this.getFragmentKey(t), i = {body: t, range: Object.create(null), buffered: !1};
                        this.fragments[r] = i
                    }
                }, t.prototype.onBufferAppended = function (e) {
                    var t = this;
                    this.timeRanges = e.timeRanges, Object.keys(this.timeRanges).forEach(function (e) {
                        var r = t.timeRanges[e];
                        t.detectEvictedFragments(e, r)
                    })
                }, t.prototype.onFragBuffered = function (e) {
                    this.detectPartialFragments(e.frag)
                }, t.prototype.hasFragment = function (e) {
                    var t = this.getFragmentKey(e);
                    return this.fragments[t] !== undefined
                }, t.prototype.removeFragment = function (e) {
                    var t = this.getFragmentKey(e);
                    delete this.fragments[t]
                }, t.prototype.removeAllFragments = function () {
                    this.fragments = Object.create(null)
                }, t
            }(u), F = {
                search: function (e, t) {
                    for (var r = 0, i = e.length - 1, n = null, a = null; r <= i;) {
                        var o = t(a = e[n = (r + i) / 2 | 0]);
                        if (o > 0) r = n + 1; else {
                            if (!(o < 0)) return a;
                            i = n - 1
                        }
                    }
                    return null
                }
            };
            var B = function () {
                function e() {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e)
                }

                return e.isBuffered = function (e, t) {
                    try {
                        if (e) for (var r = e.buffered, i = 0; i < r.length; i++) if (t >= r.start(i) && t <= r.end(i)) return !0
                    } catch (n) {
                    }
                    return !1
                }, e.bufferInfo = function (e, t, r) {
                    try {
                        if (e) {
                            var i = e.buffered, n = [], a = void 0;
                            for (a = 0; a < i.length; a++) n.push({start: i.start(a), end: i.end(a)});
                            return this.bufferedInfo(n, t, r)
                        }
                    } catch (o) {
                    }
                    return {len: 0, start: t, end: t, nextStart: undefined}
                }, e.bufferedInfo = function (e, t, r) {
                    var i = [], n = void 0, a = void 0, o = void 0, s = void 0, d = void 0;
                    for (e.sort(function (e, t) {
                        var r = e.start - t.start;
                        return r || t.end - e.end
                    }), d = 0; d < e.length; d++) {
                        var l = i.length;
                        if (l) {
                            var u = i[l - 1].end;
                            e[d].start - u < r ? e[d].end > u && (i[l - 1].end = e[d].end) : i.push(e[d])
                        } else i.push(e[d])
                    }
                    for (d = 0, n = 0, a = o = t; d < i.length; d++) {
                        var c = i[d].start, h = i[d].end;
                        if (t + r >= c && t < h) a = c, n = (o = h) - t; else if (t + r < c) {
                            s = c;
                            break
                        }
                    }
                    return {len: n, start: a, end: o, nextStart: s}
                }, e
            }(), G = r(6), j = r.n(G), K = r(11), $ = r.n(K), H = r(9);

            function W() {
                if ("undefined" != typeof window) return window.MediaSource || window.WebKitMediaSource
            }

            var Y = r(4);
            var q = Object(Y.a)(), z = W(), X = function () {
                function e(t, r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.hls = t, this.id = r;
                    var i = this.observer = new j.a, n = t.config;
                    i.trigger = function (e) {
                        for (var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) r[n - 1] = arguments[n];
                        i.emit.apply(i, [e, e].concat(r))
                    }, i.off = function (e) {
                        for (var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) r[n - 1] = arguments[n];
                        i.removeListener.apply(i, [e].concat(r))
                    };
                    var d = function (e, r) {
                        (r = r || {}).frag = this.frag, r.id = this.id, t.trigger(e, r)
                    }.bind(this);
                    i.on(o.a.FRAG_DECRYPTED, d), i.on(o.a.FRAG_PARSING_INIT_SEGMENT, d), i.on(o.a.FRAG_PARSING_DATA, d), i.on(o.a.FRAG_PARSED, d), i.on(o.a.ERROR, d), i.on(o.a.FRAG_PARSING_METADATA, d), i.on(o.a.FRAG_PARSING_USERDATA, d), i.on(o.a.INIT_PTS_FOUND, d);
                    var l = {
                        mp4: z.isTypeSupported("video/mp4"),
                        mpeg: z.isTypeSupported("audio/mpeg"),
                        mp3: z.isTypeSupported('audio/mp4; codecs="mp3"')
                    }, u = navigator.vendor;
                    if (n.enableWorker && "undefined" != typeof Worker) {
                        s.b.log("demuxing in webworker");
                        var c = void 0;
                        try {
                            c = this.w = $()(12), this.onwmsg = this.onWorkerMessage.bind(this), c.addEventListener("message", this.onwmsg), c.onerror = function (e) {
                                t.trigger(o.a.ERROR, {
                                    type: a.b.OTHER_ERROR,
                                    details: a.a.INTERNAL_EXCEPTION,
                                    fatal: !0,
                                    event: "demuxerWorker",
                                    err: {message: e.message + " (" + e.filename + ":" + e.lineno + ")"}
                                })
                            }, c.postMessage({
                                cmd: "init",
                                typeSupported: l,
                                vendor: u,
                                id: r,
                                config: JSON.stringify(n)
                            })
                        } catch (h) {
                            s.b.error("error while initializing DemuxerWorker, fallback on DemuxerInline"), c && q.URL.revokeObjectURL(c.objectURL), this.demuxer = new H.a(i, l, n, u), this.w = undefined
                        }
                    } else this.demuxer = new H.a(i, l, n, u)
                }

                return e.prototype.destroy = function () {
                    var e = this.w;
                    if (e) e.removeEventListener("message", this.onwmsg), e.terminate(), this.w = null; else {
                        var t = this.demuxer;
                        t && (t.destroy(), this.demuxer = null)
                    }
                    var r = this.observer;
                    r && (r.removeAllListeners(), this.observer = null)
                }, e.prototype.push = function (e, t, r, i, n, a, o, d) {
                    var l = this.w, u = isNaN(n.startDTS) ? n.start : n.startDTS, c = n.decryptdata, h = this.frag,
                        f = !(h && n.cc === h.cc), p = !(h && n.level === h.level), v = h && n.sn === h.sn + 1,
                        y = !p && v;
                    if (f && s.b.log(this.id + ":discontinuity detected"), p && s.b.log(this.id + ":switch detected"), this.frag = n, l) l.postMessage({
                        cmd: "demux",
                        data: e,
                        decryptdata: c,
                        initSegment: t,
                        audioCodec: r,
                        videoCodec: i,
                        timeOffset: u,
                        discontinuity: f,
                        trackSwitch: p,
                        contiguous: y,
                        duration: a,
                        accurateTimeOffset: o,
                        defaultInitPTS: d
                    }, e instanceof ArrayBuffer ? [e] : []); else {
                        var g = this.demuxer;
                        g && g.push(e, c, t, r, i, u, f, p, y, a, o, d)
                    }
                }, e.prototype.onWorkerMessage = function (e) {
                    var t = e.data, r = this.hls;
                    switch (t.event) {
                        case"init":
                            q.URL.revokeObjectURL(this.w.objectURL);
                            break;
                        case o.a.FRAG_PARSING_DATA:
                            t.data.data1 = new Uint8Array(t.data1), t.data2 && (t.data.data2 = new Uint8Array(t.data2));
                        default:
                            t.data = t.data || {}, t.data.frag = this.frag, t.data.id = this.id, r.trigger(t.event, t.data)
                    }
                }, e
            }();

            function Z(e, t, r) {
                switch (t) {
                    case"audio":
                        e.audioGroupIds || (e.audioGroupIds = []), e.audioGroupIds.push(r);
                        break;
                    case"text":
                        e.textGroupIds || (e.textGroupIds = []), e.textGroupIds.push(r)
                }
            }

            function J(e, t, r) {
                var i = e[t], n = e[r], a = n.startPTS;
                isNaN(a) ? n.start = r > t ? i.start + i.duration : Math.max(i.start - n.duration, 0) : r > t ? (i.duration = a - i.start, i.duration < 0 && s.b.warn("negative duration computed for frag " + i.sn + ",level " + i.level + ", there should be some duration drift between playlist and fragment!")) : (n.duration = i.start - a, n.duration < 0 && s.b.warn("negative duration computed for frag " + n.sn + ",level " + n.level + ", there should be some duration drift between playlist and fragment!"))
            }

            function Q(e, t, r, i, n, a) {
                var o = r;
                if (!isNaN(t.startPTS)) {
                    var s = Math.abs(t.startPTS - r);
                    isNaN(t.deltaPTS) ? t.deltaPTS = s : t.deltaPTS = Math.max(s, t.deltaPTS), o = Math.max(r, t.startPTS), r = Math.min(r, t.startPTS), i = Math.max(i, t.endPTS), n = Math.min(n, t.startDTS), a = Math.max(a, t.endDTS)
                }
                var d = r - t.start;
                t.start = t.startPTS = r, t.maxStartPTS = o, t.endPTS = i, t.startDTS = n, t.endDTS = a, t.duration = i - r;
                var l = t.sn;
                if (!e || l < e.startSN || l > e.endSN) return 0;
                var u, c = void 0, h = void 0;
                for (u = l - e.startSN, (c = e.fragments)[u] = t, h = u; h > 0; h--) J(c, h, h - 1);
                for (h = u; h < c.length - 1; h++) J(c, h, h + 1);
                return e.PTSKnown = !0, d
            }

            var ee = {
                toString: function (e) {
                    for (var t = "", r = e.length, i = 0; i < r; i++) t += "[" + e.start(i).toFixed(3) + "," + e.end(i).toFixed(3) + "]";
                    return t
                }
            };

            function te(e, t) {
                t.fragments.forEach(function (t) {
                    if (t) {
                        var r = t.start + e;
                        t.start = t.startPTS = r, t.endPTS = r + t.duration
                    }
                }), t.PTSKnown = !0
            }

            function re(e, t, r) {
                if (function (e, t, r) {
                    var i = !1;
                    return t && t.details && r && (r.endCC > r.startCC || e && e.cc < r.startCC) && (i = !0), i
                }(e, t, r)) {
                    var i = function (e, t) {
                        var r = e.fragments, i = t.fragments;
                        if (i.length && r.length) {
                            var n = function (e, t) {
                                for (var r = null, i = 0; i < e.length; i += 1) {
                                    var n = e[i];
                                    if (n && n.cc === t) {
                                        r = n;
                                        break
                                    }
                                }
                                return r
                            }(r, i[0].cc);
                            if (n && (!n || n.startPTS)) return n;
                            s.b.log("No frag in previous level to align on")
                        } else s.b.log("No fragments to align")
                    }(t.details, r);
                    i && (s.b.log("Adjusting PTS using last level due to CC increase within current level"), te(i.start, r))
                }
                if (!1 === r.PTSKnown && t && t.details && t.details.fragments && t.details.fragments.length) {
                    var n = t.details.programDateTime, a = (r.programDateTime - n) / 1e3 + t.details.fragments[0].start;
                    isNaN(a) || (s.b.log("adjusting PTS using programDateTime delta, sliding:" + a.toFixed(3)), te(a, r))
                }
            }

            var ie = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    for (var i = arguments.length, n = Array(i > 1 ? i - 1 : 0), a = 1; a < i; a++) n[a - 1] = arguments[a];
                    var o = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call.apply(e, [this, r].concat(n)));
                    return o._tickInterval = null, o._tickTimer = null, o._tickCallCount = 0, o._boundTick = o.tick.bind(o), o
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.onHandlerDestroying = function () {
                    this.clearNextTick(), this.clearInterval()
                }, t.prototype.hasInterval = function () {
                    return !!this._tickInterval
                }, t.prototype.hasNextTick = function () {
                    return !!this._tickTimer
                }, t.prototype.setInterval = function (e) {
                    function t(t) {
                        return e.apply(this, arguments)
                    }

                    return t.toString = function () {
                        return e.toString()
                    }, t
                }(function (e) {
                    return !this._tickInterval && (this._tickInterval = setInterval(this._boundTick, e), !0)
                }), t.prototype.clearInterval = function (e) {
                    function t() {
                        return e.apply(this, arguments)
                    }

                    return t.toString = function () {
                        return e.toString()
                    }, t
                }(function () {
                    return !!this._tickInterval && (clearInterval(this._tickInterval), this._tickInterval = null, !0)
                }), t.prototype.clearNextTick = function () {
                    return !!this._tickTimer && (clearTimeout(this._tickTimer), this._tickTimer = null, !0)
                }, t.prototype.tick = function () {
                    this._tickCallCount++, 1 === this._tickCallCount && (this.doTick(), this._tickCallCount > 1 && (this.clearNextTick(), this._tickTimer = setTimeout(this._boundTick, 0)), this._tickCallCount = 0)
                }, t.prototype.doTick = function () {
                }, t
            }(u);

            function ne(e) {
                var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                if (!Array.isArray(e) || !e.length || null === t) return null;
                if (t < e[0].pdt) return null;
                if (t >= e[e.length - 1].endPdt) return null;
                for (var r = 0; r < e.length; ++r) {
                    var i = e[r];
                    if (t < i.endPdt) return i
                }
                return null
            }

            function ae(e, t) {
                var r = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0,
                    i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0,
                    n = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0, a = void 0,
                    o = e ? t[e.sn - t[0].sn + 1] : null;
                return r < i && (r > i - n && (n = 0), a = o && !oe(r, n, o) ? o : F.search(t, oe.bind(null, r, n))), a
            }

            function oe() {
                var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0,
                    t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0, r = arguments[2],
                    i = Math.min(t, r.duration + (r.deltaPTS ? r.deltaPTS : 0));
                return r.start + r.duration - i <= e ? 1 : r.start - i > e && r.start ? -1 : 0
            }

            var se = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }

                return function (t, r, i) {
                    return r && e(t.prototype, r), i && e(t, i), t
                }
            }();
            var de = {
                STOPPED: "STOPPED",
                IDLE: "IDLE",
                KEY_LOADING: "KEY_LOADING",
                FRAG_LOADING: "FRAG_LOADING",
                FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                WAITING_LEVEL: "WAITING_LEVEL",
                PARSING: "PARSING",
                PARSED: "PARSED",
                BUFFER_FLUSHING: "BUFFER_FLUSHING",
                ENDED: "ENDED",
                ERROR: "ERROR"
            }, le = function (e) {
                function t(r, i) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var n = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.MEDIA_ATTACHED, o.a.MEDIA_DETACHING, o.a.MANIFEST_LOADING, o.a.MANIFEST_PARSED, o.a.LEVEL_LOADED, o.a.KEY_LOADED, o.a.FRAG_LOADED, o.a.FRAG_LOAD_EMERGENCY_ABORTED, o.a.FRAG_PARSING_INIT_SEGMENT, o.a.FRAG_PARSING_DATA, o.a.FRAG_PARSED, o.a.ERROR, o.a.AUDIO_TRACK_SWITCHING, o.a.AUDIO_TRACK_SWITCHED, o.a.BUFFER_CREATED, o.a.BUFFER_APPENDED, o.a.BUFFER_FLUSHED));
                    return n.fragmentTracker = i, n.config = r.config, n.audioCodecSwap = !1, n._state = de.STOPPED, n.stallReported = !1, n
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.onHandlerDestroying = function () {
                    this.stopLoad(), e.prototype.onHandlerDestroying.call(this)
                }, t.prototype.onHandlerDestroyed = function () {
                    this.state = de.STOPPED, this.fragmentTracker = null, e.prototype.onHandlerDestroyed.call(this)
                }, t.prototype.startLoad = function (e) {
                    if (this.levels) {
                        var t = this.lastCurrentTime, r = this.hls;
                        if (this.stopLoad(), this.setInterval(100), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) {
                            var i = r.startLevel;
                            -1 === i && (i = 0, this.bitrateTest = !0), this.level = r.nextLoadLevel = i, this.loadedmetadata = !1
                        }
                        t > 0 && -1 === e && (s.b.log("override startPosition with lastCurrentTime @" + t.toFixed(3)), e = t), this.state = de.IDLE, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e, this.tick()
                    } else this.forceStartLoad = !0, this.state = de.STOPPED
                }, t.prototype.stopLoad = function () {
                    var e = this.fragCurrent;
                    e && (e.loader && e.loader.abort(), this.fragmentTracker.removeFragment(e), this.fragCurrent = null), this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.clearInterval(), this.state = de.STOPPED, this.forceStartLoad = !1
                }, t.prototype.doTick = function () {
                    switch (this.state) {
                        case de.BUFFER_FLUSHING:
                            this.fragLoadError = 0;
                            break;
                        case de.IDLE:
                            this._doTickIdle();
                            break;
                        case de.WAITING_LEVEL:
                            var e = this.levels[this.level];
                            e && e.details && (this.state = de.IDLE);
                            break;
                        case de.FRAG_LOADING_WAITING_RETRY:
                            var t = window.performance.now(), r = this.retryDate;
                            (!r || t >= r || this.media && this.media.seeking) && (s.b.log("mediaController: retryDate reached, switch back to IDLE state"), this.state = de.IDLE);
                            break;
                        case de.ERROR:
                        case de.STOPPED:
                        case de.FRAG_LOADING:
                        case de.PARSING:
                        case de.PARSED:
                        case de.ENDED:
                    }
                    this._checkBuffer(), this._checkFragmentChanged()
                }, t.prototype._doTickIdle = function () {
                    var e = this.hls, t = e.config, r = this.media;
                    if (this.levelLastLoaded !== undefined && (r || !this.startFragRequested && t.startFragPrefetch)) {
                        var i = void 0;
                        i = this.loadedmetadata ? r.currentTime : this.nextLoadPosition;
                        var n = e.nextLoadLevel, a = this.levels[n];
                        if (a) {
                            var d = a.bitrate, l = void 0;
                            l = d ? Math.max(8 * t.maxBufferSize / d, t.maxBufferLength) : t.maxBufferLength, l = Math.min(l, t.maxMaxBufferLength);
                            var u = B.bufferInfo(this.mediaBuffer ? this.mediaBuffer : r, i, t.maxBufferHole),
                                c = u.len;
                            if (!(c >= l)) {
                                s.b.trace("buffer length of " + c.toFixed(3) + " is below max of " + l.toFixed(3) + ". checking for more payload ..."), this.level = e.nextLoadLevel = n;
                                var h = a.details;
                                if (!h || h.live && this.levelLastLoaded !== n) this.state = de.WAITING_LEVEL; else {
                                    var f = this.fragPrevious;
                                    if (!h.live && f && !f.backtracked && f.sn === h.endSN && !u.nextStart) if (Math.min(r.duration, f.start + f.duration) - Math.max(u.end, f.start) <= Math.max(.2, f.duration)) {
                                        var p = {};
                                        return this.altAudio && (p.type = "video"), this.hls.trigger(o.a.BUFFER_EOS, p), void (this.state = de.ENDED)
                                    }
                                    this._fetchPayloadOrEos(i, u, h)
                                }
                            }
                        }
                    }
                }, t.prototype._fetchPayloadOrEos = function (e, t, r) {
                    var i = this.fragPrevious, n = this.level, a = r.fragments, o = a.length;
                    if (0 !== o) {
                        var d = a[0].start, l = a[o - 1].start + a[o - 1].duration, u = t.end, c = void 0;
                        if (r.initSegment && !r.initSegment.data) c = r.initSegment; else if (r.live) {
                            var h = this.config.initialLiveManifestSize;
                            if (o < h) return void s.b.warn("Can not start playback of a level, reason: not enough fragments " + o + " < " + h);
                            if (null === (c = this._ensureFragmentAtLivePoint(r, u, d, l, i, a, o))) return
                        } else u < d && (c = a[0]);
                        c || (c = this._findFragment(d, i, o, a, u, l, r)), c && (c.encrypted ? (s.b.log("Loading key for " + c.sn + " of [" + r.startSN + " ," + r.endSN + "],level " + n), this._loadKey(c)) : (s.b.log("Loading " + c.sn + " of [" + r.startSN + " ," + r.endSN + "],level " + n + ", currentTime:" + e.toFixed(3) + ",bufferEnd:" + u.toFixed(3)), this._loadFragment(c)))
                    }
                }, t.prototype._ensureFragmentAtLivePoint = function (e, t, r, i, n, a, o) {
                    var d = this.hls.config, l = this.media, u = void 0,
                        c = d.liveMaxLatencyDuration !== undefined ? d.liveMaxLatencyDuration : d.liveMaxLatencyDurationCount * e.targetduration;
                    if (t < Math.max(r - d.maxFragLookUpTolerance, i - c)) {
                        var h = this.liveSyncPosition = this.computeLivePosition(r, e);
                        s.b.log("buffer end: " + t.toFixed(3) + " is located too far from the end of live sliding playlist, reset currentTime to : " + h.toFixed(3)), t = h, l && l.readyState && l.duration > h && (l.currentTime = h), this.nextLoadPosition = h
                    }
                    if (e.PTSKnown && t > i && l && l.readyState) return null;
                    if (this.startFragRequested && !e.PTSKnown) {
                        if (n) if (e.programDateTime) u = ne(a, n.endPdt + 1); else {
                            var f = n.sn + 1;
                            if (f >= e.startSN && f <= e.endSN) {
                                var p = a[f - e.startSN];
                                n.cc === p.cc && (u = p, s.b.log("live playlist, switching playlist, load frag with next SN: " + u.sn))
                            }
                            u || (u = F.search(a, function (e) {
                                return n.cc - e.cc
                            })) && s.b.log("live playlist, switching playlist, load frag with same CC: " + u.sn)
                        }
                        u || (u = a[Math.min(o - 1, Math.round(o / 2))], s.b.log("live playlist, switching playlist, unknown, load middle frag : " + u.sn))
                    }
                    return u
                }, t.prototype._findFragment = function (e, t, r, i, n, a, o) {
                    var d = this.hls.config, l = void 0, u = void 0;
                    if (n < a ? o.programDateTime ? (u = ne(i, function () {
                        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0,
                            t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0, r = arguments[2],
                            i = 0;
                        if (r.programDateTime) {
                            var n = Date.parse(r.programDateTime);
                            isNaN(n) || (i = 1e3 * t + n - 1e3 * e)
                        }
                        return i
                    }(e, n, o))) && !oe(n, d.maxFragLookUpTolerance, u) || (s.b.warn("Frag found by PDT search did not fit within tolerance; falling back to finding by SN"), u = ae(t, i, n, a, d.maxFragLookUpTolerance)) : u = ae(t, i, n, a, d.maxFragLookUpTolerance) : u = i[r - 1], u) {
                        var c = (l = u).sn - o.startSN, h = t && l.level === t.level, f = i[c - 1], p = i[c + 1];
                        if (t && l.sn === t.sn) if (h && !l.backtracked) if (l.sn < o.endSN) {
                            var v = t.deltaPTS;
                            v && v > d.maxBufferHole && t.dropped && c ? (l = f, s.b.warn("SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this")) : (l = p, s.b.log("SN just loaded, load next one: " + l.sn))
                        } else l = null; else l.backtracked && (p && p.backtracked ? (s.b.warn("Already backtracked from fragment " + p.sn + ", will not backtrack to fragment " + l.sn + ". Loading fragment " + p.sn), l = p) : (s.b.warn("Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe"), l.dropped = 0, f ? (l = f).backtracked = !0 : c && (l = null)))
                    }
                    return l
                }, t.prototype._loadKey = function (e) {
                    this.state = de.KEY_LOADING, this.hls.trigger(o.a.KEY_LOADING, {frag: e})
                }, t.prototype._loadFragment = function (e) {
                    var t = this.fragmentTracker.getState(e);
                    this.fragCurrent = e, this.startFragRequested = !0, isNaN(e.sn) || e.bitrateTest || (this.nextLoadPosition = e.start + e.duration), e.backtracked || t === O || t === M ? (e.autoLevel = this.hls.autoLevelEnabled, e.bitrateTest = this.bitrateTest, this.hls.trigger(o.a.FRAG_LOADING, {frag: e}), this.demuxer || (this.demuxer = new X(this.hls, "main")), this.state = de.FRAG_LOADING) : t === N && this._reduceMaxBufferLength(e.duration) && this.fragmentTracker.removeFragment(e)
                }, t.prototype.getBufferedFrag = function (e) {
                    return this.fragmentTracker.getBufferedFrag(e, x.LevelType.MAIN)
                }, t.prototype.followingBufferedFrag = function (e) {
                    return e ? this.getBufferedFrag(e.endPTS + .5) : null
                }, t.prototype._checkFragmentChanged = function () {
                    var e = void 0, t = void 0, r = this.media;
                    if (r && r.readyState && !1 === r.seeking && ((t = r.currentTime) > this.lastCurrentTime && (this.lastCurrentTime = t), B.isBuffered(r, t) ? e = this.getBufferedFrag(t) : B.isBuffered(r, t + .1) && (e = this.getBufferedFrag(t + .1)), e)) {
                        var i = e;
                        if (i !== this.fragPlaying) {
                            this.hls.trigger(o.a.FRAG_CHANGED, {frag: i});
                            var n = i.level;
                            this.fragPlaying && this.fragPlaying.level === n || this.hls.trigger(o.a.LEVEL_SWITCHED, {level: n}), this.fragPlaying = i
                        }
                    }
                }, t.prototype.immediateLevelSwitch = function () {
                    if (s.b.log("immediateLevelSwitch"), !this.immediateSwitch) {
                        this.immediateSwitch = !0;
                        var e = this.media, t = void 0;
                        e ? (t = e.paused, e.pause()) : t = !0, this.previouslyPaused = t
                    }
                    var r = this.fragCurrent;
                    r && r.loader && r.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                }, t.prototype.immediateLevelSwitchEnd = function () {
                    var e = this.media;
                    e && e.buffered.length && (this.immediateSwitch = !1, B.isBuffered(e, e.currentTime) && (e.currentTime -= 1e-4), this.previouslyPaused || e.play())
                }, t.prototype.nextLevelSwitch = function () {
                    var e = this.media;
                    if (e && e.readyState) {
                        var t, r = void 0, i = void 0;
                        if ((t = this.getBufferedFrag(e.currentTime)) && t.startPTS > 1 && this.flushMainBuffer(0, t.startPTS - 1), e.paused) r = 0; else {
                            var n = this.hls.nextLoadLevel, a = this.levels[n], o = this.fragLastKbps;
                            r = o && this.fragCurrent ? this.fragCurrent.duration * a.bitrate / (1e3 * o) + 1 : 0
                        }
                        if ((i = this.getBufferedFrag(e.currentTime + r)) && (i = this.followingBufferedFrag(i))) {
                            var s = this.fragCurrent;
                            s && s.loader && s.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(i.maxStartPTS, Number.POSITIVE_INFINITY)
                        }
                    }
                }, t.prototype.flushMainBuffer = function (e, t) {
                    this.state = de.BUFFER_FLUSHING;
                    var r = {startOffset: e, endOffset: t};
                    this.altAudio && (r.type = "video"), this.hls.trigger(o.a.BUFFER_FLUSHING, r)
                }, t.prototype.onMediaAttached = function (e) {
                    var t = this.media = this.mediaBuffer = e.media;
                    this.onvseeking = this.onMediaSeeking.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), this.onvended = this.onMediaEnded.bind(this), t.addEventListener("seeking", this.onvseeking), t.addEventListener("seeked", this.onvseeked), t.addEventListener("ended", this.onvended);
                    var r = this.config;
                    this.levels && r.autoStartLoad && this.hls.startLoad(r.startPosition)
                }, t.prototype.onMediaDetaching = function () {
                    var e = this.media;
                    e && e.ended && (s.b.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0);
                    var t = this.levels;
                    t && t.forEach(function (e) {
                        e.details && e.details.fragments.forEach(function (e) {
                            e.backtracked = undefined
                        })
                    }), e && (e.removeEventListener("seeking", this.onvseeking), e.removeEventListener("seeked", this.onvseeked), e.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.stopLoad()
                }, t.prototype.onMediaSeeking = function () {
                    var e = this.media, t = e ? e.currentTime : undefined, r = this.config;
                    isNaN(t) || s.b.log("media seeking to " + t.toFixed(3));
                    var i = this.mediaBuffer ? this.mediaBuffer : e, n = B.bufferInfo(i, t, this.config.maxBufferHole);
                    if (this.state === de.FRAG_LOADING) {
                        var a = this.fragCurrent;
                        if (0 === n.len && a) {
                            var o = r.maxFragLookUpTolerance, d = a.start - o, l = a.start + a.duration + o;
                            t < d || t > l ? (a.loader && (s.b.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), a.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.state = de.IDLE) : s.b.log("seeking outside of buffer but within currently loaded fragment range")
                        }
                    } else this.state === de.ENDED && (0 === n.len && (this.fragPrevious = 0), this.state = de.IDLE);
                    e && (this.lastCurrentTime = t), this.loadedmetadata || (this.nextLoadPosition = this.startPosition = t), this.tick()
                }, t.prototype.onMediaSeeked = function () {
                    var e = this.media, t = e ? e.currentTime : undefined;
                    isNaN(t) || s.b.log("media seeked to " + t.toFixed(3)), this.tick()
                }, t.prototype.onMediaEnded = function () {
                    s.b.log("media ended"), this.startPosition = this.lastCurrentTime = 0
                }, t.prototype.onManifestLoading = function () {
                    s.b.log("trigger BUFFER_RESET"), this.hls.trigger(o.a.BUFFER_RESET), this.fragmentTracker.removeAllFragments(), this.stalled = !1, this.startPosition = this.lastCurrentTime = 0
                }, t.prototype.onManifestParsed = function (e) {
                    var t = !1, r = !1, i = void 0;
                    e.levels.forEach(function (e) {
                        (i = e.audioCodec) && (-1 !== i.indexOf("mp4a.40.2") && (t = !0), -1 !== i.indexOf("mp4a.40.5") && (r = !0))
                    }), this.audioCodecSwitch = t && r, this.audioCodecSwitch && s.b.log("both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"), this.levels = e.levels, this.startFragRequested = !1;
                    var n = this.config;
                    (n.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(n.startPosition)
                }, t.prototype.onLevelLoaded = function (e) {
                    var t = e.details, r = e.level, i = this.levels[this.levelLastLoaded], n = this.levels[r],
                        a = t.totalduration, d = 0;
                    if (s.b.log("level " + r + " loaded [" + t.startSN + "," + t.endSN + "],duration:" + a), t.live) {
                        var l = n.details;
                        l && t.fragments.length > 0 ? (!function (e, t) {
                            var r = Math.max(e.startSN, t.startSN) - t.startSN,
                                i = Math.min(e.endSN, t.endSN) - t.startSN, n = t.startSN - e.startSN, a = e.fragments,
                                o = t.fragments, d = 0, l = void 0;
                            if (t.initSegment && e.initSegment && (t.initSegment = e.initSegment), i < r) t.PTSKnown = !1; else {
                                for (var u = r; u <= i; u++) {
                                    var c = a[n + u], h = o[u];
                                    h && c && (d = c.cc - h.cc, isNaN(c.startPTS) || (h.start = h.startPTS = c.startPTS, h.endPTS = c.endPTS, h.duration = c.duration, h.backtracked = c.backtracked, h.dropped = c.dropped, l = h))
                                }
                                if (d) for (s.b.log("discontinuity sliding from playlist, take drift into account"), u = 0; u < o.length; u++) o[u].cc += d;
                                if (l) Q(t, l, l.startPTS, l.endPTS, l.startDTS, l.endDTS); else if (n >= 0 && n < a.length) {
                                    var f = a[n].start;
                                    for (u = 0; u < o.length; u++) o[u].start += f
                                }
                                t.PTSKnown = e.PTSKnown
                            }
                        }(l, t), d = t.fragments[0].start, this.liveSyncPosition = this.computeLivePosition(d, l), t.PTSKnown && !isNaN(d) ? s.b.log("live playlist sliding:" + d.toFixed(3)) : (s.b.log("live playlist - outdated PTS, unknown sliding"), re(this.fragPrevious, i, t))) : (s.b.log("live playlist - first load, unknown sliding"), t.PTSKnown = !1, re(this.fragPrevious, i, t))
                    } else t.PTSKnown = !1;
                    if (n.details = t, this.levelLastLoaded = r, this.hls.trigger(o.a.LEVEL_UPDATED, {
                        details: t,
                        level: r
                    }), !1 === this.startFragRequested) {
                        if (-1 === this.startPosition || -1 === this.lastCurrentTime) {
                            var u = t.startTimeOffset;
                            isNaN(u) ? t.live ? (this.startPosition = this.computeLivePosition(d, t), s.b.log("configure startPosition to " + this.startPosition)) : this.startPosition = 0 : (u < 0 && (s.b.log("negative start time offset " + u + ", count from end of last fragment"), u = d + a + u), s.b.log("start time offset found in playlist, adjust startPosition to " + u), this.startPosition = u), this.lastCurrentTime = this.startPosition
                        }
                        this.nextLoadPosition = this.startPosition
                    }
                    this.state === de.WAITING_LEVEL && (this.state = de.IDLE), this.tick()
                }, t.prototype.onKeyLoaded = function () {
                    this.state === de.KEY_LOADING && (this.state = de.IDLE, this.tick())
                }, t.prototype.onFragLoaded = function (e) {
                    var t = this.fragCurrent, r = e.frag;
                    if (this.state === de.FRAG_LOADING && t && "main" === r.type && r.level === t.level && r.sn === t.sn) {
                        var i = e.stats, n = this.levels[t.level], a = n.details;
                        if (s.b.log("Loaded  " + t.sn + " of [" + a.startSN + " ," + a.endSN + "],level " + t.level), this.bitrateTest = !1, this.stats = i, !0 === r.bitrateTest && this.hls.nextLoadLevel) this.state = de.IDLE, this.startFragRequested = !1, i.tparsed = i.tbuffered = window.performance.now(), this.hls.trigger(o.a.FRAG_BUFFERED, {
                            stats: i,
                            frag: t,
                            id: "main"
                        }), this.tick(); else if ("initSegment" === r.sn) this.state = de.IDLE, i.tparsed = i.tbuffered = window.performance.now(), a.initSegment.data = e.payload, this.hls.trigger(o.a.FRAG_BUFFERED, {
                            stats: i,
                            frag: t,
                            id: "main"
                        }), this.tick(); else {
                            this.state = de.PARSING;
                            var d = a.totalduration, l = t.level, u = t.sn,
                                c = this.config.defaultAudioCodec || n.audioCodec;
                            this.audioCodecSwap && (s.b.log("swapping playlist audio codec"), c === undefined && (c = this.lastAudioCodec), c && (c = -1 !== c.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5")), this.pendingBuffering = !0, this.appended = !1, s.b.log("Parsing " + u + " of [" + a.startSN + " ," + a.endSN + "],level " + l + ", cc " + t.cc);
                            var h = this.demuxer;
                            h || (h = this.demuxer = new X(this.hls, "main"));
                            var f = this.media, p = !(f && f.seeking) && (a.PTSKnown || !a.live),
                                v = a.initSegment ? a.initSegment.data : [];
                            h.push(e.payload, v, c, n.videoCodec, t, d, p, undefined)
                        }
                    }
                    this.fragLoadError = 0
                }, t.prototype.onFragParsingInitSegment = function (e) {
                    var t = this.fragCurrent, r = e.frag;
                    if (t && "main" === e.id && r.sn === t.sn && r.level === t.level && this.state === de.PARSING) {
                        var i = e.tracks, n = void 0, a = void 0;
                        if (i.audio && this.altAudio && delete i.audio, a = i.audio) {
                            var d = this.levels[this.level].audioCodec, l = navigator.userAgent.toLowerCase();
                            d && this.audioCodecSwap && (s.b.log("swapping playlist audio codec"), d = -1 !== d.indexOf("mp4a.40.5") ? "mp4a.40.2" : "mp4a.40.5"), this.audioCodecSwitch && 1 !== a.metadata.channelCount && -1 === l.indexOf("firefox") && (d = "mp4a.40.5"), -1 !== l.indexOf("android") && "audio/mpeg" !== a.container && (d = "mp4a.40.2", s.b.log("Android: force audio codec to " + d)), a.levelCodec = d, a.id = e.id
                        }
                        for (n in (a = i.video) && (a.levelCodec = this.levels[this.level].videoCodec, a.id = e.id), this.hls.trigger(o.a.BUFFER_CODECS, i), i) {
                            a = i[n], s.b.log("main track:" + n + ",container:" + a.container + ",codecs[level/parsed]=[" + a.levelCodec + "/" + a.codec + "]");
                            var u = a.initSegment;
                            u && (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(o.a.BUFFER_APPENDING, {
                                type: n,
                                data: u,
                                parent: "main",
                                content: "initSegment"
                            }))
                        }
                        this.tick()
                    }
                }, t.prototype.onFragParsingData = function (e) {
                    var t = this, r = this.fragCurrent, i = e.frag;
                    if (r && "main" === e.id && i.sn === r.sn && i.level === r.level && ("audio" !== e.type || !this.altAudio) && this.state === de.PARSING) {
                        var n = this.levels[this.level], a = r;
                        if (isNaN(e.endPTS) && (e.endPTS = e.startPTS + r.duration, e.endDTS = e.startDTS + r.duration), !0 === e.hasAudio && a.addElementaryStream(v.ElementaryStreamTypes.AUDIO), !0 === e.hasVideo && a.addElementaryStream(v.ElementaryStreamTypes.VIDEO), s.b.log("Parsed " + e.type + ",PTS:[" + e.startPTS.toFixed(3) + "," + e.endPTS.toFixed(3) + "],DTS:[" + e.startDTS.toFixed(3) + "/" + e.endDTS.toFixed(3) + "],nb:" + e.nb + ",dropped:" + (e.dropped || 0)), "video" === e.type) if (a.dropped = e.dropped, a.dropped) if (a.backtracked) s.b.warn("Already backtracked on this fragment, appending with the gap", a.sn); else {
                            var d = n.details;
                            if (!d || a.sn !== d.startSN) return s.b.warn("missing video frame(s), backtracking fragment", a.sn), this.fragmentTracker.removeFragment(a), a.backtracked = !0, this.nextLoadPosition = e.startPTS, this.state = de.IDLE, this.fragPrevious = a, void this.tick();
                            s.b.warn("missing video frame(s) on first frag, appending with gap", a.sn)
                        } else a.backtracked = !1;
                        var l = Q(n.details, a, e.startPTS, e.endPTS, e.startDTS, e.endDTS), u = this.hls;
                        u.trigger(o.a.LEVEL_PTS_UPDATED, {
                            details: n.details,
                            level: this.level,
                            drift: l,
                            type: e.type,
                            start: e.startPTS,
                            end: e.endPTS
                        }), [e.data1, e.data2].forEach(function (r) {
                            r && r.length && t.state === de.PARSING && (t.appended = !0, t.pendingBuffering = !0, u.trigger(o.a.BUFFER_APPENDING, {
                                type: e.type,
                                data: r,
                                parent: "main",
                                content: "data"
                            }))
                        }), this.tick()
                    }
                }, t.prototype.onFragParsed = function (e) {
                    var t = this.fragCurrent, r = e.frag;
                    t && "main" === e.id && r.sn === t.sn && r.level === t.level && this.state === de.PARSING && (this.stats.tparsed = window.performance.now(), this.state = de.PARSED, this._checkAppendedParsed())
                }, t.prototype.onAudioTrackSwitching = function (e) {
                    var t = !!e.url, r = e.id;
                    if (!t) {
                        if (this.mediaBuffer !== this.media) {
                            s.b.log("switching on main audio, use media.buffered to schedule main fragment loading"), this.mediaBuffer = this.media;
                            var i = this.fragCurrent;
                            i.loader && (s.b.log("switching to main audio track, cancel main fragment load"), i.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.state = de.IDLE
                        }
                        var n = this.hls;
                        n.trigger(o.a.BUFFER_FLUSHING, {
                            startOffset: 0,
                            endOffset: Number.POSITIVE_INFINITY,
                            type: "audio"
                        }), n.trigger(o.a.AUDIO_TRACK_SWITCHED, {id: r}), this.altAudio = !1
                    }
                }, t.prototype.onAudioTrackSwitched = function (e) {
                    var t = e.id, r = !!this.hls.audioTracks[t].url;
                    if (r) {
                        var i = this.videoBuffer;
                        i && this.mediaBuffer !== i && (s.b.log("switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = i)
                    }
                    this.altAudio = r, this.tick()
                }, t.prototype.onBufferCreated = function (e) {
                    var t = e.tracks, r = void 0, i = void 0, n = !1;
                    for (var a in t) {
                        var o = t[a];
                        "main" === o.id ? (i = a, r = o, "video" === a && (this.videoBuffer = t[a].buffer)) : n = !0
                    }
                    n && r ? (s.b.log("alternate track found, use " + i + ".buffered to schedule main fragment loading"), this.mediaBuffer = r.buffer) : this.mediaBuffer = this.media
                }, t.prototype.onBufferAppended = function (e) {
                    if ("main" === e.parent) {
                        var t = this.state;
                        t !== de.PARSING && t !== de.PARSED || (this.pendingBuffering = e.pending > 0, this._checkAppendedParsed())
                    }
                }, t.prototype._checkAppendedParsed = function () {
                    if (!(this.state !== de.PARSED || this.appended && this.pendingBuffering)) {
                        var e = this.fragCurrent;
                        if (e) {
                            var t = this.mediaBuffer ? this.mediaBuffer : this.media;
                            s.b.log("main buffered : " + ee.toString(t.buffered)), this.fragPrevious = e;
                            var r = this.stats;
                            r.tbuffered = window.performance.now(), this.fragLastKbps = Math.round(8 * r.total / (r.tbuffered - r.tfirst)), this.hls.trigger(o.a.FRAG_BUFFERED, {
                                stats: r,
                                frag: e,
                                id: "main"
                            }), this.state = de.IDLE
                        }
                        this.tick()
                    }
                }, t.prototype.onError = function (e) {
                    var t = e.frag || this.fragCurrent;
                    if (!t || "main" === t.type) {
                        var r = !!this.media && B.isBuffered(this.media, this.media.currentTime) && B.isBuffered(this.media, this.media.currentTime + .5);
                        switch (e.details) {
                            case a.a.FRAG_LOAD_ERROR:
                            case a.a.FRAG_LOAD_TIMEOUT:
                            case a.a.KEY_LOAD_ERROR:
                            case a.a.KEY_LOAD_TIMEOUT:
                                if (!e.fatal) if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
                                    var i = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
                                    s.b.warn("mediaController: frag loading failed, retry in " + i + " ms"), this.retryDate = window.performance.now() + i, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.fragLoadError++, this.state = de.FRAG_LOADING_WAITING_RETRY
                                } else s.b.error("mediaController: " + e.details + " reaches max retry, redispatch as fatal ..."), e.fatal = !0, this.state = de.ERROR;
                                break;
                            case a.a.LEVEL_LOAD_ERROR:
                            case a.a.LEVEL_LOAD_TIMEOUT:
                                this.state !== de.ERROR && (e.fatal ? (this.state = de.ERROR, s.b.warn("streamController: " + e.details + ",switch to " + this.state + " state ...")) : e.levelRetry || this.state !== de.WAITING_LEVEL || (this.state = de.IDLE));
                                break;
                            case a.a.BUFFER_FULL_ERROR:
                                "main" !== e.parent || this.state !== de.PARSING && this.state !== de.PARSED || (r ? (this._reduceMaxBufferLength(this.config.maxBufferLength), this.state = de.IDLE) : (s.b.warn("buffer full error also media.currentTime is not buffered, flush everything"), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)))
                        }
                    }
                }, t.prototype._reduceMaxBufferLength = function (e) {
                    var t = this.config;
                    return t.maxMaxBufferLength >= e && (t.maxMaxBufferLength /= 2, s.b.warn("main:reduce max buffer length to " + t.maxMaxBufferLength + "s"), !0)
                }, t.prototype._checkBuffer = function () {
                    var e = this.config, t = this.media;
                    if (t && 0 !== t.readyState) {
                        var r = t.currentTime, i = (this.mediaBuffer ? this.mediaBuffer : t).buffered;
                        if (!this.loadedmetadata && i.length) this.loadedmetadata = !0, this._seekToStartPos(); else if (this.immediateSwitch) this.immediateLevelSwitchEnd(); else {
                            var n = !(t.paused && t.readyState > 1 || t.ended || 0 === t.buffered.length),
                                a = window.performance.now();
                            if (r !== this.lastCurrentTime) this.stallReported && (s.b.warn("playback not stuck anymore @" + r + ", after " + Math.round(a - this.stalled) + "ms"), this.stallReported = !1), this.stalled = null, this.nudgeRetry = 0; else if (n) {
                                var o = a - this.stalled, d = B.bufferInfo(t, r, e.maxBufferHole);
                                if (!this.stalled) return void (this.stalled = a);
                                o >= 1e3 && this._reportStall(d.len), this._tryFixBufferStall(d, o)
                            }
                        }
                    }
                }, t.prototype.onFragLoadEmergencyAborted = function () {
                    this.state = de.IDLE, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tick()
                }, t.prototype.onBufferFlushed = function () {
                    var e = this.mediaBuffer ? this.mediaBuffer : this.media;
                    e && this.fragmentTracker.detectEvictedFragments(v.ElementaryStreamTypes.VIDEO, e.buffered), this.state = de.IDLE, this.fragPrevious = null
                }, t.prototype.swapAudioCodec = function () {
                    this.audioCodecSwap = !this.audioCodecSwap
                }, t.prototype.computeLivePosition = function (e, t) {
                    var r = this.config.liveSyncDuration !== undefined ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * t.targetduration;
                    return e + Math.max(0, t.totalduration - r)
                }, t.prototype._tryFixBufferStall = function (e, t) {
                    var r = this.config, i = this.media.currentTime, n = this.fragmentTracker.getPartialFragment(i);
                    n && this._trySkipBufferHole(n), e.len > .5 && t > 1e3 * r.highBufferWatchdogPeriod && (this.stalled = null, this._tryNudgeBuffer())
                }, t.prototype._reportStall = function (e) {
                    var t = this.hls, r = this.media;
                    this.stallReported || (this.stallReported = !0, s.b.warn("Playback stalling at @" + r.currentTime + " due to low buffer"), t.trigger(o.a.ERROR, {
                        type: a.b.MEDIA_ERROR,
                        details: a.a.BUFFER_STALLED_ERROR,
                        fatal: !1,
                        buffer: e
                    }))
                }, t.prototype._trySkipBufferHole = function (e) {
                    for (var t = this.hls, r = this.media, i = r.currentTime, n = 0, d = 0; d < r.buffered.length; d++) {
                        var l = r.buffered.start(d);
                        if (i >= n && i < l) return r.currentTime = Math.max(l, r.currentTime + .1), s.b.warn("skipping hole, adjusting currentTime from " + i + " to " + r.currentTime), this.stalled = null, void t.trigger(o.a.ERROR, {
                            type: a.b.MEDIA_ERROR,
                            details: a.a.BUFFER_SEEK_OVER_HOLE,
                            fatal: !1,
                            reason: "fragment loaded with buffer holes, seeking from " + i + " to " + r.currentTime,
                            frag: e
                        });
                        n = r.buffered.end(d)
                    }
                }, t.prototype._tryNudgeBuffer = function () {
                    var e = this.config, t = this.hls, r = this.media, i = r.currentTime,
                        n = (this.nudgeRetry || 0) + 1;
                    if (this.nudgeRetry = n, n < e.nudgeMaxRetry) {
                        var d = i + n * e.nudgeOffset;
                        s.b.log("adjust currentTime from " + i + " to " + d), r.currentTime = d, t.trigger(o.a.ERROR, {
                            type: a.b.MEDIA_ERROR,
                            details: a.a.BUFFER_NUDGE_ON_STALL,
                            fatal: !1
                        })
                    } else s.b.error("still stuck in high buffer @" + i + " after " + e.nudgeMaxRetry + ", raise fatal error"), t.trigger(o.a.ERROR, {
                        type: a.b.MEDIA_ERROR,
                        details: a.a.BUFFER_STALLED_ERROR,
                        fatal: !0
                    })
                }, t.prototype._seekToStartPos = function () {
                    var e = this.media, t = e.currentTime, r = e.seeking ? t : this.startPosition;
                    t !== r && (s.b.log("target start position not buffered, seek to buffered.start(0) " + r + " from current time " + t + " "), e.currentTime = r)
                }, se(t, [{
                    key: "state", set: function (e) {
                        if (this.state !== e) {
                            var t = this.state;
                            this._state = e, s.b.log("main stream:" + t + "->" + e), this.hls.trigger(o.a.STREAM_STATE_TRANSITION, {
                                previousState: t,
                                nextState: e
                            })
                        }
                    }, get: function () {
                        return this._state
                    }
                }, {
                    key: "currentLevel", get: function () {
                        var e = this.media;
                        if (e) {
                            var t = this.getBufferedFrag(e.currentTime);
                            if (t) return t.level
                        }
                        return -1
                    }
                }, {
                    key: "nextBufferedFrag", get: function () {
                        var e = this.media;
                        return e ? this.followingBufferedFrag(this.getBufferedFrag(e.currentTime)) : null
                    }
                }, {
                    key: "nextLevel", get: function () {
                        var e = this.nextBufferedFrag;
                        return e ? e.level : -1
                    }
                }, {
                    key: "liveSyncPosition", get: function () {
                        return this._liveSyncPosition
                    }, set: function (e) {
                        this._liveSyncPosition = e
                    }
                }]), t
            }(ie), ue = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
                return typeof e
            } : function (e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, ce = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }

                return function (t, r, i) {
                    return r && e(t.prototype, r), i && e(t, i), t
                }
            }();
            var he = window.performance, fe = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.MANIFEST_LOADED, o.a.LEVEL_LOADED, o.a.AUDIO_TRACK_SWITCHED, o.a.FRAG_LOADED, o.a.ERROR));
                    return i.canload = !1, i.currentLevelIndex = null, i.manualLevelIndex = -1, i.timer = null, i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.onHandlerDestroying = function () {
                    this.clearTimer(), this.manualLevelIndex = -1
                }, t.prototype.clearTimer = function () {
                    null !== this.timer && (clearTimeout(this.timer), this.timer = null)
                }, t.prototype.startLoad = function () {
                    var e = this._levels;
                    this.canload = !0, this.levelRetryCount = 0, e && e.forEach(function (e) {
                        e.loadError = 0;
                        var t = e.details;
                        t && t.live && (e.details = undefined)
                    }), null !== this.timer && this.loadLevel()
                }, t.prototype.stopLoad = function () {
                    this.canload = !1
                }, t.prototype.onManifestLoaded = function (e) {
                    var t = [], r = void 0, i = {}, n = null, d = !1, l = !1,
                        u = /chrome|firefox/.test(navigator.userAgent.toLowerCase()), c = [];
                    if (e.levels.forEach(function (e) {
                        e.loadError = 0, e.fragmentError = !1, d = d || !!e.videoCodec, l = l || !!e.audioCodec || !(!e.attrs || !e.attrs.AUDIO), u && e.audioCodec && -1 !== e.audioCodec.indexOf("mp4a.40.34") && (e.audioCodec = undefined), (n = i[e.bitrate]) ? n.url.push(e.url) : (e.url = [e.url], e.urlId = 0, i[e.bitrate] = e, t.push(e)), e.attrs && e.attrs.AUDIO && Z(n || e, "audio", e.attrs.AUDIO), e.attrs && e.attrs.SUBTITLES && Z(n || e, "text", e.attrs.SUBTITLES)
                    }), d && l && (t = t.filter(function (e) {
                        return !!e.videoCodec
                    })), t = t.filter(function (e) {
                        var t = e.audioCodec, r = e.videoCodec;
                        return (!t || _(t)) && (!r || _(r))
                    }), e.audioTracks && (c = e.audioTracks.filter(function (e) {
                        return !e.audioCodec || _(e.audioCodec, "audio")
                    })), t.length > 0) {
                        r = t[0].bitrate, t.sort(function (e, t) {
                            return e.bitrate - t.bitrate
                        }), this._levels = t;
                        for (var h = 0; h < t.length; h++) if (t[h].bitrate === r) {
                            this._firstLevel = h, s.b.log("manifest loaded," + t.length + " level(s) found, first bitrate:" + r);
                            break
                        }
                        this.hls.trigger(o.a.MANIFEST_PARSED, {
                            levels: t,
                            audioTracks: c,
                            firstLevel: this._firstLevel,
                            stats: e.stats,
                            audio: l,
                            video: d,
                            altAudio: c.length > 0 && d
                        })
                    } else this.hls.trigger(o.a.ERROR, {
                        type: a.b.MEDIA_ERROR,
                        details: a.a.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                        fatal: !0,
                        url: this.hls.url,
                        reason: "no level with compatible codecs found in manifest"
                    })
                }, t.prototype.setLevelInternal = function (e) {
                    var t = this._levels, r = this.hls;
                    if (e >= 0 && e < t.length) {
                        if (this.clearTimer(), this.currentLevelIndex !== e) {
                            s.b.log("switching to level " + e), this.currentLevelIndex = e;
                            var i = t[e];
                            i.level = e, r.trigger(o.a.LEVEL_SWITCHING, i)
                        }
                        var n = t[e], d = n.details;
                        if (!d || d.live) {
                            var l = n.urlId;
                            r.trigger(o.a.LEVEL_LOADING, {url: n.url[l], level: e, id: l})
                        }
                    } else r.trigger(o.a.ERROR, {
                        type: a.b.OTHER_ERROR,
                        details: a.a.LEVEL_SWITCH_ERROR,
                        level: e,
                        fatal: !1,
                        reason: "invalid level idx"
                    })
                }, t.prototype.onError = function (e) {
                    if (e.fatal) e.type === a.b.NETWORK_ERROR && this.clearTimer(); else {
                        var t = !1, r = !1, i = void 0;
                        switch (e.details) {
                            case a.a.FRAG_LOAD_ERROR:
                            case a.a.FRAG_LOAD_TIMEOUT:
                            case a.a.KEY_LOAD_ERROR:
                            case a.a.KEY_LOAD_TIMEOUT:
                                i = e.frag.level, r = !0;
                                break;
                            case a.a.LEVEL_LOAD_ERROR:
                            case a.a.LEVEL_LOAD_TIMEOUT:
                                i = e.context.level, t = !0;
                                break;
                            case a.a.REMUX_ALLOC_ERROR:
                                i = e.level, t = !0
                        }
                        i !== undefined && this.recoverLevel(e, i, t, r)
                    }
                }, t.prototype.recoverLevel = function (e, t, r, i) {
                    var n = this, a = this.hls.config, o = e.details, d = this._levels[t], l = void 0, u = void 0,
                        c = void 0;
                    if (d.loadError++, d.fragmentError = i, r) {
                        if (!(this.levelRetryCount + 1 <= a.levelLoadingMaxRetry)) return s.b.error("level controller, cannot recover from " + o + " error"), this.currentLevelIndex = null, this.clearTimer(), void (e.fatal = !0);
                        u = Math.min(Math.pow(2, this.levelRetryCount) * a.levelLoadingRetryDelay, a.levelLoadingMaxRetryTimeout), this.timer = setTimeout(function () {
                            return n.loadLevel()
                        }, u), e.levelRetry = !0, this.levelRetryCount++, s.b.warn("level controller, " + o + ", retry in " + u + " ms, current retry count is " + this.levelRetryCount)
                    }
                    (r || i) && ((l = d.url.length) > 1 && d.loadError < l ? (d.urlId = (d.urlId + 1) % l, d.details = undefined, s.b.warn("level controller, " + o + " for level " + t + ": switching to redundant URL-id " + d.urlId)) : -1 === this.manualLevelIndex ? (c = 0 === t ? this._levels.length - 1 : t - 1, s.b.warn("level controller, " + o + ": switch to " + c), this.hls.nextAutoLevel = this.currentLevelIndex = c) : i && (s.b.warn("level controller, " + o + ": reload a fragment"), this.currentLevelIndex = null))
                }, t.prototype.onFragLoaded = function (e) {
                    var t = e.frag;
                    if (t !== undefined && "main" === t.type) {
                        var r = this._levels[t.level];
                        r !== undefined && (r.fragmentError = !1, r.loadError = 0, this.levelRetryCount = 0)
                    }
                }, t.prototype.onLevelLoaded = function (e) {
                    var t = this, r = e.level;
                    if (r === this.currentLevelIndex) {
                        var i = this._levels[r];
                        i.fragmentError || (i.loadError = 0, this.levelRetryCount = 0);
                        var n = e.details;
                        if (n.live) {
                            var a = 1e3 * (n.averagetargetduration ? n.averagetargetduration : n.targetduration), o = a,
                                d = i.details;
                            d && n.endSN === d.endSN && (o /= 2, s.b.log("same live playlist, reload twice faster")), o -= he.now() - e.stats.trequest, o = Math.max(a / 2, Math.round(o)), s.b.log("live playlist, reload in " + Math.round(o) + " ms"), this.timer = setTimeout(function () {
                                return t.loadLevel()
                            }, o)
                        } else this.clearTimer()
                    }
                }, t.prototype.onAudioTrackSwitched = function (e) {
                    var t = this.hls.audioTracks[e.id].groupId, r = this.hls.levels[this.currentLevelIndex];
                    if (r && r.audioGroupIds) {
                        var i = r.audioGroupIds.findIndex(function (e) {
                            return e === t
                        });
                        i !== r.urlId && (r.urlId = i, this.startLoad())
                    }
                }, t.prototype.loadLevel = function () {
                    if (s.b.debug("call to loadLevel"), null !== this.currentLevelIndex && this.canload) {
                        var e = this._levels[this.currentLevelIndex];
                        if ("object" === (void 0 === e ? "undefined" : ue(e)) && e.url.length > 0) {
                            var t = this.currentLevelIndex, r = e.urlId, i = e.url[r];
                            s.b.log("Attempt loading level index " + t + " with URL-id " + r), this.hls.trigger(o.a.LEVEL_LOADING, {
                                url: i,
                                level: t,
                                id: r
                            })
                        }
                    }
                }, ce(t, [{
                    key: "levels", get: function () {
                        return this._levels
                    }
                }, {
                    key: "level", get: function () {
                        return this.currentLevelIndex
                    }, set: function (e) {
                        var t = this._levels;
                        t && (e = Math.min(e, t.length - 1), this.currentLevelIndex === e && t[e].details || this.setLevelInternal(e))
                    }
                }, {
                    key: "manualLevel", get: function () {
                        return this.manualLevelIndex
                    }, set: function (e) {
                        this.manualLevelIndex = e, this._startLevel === undefined && (this._startLevel = e), -1 !== e && (this.level = e)
                    }
                }, {
                    key: "firstLevel", get: function () {
                        return this._firstLevel
                    }, set: function (e) {
                        this._firstLevel = e
                    }
                }, {
                    key: "startLevel", get: function () {
                        if (this._startLevel === undefined) {
                            var e = this.hls.config.startLevel;
                            return e !== undefined ? e : this._firstLevel
                        }
                        return this._startLevel
                    }, set: function (e) {
                        this._startLevel = e
                    }
                }, {
                    key: "nextLoadLevel", get: function () {
                        return -1 !== this.manualLevelIndex ? this.manualLevelIndex : this.hls.nextAutoLevel
                    }, set: function (e) {
                        this.level = e, -1 === this.manualLevelIndex && (this.hls.nextAutoLevel = e)
                    }
                }]), t
            }(u), pe = r(7);

            function ve(e, t) {
                var r = null;
                try {
                    r = new window.Event("addtrack")
                } catch (i) {
                    (r = document.createEvent("Event")).initEvent("addtrack", !1, !1)
                }
                r.track = e, t.dispatchEvent(r)
            }

            var ye = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.MEDIA_ATTACHED, o.a.MEDIA_DETACHING, o.a.FRAG_PARSING_METADATA));
                    return i.id3Track = undefined, i.media = undefined, i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    u.prototype.destroy.call(this)
                }, t.prototype.onMediaAttached = function (e) {
                    this.media = e.media, this.media
                }, t.prototype.onMediaDetaching = function () {
                    !function (e) {
                        if (e && e.cues) for (; e.cues.length > 0;) e.removeCue(e.cues[0])
                    }(this.id3Track), this.id3Track = undefined, this.media = undefined
                }, t.prototype.getID3Track = function (e) {
                    for (var t = 0; t < e.length; t++) {
                        var r = e[t];
                        if ("metadata" === r.kind && "id3" === r.label) return ve(r, this.media), r
                    }
                    return this.media.addTextTrack("metadata", "id3")
                }, t.prototype.onFragParsingMetadata = function (e) {
                    var t = e.frag, r = e.samples;
                    this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks), this.id3Track.mode = "hidden");
                    for (var i = window.WebKitDataCue || window.VTTCue || window.TextTrackCue, n = 0; n < r.length; n++) {
                        var a = pe.a.getID3Frames(r[n].data);
                        if (a) {
                            var o = r[n].pts, s = n < r.length - 1 ? r[n + 1].pts : t.endPTS;
                            o === s && (s += 1e-4);
                            for (var d = 0; d < a.length; d++) {
                                var l = a[d];
                                if (!pe.a.isTimeStampFrame(l)) {
                                    var u = new i(o, s, "");
                                    u.value = l, this.id3Track.addCue(u)
                                }
                            }
                        }
                    }
                }, t
            }(u);
            var ge = function () {
                function e(t) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.alpha_ = t ? Math.exp(Math.log(.5) / t) : 0, this.estimate_ = 0, this.totalWeight_ = 0
                }

                return e.prototype.sample = function (e, t) {
                    var r = Math.pow(this.alpha_, e);
                    this.estimate_ = t * (1 - r) + r * this.estimate_, this.totalWeight_ += e
                }, e.prototype.getTotalWeight = function () {
                    return this.totalWeight_
                }, e.prototype.getEstimate = function () {
                    if (this.alpha_) {
                        var e = 1 - Math.pow(this.alpha_, this.totalWeight_);
                        return this.estimate_ / e
                    }
                    return this.estimate_
                }, e
            }();
            var me = function () {
                function e(t, r, i, n) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.hls = t, this.defaultEstimate_ = n, this.minWeight_ = .001, this.minDelayMs_ = 50, this.slow_ = new ge(r), this.fast_ = new ge(i)
                }

                return e.prototype.sample = function (e, t) {
                    var r = 8e3 * t / (e = Math.max(e, this.minDelayMs_)), i = e / 1e3;
                    this.fast_.sample(i, r), this.slow_.sample(i, r)
                }, e.prototype.canEstimate = function () {
                    var e = this.fast_;
                    return e && e.getTotalWeight() >= this.minWeight_
                }, e.prototype.getEstimate = function () {
                    return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                }, e.prototype.destroy = function () {
                }, e
            }(), Ee = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }

                return function (t, r, i) {
                    return r && e(t.prototype, r), i && e(t, i), t
                }
            }();
            var _e = window.performance, Te = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.FRAG_LOADING, o.a.FRAG_LOADED, o.a.FRAG_BUFFERED, o.a.ERROR));
                    return i.lastLoadedFragLevel = 0, i._nextAutoLevel = -1, i.hls = r, i.timer = null, i._bwEstimator = null, i.onCheck = i._abandonRulesCheck.bind(i), i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    this.clearTimer(), u.prototype.destroy.call(this)
                }, t.prototype.onFragLoading = function (e) {
                    var t = e.frag;
                    if ("main" === t.type && (this.timer || (this.fragCurrent = t, this.timer = setInterval(this.onCheck, 100)), !this._bwEstimator)) {
                        var r = this.hls, i = r.config, n = t.level, a = void 0, o = void 0;
                        r.levels[n].details.live ? (a = i.abrEwmaFastLive, o = i.abrEwmaSlowLive) : (a = i.abrEwmaFastVoD, o = i.abrEwmaSlowVoD), this._bwEstimator = new me(r, o, a, i.abrEwmaDefaultEstimate)
                    }
                }, t.prototype._abandonRulesCheck = function () {
                    var e = this.hls, t = e.media, r = this.fragCurrent;
                    if (r) {
                        var i = r.loader, n = e.minAutoLevel;
                        if (!i || i.stats && i.stats.aborted) return s.b.warn("frag loader destroy or aborted, disarm abandonRules"), this.clearTimer(), void (this._nextAutoLevel = -1);
                        var a = i.stats;
                        if (t && a && (!t.paused && 0 !== t.playbackRate || !t.readyState) && r.autoLevel && r.level) {
                            var d = _e.now() - a.trequest, l = Math.abs(t.playbackRate);
                            if (d > 500 * r.duration / l) {
                                var u = e.levels, c = Math.max(1, a.bw ? a.bw / 8 : 1e3 * a.loaded / d), h = u[r.level],
                                    f = h.realBitrate ? Math.max(h.realBitrate, h.bitrate) : h.bitrate,
                                    p = a.total ? a.total : Math.max(a.loaded, Math.round(r.duration * f / 8)),
                                    v = t.currentTime, y = (p - a.loaded) / c,
                                    g = (B.bufferInfo(t, v, e.config.maxBufferHole).end - v) / l;
                                if (g < 2 * r.duration / l && y > g) {
                                    var m = void 0, E = void 0;
                                    for (E = r.level - 1; E > n; E--) {
                                        var _ = u[E].realBitrate ? Math.max(u[E].realBitrate, u[E].bitrate) : u[E].bitrate;
                                        if ((m = r.duration * _ / (6.4 * c)) < g) break
                                    }
                                    m < y && (s.b.warn("loading too slow, abort fragment loading and switch to level " + E + ":fragLoadedDelay[" + E + "]<fragLoadedDelay[" + (r.level - 1) + "];bufferStarvationDelay:" + m.toFixed(1) + "<" + y.toFixed(1) + ":" + g.toFixed(1)), e.nextLoadLevel = E, this._bwEstimator.sample(d, a.loaded), i.abort(), this.clearTimer(), e.trigger(o.a.FRAG_LOAD_EMERGENCY_ABORTED, {
                                        frag: r,
                                        stats: a
                                    }))
                                }
                            }
                        }
                    }
                }, t.prototype.onFragLoaded = function (e) {
                    var t = e.frag;
                    if ("main" === t.type && !isNaN(t.sn)) {
                        if (this.clearTimer(), this.lastLoadedFragLevel = t.level, this._nextAutoLevel = -1, this.hls.config.abrMaxWithRealBitrate) {
                            var r = this.hls.levels[t.level], i = (r.loaded ? r.loaded.bytes : 0) + e.stats.loaded,
                                n = (r.loaded ? r.loaded.duration : 0) + e.frag.duration;
                            r.loaded = {bytes: i, duration: n}, r.realBitrate = Math.round(8 * i / n)
                        }
                        if (e.frag.bitrateTest) {
                            var a = e.stats;
                            a.tparsed = a.tbuffered = a.tload, this.onFragBuffered(e)
                        }
                    }
                }, t.prototype.onFragBuffered = function (e) {
                    var t = e.stats, r = e.frag;
                    if (!(!0 === t.aborted || "main" !== r.type || isNaN(r.sn) || r.bitrateTest && t.tload !== t.tbuffered)) {
                        var i = t.tparsed - t.trequest;
                        s.b.log("latency/loading/parsing/append/kbps:" + Math.round(t.tfirst - t.trequest) + "/" + Math.round(t.tload - t.tfirst) + "/" + Math.round(t.tparsed - t.tload) + "/" + Math.round(t.tbuffered - t.tparsed) + "/" + Math.round(8 * t.loaded / (t.tbuffered - t.trequest))), this._bwEstimator.sample(i, t.loaded), t.bwEstimate = this._bwEstimator.getEstimate(), r.bitrateTest ? this.bitrateTestDelay = i / 1e3 : this.bitrateTestDelay = 0
                    }
                }, t.prototype.onError = function (e) {
                    switch (e.details) {
                        case a.a.FRAG_LOAD_ERROR:
                        case a.a.FRAG_LOAD_TIMEOUT:
                            this.clearTimer()
                    }
                }, t.prototype.clearTimer = function () {
                    clearInterval(this.timer), this.timer = null
                }, t.prototype._findBestLevel = function (e, t, r, i, n, a, o, d, l) {
                    for (var u = n; u >= i; u--) {
                        var c = l[u].details, h = c ? c.totalduration / c.fragments.length : t, f = !!c && c.live,
                            p = void 0;
                        p = u <= e ? o * r : d * r;
                        var v = l[u].realBitrate ? Math.max(l[u].realBitrate, l[u].bitrate) : l[u].bitrate,
                            y = v * h / p;
                        if (s.b.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + u + "/" + Math.round(p) + "/" + v + "/" + h + "/" + a + "/" + y), p > v && (!y || f && !this.bitrateTestDelay || y < a)) return u
                    }
                    return -1
                }, Ee(t, [{
                    key: "nextAutoLevel", get: function () {
                        var e = this._nextAutoLevel, t = this._bwEstimator;
                        if (!(-1 === e || t && t.canEstimate())) return e;
                        var r = this._nextABRAutoLevel;
                        return -1 !== e && (r = Math.min(e, r)), r
                    }, set: function (e) {
                        this._nextAutoLevel = e
                    }
                }, {
                    key: "_nextABRAutoLevel", get: function () {
                        var e = this.hls, t = e.maxAutoLevel, r = e.levels, i = e.config, n = e.minAutoLevel,
                            a = e.media, o = this.lastLoadedFragLevel,
                            d = this.fragCurrent ? this.fragCurrent.duration : 0, l = a ? a.currentTime : 0,
                            u = a && 0 !== a.playbackRate ? Math.abs(a.playbackRate) : 1,
                            c = this._bwEstimator ? this._bwEstimator.getEstimate() : i.abrEwmaDefaultEstimate,
                            h = (B.bufferInfo(a, l, i.maxBufferHole).end - l) / u,
                            f = this._findBestLevel(o, d, c, n, t, h, i.abrBandWidthFactor, i.abrBandWidthUpFactor, r);
                        if (f >= 0) return f;
                        s.b.trace("rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering");
                        var p = d ? Math.min(d, i.maxStarvationDelay) : i.maxStarvationDelay, v = i.abrBandWidthFactor,
                            y = i.abrBandWidthUpFactor;
                        if (0 === h) {
                            var g = this.bitrateTestDelay;
                            if (g) p = (d ? Math.min(d, i.maxLoadingDelay) : i.maxLoadingDelay) - g, s.b.trace("bitrate test took " + Math.round(1e3 * g) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * p) + " ms"), v = y = 1
                        }
                        return f = this._findBestLevel(o, d, c, n, t, h + p, v, y, r), Math.max(f, 0)
                    }
                }]), t
            }(u);
            var Ae = W(), be = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.MEDIA_ATTACHING, o.a.MEDIA_DETACHING, o.a.MANIFEST_PARSED, o.a.BUFFER_RESET, o.a.BUFFER_APPENDING, o.a.BUFFER_CODECS, o.a.BUFFER_EOS, o.a.BUFFER_FLUSHING, o.a.LEVEL_PTS_UPDATED, o.a.LEVEL_UPDATED));
                    return i._msDuration = null, i._levelDuration = null, i._live = null, i._objectUrl = null, i.onsbue = i.onSBUpdateEnd.bind(i), i.onsbe = i.onSBUpdateError.bind(i), i.pendingTracks = {}, i.tracks = {}, i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    u.prototype.destroy.call(this)
                }, t.prototype.onLevelPtsUpdated = function (e) {
                    var t = e.type, r = this.tracks.audio;
                    if ("audio" === t && r && "audio/mpeg" === r.container) {
                        var i = this.sourceBuffer.audio;
                        if (Math.abs(i.timestampOffset - e.start) > .1) {
                            var n = i.updating;
                            try {
                                i.abort()
                            } catch (a) {
                                n = !0, s.b.warn("can not abort audio buffer: " + a)
                            }
                            n ? this.audioTimestampOffset = e.start : (s.b.warn("change mpeg audio timestamp offset from " + i.timestampOffset + " to " + e.start), i.timestampOffset = e.start)
                        }
                    }
                }, t.prototype.onManifestParsed = function (e) {
                    var t = e.audio, r = e.video || e.levels.length && e.altAudio, i = 0;
                    e.altAudio && (t || r) && (i = (t ? 1 : 0) + (r ? 1 : 0), s.b.log(i + " sourceBuffer(s) expected")), this.sourceBufferNb = i
                }, t.prototype.onMediaAttaching = function (e) {
                    var t = this.media = e.media;
                    if (t) {
                        var r = this.mediaSource = new Ae;
                        this.onmso = this.onMediaSourceOpen.bind(this), this.onmse = this.onMediaSourceEnded.bind(this), this.onmsc = this.onMediaSourceClose.bind(this), r.addEventListener("sourceopen", this.onmso), r.addEventListener("sourceended", this.onmse), r.addEventListener("sourceclose", this.onmsc), t.src = window.URL.createObjectURL(r), this._objectUrl = t.src
                    }
                }, t.prototype.onMediaDetaching = function () {
                    s.b.log("media source detaching");
                    var e = this.mediaSource;
                    if (e) {
                        if ("open" === e.readyState) try {
                            e.endOfStream()
                        } catch (t) {
                            s.b.warn("onMediaDetaching:" + t.message + " while calling endOfStream")
                        }
                        e.removeEventListener("sourceopen", this.onmso), e.removeEventListener("sourceended", this.onmse), e.removeEventListener("sourceclose", this.onmsc), this.media && (window.URL.revokeObjectURL(this._objectUrl), this.media.src === this._objectUrl ? (this.media.removeAttribute("src"), this.media.load()) : s.b.warn("media.src was changed by a third party - skip cleanup")), this.mediaSource = null, this.media = null, this._objectUrl = null, this.pendingTracks = {}, this.tracks = {}, this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                    }
                    this.onmso = this.onmse = this.onmsc = null, this.hls.trigger(o.a.MEDIA_DETACHED)
                }, t.prototype.onMediaSourceOpen = function () {
                    s.b.log("media source opened"), this.hls.trigger(o.a.MEDIA_ATTACHED, {media: this.media});
                    var e = this.mediaSource;
                    e && e.removeEventListener("sourceopen", this.onmso), this.checkPendingTracks()
                }, t.prototype.checkPendingTracks = function () {
                    var e = this.pendingTracks, t = Object.keys(e).length;
                    t && (this.sourceBufferNb <= t || 0 === this.sourceBufferNb) && (this.createSourceBuffers(e), this.pendingTracks = {}, this.doAppending())
                }, t.prototype.onMediaSourceClose = function () {
                    s.b.log("media source closed")
                }, t.prototype.onMediaSourceEnded = function () {
                    s.b.log("media source ended")
                }, t.prototype.onSBUpdateEnd = function () {
                    if (this.audioTimestampOffset) {
                        var e = this.sourceBuffer.audio;
                        s.b.warn("change mpeg audio timestamp offset from " + e.timestampOffset + " to " + this.audioTimestampOffset), e.timestampOffset = this.audioTimestampOffset, delete this.audioTimestampOffset
                    }
                    this._needsFlush && this.doFlush(), this._needsEos && this.checkEos(), this.appending = !1;
                    var t = this.parent, r = this.segments.reduce(function (e, r) {
                        return r.parent === t ? e + 1 : e
                    }, 0), i = {}, n = this.sourceBuffer;
                    for (var a in n) i[a] = n[a].buffered;
                    this.hls.trigger(o.a.BUFFER_APPENDED, {
                        parent: t,
                        pending: r,
                        timeRanges: i
                    }), this._needsFlush || this.doAppending(), this.updateMediaElementDuration()
                }, t.prototype.onSBUpdateError = function (e) {
                    s.b.error("sourceBuffer error:", e), this.hls.trigger(o.a.ERROR, {
                        type: a.b.MEDIA_ERROR,
                        details: a.a.BUFFER_APPENDING_ERROR,
                        fatal: !1
                    })
                }, t.prototype.onBufferReset = function () {
                    var e = this.sourceBuffer;
                    for (var t in e) {
                        var r = e[t];
                        try {
                            this.mediaSource.removeSourceBuffer(r), r.removeEventListener("updateend", this.onsbue), r.removeEventListener("error", this.onsbe)
                        } catch (i) {
                        }
                    }
                    this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                }, t.prototype.onBufferCodecs = function (e) {
                    if (0 === Object.keys(this.sourceBuffer).length) {
                        for (var t in e) this.pendingTracks[t] = e[t];
                        var r = this.mediaSource;
                        r && "open" === r.readyState && this.checkPendingTracks()
                    }
                }, t.prototype.createSourceBuffers = function (e) {
                    var t = this.sourceBuffer, r = this.mediaSource;
                    for (var i in e) if (!t[i]) {
                        var n = e[i], d = n.levelCodec || n.codec, l = n.container + ";codecs=" + d;
                        s.b.log("creating sourceBuffer(" + l + ")");
                        try {
                            var u = t[i] = r.addSourceBuffer(l);
                            u.addEventListener("updateend", this.onsbue), u.addEventListener("error", this.onsbe), this.tracks[i] = {
                                codec: d,
                                container: n.container
                            }, n.buffer = u
                        } catch (c) {
                            s.b.error("error while trying to add sourceBuffer:" + c.message), this.hls.trigger(o.a.ERROR, {
                                type: a.b.MEDIA_ERROR,
                                details: a.a.BUFFER_ADD_CODEC_ERROR,
                                fatal: !1,
                                err: c,
                                mimeType: l
                            })
                        }
                    }
                    this.hls.trigger(o.a.BUFFER_CREATED, {tracks: e})
                }, t.prototype.onBufferAppending = function (e) {
                    this._needsFlush || (this.segments ? this.segments.push(e) : this.segments = [e], this.doAppending())
                }, t.prototype.onBufferAppendFail = function (e) {
                    s.b.error("sourceBuffer error:", e.event), this.hls.trigger(o.a.ERROR, {
                        type: a.b.MEDIA_ERROR,
                        details: a.a.BUFFER_APPENDING_ERROR,
                        fatal: !1
                    })
                }, t.prototype.onBufferEos = function (e) {
                    var t = this.sourceBuffer, r = e.type;
                    for (var i in t) r && i !== r || t[i].ended || (t[i].ended = !0, s.b.log(i + " sourceBuffer now EOS"));
                    this.checkEos()
                }, t.prototype.checkEos = function () {
                    var e = this.sourceBuffer, t = this.mediaSource;
                    if (t && "open" === t.readyState) {
                        for (var r in e) {
                            var i = e[r];
                            if (!i.ended) return;
                            if (i.updating) return void (this._needsEos = !0)
                        }
                        s.b.log("all media data available, signal endOfStream() to MediaSource and stop loading fragment");
                        try {
                            t.endOfStream()
                        } catch (n) {
                            s.b.warn("exception while calling mediaSource.endOfStream()")
                        }
                        this._needsEos = !1
                    } else this._needsEos = !1
                }, t.prototype.onBufferFlushing = function (e) {
                    this.flushRange.push({
                        start: e.startOffset,
                        end: e.endOffset,
                        type: e.type
                    }), this.flushBufferCounter = 0, this.doFlush()
                }, t.prototype.onLevelUpdated = function (e) {
                    var t = e.details;
                    t.fragments.length > 0 && (this._levelDuration = t.totalduration + t.fragments[0].start, this._live = t.live, this.updateMediaElementDuration())
                }, t.prototype.updateMediaElementDuration = function () {
                    var e, t = this.hls.config;
                    if (null !== this._levelDuration && this.media && this.mediaSource && this.sourceBuffer && 0 !== this.media.readyState && "open" === this.mediaSource.readyState) {
                        for (var r in this.sourceBuffer) if (!0 === this.sourceBuffer[r].updating) return;
                        e = this.media.duration, null === this._msDuration && (this._msDuration = this.mediaSource.duration), !0 === this._live && !0 === t.liveDurationInfinity ? (s.b.log("Media Source duration is set to Infinity"), this._msDuration = this.mediaSource.duration = Infinity) : (this._levelDuration > this._msDuration && this._levelDuration > e || e === Infinity || isNaN(e)) && (s.b.log("Updating Media Source duration to " + this._levelDuration.toFixed(3)), this._msDuration = this.mediaSource.duration = this._levelDuration)
                    }
                }, t.prototype.doFlush = function () {
                    for (; this.flushRange.length;) {
                        var e = this.flushRange[0];
                        if (!this.flushBuffer(e.start, e.end, e.type)) return void (this._needsFlush = !0);
                        this.flushRange.shift(), this.flushBufferCounter = 0
                    }
                    if (0 === this.flushRange.length) {
                        this._needsFlush = !1;
                        var t = 0, r = this.sourceBuffer;
                        try {
                            for (var i in r) t += r[i].buffered.length
                        } catch (n) {
                            s.b.error("error while accessing sourceBuffer.buffered")
                        }
                        this.appended = t, this.hls.trigger(o.a.BUFFER_FLUSHED)
                    }
                }, t.prototype.doAppending = function () {
                    var e = this.hls, t = this.sourceBuffer, r = this.segments;
                    if (Object.keys(t).length) {
                        if (this.media.error) return this.segments = [], void s.b.error("trying to append although a media error occured, flush segment and abort");
                        if (this.appending) return;
                        if (r && r.length) {
                            var i = r.shift();
                            try {
                                var n = t[i.type];
                                n ? n.updating ? r.unshift(i) : (n.ended = !1, this.parent = i.parent, n.appendBuffer(i.data), this.appendError = 0, this.appended++, this.appending = !0) : this.onSBUpdateEnd()
                            } catch (l) {
                                s.b.error("error while trying to append buffer:" + l.message), r.unshift(i);
                                var d = {type: a.b.MEDIA_ERROR, parent: i.parent};
                                22 !== l.code ? (this.appendError ? this.appendError++ : this.appendError = 1, d.details = a.a.BUFFER_APPEND_ERROR, this.appendError > e.config.appendErrorMaxRetry ? (s.b.log("fail " + e.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"), r = [], d.fatal = !0, e.trigger(o.a.ERROR, d)) : (d.fatal = !1, e.trigger(o.a.ERROR, d))) : (this.segments = [], d.details = a.a.BUFFER_FULL_ERROR, d.fatal = !1, e.trigger(o.a.ERROR, d))
                            }
                        }
                    }
                }, t.prototype.flushBuffer = function (e, t, r) {
                    var i = void 0, n = void 0, a = void 0, o = void 0, d = void 0, l = void 0, u = this.sourceBuffer;
                    if (Object.keys(u).length) {
                        if (s.b.log("flushBuffer,pos/start/end: " + this.media.currentTime.toFixed(3) + "/" + e + "/" + t), this.flushBufferCounter < this.appended) {
                            for (var c in u) if (!r || c === r) {
                                if ((i = u[c]).ended = !1, i.updating) return s.b.warn("cannot flush, sb updating in progress"), !1;
                                try {
                                    for (n = 0; n < i.buffered.length; n++) if (a = i.buffered.start(n), o = i.buffered.end(n), -1 !== navigator.userAgent.toLowerCase().indexOf("firefox") && t === Number.POSITIVE_INFINITY ? (d = e, l = t) : (d = Math.max(a, e), l = Math.min(o, t)), Math.min(l, o) - d > .5) return this.flushBufferCounter++, s.b.log("flush " + c + " [" + d + "," + l + "], of [" + a + "," + o + "], pos:" + this.media.currentTime), i.remove(d, l), !1
                                } catch (h) {
                                    s.b.warn("exception while accessing sourcebuffer, it might have been removed from MediaSource")
                                }
                            }
                        } else s.b.warn("abort flushing too many retries");
                        s.b.log("buffer flushed")
                    }
                    return !0
                }, t
            }(u), we = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }

                return function (t, r, i) {
                    return r && e(t.prototype, r), i && e(t, i), t
                }
            }();
            var Se = function (e) {
                function t(r) {
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t);
                    var i = function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.FPS_DROP_LEVEL_CAPPING, o.a.MEDIA_ATTACHING, o.a.MANIFEST_PARSED, o.a.BUFFER_CODECS));
                    return i.autoLevelCapping = Number.POSITIVE_INFINITY, i.firstLevel = null, i.levels = [], i.media = null, i.restrictedLevels = [], i.timer = null, i
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    this.hls.config.capLevelToPlayerSize && (this.media = null, this._stopCapping())
                }, t.prototype.onFpsDropLevelCapping = function (e) {
                    t.isLevelAllowed(e.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(e.droppedLevel)
                }, t.prototype.onMediaAttaching = function (e) {
                    this.media = e.media instanceof window.HTMLVideoElement ? e.media : null
                }, t.prototype.onManifestParsed = function (e) {
                    var t = this.hls;
                    this.restrictedLevels = [], this.levels = e.levels, this.firstLevel = e.firstLevel, t.config.capLevelToPlayerSize && (e.video || e.levels.length && e.altAudio) && this._startCapping()
                }, t.prototype.onBufferCodecs = function (e) {
                    this.hls.config.capLevelToPlayerSize && e.video && this._startCapping()
                }, t.prototype.onLevelsUpdated = function (e) {
                    this.levels = e.levels
                }, t.prototype.detectPlayerSize = function () {
                    if (this.media) {
                        var e = this.levels ? this.levels.length : 0;
                        if (e) {
                            var t = this.hls;
                            t.autoLevelCapping = this.getMaxLevel(e - 1), t.autoLevelCapping > this.autoLevelCapping && t.streamController.nextLevelSwitch(), this.autoLevelCapping = t.autoLevelCapping
                        }
                    }
                }, t.prototype.getMaxLevel = function (e) {
                    var r = this;
                    if (!this.levels) return -1;
                    var i = this.levels.filter(function (i, n) {
                        return t.isLevelAllowed(n, r.restrictedLevels) && n <= e
                    });
                    return t.getMaxLevelByMediaSize(i, this.mediaWidth, this.mediaHeight)
                }, t.prototype._startCapping = function () {
                    this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), clearInterval(this.timer), this.timer = setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize())
                }, t.prototype._stopCapping = function () {
                    this.restrictedLevels = [], this.firstLevel = null, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.timer && (this.timer = clearInterval(this.timer), this.timer = null)
                }, t.isLevelAllowed = function (e) {
                    return -1 === (arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : []).indexOf(e)
                }, t.getMaxLevelByMediaSize = function (e, t, r) {
                    if (!e || e && !e.length) return -1;
                    for (var i = function (e, t) {
                        return !t || (e.width !== t.width || e.height !== t.height)
                    }, n = e.length - 1, a = 0; a < e.length; a += 1) {
                        var o = e[a];
                        if ((o.width >= t || o.height >= r) && i(o, e[a + 1])) {
                            n = a;
                            break
                        }
                    }
                    return n
                }, we(t, [{
                    key: "mediaWidth", get: function () {
                        var e = void 0, r = this.media;
                        return r && (e = r.width || r.clientWidth || r.offsetWidth, e *= t.contentScaleFactor), e
                    }
                }, {
                    key: "mediaHeight", get: function () {
                        var e = void 0, r = this.media;
                        return r && (e = r.height || r.clientHeight || r.offsetHeight, e *= t.contentScaleFactor), e
                    }
                }], [{
                    key: "contentScaleFactor", get: function () {
                        var e = 1;
                        try {
                            e = window.devicePixelRatio
                        } catch (t) {
                        }
                        return e
                    }
                }]), t
            }(u);
            var Re = window.performance, De = function (e) {
                function t(r) {
                    return function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, t), function (e, t) {
                        if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !t || "object" != typeof t && "function" != typeof t ? e : t
                    }(this, e.call(this, r, o.a.MEDIA_ATTACHING))
                }

                return function (e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                }(t, e), t.prototype.destroy = function () {
                    this.timer && clearInterval(this.timer), this.isVideoPlaybackQualityAvailable = !1
                }, t.prototype.onMediaAttaching = function (e) {
                    var t = this.hls.config;
                    t.capLevelOnFPSDrop && ("function" == typeof (this.video = e.media instanceof window.HTMLVideoElement ? e.media : null).getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), clearInterval(this.timer), this.timer = setInterval(this.checkFPSInterval.bind(this), t.fpsDroppedMonitoringPeriod))
                }, t.prototype.checkFPS = function (e, t, r) {
                    var i = Re.now();
                    if (t) {
                        if (this.lastTime) {
                            var n = i - this.lastTime, a = r - this.lastDroppedFrames, d = t - this.lastDecodedFrames,
                                l = 1e3 * a / n, u = this.hls;
                            if (u.trigger(o.a.FPS_DROP, {
                                currentDropped: a,
                                currentDecoded: d,
                                totalDroppedFrames: r
                            }), l > 0 && a > u.config.fpsDroppedMonitoringThreshold * d) {
                                var c = u.currentLevel;
                                s.b.warn("drop FPS ratio greater than max allowed value for currentLevel: " + c), c > 0 && (-1 === u.autoLevelCapping || u.autoLevelCapping >= c) && (c -= 1, u.trigger(o.a.FPS_DROP_LEVEL_CAPPING, {
                                    level: c,
                                    droppedLevel: u.currentLevel
                                }), u.autoLevelCapping = c, u.streamController.nextLevelSwitch())
                            }
                        }
                        this.lastTime = i, this.lastDroppedFrames = r, this.lastDecodedFrames = t
                    }
                }, t.prototype.checkFPSInterval = function () {
                    var e = this.video;
                    if (e) if (this.isVideoPlaybackQualityAvailable) {
                        var t = e.getVideoPlaybackQuality();
                        this.checkFPS(e, t.totalVideoFrames, t.droppedVideoFrames)
                    } else this.checkFPS(e, e.webkitDecodedFrameCount, e.webkitDroppedFrameCount)
                }, t
            }(u);
            var Le = window, Ie = Le.performance, Ce = Le.XMLHttpRequest, xe = function () {
                    function e(t) {
                        !function (e, t) {
                            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                        }(this, e), t && t.xhrSetup && (this.xhrSetup = t.xhrSetup)
                    }

                    return e.prototype.destroy = function () {
                        this.abort(), this.loader = null
                    }, e.prototype.abort = function () {
                        var e = this.loader;
                        e && 4 !== e.readyState && (this.stats.aborted = !0, e.abort()), window.clearTimeout(this.requestTimeout), this.requestTimeout = null, window.clearTimeout(this.retryTimeout), this.retryTimeout = null
                    }, e.prototype.load = function (e, t, r) {
                        this.context = e, this.config = t, this.callbacks = r, this.stats = {
                            trequest: Ie.now(),
                            retry: 0
                        }, this.retryDelay = t.retryDelay, this.loadInternal()
                    }, e.prototype.loadInternal = function () {
                        var e = void 0, t = this.context;
                        e = this.loader = new Ce;
                        var r = this.stats;
                        r.tfirst = 0, r.loaded = 0;
                        var i = this.xhrSetup;
                        try {
                            if (i) try {
                                i(e, t.url)
                            } catch (n) {
                                e.open("GET", t.url, !0), i(e, t.url)
                            }
                            e.readyState || e.open("GET", t.url, !0)
                        } catch (n) {
                            return void this.callbacks.onError({code: e.status, text: n.message}, t, e)
                        }
                        t.rangeEnd && e.setRequestHeader("Range", "bytes=" + t.rangeStart + "-" + (t.rangeEnd - 1)), e.onreadystatechange = this.readystatechange.bind(this), e.onprogress = this.loadprogress.bind(this), e.responseType = t.responseType, this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout), e.send()
                    }, e.prototype.readystatechange = function (e) {
                        var t = e.currentTarget, r = t.readyState, i = this.stats, n = this.context, a = this.config;
                        if (!i.aborted && r >= 2) if (window.clearTimeout(this.requestTimeout), 0 === i.tfirst && (i.tfirst = Math.max(Ie.now(), i.trequest)), 4 === r) {
                            var o = t.status;
                            if (o >= 200 && o < 300) {
                                i.tload = Math.max(i.tfirst, Ie.now());
                                var d = void 0, l = void 0;
                                l = "arraybuffer" === n.responseType ? (d = t.response).byteLength : (d = t.responseText).length, i.loaded = i.total = l;
                                var u = {url: t.responseURL, data: d};
                                this.callbacks.onSuccess(u, i, n, t)
                            } else i.retry >= a.maxRetry || o >= 400 && o < 499 ? (s.b.error(o + " while loading " + n.url), this.callbacks.onError({
                                code: o,
                                text: t.statusText
                            }, n, t)) : (s.b.warn(o + " while loading " + n.url + ", retrying in " + this.retryDelay + "..."), this.destroy(), this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, a.maxRetryDelay), i.retry++)
                        } else this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), a.timeout)
                    }, e.prototype.loadtimeout = function () {
                        s.b.warn("timeout while loading " + this.context.url), this.callbacks.onTimeout(this.stats, this.context, null)
                    }, e.prototype.loadprogress = function (e) {
                        var t = e.currentTarget, r = this.stats;
                        r.loaded = e.loaded, e.lengthComputable && (r.total = e.total);
                        var i = this.callbacks.onProgress;
                        i && i(r, this.context, null, t)
                    }, e
                }(),
                ke = (r(3), "undefined" != typeof window && window.navigator && window.navigator.requestMediaKeySystemAccess ? window.navigator.requestMediaKeySystemAccess.bind(window.navigator) : null),
                Pe = {
                    autoStartLoad: !0,
                    startPosition: -1,
                    defaultAudioCodec: undefined,
                    debug: !1,
                    capLevelOnFPSDrop: !1,
                    capLevelToPlayerSize: !1,
                    initialLiveManifestSize: 1,
                    maxBufferLength: 30,
                    maxBufferSize: 6e7,
                    maxBufferHole: .5,
                    lowBufferWatchdogPeriod: .5,
                    highBufferWatchdogPeriod: 3,
                    nudgeOffset: .1,
                    nudgeMaxRetry: 3,
                    maxFragLookUpTolerance: .25,
                    liveSyncDurationCount: 3,
                    liveMaxLatencyDurationCount: Infinity,
                    liveSyncDuration: undefined,
                    liveMaxLatencyDuration: undefined,
                    liveDurationInfinity: !1,
                    maxMaxBufferLength: 600,
                    enableWorker: !0,
                    enableSoftwareAES: !0,
                    manifestLoadingTimeOut: 1e4,
                    manifestLoadingMaxRetry: 1,
                    manifestLoadingRetryDelay: 1e3,
                    manifestLoadingMaxRetryTimeout: 64e3,
                    startLevel: undefined,
                    levelLoadingTimeOut: 1e4,
                    levelLoadingMaxRetry: 4,
                    levelLoadingRetryDelay: 1e3,
                    levelLoadingMaxRetryTimeout: 64e3,
                    fragLoadingTimeOut: 2e4,
                    fragLoadingMaxRetry: 6,
                    fragLoadingRetryDelay: 1e3,
                    fragLoadingMaxRetryTimeout: 64e3,
                    startFragPrefetch: !1,
                    fpsDroppedMonitoringPeriod: 5e3,
                    fpsDroppedMonitoringThreshold: .2,
                    appendErrorMaxRetry: 3,
                    loader: xe,
                    fLoader: undefined,
                    pLoader: undefined,
                    xhrSetup: undefined,
                    licenseXhrSetup: undefined,
                    abrController: Te,
                    bufferController: be,
                    capLevelController: Se,
                    fpsController: De,
                    stretchShortVideoTrack: !1,
                    maxAudioFramesDrift: 1,
                    forceKeyFrameOnDiscontinuity: !0,
                    abrEwmaFastLive: 3,
                    abrEwmaSlowLive: 9,
                    abrEwmaFastVoD: 3,
                    abrEwmaSlowVoD: 9,
                    abrEwmaDefaultEstimate: 5e5,
                    abrBandWidthFactor: .95,
                    abrBandWidthUpFactor: .7,
                    abrMaxWithRealBitrate: !1,
                    maxStarvationDelay: 4,
                    maxLoadingDelay: 4,
                    minAutoBitrate: 0,
                    emeEnabled: !1,
                    widevineLicenseUrl: undefined,
                    requestMediaKeySystemAccessFunc: ke
                };
            var Oe = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var i = t[r];
                        i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
                    }
                }

                return function (t, r, i) {
                    return r && e(t.prototype, r), i && e(t, i), t
                }
            }();
            r(13);
            var Ne = function () {
                function e() {
                    var t = this, r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    !function (e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e);
                    var i = e.DefaultConfig;
                    if ((r.liveSyncDurationCount || r.liveMaxLatencyDurationCount) && (r.liveSyncDuration || r.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                    for (var n in i) n in r || (r[n] = i[n]);
                    if (r.liveMaxLatencyDurationCount !== undefined && r.liveMaxLatencyDurationCount <= r.liveSyncDurationCount) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                    if (r.liveMaxLatencyDuration !== undefined && (r.liveMaxLatencyDuration <= r.liveSyncDuration || r.liveSyncDuration === undefined)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                    Object(s.a)(r.debug), this.config = r, this._autoLevelCapping = -1;
                    var a = this.observer = new j.a;
                    a.trigger = function (e) {
                        for (var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) r[i - 1] = arguments[i];
                        a.emit.apply(a, [e, e].concat(r))
                    }, a.off = function (e) {
                        for (var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++) r[i - 1] = arguments[i];
                        a.removeListener.apply(a, [e].concat(r))
                    }, this.on = a.on.bind(a), this.off = a.off.bind(a), this.once = a.once.bind(a), this.trigger = a.trigger.bind(a);
                    var o = this.abrController = new r.abrController(this), d = new r.bufferController(this),
                        l = new r.capLevelController(this), u = new r.fpsController(this), c = new x(this),
                        h = new k(this), f = new P(this), p = new ye(this), v = this.levelController = new fe(this),
                        y = new U(this), g = [v, this.streamController = new le(this, y)], m = r.audioStreamController;
                    m && g.push(new m(this, y)), this.networkControllers = g;
                    var E = [c, h, f, o, d, l, u, p, y];
                    if (m = r.audioTrackController) {
                        var _ = new m(this);
                        this.audioTrackController = _, E.push(_)
                    }
                    if (m = r.subtitleTrackController) {
                        var T = new m(this);
                        this.subtitleTrackController = T, E.push(T)
                    }
                    if (m = r.emeController) {
                        var A = new m(this);
                        this.emeController = A, E.push(A)
                    }
                    [r.subtitleStreamController, r.timelineController].forEach(function (e) {
                        e && E.push(new e(t))
                    }), this.coreComponents = E
                }

                return e.isSupported = function () {
                    return function () {
                        var e = W(), t = window.SourceBuffer || window.WebKitSourceBuffer,
                            r = e && "function" == typeof e.isTypeSupported && e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
                            i = !t || t.prototype && "function" == typeof t.prototype.appendBuffer && "function" == typeof t.prototype.remove;
                        return !!r && !!i
                    }()
                }, Oe(e, null, [{
                    key: "version", get: function () {
                        return "0.10.1"
                    }
                }, {
                    key: "Events", get: function () {
                        return o.a
                    }
                }, {
                    key: "ErrorTypes", get: function () {
                        return a.b
                    }
                }, {
                    key: "ErrorDetails", get: function () {
                        return a.a
                    }
                }, {
                    key: "DefaultConfig", get: function () {
                        return e.defaultConfig ? e.defaultConfig : Pe
                    }, set: function (t) {
                        e.defaultConfig = t
                    }
                }]), e.prototype.destroy = function () {
                    s.b.log("destroy"), this.trigger(o.a.DESTROYING), this.detachMedia(), this.coreComponents.concat(this.networkControllers).forEach(function (e) {
                        e.destroy()
                    }), this.url = null, this.observer.removeAllListeners(), this._autoLevelCapping = -1
                }, e.prototype.attachMedia = function (e) {
                    s.b.log("attachMedia"), this.media = e, this.trigger(o.a.MEDIA_ATTACHING, {media: e})
                }, e.prototype.detachMedia = function () {
                    s.b.log("detachMedia"), this.trigger(o.a.MEDIA_DETACHING), this.media = null
                }, e.prototype.loadSource = function (e) {
                    e = n.a.buildAbsoluteURL(window.location.href, e, {alwaysNormalize: !0}), s.b.log("loadSource:" + e), this.url = e, this.trigger(o.a.MANIFEST_LOADING, {url: e})
                }, e.prototype.startLoad = function () {
                    var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;
                    s.b.log("startLoad(" + e + ")"), this.networkControllers.forEach(function (t) {
                        t.startLoad(e)
                    })
                }, e.prototype.stopLoad = function () {
                    s.b.log("stopLoad"), this.networkControllers.forEach(function (e) {
                        e.stopLoad()
                    })
                }, e.prototype.swapAudioCodec = function () {
                    s.b.log("swapAudioCodec"), this.streamController.swapAudioCodec()
                }, e.prototype.recoverMediaError = function () {
                    s.b.log("recoverMediaError");
                    var e = this.media;
                    this.detachMedia(), this.attachMedia(e)
                }, Oe(e, [{
                    key: "levels", get: function () {
                        return this.levelController.levels
                    }
                }, {
                    key: "currentLevel", get: function () {
                        return this.streamController.currentLevel
                    }, set: function (e) {
                        s.b.log("set currentLevel:" + e), this.loadLevel = e, this.streamController.immediateLevelSwitch()
                    }
                }, {
                    key: "nextLevel", get: function () {
                        return this.streamController.nextLevel
                    }, set: function (e) {
                        s.b.log("set nextLevel:" + e), this.levelController.manualLevel = e, this.streamController.nextLevelSwitch()
                    }
                }, {
                    key: "loadLevel", get: function () {
                        return this.levelController.level
                    }, set: function (e) {
                        s.b.log("set loadLevel:" + e), this.levelController.manualLevel = e
                    }
                }, {
                    key: "nextLoadLevel", get: function () {
                        return this.levelController.nextLoadLevel
                    }, set: function (e) {
                        this.levelController.nextLoadLevel = e
                    }
                }, {
                    key: "firstLevel", get: function () {
                        return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                    }, set: function (e) {
                        s.b.log("set firstLevel:" + e), this.levelController.firstLevel = e
                    }
                }, {
                    key: "startLevel", get: function () {
                        return this.levelController.startLevel
                    }, set: function (e) {
                        s.b.log("set startLevel:" + e);
                        -1 !== e && (e = Math.max(e, this.minAutoLevel)), this.levelController.startLevel = e
                    }
                }, {
                    key: "autoLevelCapping", get: function () {
                        return this._autoLevelCapping
                    }, set: function (e) {
                        s.b.log("set autoLevelCapping:" + e), this._autoLevelCapping = e
                    }
                }, {
                    key: "autoLevelEnabled", get: function () {
                        return -1 === this.levelController.manualLevel
                    }
                }, {
                    key: "manualLevel", get: function () {
                        return this.levelController.manualLevel
                    }
                }, {
                    key: "minAutoLevel", get: function () {
                        for (var e = this.levels, t = this.config.minAutoBitrate, r = e ? e.length : 0, i = 0; i < r; i++) {
                            if ((e[i].realBitrate ? Math.max(e[i].realBitrate, e[i].bitrate) : e[i].bitrate) > t) return i
                        }
                        return 0
                    }
                }, {
                    key: "maxAutoLevel", get: function () {
                        var e = this.levels, t = this.autoLevelCapping;
                        return -1 === t && e && e.length ? e.length - 1 : t
                    }
                }, {
                    key: "nextAutoLevel", get: function () {
                        return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel)
                    }, set: function (e) {
                        this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, e)
                    }
                }, {
                    key: "audioTracks", get: function () {
                        var e = this.audioTrackController;
                        return e ? e.audioTracks : []
                    }
                }, {
                    key: "audioTrack", get: function () {
                        var e = this.audioTrackController;
                        return e ? e.audioTrack : -1
                    }, set: function (e) {
                        var t = this.audioTrackController;
                        t && (t.audioTrack = e)
                    }
                }, {
                    key: "liveSyncPosition", get: function () {
                        return this.streamController.liveSyncPosition
                    }
                }, {
                    key: "subtitleTracks", get: function () {
                        var e = this.subtitleTrackController;
                        return e ? e.subtitleTracks : []
                    }
                }, {
                    key: "subtitleTrack", get: function () {
                        var e = this.subtitleTrackController;
                        return e ? e.subtitleTrack : -1
                    }, set: function (e) {
                        var t = this.subtitleTrackController;
                        t && (t.subtitleTrack = e)
                    }
                }, {
                    key: "subtitleDisplay", get: function () {
                        var e = this.subtitleTrackController;
                        return !!e && e.subtitleDisplay
                    }, set: function (e) {
                        var t = this.subtitleTrackController;
                        t && (t.subtitleDisplay = e)
                    }
                }]), e
            }();
            t["default"] = Ne
        }, function (e, t, r) {
            function i(e) {
                var t = {};

                function r(i) {
                    if (t[i]) return t[i].exports;
                    var n = t[i] = {i: i, l: !1, exports: {}};
                    return e[i].call(n.exports, n, n.exports, r), n.l = !0, n.exports
                }

                r.m = e, r.c = t, r.i = function (e) {
                    return e
                }, r.d = function (e, t, i) {
                    r.o(e, t) || Object.defineProperty(e, t, {configurable: !1, enumerable: !0, get: i})
                }, r.n = function (e) {
                    var t = e && e.__esModule ? function () {
                        return e["default"]
                    } : function () {
                        return e
                    };
                    return r.d(t, "a", t), t
                }, r.o = function (e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                }, r.p = "/", r.oe = function (e) {
                    throw console.error(e), e
                };
                var i = r(r.s = ENTRY_MODULE);
                return i["default"] || i
            }

            var n = "[\\.|\\-|\\+|\\w|/|@]+", a = "\\((/\\*.*?\\*/)?s?.*?(" + n + ").*?\\)";

            function o(e) {
                return (e + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
            }

            function s(e, t, i) {
                var s = {};
                s[i] = [];
                var d = t.toString(), l = d.match(/^function\s?\(\w+,\s*\w+,\s*(\w+)\)/);
                if (!l) return s;
                for (var u, c = l[1], h = new RegExp("(\\\\n|\\W)" + o(c) + a, "g"); u = h.exec(d);) "dll-reference" !== u[3] && s[i].push(u[3]);
                for (h = new RegExp("\\(" + o(c) + '\\("(dll-reference\\s(' + n + '))"\\)\\)' + a, "g"); u = h.exec(d);) e[u[2]] || (s[i].push(u[1]), e[u[2]] = r(u[1]).m), s[u[2]] = s[u[2]] || [], s[u[2]].push(u[4]);
                return s
            }

            function d(e) {
                return Object.keys(e).reduce(function (t, r) {
                    return t || e[r].length > 0
                }, !1)
            }

            e.exports = function (e, t) {
                t = t || {};
                var n = {main: r.m}, a = t.all ? {main: Object.keys(n)} : function (e, t) {
                    for (var r = {main: [t]}, i = {main: []}, n = {main: {}}; d(r);) for (var a = Object.keys(r), o = 0; o < a.length; o++) {
                        var l = a[o], u = r[l].pop();
                        if (n[l] = n[l] || {}, !n[l][u] && e[l][u]) {
                            n[l][u] = !0, i[l] = i[l] || [], i[l].push(u);
                            for (var c = s(e, e[l][u], l), h = Object.keys(c), f = 0; f < h.length; f++) r[h[f]] = r[h[f]] || [], r[h[f]] = r[h[f]].concat(c[h[f]])
                        }
                    }
                    return i
                }(n, e), o = "";
                Object.keys(a).filter(function (e) {
                    return "main" !== e
                }).forEach(function (e) {
                    for (var t = 0; a[e][t];) t++;
                    a[e].push(t), n[e][t] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })", o = o + "var " + e + " = (" + i.toString().replace("ENTRY_MODULE", JSON.stringify(t)) + ")({" + a[e].map(function (t) {
                        return JSON.stringify(t) + ": " + n[e][t].toString()
                    }).join(",") + "});\n"
                }), o = o + "(" + i.toString().replace("ENTRY_MODULE", JSON.stringify(e)) + ")({" + a.main.map(function (e) {
                    return JSON.stringify(e) + ": " + n.main[e].toString()
                }).join(",") + "})(self);";
                var l = new window.Blob([o], {type: "text/javascript"});
                if (t.bare) return l;
                var u = (window.URL || window.webkitURL || window.mozURL || window.msURL).createObjectURL(l),
                    c = new window.Worker(u);
                return c.objectURL = u, c
            }
        }, function (e, t, r) {
            "use strict";
            Object.defineProperty(t, "__esModule", {value: !0});
            var i = r(9), n = r(1), a = r(0), o = r(6), s = r.n(o);
            t["default"] = function (e) {
                var t = new s.a;
                t.trigger = function (e) {
                    for (var r = arguments.length, i = Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++) i[n - 1] = arguments[n];
                    t.emit.apply(t, [e, e].concat(i))
                }, t.off = function (e) {
                    for (var r = arguments.length, i = Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++) i[n - 1] = arguments[n];
                    t.removeListener.apply(t, [e].concat(i))
                };
                var r = function (t, r) {
                    e.postMessage({event: t, data: r})
                };
                e.addEventListener("message", function (n) {
                    var o = n.data;
                    switch (o.cmd) {
                        case"init":
                            var s = JSON.parse(o.config);
                            e.demuxer = new i.a(t, o.typeSupported, s, o.vendor);
                            try {
                                Object(a.a)(!0 === s.debug)
                            } catch (d) {
                                console.warn("demuxerWorker: unable to enable logs")
                            }
                            r("init", null);
                            break;
                        case"demux":
                            e.demuxer.push(o.data, o.decryptdata, o.initSegment, o.audioCodec, o.videoCodec, o.timeOffset, o.discontinuity, o.trackSwitch, o.contiguous, o.duration, o.accurateTimeOffset, o.defaultInitPTS)
                    }
                }), t.on(n.a.FRAG_DECRYPTED, r), t.on(n.a.FRAG_PARSING_INIT_SEGMENT, r), t.on(n.a.FRAG_PARSED, r), t.on(n.a.ERROR, r), t.on(n.a.FRAG_PARSING_METADATA, r), t.on(n.a.FRAG_PARSING_USERDATA, r), t.on(n.a.INIT_PTS_FOUND, r), t.on(n.a.FRAG_PARSING_DATA, function (t, r) {
                    var i = [], n = {event: t, data: r};
                    r.data1 && (n.data1 = r.data1.buffer, i.push(r.data1.buffer), delete r.data1), r.data2 && (n.data2 = r.data2.buffer, i.push(r.data2.buffer), delete r.data2), e.postMessage(n, i)
                })
            }
        }, function (e, t) {
            String.prototype.endsWith || function () {
                "use strict";
                var e = function () {
                    try {
                        var e = {}, t = Object.defineProperty, r = t(e, e, e) && t
                    } catch (i) {
                    }
                    return r
                }(), t = {}.toString, r = function (e) {
                    if (null == this) throw TypeError();
                    var r = String(this);
                    if (e && "[object RegExp]" == t.call(e)) throw TypeError();
                    var i = r.length, n = String(e), a = n.length, o = i;
                    if (arguments.length > 1) {
                        var s = arguments[1];
                        s !== undefined && (o = s ? Number(s) : 0) != o && (o = 0)
                    }
                    var d = Math.min(Math.max(o, 0), i) - a;
                    if (d < 0) return !1;
                    for (var l = -1; ++l < a;) if (r.charCodeAt(d + l) != n.charCodeAt(l)) return !1;
                    return !0
                };
                e ? e(String.prototype, "endsWith", {
                    value: r,
                    configurable: !0,
                    writable: !0
                }) : String.prototype.endsWith = r
            }()
        }])["default"]
    })
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(68), a = function () {
        function e() {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e)
        }

        return i(e, [{
            key: "requestVideoUrlsByVid", value: function (e) {
                var t = this;
                e = e || {};
                var r = function (e) {
                        if ("string" == typeof e) {
                            var t = document.createElement("a");
                            return t.href = e, t.protocol + "//" + t.host + t.pathname
                        }
                    }, i = function (e) {
                        var t = [];
                        for (var r in e) t.push(r + "=" + e[r]);
                        return t.join("&")
                    }, a = function (e) {
                        var t = "";
                        try {
                            window.localStorage && (t = window.localStorage[e])
                        } catch (r) {
                        }
                        return t
                    }, o = function (e) {
                        e = e || 10;
                        var t = parseInt(+new Date) + "";
                        if (t.length === e) return t;
                        if (t.length > e) return t.substring(0, e);
                        for (var r = e - t.length; r > 0;) t = "0" + t, r--;
                        return t
                    }(), s = (new Date).getDay(), d = "7." + (0 == s ? 7 : s), l = n.$xx("10201", e.vid, "v1010", 1, o, d),
                    u = "";
                try {
                    u = location.href.replace(location.search, "")
                } catch (y) {
                }
                var c = window != top ? r(document.referrer || "") : document.location.host, h = function (r) {
                    if (r && 0 == r.errCode && r.vinfo) {
                        var i, n, a;
                        try {
                            i = JSON.parse(r.vinfo)
                        } catch (y) {
                            console.log("requestVideoUrlsByVid parse json:", y)
                        }
                        i && "o" == i.s && i.vl && i.vl.vi && (3 == i.dltype || 8 == i.dltype ? (n = t.parseHls(i), a = "hls") : 1 == i.dltype && (n = t.parseMp4(i, {guid: e.guid}), a = "mp4")), n ? e.onSucc({
                            urls: n.urls,
                            m3u8: n.m3u8,
                            type: a
                        }) : e.onFail()
                    } else e.onFail()
                }, f = "//vd.l.qq.com/proxyhttp", p = {
                    buid: "onlyvinfo",
                    vinfoparam: i({
                        appVer: "3.5.57",
                        cKey: l,
                        charge: 0,
                        defaultfmt: "auto",
                        defn: "",
                        defnpayver: 0,
                        defsrc: 2,
                        dtype: 3,
                        ehost: r(u),
                        encryptVer: d,
                        fhdswitch: 0,
                        flowid: e.flowid,
                        guid: e.guid,
                        host: c,
                        isHLS: 1,
                        onlyGetinfo: !0,
                        otype: "ojson",
                        platform: "10201",
                        refer: u,
                        sdtfrom: "v1010",
                        show1080p: 0,
                        sphttps: "https:" === location.protocol ? 1 : 0,
                        spwm: 4,
                        tm: o,
                        unid: a("txp-unid"),
                        vid: e.vid,
                        sphls: 2,
                        spgzip: 1,
                        dlver: 2
                    })
                };
                if (window.$ && window.$.ajax) $.ajax({
                    method: "GET",
                    type: "GET",
                    url: f,
                    crossDomain: !0,
                    xhrFields: {withCredentials: !0},
                    timeout: 8e3,
                    dataType: "jsonp",
                    contentType: "application/javascript",
                    data: p
                }).done(function (e) {
                    h(e)
                }).fail(function (t, r) {
                    e.onFail({err: r})
                }); else {
                    var v = new XMLHttpRequest;
                    v.open("POST", f, !0), v.responseType = "text", v.timeout = "8000", v.withCredentials = !0, v.setRequestHeader("Content-type", "text/plain"), v.send(JSON.stringify(p)), v.onload = function () {
                        if (200 === v.status && v.response) {
                            var t;
                            try {
                                t = JSON.parse(v.response)
                            } catch (y) {
                                console.log("requestVideoUrlsByVid parse json:", y)
                            }
                            h(t)
                        } else e.onFail()
                    }, v.onerror = function (t) {
                        e.onFail({err: t})
                    }
                }
            }
        }, {
            key: "parseHls", value: function (e) {
                var t = [], r = void 0, i = e.vl.vi[0] || void 0;
                if (i && i.ul && i.ul.ui && i.ul.ui.length) for (var n, a = 0, o = i.ul.ui.length; a < o; a++) (n = i.ul.ui[a]).url && n.hls && n.hls.pt ? t.push(n.url + n.hls.pt) : 8 == e.dltype && t.push(n.url);
                return 8 === e.dltype && i && i.ul && (r = i.ul.m3u8), {urls: t, m3u8: r}
            }
        }, {
            key: "parseMp4", value: function (e, t) {
                var r, i = [], n = e.vl.vi[0] || void 0, a = n.cl.fc;
                if (!n.cl.ci && n.fvkey && n.fn && n.ul && n.ul.ui && n.ul.ui.length) return i;
                if (!n.cl.ci || a !== n.cl.ci.length) return i;
                t.vkey = n.fvkey;
                for (var o = 0; o < a; o++) {
                    r = this.getSplitFileName(n.fn, o + 1), i = this.getInfoPath(n.ul, n.lnk, r, t);
                    break
                }
                return {urls: i}
            }
        }, {
            key: "getSplitFileName", value: function (e, t) {
                if (0 === t) return e;
                var r = e.lastIndexOf(".");
                return e.substr(0, r) + "." + t + e.substring(r)
            }
        }, {
            key: "getInfoPath", value: function (e, t, r, i) {
                for (var n = [], a = {}, o = {}, s = e.ui.length, d = 0; d < s; d++) if (o = {}, (a = e.ui[d]).url) {
                    a.url && -1 === a.url.indexOf(t + ".flv") && -1 === a.url.indexOf(t + ".mp4") ? o.url = a.url + r : o.url = a.url, a.vt && (o.vt = parseInt(a.vt));
                    var l = o.url.indexOf("?") > -1 ? "&" : "?";
                    o.url += l + "guid=" + i.guid + "&sdtfrom=&vkey=" + i.vkey, n.push(o.url)
                }
                return n
            }
        }]), e
    }();
    e.exports = a
}, function (e, t, r) {
    "use strict";
    var i = {};
    i.ha = function (e) {
        for (var t = [], r = 0; r < 64;) t[r] = 0 | 4294967296 * Math.abs(Math.sin(++r));

        function i(e, t) {
            return ((e >> 1) + (t >> 1) << 1) + (1 & e) + (1 & t)
        }

        return function (e) {
            for (var r, n, a, o, s = [], d = unescape(encodeURI(e)), l = d.length, u = [r = 1732584193, n = -271733879, ~r, ~n], c = 0; c <= l;) s[c >> 2] |= (d.charCodeAt(c) || 128) << c++ % 4 * 8;
            for (s[e = 16 * (l + 8 >> 6) + 14] = 8 * l, c = 0; c < e; c += 16) {
                for (l = u, o = 0; o < 64;) l = [a = l[3], i(r = l[1], (a = i(i(l[0], [r & (n = l[2]) | ~r & a, a & r | ~a & n, r ^ n ^ a, n ^ (r | ~a)][l = o >> 4]), i(t[o], s[[o, 5 * o + 1, 3 * o + 5, 7 * o][l] % 16 + c]))) << (l = [7, 12, 17, 22, 5, 9, 14, 20, 4, 11, 16, 23, 6, 10, 15, 21][4 * l + o++ % 4]) | a >>> 32 - l), r, n];
                for (o = 4; o;) u[--o] = i(u[o], l[o])
            }
            for (e = ""; o < 32;) e += (u[o >> 3] >> 4 * (1 ^ 7 & o++) & 15).toString(16);
            return e
        }
    }(), i.stringToHex = function (e) {
        for (var t = "", r = new Array("0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f"), i = 0; i < e.length; i++) t += r[e.charCodeAt(i) >> 4] + r[15 & e.charCodeAt(i)];
        return t
    }, i.hexToString = function (e) {
        for (var t = "", r = "0x" == e.substr(0, 2) ? 2 : 0; r < e.length; r += 2) t += String.fromCharCode(parseInt(e.substr(r, 2), 16));
        return t
    }, i._Seed = "#$#@#*ad", i.tempcalc = function (e, t) {
        for (var r = "", i = 0; i < e.length; i++) r += String.fromCharCode(e.charCodeAt(i) ^ t.charCodeAt(i % 4));
        return r
    }, i.u1 = function (e, t) {
        for (var r = "", i = t; i < e.length; i += 2) r += e.charAt(i);
        return r
    }, i._urlStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", i.urlenc = function (e, t, r) {
        for (var n, a, o, s, d, l, u, c = "", h = 0; h < e.length;) n = e.charCodeAt(h++), a = e.charCodeAt(h++), o = e.charCodeAt(h++), 15 == h && (c += "A", c += t, c += r), s = n >> 2, d = (3 & n) << 4 | a >> 4, l = (15 & a) << 2 | o >> 6, u = 63 & o, isNaN(a) ? l = u = 64 : isNaN(o) && (u = 64), c = c + i._urlStr.charAt(s) + i._urlStr.charAt(d) + i._urlStr.charAt(l) + i._urlStr.charAt(u);
        return c
    }, i.$xx = function (e, t, r, n, a, o) {
        var s = "123456";
        if (o.length < 3) return "err";
        if ("7." != o.substr(0, 2)) return "err";
        var d = o.substr(2);
        "1" == d && (s = "06fc1464"), "2" == d && (s = "4244ce1b"), "3" == d && (s = "77de31c5"), "4" == d && (s = "e0149fa2"), "5" == d && (s = "60394ced"), "6" == d && (s = "2da639f0"), "7" == d && (s = "c2f0cf9f");
        a = a || parseInt(+new Date / 1e3), n = ("" + n).charAt(0);
        return i.ha(s + t + a + "*#06#" + e)
    }, e.exports = i
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }();
    var n = r(5);
    e.exports = function () {
        function e(t, r) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, e), this.lsKey = "gp-cacdc", this.conf = t, this.$dom = r, this.reset(), this.bindPlayerEvent()
        }

        return i(e, [{
            key: "bindPlayerEvent", value: function () {
                var e = this;
                this._filmFirstPlayListener = function () {
                    e.onFilmFirstPlayListener()
                }, this.conf.playerMsg && this.conf.playerMsg.on("filmFirstPlay", this._filmFirstPlayListener)
            }
        }, {
            key: "onFilmFirstPlayListener", value: function () {
                if (!this.filmFirstPlay) {
                    this.filmFirstPlay = !0;
                    var e = this.getLSValue();
                    if (this.errorByADBlock && 0 == e) this.setLSValue(1); else if (this.hasShow) {
                        var t = Math.min(4, e + 1);
                        this.setLSValue(t)
                    }
                    this.reset()
                }
            }
        }, {
            key: "unBindPlayerEvent", value: function () {
                this.conf.playerMsg && this._filmFirstPlayListener && this.conf.playerMsg.off("filmFirstPlay", this._filmFirstPlayListener)
            }
        }, {
            key: "onAdPlaying", value: function () {
                this.setLSValue(0)
            }
        }, {
            key: "isNeedShow", value: function (e) {
                if (!this.showing) {
                    var t = this.getLSValue();
                    this.errorByADBlock && 1 == t ? this.startDowndown(e, 30) : this.errorByADBlock && 2 == t ? this.startDowndown(e, 45) : this.errorByADBlock && t >= 3 ? this.startDowndown(e, 60) : e()
                }
            }
        }, {
            key: "startDowndown", value: function (e, t) {
                var r = this;
                this.hasShow = !0, this.showing = !0;
                var i = t, a = this.$dom.querySelector(".txp_cac_black_screen_em");
                n.removeClass(this.$dom, "txp_none"), a.innerHTML = "" + t, this.conf.playerMsg && this.conf.playerMsg.broadcast("blackScreenEvt", {bc: this.getLSValue()}), this.startDowndownID = setInterval(function () {
                    console.log("back screen>>", i), i > 0 ? (i--, a.innerHTML = "" + i) : (r.startDowndownID > 0 && (clearInterval(r.startDowndownID), r.startDowndownID = 0), e(), n.addClass(r.$dom, "txp_none"), r.showing = !1)
                }, 1e3)
            }
        }, {
            key: "reset", value: function () {
                this.unBindPlayerEvent(), this.filmFirstPlay = !1, this.errorByADBlock = !1, this.hasShow = !1, this.showing = !1, this.$dom && n.addClass(this.$dom, "txp_none"), this.startDowndownID > 0 && (clearInterval(this.startDowndownID), this.startDowndownID = 0)
            }
        }, {
            key: "getLSValue", value: function () {
                try {
                    if (window.localStorage) return +window.localStorage.getItem(this.lsKey)
                } catch (e) {
                    return 0
                }
                return 0
            }
        }, {
            key: "setLSValue", value: function (e) {
                try {
                    window.localStorage && window.localStorage.setItem(this.lsKey, e)
                } catch (t) {
                }
            }
        }]), e
    }()
}, function (e, t, r) {
    "use strict";
    var i = function () {
        return function (e, t) {
            if (Array.isArray(e)) return e;
            if (Symbol.iterator in Object(e)) return function (e, t) {
                var r = [], i = !0, n = !1, a = undefined;
                try {
                    for (var o, s = e[Symbol.iterator](); !(i = (o = s.next()).done) && (r.push(o.value), !t || r.length !== t); i = !0) ;
                } catch (d) {
                    n = !0, a = d
                } finally {
                    try {
                        !i && s["return"] && s["return"]()
                    } finally {
                        if (n) throw a
                    }
                }
                return r
            }(e, t);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }(), n = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }(), a = function h(e, t, r) {
        null === e && (e = Function.prototype);
        var i = Object.getOwnPropertyDescriptor(e, t);
        if (i === undefined) {
            var n = Object.getPrototypeOf(e);
            return null === n ? undefined : h(n, t, r)
        }
        if ("value" in i) return i.value;
        var a = i.get;
        return a === undefined ? undefined : a.call(r)
    };
    var o = r(4), s = r(6), d = r(19), l = r(20), u = r(1), c = r(0)("base/embedAd");
    e.exports = function (e) {
        function t(e) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, t);
            var r = function (e, t) {
                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
            return r.message = e.message, r.ready = !0, r.loadStatus = !1, r.startTime = new Date, r.getRes(), r.write(), r
        }

        return function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }(t, s), n(t, [{
            key: "getRes", value: function () {
                var e = this.info.creative || [];
                if (!e.length) return {};
                var t = e[0], r = t.material && t.material.length && t.material[0] || {};
                this.material = r
            }
        }, {
            key: "write", value: function () {
                var e = this;
                this.$dom && Promise.all([this.loadRes(), l()]).then(function (r) {
                    var n = i(r, 2), o = (n[0], n[1]);
                    e.$dom.html(e.generateDom(o[e.info.adtype])), e.show(), "PVL" === e.info.adtype && e.message.emit(u.REPORT_EVENT.AD_VIEW, {adInfo: e.info}), e.firstview = parseInt(window.performance.now(), 10), a(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "_loadReadyHandler", e).call(e)
                })["catch"](function (t) {
                    c.log(t), e.destroy()
                })
            }
        }, {
            key: "loadRes", value: function () {
                var e = this;
                return this.material.url ? (this.imageMaterial = new d({url: this.material.url}), new Promise(function (t, r) {
                    e.imageMaterial.load().then(function (r) {
                        var i = new Date;
                        e.message.emit(u.REPORT_EVENT.AD_LOAD_COMPLETE, {
                            adInfo: e.info,
                            adload: i - e.startTime,
                            tpindex: 1,
                            oid: e.info.order_id
                        }), e.loadStatus = !0, t(r)
                    })["catch"](function () {
                        e.message.emit(u.REPORT_EVENT.AD_LOAD_COMPLETE, {
                            adInfo: e.info,
                            errorcode: 2301
                        }), r("image load failed")
                    })
                })) : Promise.reject("no url")
            }
        }, {
            key: "generateDom", value: function (e) {
                var t = "", r = this.material.url, i = this.info.adtype, n = "1" == e ? "" : "txp_none";
                switch (i) {
                    case"PPB":
                        t = '\n                    <img src="' + r + '" class="">\n                    <txpdiv class="txp_ad_mark ' + n + '">\u5e7f\u544a</txpdiv>\n                ';
                        break;
                    case"PVL":
                        t = '\n                    <img src="' + r + '" width="200" class="txp_img">\n                    <txpdiv class="txp_ad_mark ' + n + '">\u5e7f\u544a</txpdiv>\n                ';
                        break;
                    case"PDF":
                        var a = this.info.extParams && this.info.extParams.richdata;
                        if (!a) {
                            var o = this.info.extParams && Object.keys(this.info.extParams)[0];
                            a = o && decodeURIComponent(o) || "";
                            try {
                                a = Txplayer.util.getUrlParam("richdata", a), a = JSON.parse(a)
                            } catch (s) {
                                a = {}
                            }
                        }
                        t = '\n                    <img src="' + r + '" class="txp_definition_ad" style="width: 40px; height: 23px;">\n                    <txpdiv class="txp_definition_ad_text">' + (a.plugins && a.plugins.title || "") + '</txpdiv>\n                    <txpdiv class="txp_ad_mark ' + n + '">\u5e7f\u544a</txpdiv>\n                '
                }
                return t
            }
        }, {
            key: "play", value: function () {
                this.show()
            }
        }, {
            key: "stop", value: function (e) {
                this.state != o.END && (this.hide(), a(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "stop", this).call(this, e))
            }
        }, {
            key: "show", value: function () {
                this.isShow || (this.$dom && this.$dom.removeClass("txp_none"), a(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "show", this).call(this))
            }
        }, {
            key: "hide", value: function () {
                this.isShow && (this.$dom && (this.$dom.addClass("txp_none"), this.material && this.material.url && (this.message.emit(u.REPORT_EVENT.AD_END, {
                    adInfo: this.info,
                    adtt: new Date - this.startTime,
                    firstview: this.firstview
                }), this.material = null)), a(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "hide", this).call(this))
            }
        }, {
            key: "destroy", value: function () {
                this.imageMaterial && this.imageMaterial.destroy(), this.stop()
            }
        }]), t
    }()
}, function (e, t, r) {
    "use strict";
    var i = function () {
        function e(e, t) {
            for (var r = 0; r < t.length; r++) {
                var i = t[r];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }

        return function (t, r, i) {
            return r && e(t.prototype, r), i && e(t, i), t
        }
    }(), n = function l(e, t, r) {
        null === e && (e = Function.prototype);
        var i = Object.getOwnPropertyDescriptor(e, t);
        if (i === undefined) {
            var n = Object.getPrototypeOf(e);
            return null === n ? undefined : l(n, t, r)
        }
        if ("value" in i) return i.value;
        var a = i.get;
        return a === undefined ? undefined : a.call(r)
    };
    var a = r(0)("base/zcAd"), o = r(1), s = r(5), d = r(17);
    e.exports = function (e) {
        function t(e) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, t);
            var r = function (e, t) {
                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
            return r._name = e._name, r
        }

        return function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }(t, d), i(t, [{
            key: "_loadReadyHandler", value: function (e) {
                n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "_loadReadyHandler", this).call(this, e), this.startEnterCountdown(e)
            }
        }, {
            key: "stop", value: function (e) {
                n(t.prototype.__proto__ || Object.getPrototypeOf(t.prototype), "stop", this).call(this, e), s.text(this.$dom.$enterCountdown.$countdownNum, ""), s.hide(this.$dom.$enterCountdown.$countdown), s.hide(this.$dom.$enterCountdown.layer), clearInterval(this.enterCountdownTimer)
            }
        }, {
            key: "startEnterCountdown", value: function (e) {
                var t = 10, r = this, i = this.$dom.$enterCountdown.$countdown,
                    n = this.$dom.$enterCountdown.$countdownNum;
                s.text(n, t), "VipDisplay" != e.displayCode && s.show(i), s.show(this.$dom.$enterCountdown.layer), this.message.emit(o.TXPLAYER_EVENT.AD_ENTER_COUNTDOWN, e), this.enterCountdownTimer = setInterval(function () {
                    (t -= 1) >= 0 && s.text(n, t), 0 == t && (clearInterval(r.enterCountdownTimer), s.text(n, ""), s.hide(i), s.hide(r.$dom.$enterCountdown.layer), r.message.emit(o.TXPLAYER_EVENT.AD_ENTER_COUNTDOWN_COMPLETE, e)), a.log("\u4e2d\u63d2\u5f00\u59cb\u5012\u8ba1\u65f6\uff1a", t)
                }, 1e3)
            }
        }]), t
    }()
}, function (e, t, r) {
    "use strict";
    r(0)("base/endingAd");
    var i = r(17);
    e.exports = function (e) {
        function t(e) {
            !function (e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }(this, t);
            var r = function (e, t) {
                if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return !t || "object" != typeof t && "function" != typeof t ? e : t
            }(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this, e));
            return r._name = e._name, r
        }

        return function (e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + typeof t);
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
        }(t, i), t
    }()
}]);
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(143)
    }, 47: function (a, b) {
        !function (a) {
            function b(c) {
                var d = [["resolve", "done", a.Callbacks({
                    once: 1,
                    memory: 1
                }), "resolved"], ["reject", "fail", a.Callbacks({
                    once: 1,
                    memory: 1
                }), "rejected"], ["notify", "progress", a.Callbacks({memory: 1})]], e = "pending", f = {
                    state: function () {
                        return e
                    }, always: function () {
                        return g.done(arguments).fail(arguments), this
                    }, then: function () {
                        var c = arguments;
                        return b(function (b) {
                            a.each(d, function (d, e) {
                                var h = a.isFunction(c[d]) && c[d];
                                g[e[1]](function () {
                                    var c = h && h.apply(this, arguments);
                                    if (c && a.isFunction(c.promise)) c.promise().done(b.resolve).fail(b.reject).progress(b.notify); else {
                                        var d = this === f ? b.promise() : this, g = h ? [c] : arguments;
                                        b[e[0] + "With"](d, g)
                                    }
                                })
                            }), c = null
                        }).promise()
                    }, promise: function (b) {
                        return null != b ? a.extend(b, f) : f
                    }
                }, g = {};
                return a.each(d, function (a, b) {
                    var c = b[2], h = b[3];
                    f[b[1]] = c.add, h && c.add(function () {
                        e = h
                    }, d[1 ^ a][2].disable, d[2][2].lock), g[b[0]] = function () {
                        return g[b[0] + "With"](this === g ? f : this, arguments), this
                    }, g[b[0] + "With"] = c.fireWith
                }), f.promise(g), c && c.call(g, g), g
            }

            if ("function" != typeof a.Deferred) {
                var c = Array.prototype.slice;
                a.when = function (d) {
                    var e, f, g, h = c.call(arguments), i = h.length, j = 0,
                        k = 1 !== i || d && a.isFunction(d.promise) ? i : 0, l = 1 === k ? d : b(),
                        m = function (a, b, d) {
                            return function (f) {
                                b[a] = this, d[a] = arguments.length > 1 ? c.call(arguments) : f, d === e ? l.notifyWith(b, d) : --k || l.resolveWith(b, d)
                            }
                        };
                    if (i > 1) for (e = new Array(i), f = new Array(i), g = new Array(i); j < i; ++j) h[j] && a.isFunction(h[j].promise) ? h[j].promise().done(m(j, g, h)).fail(l.reject).progress(m(j, f, e)) : --k;
                    return k || l.resolveWith(g, h), l.promise()
                }, a.Deferred = b
            }
        }(Zepto)
    }, 48: function (a, b) {
        !function (a) {
            "function" != typeof a.Callbacks && (a.Callbacks = function (b) {
                b = a.extend({}, b);
                var c, d, e, f, g, h, i = [], j = !b.once && [], k = function (a) {
                    for (c = b.memory && a, d = !0, h = f || 0, f = 0, g = i.length, e = !0; i && h < g; ++h) if (i[h].apply(a[0], a[1]) === !1 && b.stopOnFalse) {
                        c = !1;
                        break
                    }
                    e = !1, i && (j ? j.length && k(j.shift()) : c ? i.length = 0 : l.disable())
                }, l = {
                    add: function () {
                        if (i) {
                            var d = i.length, h = function (c) {
                                a.each(c, function (a, c) {
                                    "function" == typeof c ? b.unique && l.has(c) || i.push(c) : c && c.length && "string" != typeof c && h(c)
                                })
                            };
                            h(arguments), e ? g = i.length : c && (f = d, k(c))
                        }
                        return this
                    }, remove: function () {
                        return i && a.each(arguments, function (b, c) {
                            for (var d; (d = a.inArray(c, i, d)) > -1;) i.splice(d, 1), e && (d <= g && --g, d <= h && --h)
                        }), this
                    }, has: function (b) {
                        return !(!i || !(b ? a.inArray(b, i) > -1 : i.length))
                    }, empty: function () {
                        return g = i.length = 0, this
                    }, disable: function () {
                        return i = j = c = void 0, this
                    }, disabled: function () {
                        return !i
                    }, lock: function () {
                        return j = void 0, c || l.disable(), this
                    }, locked: function () {
                        return !j
                    }, fireWith: function (a, b) {
                        return !i || d && !j || (b = b || [], b = [a, b.slice ? b.slice() : b], e ? j.push(b) : k(b)), this
                    }, fire: function () {
                        return l.fireWith(this, arguments)
                    }, fired: function () {
                        return !!d
                    }
                };
                return l
            })
        }(Zepto)
    }, 49: function (a, b) {
        !function (a) {
            function b() {
            }

            function c(a) {
                g = [a]
            }

            function d(a, b, c) {
                return a && a.apply(b.context || b, c)
            }

            function e(a) {
                return /\?/.test(a) ? "&" : "?"
            }

            function f(f) {
                function n(a) {
                    X++ || (Y(), S && (A[U] = {s: [a]}), O && (a = O.apply(f, [a])), d(L, f, [a, v, f]), d(N, f, [f, v]))
                }

                function F(a) {
                    X++ || (Y(), S && a != w && (A[U] = a), d(M, f, [f, a]), d(N, f, [f, a]))
                }

                f = a.extend({}, C, f);
                var G, H, I, J, K, L = f.success, M = f.error, N = f.complete, O = f.dataFilter,
                    P = f.callbackParameter, Q = f.callback, R = f.cache, S = f.pageCache, T = f.charset, U = f.url,
                    V = f.data, W = f.timeout, X = 0, Y = b;
                return y && y(function (a) {
                    a.done(L).fail(M), L = a.resolve, M = a.reject
                }).promise(f), f.abort = function () {
                    !X++ && Y()
                }, d(f.beforeSend, f, [f]) === !1 || X ? f : (U = U || j, V = V ? "string" == typeof V ? V : a.param(V, f.traditional) : j, U += V ? e(U) + V : j, P && (U += e(U) + encodeURIComponent(P) + "=?"), !R && !S && (U += e(U) + "_" + (new Date).getTime() + "="), U = U.replace(/=\?(&|$)/, "=" + Q + "$1"), S && (G = A[U]) ? G.s ? n(G.s[0]) : F(G) : (x[Q] = c, I = a(u)[0], I.id = m + B++, T && (I[i] = T), D && D.version() < 11.6 ? (J = a(u)[0]).text = "document.getElementById('" + I.id + "')." + p + "()" : I[h] = h, E && (I.htmlFor = I.id, I.event = o), I[q] = I[p] = I[r] = function (a) {
                    if (!I[s] || !/i/.test(I[s])) {
                        try {
                            I[o] && I[o]()
                        } catch (b) {
                        }
                        a = g, g = 0, a ? n(a[0]) : F(k)
                    }
                }, I.src = U, Y = function (a) {
                    K && clearTimeout(K), I[r] = I[q] = I[p] = null, z[t](I), J && z[t](J)
                }, z[l](I, H = z.firstChild), J && z[l](J, H), K = W > 0 && setTimeout(function () {
                    F(w)
                }, W)), f)
            }

            var g, h = "async", i = "charset", j = "", k = "error", l = "insertBefore", m = "_jqjsp", n = "on",
                o = n + "click", p = n + k, q = n + "load", r = n + "readystatechange", s = "readyState",
                t = "removeChild", u = "<script>", v = "success", w = "timeout", x = window, y = a.Deferred,
                z = a("head")[0] || document.documentElement, A = {}, B = 0, C = {callback: m, url: location.href},
                D = x.opera, E = !!a("<div>").html("<!--[if IE]><i><![endif]-->").find("i").length;
            f.setup = function (b) {
                a.extend(C, b)
            }, a.jsonp = f
        }(Txplayer.$)
    }, 143: function (a, b, c) {
        function d(a) {
            return i = Txplayer.$, this.dataset = {}, this.context = a, !h.mobile && window.jQuery && c(147), i.Deferred || c(47), i.Callbacks || c(48), i.jsonp || c(49), this.context.config.createPlayerAfterCssLoaded ? this.init() : void this.init()
        }

        var e = c(144), f = c(145), g = c(146), h = Txplayer.util, i = Txplayer.$;
        d.prototype = {
            init: function () {
                return this.dataset.defer = Txplayer.$.Deferred(), Txplayer.dataset.pluginsPreload && !this.context.config.containerId ? (this.dataset.defer.reject(), this.dataset.defer) : this.context.config.containerId ? (this.dataset.$container = i("#" + this.context.config.containerId), this.dataset.ipadClass = "txp_player_pad", this.dataset.miniSkinClass = "txp_player_desktop_mini", this.dataset.v4MiniSkinClass = "txp_player_mini", this.dataset.v4XsSkinClass = "txp_player_xs", this.context.dataset.isWindowFocus = !0, this.dataset.$container && this.dataset.$container.length ? (this.loadHTML5PlayerSkin(), this.write(), this.exportsModuleApis(), void this.addEventListener()) : (h.showError("[HtmlFrame\u521d\u59cb\u5316\u9519\u8bef]", "\u6ca1\u627e\u5230id=" + this.context.config.containerId + "\u7684dom\u8282\u70b9!"), this.dataset.defer.reject(), this.dataset.defer)) : (h.showError("[HtmlFrame\u521d\u59cb\u5316\u9519\u8bef]", "\u53c2\u6570containerId\u6ca1\u627e\u5230!"), this.dataset.defer.reject(), this.dataset.defer)
            }, getModStyle: function () {
                function a(a) {
                    return a = a || "100%", "number" == typeof a ? parseInt(a) + "px" : "string" == typeof a ? a.indexOf("%") > -1 ? a : parseInt(a) + "px" : a
                }

                var b = [];
                return b.push("width:" + a(this.context.config.width)), b.push("height:" + a(this.context.config.height)), b.join(";")
            }, loadHTML5PlayerSkin: function () {
                if ("flash" === this.context.config.playerType) return void this.dataset.defer.resolve();
                if (!Txplayer.dataset.disableLoadTxplayerCss) {
                    var a, b = this;
                    return (a = Txplayer.dataset.H5PlayerStyleUrl[this.context.config.playerType]) ? void h.loadCss(a).done(function () {
                        b.dataset.defer.resolve()
                    }).fail(function () {
                        h.showError("\u627e\u4e0d\u5230\u64ad\u653e\u5668\u7684\u76ae\u80a4\u6837\u5f0f\u6587\u4ef6", Txplayer.dataset.HdPlayerStyleUrl)
                    }) : void b.dataset.defer.resolve()
                }
            }, write: function () {
                var a = this.context.config.useSVG ? 1 : Txplayer.$.inArray(this.context.config.playerType, ["html5hd", "nintendo", "ipadh5", "chromehls", "safarihls"]) > -1 ? 1 : 0,
                    b = "flash" !== this.context.config.playerType ? 'tabindex="-1"' : "";
                if (a) {
                    document.createElement("txpdiv")
                }
                var c = {
                    useSVG: a,
                    ie: h.browser.ie,
                    playerid: "txplayer_" + this.context.config.playerId,
                    mod_stype: this.getModStyle(),
                    tabindex: b,
                    gradient_top: "txp-frame-gradient-top"
                };
                a && 0 === Txplayer.$("body ._txplayer_svg_sprite").length && Txplayer.$("body").append(Txplayer.$.tmpl(f, {}));
                var d, g = ["HtmlFrame.write Error:"], i = this, j = function () {
                    g = g.join("\n"), i.context.msg.broadcast(Txplayer.apiList.privateApi.reportError, {
                        msg: g,
                        code: Txplayer.define.reportCode.JS_ERROR,
                        stack: d
                    })
                };
                try {
                    var k = Txplayer.$.tmpl(e, c);
                    this.dataset.$container.html(k), this.dataset.$playermod = this.dataset.$container.find("#" + c.playerid), this.context.dataset.$playermod = this.dataset.$playermod, this.dataset.$gradientTop = this.dataset.$container.find('[data-role="' + c.gradient_top + '"]'), this.dataset.$gradientTop.addClass(Txplayer.dataset.hideClass), "v.qq.com" === location.hostname && this.context.config.showLogo !== !0 || this.dataset.$playermod.addClass("txp_player_external"), Txplayer.dataset.maxId++
                } catch (l) {
                    g.push(l.message), d = l.stack
                }
                return g.length > 1 ? void j() : ("ipadh5" === this.context.config.playerType && this.dataset.$playermod.addClass(this.dataset.ipadClass), this.dataset.defer.then(function () {
                    i.updateMiniSkinClass()
                }), void this.context.msg.on("ready", function () {
                    i.context.dataset.playerWidth = i.context.dataset.$playermod.width(), i.context.dataset.playerHeight = i.context.dataset.$playermod.height()
                }))
            }, updateMiniSkinClass: function () {
                if (this.context.config.useMiniSkin) if ("v4" === this.context.config.version) {
                    var a = this.context.dataset.$playermod.width(), b = this.context.dataset.$playermod.height();
                    if (0 === a && 0 === b) return;
                    b <= 255 || a <= 400 ? this.dataset.$playermod.addClass(this.dataset.v4XsSkinClass).addClass(this.dataset.v4MiniSkinClass) : b <= 265 || a <= 470 ? this.dataset.$playermod.removeClass(this.dataset.v4XsSkinClass).addClass(this.dataset.v4MiniSkinClass) : (this.dataset.$playermod.removeClass(this.dataset.v4XsSkinClass).removeClass(this.dataset.v4MiniSkinClass), this.context.config.useMiniSkin = !1)
                } else this.dataset.$playermod.addClass(this.dataset.miniSkinClass); else "v4" === this.context.config.version ? this.dataset.$playermod.removeClass(this.dataset.v4XsSkinClass).removeClass(this.dataset.v4MiniSkinClass) : this.dataset.$playermod.removeClass(this.dataset.miniSkinClass), this.context.config.useMiniSkin = !1
            }, resize: function (a) {
                "object" !== i.type(a) || i.isEmptyObject(a) || !a.hasOwnProperty("width") && !a.hasOwnProperty("height") || (this.dataset.$playermod.css(a), this.context.dataset.playerWidth = this.dataset.$container.width(), this.context.dataset.playerHeight = this.dataset.$container.height(), this.broadCaseResizeMsg())
            }, autoResize: function (a) {
                a = a || "width";
                var b = {width: this.context.dataset.videoWidth, height: this.context.dataset.videoHeight};
                if (!(b && b.width && b.height)) return !1;
                if ("width" === a) {
                    var c = this.dataset.$playermod.width();
                    this.resize({height: parseInt(c * (b.height / b.width))})
                } else {
                    var d = this.dataset.$playermod.height();
                    this.resize({width: parseInt(d * (b.width / b.height))})
                }
            }, broadCaseResizeMsg: function () {
                var a = {
                    width: this.context.dataset.$playermod.width(),
                    height: this.context.dataset.$playermod.height()
                };
                this.context.dataset.playerWidth = a.width, this.context.dataset.playerHeight = a.height, this.context.msg.broadcast("resize", a);
                try {
                    this.context.userMsg.broadcast("resize", a)
                } catch (b) {
                }
                this.autoToggleMiniSkin()
            }, autoToggleMiniSkin: function () {
                if (this.context.config.miniSkinAdaptive) {
                    var a = this, b = function (b) {
                        b != a.context.config.useMiniSkin && (a.context.config.useMiniSkin = b, a.updateMiniSkinClass(), a.context.msg.broadcast("miniSkinChange"))
                    };
                    if ("v4" === this.context.config.version) {
                        var c = this.context.dataset.$playermod.width(), d = this.context.dataset.$playermod.height();
                        if (0 === c && 0 === d) return;
                        b(d <= 255 || c <= 400 || d <= 265 || c <= 470 ? !0 : !1)
                    } else b(this.context.dataset.playerWidth <= 470 ? !0 : !1)
                }
            }, destroy: function (a) {
                h.v4log("destroy:", a);
                var b = this;
                if ("all" === a) for (var c in Txplayer.dataset._instance) Txplayer.dataset._instance[c] && "function" === Txplayer.$.type(Txplayer.dataset._instance[c].destroy) && Txplayer.dataset._instance[c].destroy(); else if ("HtmlFrame" === a) Txplayer.$.each(this.dataset.moduleApis, function (a, c) {
                    b.context.msg.off(a, c)
                }), Txplayer.$.each(this, function (a, b) {
                    b = null
                }); else if ("string" === Txplayer.$.type(a)) b.context.msg.broadcast("destroyPlugin", a); else {
                    b.dataset.$container.html("");
                    var d = b.context.dataset.playerId;
                    b.context.msg.broadcast("destroyPlugin"), Txplayer.dataset._instance[d] && (Txplayer.dataset._instance[d] = null, delete Txplayer.dataset._instance[d])
                }
            }, getPlayerSize: function () {
                return {width: this.context.dataset.playerWidth, height: this.context.dataset.playerHeight}
            }, isPlayerInScreen: function () {
                return !!h.isInScreen(this.dataset.$container)
            }, isWindowFocus: function () {
                return this.context.dataset.isWindowFocus
            }, addEventListener: function () {
                function a() {
                    c.context.dataset.isWindowFullscreen || c.context.dataset.isBrowserFullscreen ? (c.context.dataset.isControlShow && c.dataset.$playermod.css({cursor: "auto"}), clearTimeout(b), b = setTimeout(function () {
                        h.v4log("timeout hide mouse", c.context.dataset.isControlShow), !c.context.dataset.isWindowFullscreen && !c.context.dataset.isBrowserFullscreen || c.context.dataset.isControlShow ? c.dataset.$playermod.css({cursor: "auto"}) : c.dataset.$playermod.css({cursor: "none"})
                    }, 5e3)) : c.dataset.$playermod.css({cursor: "auto"})
                }

                var b, c = this;
                this.dataset.$playermod.on("click", function (a) {
                    var b = a.target, d = i(b), e = d.attr("data-report");
                    e || (e = d.parent().attr("data-report")), e || (e = d.parent().parent().attr("data-report")), e && c.context.msg.broadcast("reportUsrAction", {usr_action: e});
                    var f = d.attr("data-action");
                    if (b.nodeName && b.nodeName.toLowerCase && "a" === b.nodeName.toLowerCase() && f) if ("openTxVideo" === f) {
                        var g = h.getTxVideoPageURLByVid(c.context.dataset.vid);
                        g && window.open(g)
                    } else if ("openVIP" === f) {
                        c.context.msg.broadcast("pause"), c.context.msg.broadcast("showUIVipGuide", {openvip: !0});
                        try {
                            c.context.userMsg.broadcast("showUIVipGuide", {openvip: !0})
                        } catch (j) {
                        }
                    } else if ("shareVIP" === f) try {
                        c.context.dataset.openAccountData && c.context.dataset.openAccountData[d.attr("data-click")] && c.context.userMsg.broadcast("playerEmitCommonMsg", {
                            type: "accountBannedTip",
                            data: c.context.dataset.openAccountData[d.attr("data-click")]
                        })
                    } catch (j) {
                    } else "clickTips" === f ? c.context.msg.broadcast("uiTipsClicked", {
                        type: "html5",
                        target: a.target
                    }) : "customTips" === f ? c.context.userMsg.broadcast("customTipsClicked", {target: a.target}) : "refresh" == f && window.location.reload()
                }).on("mousemove", a), i(document).on("show", function () {
                    c.context.dataset.isWindowFocus = !0
                }), i(document).on("hide", function () {
                    c.context.dataset.isWindowFocus = !1
                }), this.context.msg.on("windowFullscreenChange", function (b) {
                    c.dataset.playerFullScreenChangeTimer && (clearTimeout(c.dataset.playerFullScreenChangeTimer), c.dataset.playerFullScreenChangeTimer = null), c.dataset.playerFullScreenChangeTimer = setTimeout(function () {
                        c.broadCaseResizeMsg()
                    }, 300), b ? c.dataset.$gradientTop.removeClass(Txplayer.dataset.hideClass) : c.dataset.$gradientTop.addClass(Txplayer.dataset.hideClass), a()
                }), this.context.msg.on("browserFullscreenChange", function (b) {
                    c.dataset.playerFullScreenChangeTimer && (clearTimeout(c.dataset.playerFullScreenChangeTimer), c.dataset.playerFullScreenChangeTimer = null), c.dataset.playerFullScreenChangeTimer = setTimeout(function () {
                        c.broadCaseResizeMsg()
                    }, 100), b ? c.dataset.$gradientTop.removeClass(Txplayer.dataset.hideClass) : c.dataset.$gradientTop.addClass(Txplayer.dataset.hideClass), a()
                }), i(window).on("resize", function () {
                    c.dataset.documentResizeTimer && (clearTimeout(c.dataset.documentResizeTimer), c.dataset.documentResizeTimer = null), c.dataset.documentResizeTimer = setTimeout(function () {
                        c.broadCaseResizeMsg()
                    }, 150), c.dataset.psjResizeTimer && (clearTimeout(c.dataset.psjResizeTimer), c.dataset.psjResizeTimer = null), c.dataset.psjResizeTimer = setTimeout(function () {
                        c.broadCaseResizeMsg(), clearTimeout(c.dataset.psjResizeTimer)
                    }, 600)
                }), this.context.msg.on(h.getUniqueMsgKey("videoPlay"), function (a) {
                    "film" !== a.playListType || c.dataset.hasTrigger || (c.dataset.hasTrigger = !0, c.broadCaseResizeMsg())
                }), this.context.msg.on(h.getUniqueMsgKey("beforeVideoPlay"), function (a) {
                    c.dataset.hasTrigger || (c.dataset.hasTrigger = !0, c.broadCaseResizeMsg())
                })
            }, exportsModuleApis: function () {
                var a = this;
                this.dataset.moduleApis = {}, this.dataset.moduleApis.resize = function () {
                    return a.resize.apply(a, arguments)
                }, this.dataset.moduleApis.destroy = function () {
                    return a.destroy.apply(a, arguments)
                }, this.dataset.moduleApis.getPlayerSize = function () {
                    return a.getPlayerSize.apply(a, arguments)
                }, this.dataset.moduleApis.autoResize = function () {
                    return a.autoResize.apply(a, arguments)
                }, this.dataset.moduleApis.isPlayerInScreen = function () {
                    return a.isPlayerInScreen.apply(a, arguments)
                }, this.dataset.moduleApis.isWindowFocus = function () {
                    return a.isWindowFocus.apply(a, arguments)
                }, i.extend(this.context.userApi, this.dataset.moduleApis), this.dataset.dataApis = {}, this.dataset.dataApis.isPlayerInScreen = function (b, c) {
                    c.data = a.isPlayerInScreen()
                }, i.each(this.dataset.dataApis, function (b, c) {
                    a.context.msg.setData(b, c)
                })
            }
        }, Txplayer.v4errcode = g, Txplayer.register("HtmlFrame", d)
    }, 144: function (a, b) {
        a.exports = '<% if(!useSVG){ %>\n  <div class="txp_player" id="<%=playerid%>" style="<%=mod_stype%>">\n    <div style="width:1px;height:1px;display:block;-webkit-user-select: auto;user-select: auto;"></div>\n  </div>\n<% }else{%>\n  <txpdiv class="txp_player txp_player_desktop txp_autohide_progress" id="<%=playerid%>" style="<%=mod_stype%>" <%=tabindex%>>\n  <div style="width:1px;height:1px;display:block;-webkit-user-select: auto;user-select: auto;"></div>\n  <txpdiv class="txp_gradient_top" data-role="<%=gradient_top%>"></txpdiv>\n  <txpdiv class="txp_gradient_bottom"></txpdiv>\n  </txpdiv>\n<% } %>'
    }, 145: function (a, b) {
        a.exports = '<svg class="_txplayer_svg_sprite txp_svg_sprite" display="none" version="1.1" xmlns="http://www.w3.org/2000/svg">\n\n\t<symbol id="txp_svg_collect" viewBox="0 0 36 36">\n\t\t<path d="M32.5 26H29v3.5a1.5 1.5 0 0 1-3 0V26h-3.5a1.5 1.5 0 1 1 0-3H26v-3.469a1.5 1.5 0 1 1 3 0V23h3.5a1.5 1.5 0 1 1 0 3zm.319-11.407c-.139.684-.716 1.209-1.442 1.209a1.5 1.5 0 0 1-1.5-1.5c0-.083.035-.154.048-.234l-.014-.002c.243-1.122.145-2.386-.598-3.584-.655-1.055-2.288-2.461-3.803-2.461-2.045 0-3.443.622-4.661 1.806l-3.358 3.182-3.485-3.207c-1.113-1.054-3.172-1.786-4.736-1.786-1.259 0-2.803.987-3.654 2.57-.975 1.809-.986 4.04.755 5.962l11.116 9.485.001-.001 1.015.928c.02.019.041.035.06.054l.004.004-.001.001c.256.269.419.629.419 1.03a1.5 1.5 0 0 1-1.5 1.5c-.435 0-.819-.191-1.093-.487L4.46 18.931c-3.285-3.209-3.285-8.357-.049-11.52C5.998 5.857 8.116 5 10.371 5c2.257 0 4.374.856 5.963 2.411l1.153 1.128 1.152-1.128C20.227 5.856 22.345 5 24.602 5c2.256 0 4.374.856 5.962 2.411a7.992 7.992 0 0 1 2.283 7.187l-.028-.005z"/>\n\t</symbol>\n\t<symbol id="txp_svg_collected" viewBox="0 0 36 36">\n\t\t<path d="M27 14.5a9.5 9.5 0 0 0-9.5 9.5c0 1.515.364 2.941.994 4.211l-1.507 1.28L3.96 18.431C.675 15.222.675 10.074 3.911 6.911 5.498 5.357 7.616 4.5 9.871 4.5c2.257 0 4.374.856 5.963 2.411l1.153 1.128 1.152-1.128C19.727 5.356 21.845 4.5 24.102 4.5c2.256 0 4.374.856 5.962 2.411a7.99 7.99 0 0 1 1.755 8.912A9.445 9.445 0 0 0 27 14.5zm0 2a7.5 7.5 0 1 1 0 15 7.5 7.5 0 0 1 0-15zm-4.042 9.485l1.811 1.81c.054.082.09.172.161.244a1.45 1.45 0 0 0 1.075.421 1.44 1.44 0 0 0 1.067-.418c.066-.066.097-.148.147-.222l3.851-3.851a1.463 1.463 0 1 0-2.069-2.07l-3.008 3.007-.978-.978a1.455 1.455 0 0 0-2.057 2.057z"/>\n\t</symbol>\n\t<symbol id="txp_svg_share" viewBox="0 0 36 36">\n\t\t<path d="M32.946 23.601l.023.009C30.694 29.675 24.86 34 18 34 9.163 34 2 26.837 2 18c0-6.095 3.42-11.372 8.435-14.072a1.48 1.48 0 0 1 .982-.387 1.5 1.5 0 0 1 1.5 1.5c0 .557-.317 1.023-.767 1.282l.032.064C7.927 8.523 5 12.915 5 18c0 7.18 5.82 13 13 13 5.577 0 10.319-3.518 12.165-8.45l.047.017c.154-.665.722-1.171 1.434-1.171a1.5 1.5 0 0 1 1.5 1.5c0 .26-.084.492-.2.705zM32 14.5a1.5 1.5 0 1 1-3 0V9.086l-9.455 9.455a1.498 1.498 0 0 1-2.117-2.117L26.852 7H21.5a1.5 1.5 0 0 1 0-3h8.929a1.47 1.47 0 0 1 .64.115c.546.224.931.758.931 1.385v9z"/>\n\t</symbol>\n\t<symbol id="txp_svg_play" viewBox="0 0 36 36">\n\t\t<path d="M25.8 18c0 .6-.3 1.1-.8 1.3L12.5 27c-.2.1-.5.2-.8.2-.8 0-1.5-.6-1.5-1.5V10c0-.8.7-1.5 1.5-1.5.3 0 .5.1.8.2l12.7 7.9c.4.5.6.9.6 1.4z"/>\n\t</symbol>\n\t<symbol id="txp_svg_replay" viewBox="0 0 36 36">\n\t\t<path d="M17.9 28c-4.9 0-9-3.6-9.8-8.3V19.4c0-.8.7-1.4 1.5-1.4s1.5.6 1.5 1.4c.8 3.8 4.5 6.2 8.3 5.4s6.2-4.5 5.4-8.3c-.7-3.2-3.5-5.6-6.9-5.6-1.8 0-3.6.7-4.8 2h1.3c.8 0 1.5.7 1.5 1.5s-.6 1.6-1.5 1.6h-4c-.8 0-1.5-.7-1.5-1.5v-4c0-.8.7-1.5 1.5-1.5.7 0 1.2.5 1.4 1.1C13.6 8.7 15.7 8 17.9 8c5.5 0 10 4.5 10 10s-4.4 10-10 10z" />\n\t</symbol>\n\t<symbol id="txp_svg_pause" viewBox="0 0 36 36">\n        <path d="M12 9h1c.6 0 1 .4 1 1v16c0 .6-.4 1-1 1h-1c-.6 0-1-.4-1-1V10c0-.6.4-1 1-1zm11 0h1c.6 0 1 .4 1 1v16c0 .6-.4 1-1 1h-1c-.6 0-1-.4-1-1V10c0-.6.4-1 1-1z" />\n    </symbol>\n\t<symbol id="txp_svg_search" viewBox="0 0 24 24">\n        <path d="M19.4 17.2L17.2 15c0.8-1.1 1.3-2.5 1.3-4 0-3.9-3.1-7-7-7s-7 3.1-7 7 3.1 7 7 7c1.5 0 2.8-0.4 3.9-1.2l2.2 2.2c0.5 0.5 1.3 0.5 1.8 0S19.9 17.7 19.4 17.2zM6.5 11c0-2.8 2.2-5 5-5s5 2.2 5 5 -2.2 5-5 5S6.5 13.8 6.5 11z"></path>\n    </symbol>\n\t<symbol id="svg_icon_refresh" viewBox="0 0 20 20">\n\t\t<path d="M10 19a9 9 0 0 1-9-8.999V10a1 1 0 1 1 2 0 7 7 0 1 0 7-7 6.952 6.952 0 0 0-4.877 2H7a1 1 0 0 1 0 2H3a1 1 0 0 1-1-1V2a1 1 0 0 1 2 0v1.314A8.935 8.935 0 0 1 10 1c4.971 0 9 4.029 9 9s-4.029 9-9 9z"/>\n\t</symbol>\n\t<symbol id="txp_svg_next" viewBox="0 0 36 36">\n        <path d="M26 9h1c.6 0 1 .4 1 1v16c0 .6-.4 1-1 1h-1c-.6 0-1-.4-1-1V10c0-.6.4-1 1-1zm-14.8 1.3l9.2 6.6c.6.4.8 1.3.3 2-.1.1-.2.3-.3.3l-9.2 6.6c-.6.4-1.5.3-1.9-.3-.2-.3-.3-.6-.3-.9V11.4c0-.8.6-1.4 1.4-1.4.3 0 .6.1.8.3z" />\n    </symbol>\n    <symbol id="txp_svg_stop" viewBox="0 0 36 36">\n        <path d="M24 26H12c-1.1 0-2-0.9-2-2V12c0-1.1 0.9-2 2-2h12c1.1 0 2 0.9 2 2v12C26 25.1 25.1 26 24 26z"/>\n    </symbol>\n\t<symbol id="txp_svg_shop" viewBox="0 0 24 24">\n\t\t<path d="M18 13.836V14H8.793l-.552 2H18a2 2 0 1 1-2 2c0-.368.106-.707.278-1H8.722c.172.294.278.633.278 1a2 2 0 1 1-2-2h.206l.552-2H7v-.223L5.34 5H3V4h3v.01L6.147 4l.377 2H20v1h-.206L18 13.835zM18 19a1 1 0 1 0 0-2 1 1 0 0 0 0 2zM7 17a1 1 0 1 0 0 1.998 1 1 0 0 0 0-2zM6.714 7l1.134 6h9.357l1.575-6H6.714z"/>\n\t</symbol>\n\t<symbol id="txp_svg_eye" viewBox="0 0 24 24">\n\t\t<path d="M12 18c-5.468 0-9-6-9-6s3.533-6 9-6c5.467 0 9 6 9 6s-3.533 6-9 6zm0-11c-5.033 0-8 5-8 5s2.967 5 8 5c5.033 0 8-5 8-5s-2.967-5-8-5zm0 8a3 3 0 1 1 0-6 3 3 0 0 1 0 6zm0-5a2 2 0 1 0 0 3.998 2 2 0 0 0 0-4z"/>\n\t</symbol>\n\t<symbol id="txp_svg_volume" viewBox="0 0 20 20">\n        <path d="M16.714 15.593l-.01-.01a1 1 0 0 1-1.705-.708c0-.287.124-.542.317-.724C16.354 13.073 17 11.614 17 10s-.645-3.072-1.682-4.151A.993.993 0 0 1 15 5.125a1 1 0 0 1 1-1c.3 0 .561.139.744.348l.017-.016A7.969 7.969 0 0 1 19 10c0 2.178-.874 4.15-2.286 5.593zm-3.999 3.122a.956.956 0 0 1-.688.28c-.009 0-.018.005-.027.005a.984.984 0 0 1-.75-.357L5.818 15H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h3.818l5.432-3.643A.984.984 0 0 1 12 1c.009 0 .017.005.026.005a.954.954 0 0 1 .968.967c.001.01.006.018.006.028v16c0 .009-.005.017-.005.026a.959.959 0 0 1-.28.689zM6.75 6.643A.984.984 0 0 1 6 7H3v6h3c.304 0 .567.143.75.357l4.25 2.85V3.792L6.75 6.643z"></path>\n    </symbol>\n\t<symbol id="txp_svg_volume_mute" viewBox="0 0 20 20">\n\t\t<path d="M16.394 12.566A5.88 5.88 0 0 0 17 10a5.97 5.97 0 0 0-1.682-4.151.993.993 0 0 1-.318-.724 1 1 0 0 1 1-1c.3 0 .561.139.745.348l.016-.016A7.969 7.969 0 0 1 19 10a7.934 7.934 0 0 1-1.116 4.055l-1.49-1.489zM11 3.792L8.978 5.149 7.62 3.792l3.63-2.435A.984.984 0 0 1 12 1c.009 0 .017.005.026.005a.954.954 0 0 1 .968.967c.001.01.006.018.006.028v7.171l-2-2V3.792zm7.864 14.072a.999.999 0 0 1-1.414 0L2.136 2.55a1 1 0 1 1 1.415-1.415L18.864 16.45a1 1 0 0 1 0 1.414zM3.171 5l2 2H3v6h3c.304 0 .567.143.75.357l4.25 2.85v-3.379l2 2V18c0 .009-.005.017-.005.027a.955.955 0 0 1-.967.968c-.01 0-.019.005-.028.005a.984.984 0 0 1-.75-.357L5.818 15H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.171z"></path>\n\t</symbol>\n\n\t<symbol id="txp_svg_setting" viewBox="0 0 24 24">\n\t\t<path d="M21 11v2l-2 1v-.3c-.2.7-.5 1.5-.9 2.1l.2-.2.7 2.1-1.4 1.4-2.1-.7.2-.2c-.7.4-1.4.7-2.1.9h.4l-1 2h-2l-1-2h.3c-.7-.2-1.5-.5-2.1-.9l.2.2-2.1.7-1.4-1.4.7-2.1.2.2c-.4-.7-.7-1.4-.9-2.1v.3l-2-1v-2l2-1v.4c.2-.8.5-1.6 1-2.3l-.3.4-.7-2.2 1.4-1.4 2.1.7-.3.4c.7-.5 1.5-.8 2.3-1H10l1-2h2l1 2h-.4c.8.2 1.6.5 2.3.9l-.3-.3 2.1-.7 1.4 1.4-.7 2.1-.3-.3c.4.7.7 1.4.9 2.2V10l2 1zm-9-4c-2.8 0-5 2.2-5 5s2.2 5 5 5 5-2.2 5-5-2.2-5-5-5z"/>\n\t</symbol>\n\t<symbol id="txp_svg_bulb" viewBox="0 0 24 24">\n\t\t<path d="M15 16.317V17c0 .186-.065.35-.153.5.088.15.153.313.153.5v2a1 1 0 0 1-1 1h-4a1 1 0 0 1-1-1v-2c0-.186.064-.35.153-.5A.97.97 0 0 1 9 17v-.683A6.994 6.994 0 0 1 5 10a7 7 0 0 1 14 0 6.994 6.994 0 0 1-4 6.317zM10 20h4v-2h-4v2zm2-16a6 6 0 0 0-6 6c0 2.215 1.214 4.128 3 5.167V15c.452.36 1 .593 1 .593V17h4v-1.5s.462-.096 1-.5v.167c1.786-1.04 3-2.953 3-5.167a6 6 0 0 0-6-6z"/>\n\t</symbol>\n\t<symbol id="txp_svg_window" viewBox="0 0 24 24">\n\t\t<path d="M19 16H9a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h10a1 1 0 0 1 1 1v10a1 1 0 0 1-1 1zm0-11H9v10h10V5zM5 19h10v-2h1v2a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2v1H5v10z"/>\n\t</symbol>\n\t<symbol id="txp_svg_size_true" viewBox="0 0 24 24">\n\t\t<path d="M20 19H4c-.6 0-1-.4-1-1V6c0-.6.4-1 1-1h16c.6 0 1 .4 1 1v12c0 .6-.4 1-1 1zM5 7v10h14V7H5z"/>\n\t</symbol>\n\t<symbol id="txp_svg_size" viewBox="0 0 24 24">\n\t\t<path d="M20 19H4c-.6 0-1-.4-1-1V6c0-.6.4-1 1-1h16c.6 0 1 .4 1 1v12c0 .6-.4 1-1 1zM5 17h10V7H5v10zM19 7h-2v10h2V7z"/>\n\t</symbol>\n\t<symbol id="txp_svg_fake" viewBox="0 0 24 24">\n\t\t<path d="M20 20H4c-.6 0-1-.4-1-1V5c0-.6.4-1 1-1h16c.6 0 1 .4 1 1v14c0 .6-.4 1-1 1zM5 6v12h14V6H5zm12 11h-2c-.6 0-1-.4-1-1s.4-1 1-1h1v-1c0-.6.4-1 1-1s1 .4 1 1v2c0 .6-.4 1-1 1zm0-6c-.6 0-1-.4-1-1V9h-1c-.6 0-1-.4-1-1s.4-1 1-1h2c.6 0 1 .4 1 1v2c0 .6-.4 1-1 1zm-8 6H7c-.6 0-1-.4-1-1v-2c0-.6.4-1 1-1s1 .4 1 1v1h1c.6 0 1 .4 1 1s-.4 1-1 1zm0-8H8v1c0 .6-.4 1-1 1s-1-.4-1-1V8c0-.6.4-1 1-1h2c.6 0 1 .4 1 1s-.4 1-1 1z"/>\n\t</symbol>\n\t<symbol id="txp_svg_fake_true" viewBox="0 0 24 24">\n\t\t<path d="M20 20H4c-.6 0-1-.4-1-1V5c0-.6.4-1 1-1h16c.6 0 1 .4 1 1v14c0 .6-.4 1-1 1zM5 6v12h14V6H5zm12 9h-1v1c0 .6-.4 1-1 1s-1-.4-1-1v-2c0-.6.4-1 1-1h2c.6 0 1 .4 1 1s-.4 1-1 1zm0-4h-2c-.6 0-1-.4-1-1V8c0-.6.4-1 1-1s1 .4 1 1v1h1c.6 0 1 .4 1 1s-.4 1-1 1zm-8 6c-.6 0-1-.4-1-1v-1H7c-.6 0-1-.4-1-1s.4-1 1-1h2c.6 0 1 .4 1 1v2c0 .6-.4 1-1 1zm0-6H7c-.6 0-1-.4-1-1s.4-1 1-1h1V8c0-.6.4-1 1-1s1 .4 1 1v2c0 .6-.4 1-1 1z"/>\n\t</symbol>\n\t<symbol id="txp_svg_fullscreen" viewBox="0 0 24 24">\n\t\t<path d="M19.7 19.7c-.2.2-.5.3-.7.3h-4c-.6 0-1-.4-1-1s.4-1 1-1h1.6l-3.3-3.3c-.4-.4-.3-1.1.1-1.4.4-.4 1-.4 1.4 0l3.3 3.3V15c0-.6.4-1 1-1s1 .4 1 1v4c-.1.2-.2.5-.4.7zM19 10c-.6 0-1-.4-1-1V7.4l-3.3 3.3c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4L16.6 6H15c-.6 0-1-.4-1-1s.4-1 1-1h4c.3 0 .5.1.7.3.2.2.3.5.3.7v4c0 .6-.4 1-1 1zM7.4 18H9c.6 0 1 .4 1 1s-.4 1-1 1H5c-.3 0-.5-.1-.7-.3-.2-.2-.3-.5-.3-.7v-4c0-.6.4-1 1-1s1 .4 1 1v1.6l3.3-3.3c.4-.4 1.1-.3 1.4.1.4.4.4 1 0 1.4L7.4 18zm1.9-7.3L6 7.4V9c0 .6-.4 1-1 1s-1-.4-1-1V5c0-.3.1-.5.3-.7.2-.2.5-.3.7-.3h4c.6 0 1 .4 1 1s-.4 1-1 1H7.4l3.3 3.3c.4.4.4 1 0 1.4-.4.4-1 .4-1.4 0z"/>\n\t</symbol>\n\t<symbol id="txp_svg_fullscreen_true" viewBox="0 0 24 24">\n\t\t<path d="M16.4 9H18c.6 0 1 .4 1 1s-.4 1-1 1h-4c-.3 0-.5-.1-.7-.3-.2-.2-.3-.5-.3-.7V6c0-.6.4-1 1-1s1 .4 1 1v1.6l3.3-3.3c.4-.4 1.1-.3 1.4.1.4.4.4 1 0 1.4L16.4 9zM10 19c-.6 0-1-.4-1-1v-1.6l-3.3 3.3c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.4L7.6 15H6c-.6 0-1-.4-1-1s.4-1 1-1h4c.3 0 .5.1.7.3.2.2.3.5.3.7v4c0 .5-.4 1-1 1zm0-8H6c-.6 0-1-.4-1-1s.4-1 1-1h1.6L4.3 5.7c-.4-.4-.4-1 .1-1.4.4-.4 1-.4 1.4 0L9 7.6V6c0-.6.4-1 1-1s1 .4 1 1v4c0 .3-.1.5-.3.7-.2.2-.5.3-.7.3zm4 2h4c.6 0 1 .4 1 1s-.4 1-1 1h-1.6l3.3 3.3c.4.4.4 1 0 1.4s-1 .4-1.4 0L15 16.4V18c0 .6-.4 1-1 1s-1-.4-1-1v-4c0-.3.1-.5.3-.7.2-.2.5-.3.7-.3z"/>\n\t</symbol>\n\t<symbol id="txp_svg_select" viewBox="0 0 12 12">\n\t\t<path d="M6 12c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6zM6 .9C3.2.9.9 3.2.9 6s2.3 5.1 5.1 5.1 5.1-2.3 5.1-5.1S8.8.9 6 .9z"/>\n\t</symbol>\n\t<symbol id="txp_svg_select_true" viewBox="0 0 12 12">\n\t\t<path d="M6 12c-3.3 0-6-2.7-6-6s2.7-6 6-6 6 2.7 6 6-2.7 6-6 6zM6 .9C3.2.9.9 3.2.9 6s2.3 5.1 5.1 5.1 5.1-2.3 5.1-5.1S8.8.9 6 .9zm-.3 7.4c-.3.3-.8.3-1.2 0L2.8 6.6c-.3-.3-.3-.8 0-1.2.3-.3.8-.3 1.2 0l1.2 1.2L8 3.7c.3-.3.8-.3 1.2 0 .3.3.3.8 0 1.2L5.7 8.3z"/>\n\t</symbol>\n\t<symbol id="txp_svg_link" viewBox="0 0 36 36">\n\t\t<path d="M26.5 26h-5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5h5c2.5 0 4.5-2 4.5-4.5S29 14 26.5 14h-5c-.8 0-1.5-.7-1.5-1.5s.7-1.5 1.5-1.5h5c4.1 0 7.5 3.4 7.5 7.5S30.6 26 26.5 26zM12 18.5c0-.8.7-1.5 1.5-1.5h9c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5h-9c-.8 0-1.5-.7-1.5-1.5zm2.5-4.5h-5C7 14 5 16 5 18.5S7 23 9.5 23h5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5h-5C5.4 26 2 22.6 2 18.5S5.4 11 9.5 11h5c.8 0 1.5.7 1.5 1.5s-.7 1.5-1.5 1.5z"/>\n\t</symbol>\n\t<symbol id="txp_svg_icon_like" viewBox="0 0 20 20">\n\t\t<path d="M18.4 8.5l-2 9.4c-0.2 0.6-0.2 1.1-0.6 1.3 -0.4 0.3-1 0.2-1.9 0.2 -2.9 0-10.4 0-10.4 0l0-12 2.1-5c0 0 0.6-2 1.7-2 1.4 0 1.2 2 1.2 2s0 1.3 0 3c0 0.7 0.2 1 1 1 6.5 0 6.9 0 6.9 0 0 0 0 0 0 0 0 0 0 0 0 0 0.5 0 1.6-0.2 1.9 0.5C18.5 7.4 18.6 7.9 18.4 8.5zM1.5 19.5c-0.6 0-1-0.4-1-1v-10c0-0.6 0.4-1 1-1s1 0.4 1 1v10C2.5 19.1 2.1 19.5 1.5 19.5z"></path>\n\t</symbol>\n\t<symbol id="txp_svg_loop" viewBox="0 0 36 36">\n        <path d="M13 13h8l-3-3-.8-.8c-.1-.1-.3-.2-.4-.2h-.5c-.2 0-.3.1-.3.3V11h-3c-2.8 0-5 2.2-5 5v4c0 2.4 1.7 4.4 4 4.9v-2.1c-1.2-.4-2-1.5-2-2.8v-4c0-1.7 1.3-3 3-3zm11-1.9v2.1c1.2.4 2 1.5 2 2.8v4c0 1.7-1.3 3-3 3h-8l3.1 3.1.8.8c.1.1.3.2.4.2h.5c.2 0 .3-.1.3-.3V25h3c2.8 0 5-2.2 5-5v-4c-.1-2.4-1.8-4.4-4.1-4.9z"/>\n    </symbol> \n\t<symbol id="txp_svg_loop_off" viewBox="0 0 36 36">\n        <path d="M16 11V9.3c0-.2.1-.3.3-.3h.5c.2 0 .3.1.4.2L21 13h-8c-1.7 0-3 1.3-3 3v4c0 1.7 1.3 3 3 3h1v2h-1c-2.8 0-5-2.2-5-5v-4c0-2.8 2.2-5 5-5h3zm4.1 11.2l2.8 2.8c.2.3.2.7 0 .9-.3.2-.7.2-.9 0l-2.8-2.8c-.2-.3-.2-.7 0-.9.3-.2.7-.2.9 0zM21 19c2.8 0 5 2.2 5 5s-2.2 5-5 5-5-2.2-5-5 2.2-5 5-5zm0 9c2.2 0 4-1.8 4-4s-1.8-4-4-4-4 1.8-4 4 1.8 4 4 4zm3-16.9c2.3.5 4 2.5 4 4.9v4c0 .6-.1 1.2-.3 1.8-.4-1-1-1.9-1.7-2.7V16c0-1.3-.8-2.4-2-2.8v-2.1z"></path>\n    </symbol>\n\t<symbol id="txp_svg_selected" viewBox="0 0 16 16">\n\t\t<path d="M1 8l5 5 9-10 -1-1 -8 9.2L2 7 1 8z"></path>\n\t</symbol>\n\t<symbol id="txp_svg_icon_hot" viewBox="0 0 16 16">\n\t\t<path d="M8.5 4.25c-.547-1.879.5-3.11.5-3.11s-2.25.891-2.25 3.11c0 2.104 1.517 3.45-.068 3.45-.723-.022-1.228-.365-1.228-1.312 0-.851.546-1.619.546-1.619-1.313.696-3 2.153-3 5.556 0 2.517 2.289 4.811 4.5 4.811s4.5-2.105 4.5-4.622c0-4.046-2.975-4.493-3.5-6.264z"></path>\n\t</symbol>\n\t<symbol id="txp_svg_popup" viewBox="0 0 20 20">\n\t\t<path d="M17 18H3c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h5c.6 0 1 .4 1 1s-.4 1-1 1H3v12h14v-3c0-.6.4-1 1-1s1 .4 1 1v3c0 1.1-.9 2-2 2zm2-10c0 .6-.4 1-1 1s-1-.4-1-1V5.4l-4.4 4.4c-.4.4-1 .4-1.4 0-.4-.4-.4-1 0-1.3L15.6 4H13c-.6 0-1-.4-1-1s.4-1 1-1h5c.5 0 .9.4 1 .9V8z"></path>\n\t</symbol>\n    <symbol id="txp_svg_hd" viewBox="0 0 28 28">\n        <path d="M13 6h-2.8c0.1 0.7 0.2 1.4 0.2 2.4v3.6H2.8V8.5c0-1 0-1.6 0.2-2.4H0.1c0.1 0.7 0.2 1.3 0.2 2.4v10.1c0 1.1 0 1.7-0.2 2.4h2.8c-0.1-0.8-0.2-1.3-0.2-2.4v-4.3h7.6v4.3c0 1.1 0 1.7-0.2 2.4H13c-0.1-0.8-0.2-1.3-0.2-2.4V8.5C12.8 7.4 12.9 6.8 13 6z"/>\n        <path d="M25.8 7.7C24.6 6.5 23.1 6 20.7 6h-3.4c-1.2 0-1.6 0-2.4-0.1 0.1 0.8 0.2 1.4 0.2 2.4v10.2c0 1.1 0 1.7-0.2 2.5 0.8 0 1.2-0.1 2.4-0.1h3.4c2.2 0 3.7-0.5 4.9-1.6 1.5-1.4 2.2-3.4 2.2-6C27.9 11 27.2 9 25.8 7.7zM23.9 17.6c-0.8 0.8-1.8 1.2-3.3 1.2h-3V8.3h3c1.6 0 2.6 0.3 3.4 1.1 0.9 0.9 1.3 2.2 1.3 4C25.3 15.2 24.8 16.6 23.9 17.6z"/>\n    </symbol>\n    <symbol id="txp_svg_lightning" viewBox="0 0 28 28">\n        <path d="M24 12.3c-0.1-0.1-0.1-0.1-0.2-0.1C23.7 12 23.5 12 23.4 12h-6.9l2.3-10c0-0.1 0-0.2 0-0.3 0-0.2-0.1-0.3-0.2-0.5 -0.3-0.3-0.7-0.3-1 0L4.2 14.8C4.1 14.9 4 15.1 4 15.3c0 0.2 0.1 0.4 0.2 0.5 0.1 0.1 0.3 0.2 0.5 0.2h7.1l-2.4 9.9c0 0.1 0 0.1 0 0.2 -0.1 0.3 0 0.5 0.2 0.7 0.1 0.1 0.3 0.2 0.5 0.2 0.2 0 0.4-0.1 0.5-0.2L24 13.2c0.1-0.1 0.2-0.3 0.2-0.5C24.2 12.6 24.1 12.4 24 12.3L24 12.3z"/>\n    </symbol>\n    <symbol id="txp_svg_vip_star_lg" viewBox="0 0 28 28">\n        <path d="M7.5 19.5C8.4 19.9 9.2 20 10 20c2.4 0 4.7-1 6.5-2.8 1.9-1.9 2.8-4.6 2.6-7.1l-1.4-0.2 -3.6-7.3L14 2.5c0 0-0.1 0-0.1 0.1l-3.6 7.3 -8.2 1.2c0 0-0.1 0-0.1 0.1v0.1l5.9 5.8L7.5 19.5zM7.3 20.6L6.6 25v0.1c0 0 0 0 0.1 0 0 0 0 0 0.1 0l6.5-3.5c-0.5 0.1-0.8 0.1-1.3 0.1C10.3 21.9 8.7 21.5 7.3 20.6zM18.7 19.2c-1.2 1.2-2.8 2-4.3 2.5l7 3.6c0 0 0 0 0.1 0h0.1c0 0 0.1-0.1 0-0.1l-1.3-7.9C19.8 17.9 19.3 18.6 18.7 19.2zM25.9 11.1l-4.7-0.7c0.5 2.2 0.1 4.4-1 6.5l5.8-5.5C26 11.3 26 11.3 25.9 11.1 26 11.1 25.9 11.1 25.9 11.1z"/>\n    </symbol>\n    <symbol id="txp_svg_clock" viewBox="0 0 28 28">\n        <path d="M14 0.5c-6.6 0-12 5.4-12 12 0 6.6 5.4 12 12 12 0.4 0 0.7 0 1.1-0.1 0.1 0 0.3 0.1 0.4 0.1 0.8 0 1.5-0.7 1.5-1.5 0-0.8-0.7-1.5-1.5-1.5 -0.1 0-0.1 0-0.2 0l0-0.1c-0.4 0.1-0.9 0.1-1.3 0.1 -5 0-9-4-9-9 0-5 4-9 9-9 5 0 9 4 9 9 0 2-0.7 3.9-1.8 5.4l0.2 0.1C21.1 18.3 21 18.6 21 19c0 0.8 0.7 1.5 1.5 1.5 0.8 0 1.4-0.6 1.5-1.4 1.3-1.9 2-4.2 2-6.6C26 5.9 20.6 0.5 14 0.5zM18.4 12.5h-3.1l-2.5-4.3c-0.4-0.7-1.3-0.9-2-0.5 -0.7 0.4-0.9 1.2-0.5 1.9l3 5.2c0.2 0.4 0.6 0.6 1 0.7 0.1 0 0.3 0.1 0.4 0.1h3.8c0.9 0 1.6-0.7 1.6-1.5C20 13.2 19.3 12.5 18.4 12.5z"/>\n    </symbol>\n    <symbol id="txp_svg_update" viewBox="0 0 28 28">\n        <path d="M13 16.4l0-5.9C13 9.7 13.7 9 14.5 9c0.8 0 1.5 0.6 1.4 1.4l0 4.6h2.4c0.9 0 1.6 0.7 1.6 1.5 0 0.8-0.7 1.5-1.6 1.5h-3.8c0 0-0.1 0-0.1 0 0 0 0 0 0 0 -0.8 0-1.5-0.6-1.5-1.4v0C13 16.5 13 16.5 13 16.4 13 16.5 13 16.5 13 16.4zM15 26c-6.7 0-12-5.4-12-12 0-1.9 0.4-3.7 1.2-5.2L2.9 9.1C2.1 9.3 1.3 8.8 1.1 8 0.9 7.2 1.3 6.4 2.1 6.2L7 4.9c0.8-0.2 1.6 0.3 1.8 1.1l1.3 4.8c0.2 0.8-0.3 1.6-1.1 1.8 -0.8 0.2-1.6-0.3-1.8-1.1l-0.4-1.4c-0.6 1.2-0.9 2.5-0.9 3.9 0 5 4 9 9 9 5 0 9-4 9-9 0-5-4-9-9-9 -0.1 0-0.1 0-0.2 0l0-0.1C14.6 5 14.6 5 14.5 5 13.6 5 13 4.3 13 3.5 13 2.7 13.6 2 14.5 2c0 0 0.1 0 0.1 0 0.1 0 0.3 0 0.4 0 6.7 0 12 5.4 12 12C27 20.6 21.6 26 15 26z"/>\n\t </symbol>\n\t <symbol id="txp_svg_close" viewBox="0 0 16 16">\n\t\t<path d="M9.275 8l4.461-4.461c0.352-0.352 0.352-0.923 0-1.275 -0.352-0.352-0.923-0.352-1.275 0L8 6.725 3.539 2.264c-0.352-0.352-0.923-0.352-1.275 0 -0.352 0.352-0.352 0.923 0 1.275L6.725 8l-4.461 4.461c-0.352 0.352-0.352 0.923 0 1.275 0.352 0.352 0.923 0.352 1.275 0L8 9.275l4.461 4.461c0.352 0.352 0.923 0.352 1.275 0 0.352-0.352 0.352-0.923 0-1.275L9.275 8z"></path>\n\t</symbol>\n\t<symbol id="txp_svg_icon_report" viewBox="0 0 20 20">\n\t\t<path d="M8 9c-.552 0-1-.448-1-1v-3c0-.552.448-1 1-1s1 .448 1 1v3c0 .552-.448 1-1 1zm0 3c-.552 0-1-.448-1-1s.448-1 1-1 1 .448 1 1-.448 1-1 1zm6.323-1.086c-.116.424-.487.742-.948.742-.552 0-1-.448-1-1 0-.148.036-.285.094-.412l-.019-.01c.34-.675.55-1.427.55-2.235 0-2.762-2.239-5-5-5-2.762 0-5 2.238-5 5 0 2.761 2.239 5 5 5 .766 0 1.484-.186 2.133-.494l.013.03c.128-.059.267-.097.417-.097.552 0 1 .448 1 1 0 .471-.332.847-.771.954-.858.378-1.795.608-2.792.608-3.866 0-7-3.134-7-7s3.134-7 7-7 7 3.134 7 7c-.001 1.047-.261 2.024-.677 2.914z"></path>\n\t</symbol>\n\t<symbol id="txp_svg_right_xs" viewBox="0 0 12 12">\n\t\t<path d="M4.4 10.4l-.8-.8L7.3 6 3.6 2.4l.8-.8 4 4L8 6l.4.4z"></path>\n\t</symbol>\n\t<symbol id="txp_svg_refresh" viewBox="0 0 20 20">\n\t\t<path d="M10 19a9 9 0 0 1-9-8.999V10a1 1 0 1 1 2 0 7 7 0 1 0 7-7 6.952 6.952 0 0 0-4.877 2H7a1 1 0 0 1 0 2H3a1 1 0 0 1-1-1V2a1 1 0 0 1 2 0v1.314A8.935 8.935 0 0 1 10 1c4.971 0 9 4.029 9 9s-4.029 9-9 9z"></path>\n\t</symbol>\n\t<symbol id="txp_svg_left_xs" viewBox="0 0 12 12">\n\t\t<path d="M7.7 10.4l-4-4 .4-.4-.4-.4 4-4 .8.8L4.8 6l3.7 3.6z"></path>\n\t</symbol>\n</svg>';
    }, 146: function (a, b) {
        var c = {};
        c[445] = c[444] = "\u7f51\u7edc\u8fde\u63a5\u4f3c\u4e4e\u51fa\u73b0\u95ee\u9898\uff0c", c[10001] = c[1] = c[2] = c[3] = c[4] = c[5] = c[30] = c[40] = c[41] = c[42] = c[50] = c[68] = "\u89c6\u9891\u83b7\u53d6\u9014\u4e2d\u51fa\u73b0\u95ee\u9898\uff0c", c.defaultMsg = c[51] = c[52] = c[61] = c[62] = c[63] = c[65] = c[66] = c[69] = c[71] = c[73] = c[74] = c[76] = c[77] = c[81] = c[82] = c[86] = c["80.10"] = c[94] = "\u8fd9\u4e2a\u89c6\u9891\u88ab\u5916\u661f\u4eba\u52ab\u8d70\uff0c\u6682\u65f6\u770b\u4e0d\u4e86\u4e86~", c[64] = c[100] = "\u5f88\u9057\u61be\uff0c\u5bf9\u6b64\u89c6\u9891\u7684\u8bbf\u95ee\u6682\u65f6\u53d7\u9650", c[80.3] = c["80.10"] = c[80.11] = c[84] = "\u6b64\u89c6\u9891\u5305\u542b\u654f\u611f\u4fe1\u606f\uff0c\u5df2\u88ab\u7ba1\u7406\u5458\u6349\u62ff~", c[80] = c[83] = "\u6682\u65f6\u6ca1\u6709\u83b7\u5f97\u8be5\u89c6\u9891\u7248\u6743\uff0c\u52aa\u529b\u4e3a\u60a8\u4e89\u53d6\u4e2d~", c[80.1] = "\u5f88\u62b1\u6b49\uff0c\u7531\u4e8e\u7248\u6743\u9650\u5236\uff0c\u60a8\u6240\u5728\u7684\u5730\u533a\u6682\u65f6\u65e0\u6cd5\u64ad\u653e\u8be5\u89c6\u9891", c[80.2] = "\u5f88\u62b1\u6b49\uff0c\u8be5\u89c6\u9891\u6682\u65e0\u64ad\u653e\u7248\u6743", c[80.7] = c[80.9] = "\u6682\u65f6\u6ca1\u6709\u83b7\u5f97\u8be5\u89c6\u9891\u7248\u6743\uff0c\u52aa\u529b\u4e3a\u60a8\u4e89\u53d6\u4e2d~", c[69.4] = c[80.14] = c[-11111] = "\u5e94\u7248\u6743\u65b9\u8981\u6c42\u672c\u7247\u91c7\u7528\u52a0\u5bc6\u683c\u5f0f\uff0c\u6b64\u6d4f\u89c8\u5668\u6682\u4e0d\u652f\u6301\u64ad\u653e", c.adblock = "\u64ad\u653e\u5185\u5bb9\u88abadblock\u8bef\u62e6\u622a\u4e86\uff0c\u8bf7\u60a8\u5173\u95ed\u63d2\u4ef6\uff0c\u6216\u4f7f\u7528\u4e0b\u5217\u65b9\u5f0f\u89c2\u770b\uff1a", c.getPlatformErrorCode = function (a, b, c) {
            var d = "-", e = "-", f = "-";
            return c = c || "00", d = Txplayer.util.os.mac ? "62" : Txplayer.util.os.windows ? "61" : "66", "getinfo" === a ? e = "101" : "getkey" === a ? e = "102" : "ad" === a ? e = "215" : "player" === a && (e = "200"), "neterror" === b ? f = "140" : "cgiInnerError" === b ? (f = "13", c && (c = "" + c), 2 === c.length && (c = "0" + c)) : "h5video" === b ? f = "111" : "aderror" === b && (f = "150"), Txplayer.util.localLog && Txplayer.util.localLog("VIDEO_ERROR", {
                platform: d,
                type: e,
                module: f,
                code: c
            }), d + e + "." + f + c
        }, a.exports = c
    }, 147: function (a, b) {
        !function (a, b) {
            b(a, jQuery)
        }("undefined" != typeof window ? window : this, function (a, b, c) {
            "use strict";

            function d() {
                "hidden" !== e && (g.hidden = i.pageVisibility ? g[e] : c)
            }

            for (var e, f, g = a.document, h = ["webkit", "o", "ms", "moz", ""], i = b.support || {}, j = ("onfocusin" in g && "hasFocus" in g ? "focusin focusout" : "focus blur"); (f = h.pop()) !== c;) if (e = (f ? f + "H" : "h") + "idden", i.pageVisibility = g[e] !== c, i.pageVisibility) {
                j = f + "visibilitychange";
                break
            }
            d(), b(/blur$/.test(j) ? a : g).on(j, function (a) {
                var c = a.type;
                b(g).triggerHandler(e && g[e] || /^(?:blur|focusout)$/.test(c) ? "hide" : "show"), d()
            })
        })
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(268)
    }, 268: function (a, b, c) {
        function d(a) {
            f = Txplayer.$, this.msg = new Txplayer.Events, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.util, f = Txplayer.$;
        d.prototype = {
            init: function () {
                this.updatePlayListIndex(0), this.setPlayState(-1), this.context.dataset.playbackRate = 1, this.context.dataset.videoCurrentTime = 0, this.dataset.retryTimes = 0, this.dataset.saveRetryTimes = 0, this.dataset.hlsRetryTimes = 0, this.write(), this.addEventListener(), this.exportsModuleApis(), this.loadSubPlugins(), this.resetVideoStatus()
            }, loadSubPlugins: function () {
                var a = [];
                this.context.pluginConfig && "array" === f.type(this.context.pluginConfig.subPlugins) && (a = this.context.pluginConfig.subPlugins.slice(0));
                var b = {
                    msg: this.context.msg,
                    userMsg: this.context.userMsg,
                    dataset: this.context.dataset,
                    userApi: this.context.userApi,
                    $mod: {$videomod: this.dataset.$videomod}
                };
                e.loadPlugins.call(this, a, b)
            }, remove: function () {
                this.dataset.$videomod.remove()
            }, addEventListener: function () {
                this.initVideoEvents(), this.dealFilmMsgMoudle()
            }, exportsModuleApis: function () {
                this.initUserApis(), this.initPrivateMsg(), this.initDataApis()
            }
        }, e.extend(d.prototype, c(269)), e.extend(d.prototype, c(271)), e.extend(d.prototype, c(272)), e.extend(d.prototype, c(273)), e.extend(d.prototype, c(274)), e.extend(d.prototype, c(275)), e.extend(d.prototype, c(276)), e.extend(d.prototype, c(277)), e.extend(d.prototype, c(278)), e.extend(d.prototype, c(279)), e.extend(d.prototype, c(280)), e.extend(d.prototype, c(281)), e.extend(d.prototype, c(282)), e.extend(d.prototype, c(283)), Txplayer.register("v4HdPlayer", d)
    }, 269: function (a, b, c) {
        var d = c(270);
        a.exports = {
            write: function () {
                this.dataset.hasVideoHtmlWrited = !0, this.context.dataset.$playermod.append(this.buildHTML()), this.dataset.$videomod = this.context.dataset.$playermod.find('[data-role="' + this.dataset.renderData.videomod + '"]'), this.context.dataset.$videomod = this.dataset.$videomod, this.dataset.$video = this.dataset.$videomod.find("video"), this.context.userMsg.emit("write")
            }, buildHTML: function () {
                var a = this, b = {
                    videomod: "txp-video-wrapper",
                    data: {attrs: a.getAttrs().join(" "), videoStyle: a.getVideoStyles()}
                };
                this.dataset.renderData = b;
                var c = Txplayer.$.tmpl(d, b);
                return c
            }, getAttrs: function () {
                var a = {
                    isUsePlayinline: "webkit-playsinline",
                    isUseAirplay: "x-webkit-airplay",
                    isUseControl: 'controls="controls"',
                    isUsePreload: ['preload="auto"', 'preload="none"'],
                    muted: "muted",
                    isUseCrossOrigin: 'crossOrigin="anonymous"'
                }, b = [];
                for (var c in a) Txplayer.$.isArray(a[c]) ? this.context.config[c] === !0 ? b.push(a[c][0]) : b.push(a[c][1]) : this.context.config[c] === !0 && b.push(a[c]);
                return b
            }, setVideoClass: function (a) {
                if (a) {
                    var b = this;
                    "array" === Txplayer.$.type(a.removeList) && Txplayer.$(a.removeList).each(function (a, c) {
                        b.dataset.$video.hasClass(c) && b.dataset.$video.removeClass(c)
                    }), "array" === Txplayer.$.type(a.addList) && Txplayer.$(a.addList).each(function (a, c) {
                        b.dataset.$video.addClass(c)
                    })
                }
            }, getVideoStyles: function () {
                var a = [];
                return a.push("background-color:#000;width:100%;height:100%;"), a.join(";")
            }
        }
    }, 270: function (a, b) {
        a.exports = '<txpdiv data-role="<%=videomod%>" class="txp_video_container">\n  <video style="<%=data.videoStyle%>" <%=data.attrs%> data-role="txp_video_tag" />\n  <video style="<%=data.videoStyle%>" <%=data.attrs%> data-role="txp_video_tag" />\n</txpdiv>'
    }, 271: function (a, b) {
        var c = Txplayer.util, d = {};
        d.checkHlsHole = function (a) {
            var b = this;
            if (b.context.dataset.useChromeHls) {
                var d = 100, e = .5, f = 5e3, g = 0, h = 0, i = 0, j = function () {
                    var a = "11104.1";
                    b.context.msg.broadcast("destroyHlsPlayer", {msg: ""}), b.clearPlaylist(), b.context.dataset.currentTime && (b.context.dataset.connectionPlayTime = b.context.dataset.currentTime), delete b.context.dataset.hlsLoadStartTime, b.context.msg.broadcast("chromehlsErrorSwitchToHtml5hd", {code: a})
                }, k = function () {
                    return !(0 === a.readyState || a.buffered.length <= 0 || a.paused) && (i = a.buffered.start(0), a.currentTime < i && i >= e)
                }, l = function () {
                    b.dataset.intervalId > 0 && (clearInterval(b.dataset.intervalId), b.dataset.intervalId = 0)
                };
                l(), b.context.msg.off("videoTimeUpdate.checkHoleOver"), b.context.msg.off("vidChange.checkHoleOver"), b.context.msg.off("error.checkHoleOver"), b.dataset.intervalId = setInterval(function () {
                    if (a.ended || a.buffered.length > 0 && a.currentTime > a.buffered.start(0)) return void l();
                    if (k()) {
                        var d = window.performance.now();
                        if (!g) return void (g = d);
                        h = d - g, c.v4log("\u68c0\u67e5hls\u8d77\u64adhole, stall " + h), h > f && (l(), b.context.dataset.useChromeHls && (c.v4log("\u68c0\u67e5hls\u8d77\u64adhole\uff0chole\u957f\u5ea6\u4e3a" + i + ", \u73b0\u5728\u5f00\u59cb\u5207\u6362mp4\u64ad\u653e"), j()))
                    }
                }, d), b.context.msg.on("videoTimeUpdate.checkHoleOver", l), b.context.msg.on("vidChange.checkHoleOver", l), b.context.msg.on("error.checkHoleOver", l)
            }
        }, a.exports = d
    }, 272: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            videoHelper: function (a, b, d) {
                if (!(a && a.error && a.error.code && "pause" === b)) {
                    d = d || [];
                    var e, f = "play" === b, g = this, h = function () {
                        var c;
                        if (!f || !a || a.paused) return c = d && d.length ? a[b].apply(a, d) : a[b]()
                    };
                    if (e = h(), e && e.then) this.dataset.videoDef = e, e.then(function () {
                        g.dataset.videoDef = null
                    })["catch"](function (a) {
                        c.showError("[videoHelper error]", a), g.dataset.videoDef = null
                    }); else {
                        if (this.dataset.videoDef) return;
                        h()
                    }
                    return e
                }
            }, stopVideo: function (a) {
                a && (Txplayer.$(a).removeAttr("src"), a.load && a.load())
            }, updateCurrentVideoUrl: function (a) {
                a && (a.indexOf("blob:") > -1 || a.indexOf("mediasource:") > -1 || (this.context.dataset.currentVideoUrl = a))
            }, updateVideoStatus: function (a, b) {
                a && (a.status = b)
            }, getVideoBufferedTime: function (a) {
                if (a = a || {}, this.isChrome56WithBugOfMp4()) return 0;
                var b = a.video;
                if (!b || !b.buffered || !b.buffered.length) return 0;
                var c = 0, d = b.currentTime, e = b.buffered.length;
                if (1 === e) c = b.buffered.end(0); else for (var f = 0, g = e; f < g; f++) if (d >= b.buffered.start(f) && d <= b.buffered.end(f)) if (g > f + 1) for (var h = f + 1; h < g; h++) {
                    var i = b.buffered.start(h) - b.buffered.end(h - 1);
                    if (!(0 <= i && i <= .2)) {
                        c = b.buffered.end(h - 1);
                        break
                    }
                    c = b.buffered.end(h)
                } else c = b.buffered.end(f);
                return c
            }, resetVideoStatus: function () {
                var a = this;
                this.dataset.$video.each(function (b, c) {
                    c.index = b, 0 === b ? c.isFocus = !0 : c.isFocus = !1, a.updateVideoStatus(c, "IDLE"), c.src && a.stopVideo(c)
                }), this.updateVideoDisplay()
            }, updateVideoDisplay: function () {
                this.dataset.$video.each(function (a, b) {
                    b.isFocus === !0 ? b.style.display = "block" : b.style.display = "none"
                })
            }, setVideoPlayTime: function (a, b, c) {
                var d = Txplayer.$;
                if (c = "undefined" === d.type(c) || c, "number" === d.type(b) && !isNaN(b)) {
                    if (0 == b && c) return void (0 === this.context.dataset.playListIndex ? (this.seekTo(a, b), this.videoHelper(a, "play")) : this.videoHelper(a, "play"));
                    this.seekTo(a, b), c && this.videoHelper(a, "play")
                }
            }
        }
    }, 273: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            isFocusVideoBufferComplete: function (a) {
                if (this.isChrome56WithBugOfMp4()) return !1;
                var b = a || this.getFocusVideoTag(), c = this.getFocusVideoBuffer(a);
                return parseInt(b.duration) === parseInt(c) || parseInt(b.duration) === Math.ceil(c)
            }, checkTimeisInBufferdRange: function (a) {
                var b = this.getFocusVideoTag();
                if (!(b && b.buffered && b.buffered.length)) return !1;
                if (this.isChrome56WithBugOfMp4() && !this.context.dataset.useChromeHls) return 0 == a || Math.abs(b.currentTime - a) < 6 && Math.abs(b.currentTime - a) > 2;
                for (var c, d = 0, e = b.buffered.length; d < e; d++) if (c = b.buffered.end(d), c -= this.context.dataset.useHls ? 1 : 3, a >= b.buffered.start(d) && a <= c) return !0;
                return !1
            }, getFocusVideoTag: function () {
                var a;
                return this.dataset.$video.each(function (b, c) {
                    if (c.isFocus) return a = c, !1
                }), a
            }, getFocusVideoBuffer: function (a) {
                var b = a || this.getFocusVideoTag();
                return b && b.buffered && b.buffered.length ? b.buffered.end(b.buffered.length - 1) : 0
            }, clearFocusVideoUrl: function () {
                var a = this.getFocusVideoTag();
                this.videoHelper(a, "pause"), this.stopVideo(a), this.updateVideoStatus(a, "IDLE")
            }, isFocusVideoReady: function () {
                var a = this.getFocusVideoTag();
                return !(!a || !a.src)
            }, setFocusVideoPlay: function () {
                var a = this.getFocusVideoTag();
                a.src ? (this.videoHelper(a, "play"), this.updateVideoStatus(a, "PLAYING")) : c.showInfo("play fail, video.src is null!")
            }, setFocusVideoPause: function () {
                var a = this.getFocusVideoTag();
                a.src ? (this.dataset.cachePauseAction = !1, this.videoHelper(a, "pause"), this.updateVideoStatus(a, "PAUSE")) : ("undefined" == typeof a.src && (this.dataset.cachePauseAction = !0), c.showInfo("pause fail, video.src is null!"))
            }, setFocusVideoCurrentTime: function (a) {
                var b = Txplayer.$, c = Txplayer.util;
                c.v4log("setFocusVideoCurrentTime", a);
                var d = this.getFocusVideoTag(), e = this;
                return a.time > d.duration && !(e.context.dataset.useHls && c.browser.safari && a.time <= e.context.dataset.duration) ? void c.showError("setFocusVideoCurrentTime Error", "time=" + a.time + ",duration=" + d.duration) : this.context.dataset.useChromeHls ? (a.time && (this.context.dataset.videoCurrentTime = a.time), void (e.context.dataset.hlsLoadStartTime && e.context.dataset.hlsLoadStartTime == a.time ? a.autoplay && (e.dataset.cachePauseAction ? e.setFocusVideoPause() : e.videoHelper(d, "play")) : this.context.msg.broadcast("setHlsCurrenTime", {
                    video: d,
                    currentTime: a.time,
                    autoplay: a.autoplay
                }))) : void ("number" !== b.type(a.time) || isNaN(a.time) || (this.context.dataset.videoCurrentTime = a.time, this.setVideoPlayTime(d, a.time, a.autoplay)))
            }, setFocusVideoUrl: function (a) {
                var b = Txplayer.$, c = Txplayer.util;
                "string" === b.type(a) && (a = {url: a}), a.preload = a.preload || !0, a.autoplay = a.autoplay || !1;
                var d = this, e = d.getFocusVideoTag(), f = function (f) {
                    var g = "";
                    if (g = "string" === b.type(f) ? f : f.url, d.startBufferControl({
                        video: e,
                        src: g,
                        hlsLoadStartTime: d.context.dataset.hlsLoadStartTime
                    }), d.updateCurrentVideoUrl(g), d.context.dataset.useChromeHls && g && "function" == b.type(g.indexOf) && g.indexOf(".m3u8") != -1) {
                        !a.currentTime && d.context.dataset.hlsLoadStartTime && (a.currentTime = d.context.dataset.hlsLoadStartTime);
                        var h = [];
                        d.context.dataset.filmVideoData[0].urlArray.forEach(function (a, b) {
                            h.push(a.url)
                        }), d.context.msg.broadcast("loadHlsSource", {
                            p2pConfig: c.getP2pConfig(d.context),
                            src: g,
                            m3u8: f.m3u8,
                            byterate: a.byteRate,
                            video: e,
                            currentTime: a.currentTime,
                            autoplay: a.autoplay,
                            fromSetDefinition: a.fromSetDefinition,
                            m3u8Urls: h,
                            reason: "setFocusVideoUrl"
                        }), a.currentTime && (d.context.dataset.videoCurrentTime = a.currentTime)
                    } else {
                        if (d.context.dataset.hlsLoadStartTime && d.context.dataset.useHls && (a.currentTime = d.context.dataset.hlsLoadStartTime, d.context.dataset.videoCurrentTime = a.currentTime, g = g.split("#t=")[0] + "#t=" + Math.ceil(a.currentTime), d.updateCurrentVideoUrl(g), c.v4log("safari-hls setFocusVideoUrl dataset.hlsLoadStartTime", {
                            src: g,
                            hlsLoadStartTime: d.context.dataset.hlsLoadStartTime
                        })), e.src !== g && b(e).attr("src", g), a.preload) try {
                            d.videoHelper(e, "load")
                        } catch (i) {
                            c.showInfo(i, i.stack)
                        }
                        e.isFocus && (c.showInfo("setFocusVideoUrl.setUrlAndPlay.isFocus"), a.autoplay = !0), a.currentTime && !d.context.dataset.hlsLoadStartTime ? (d.context.dataset.videoCurrentTime = a.currentTime, d.setVideoPlayTime(e, a.currentTime, a.autoplay)) : a.autoplay && (d.context.dataset.videoCurrentTime = d.context.dataset.hlsLoadStartTime || 0, d.dataset.cachePauseAction ? d.setFocusVideoPause() : d.videoHelper(e, "play"))
                    }
                };
                a && a.hasOwnProperty("updateIndex") && this.updatePlayListIndex(a.updateIndex), "string" === b.type(a.url) ? f({
                    url: a.url,
                    m3u8: a.m3u8
                }) : "function" !== b.type(a.getUrlSync) || a.preloading ? a.preloading ? (d.context.msg.broadcast("showLoading"), c.showInfo("\u6b63\u5728\u9884\u52a0\u8f7d\u4e2d", a)) : c.showInfo("setFocusVideoUrl\u53c2\u6570\u9519\u8bef, \u627e\u4e0d\u5230getUrlSync", a) : (c.showInfo("setFocusVideoUrl.getUrlSync", "start"), a.getUrlSync().done(function (b) {
                    a.url = b, c.showInfo("setFocusVideoUrl.getUrlSync.setUrlAndPlay"), f(b)
                }).fail(function (a) {
                }));
                var g = this.getPreloadVideoTag();
                g === e && (g = this.dataset.$video[1]), g && g.src && this.clearPreloadVideoUrl()
            }
        }
    }, 274: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            isPreloadVideoBuffered: function () {
                var a = this.getPreloadVideoTag();
                return !!(a && a.buffered && a.buffered.length)
            }, clearPreloadVideoUrl: function () {
                var a = this.getPreloadVideoTag();
                this.videoHelper(a, "pause"), this.stopVideo(a), this.updateVideoStatus(a, "IDLE")
            }, getPreloadVideoTag: function () {
                var a = this.getFocusVideoTag(), b = this.dataset.$video.length, c = a.index, d = this,
                    e = function () {
                        return c++, c >= b && (c = 0), d.dataset.$video[c]
                    };
                return e()
            }, isPreloadVideoReady: function (a) {
                a = a || {};
                var b = this.getPreloadVideoTag();
                if (!b) return c.error("checkPreloadVideoStatus error: can not find preload video!"), !1;
                if (!b.src) return !1;
                if (this.context.dataset.playList[this.context.dataset.playListIndex + 1] && this.context.dataset.playList[this.context.dataset.playListIndex + 1].error) return !1;
                if ("PRELOADING" === b.status) return !0;
                if ("PRELOAD" === b.status) {
                    if (this.context.dataset.useChromeHls && (b.src.indexOf("blob:") > -1 || b.src.indexOf("mediasource:") > -1)) return !0;
                    var d = b.src, e = this.context.dataset.playListIndex + 1;
                    a.isPreloadFirstFilm && (e = this.context.dataset.playListIndex), e >= this.context.dataset.playList.length && (e = 0);
                    var f = this.context.dataset.playList[e];
                    return d = d.split("#t=")[0], d === f.url
                }
                return !1
            }, setPreloadVideoPlay: function (a) {
                a = a || {};
                var b = this.getPreloadVideoTag(), d = this.getFocusVideoTag();
                d === b && (d = this.dataset.$video[1]);
                var e = a.currentTime || b.currentTime;
                if (b && d) {
                    if (!b.src) return void c.error("\u64ad\u653e\u5931\u8d25\uff1a\u9884\u52a0\u8f7d\u7684\u89c6\u9891\u6ca1\u627e\u5230\u64ad\u653e\u5730\u5740");
                    a.isPreloadFirstFilm || a.noUpdateIndex || this.updatePlayListIndex(this.context.dataset.playListIndex + 1), this.updateCurrentVideoUrl(this.context.dataset.playList[this.context.dataset.playListIndex].url), this.resetPlayListStatus("preloading"), d.isFocus = !1, b.isFocus = !0, this.updateVideoDisplay(), this.updateVideoStatus(b, "PLAYING"), this.updateVideoStatus(d, "IDLE"), this.videoHelper(d, "pause"), Txplayer.$(d).removeAttr("src"), "number" === Txplayer.$.type(e) && this.setFocusVideoCurrentTime({
                        time: e,
                        autoplay: !0
                    }), this.context.dataset.hasCallShowUIVipGuide = !1
                }
            }, setPreloadVideoUrl: function (a) {
                var b, c = this, d = Txplayer.$, e = Txplayer.util;
                a = a || {};
                var f = function () {
                    return "string" === d.type(a) || !("object" !== d.type(a) || !a.url)
                };
                if ((a.isPreloadFirstFilm || !this.isTheLastFilm() || f()) && this.context.dataset.playList) {
                    var g = this.getPreloadVideoTag(), h = this.context.dataset.playListIndex + 1;
                    a.isPreloadFirstFilm && (h = 0), h >= this.context.dataset.playList.length && (h = this.context.dataset.playListIndex);
                    var i = function (b) {
                        var f = "";
                        if (f = "string" === d.type(b) ? b : b.url, c.startBufferControl({
                            video: g,
                            src: f,
                            hlsLoadStartTime: c.context.dataset.hlsLoadStartTime
                        }), c.updateVideoStatus(g, "PRELOAD"), c.context.dataset.useChromeHls && f && "function" == d.type(f.indexOf) && f.indexOf(".m3u8") != -1) {
                            c.context.dataset.hlsLoadStartTime && (a.currentTime = c.context.dataset.hlsLoadStartTime);
                            var h = [];
                            c.context.dataset.filmVideoData[0].urlArray.forEach(function (a, b) {
                                h.push(a.url)
                            }), c.context.msg.broadcast("loadHlsSource", {
                                p2pConfig: e.getP2pConfig(c.context),
                                src: f,
                                m3u8: b.m3u8,
                                currentTime: a.currentTime,
                                video: g,
                                m3u8Urls: h,
                                reason: "setPreloadVideoUrl"
                            })
                        } else {
                            a.isPreloadFirstFilm && c.context.msg.broadcast("setPreloadVideoUrlReport"), c.context.dataset.hlsLoadStartTime && c.context.dataset.useHls && (a.currentTime = c.context.dataset.hlsLoadStartTime, c.context.dataset.videoCurrentTime = a.currentTime, f = f.split("#t=")[0] + "#t=" + Math.ceil(a.currentTime), e.v4log("safari-hls setPreloadVideoUrl dataset.hlsLoadStartTime", {
                                src: f,
                                hlsLoadStartTime: c.context.dataset.hlsLoadStartTime
                            })), d(g).attr("src", f);
                            try {
                                c.videoHelper(g, "load")
                            } catch (i) {
                                e.showInfo(i, i.stack)
                            }
                        }
                        g.isFocus && (e.showInfo("setPreloadVideoUrl.setUrlAndPlay.videoIsFocus"), a.autoplay = !0), f != c.context.dataset.playList[c.context.dataset.playListIndex].url || a.isPreloadFirstFilm || (a.autoplay = !0, a.noUpdateIndex = !0), a.autoplay && c.setPreloadVideoPlay(a), c.context.dataset.preloadStartTime = +new Date
                    };
                    b = a.url || this.context.dataset.playList[h];
                    var j = a.m3u8 || d.type("string" !== this.context.dataset.playList[h]) && this.context.dataset.playList[h].m3u8 || "";
                    "string" === d.type(b) ? i({
                        url: b,
                        m3u8: j
                    }) : b && b.url && !a.preload && b.url !== g.src ? (b.preloading = !0, i({
                        url: b.url,
                        m3u8: j
                    })) : b && "function" === d.type(b.getUrlSync) && "PRELOADING" != g.status && (c.updateVideoStatus(g, "PRELOADING"), b.getUrlSync().done(function (c) {
                        b.url = c, e.showInfo("setPreloadVideoUrl.setUrlAndPlay", a), i(c)
                    }).fail(function (a) {
                        c.updateVideoStatus(g, "IDLE")
                    }))
                }
            }
        }
    }, 275: function (a, b) {
        function c() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onLoadedmetadata", {isFocus: a.isFocus}), a.isFocus && this.context.msg.broadcast("videoLoadedMetaData", {videoTag: a})
        }

        function d() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onCanplay", {isFocus: a.isFocus}), this.context.msg.broadcast("videoCanplay", {
                videoTag: a,
                playListType: this.context.dataset.currentPlayListType,
                index: this.context.dataset.playListIndex,
                isFocus: a.isFocus,
                src: a.src
            }), s.browser.safari && this.context.msg.broadcast("hideLoading"), this.context.dataset.videoDuration = a.duration
        }

        function e() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onCanplayThrough", {isFocus: a.isFocus}), a.isFocus && this.context.msg.broadcast("onCanplayThrough", {videoTag: a})
        }

        function f() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onPlay", {
                isFocus: a.isFocus,
                src: a.src
            }), a.src && a.isFocus && (this.context.msg.broadcast("videoPlay", {
                videoTag: a,
                playListType: this.context.dataset.currentPlayListType,
                index: this.context.dataset.playListIndex
            }), this.startWaitingFinder(), this.startVideoPlayingOnBadNet(), this.checkHlsHole(a))
        }

        function g() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            a.isFocus && (this.context.msg.broadcast("videoProgress", {videoTag: a}), a.buffered && a.buffered.length && a.buffered.end(a.buffered.length - 1) === a.duration && this.dataset.prevBuffered !== a.buffered.end(a.buffered.length - 1) && (this.dataset.prevBuffered = a.buffered.end(a.buffered.length - 1), s.v4log("videoProgressDone", {
                isFocus: a.isFocus,
                Buffered: this.dataset.prevBuffered
            }), this.context.msg.broadcast("videoProgressDone", {
                videoTag: a,
                playListIndex: this.context.dataset.playListIndex,
                playListType: this.context.dataset.currentPlayListType
            })))
        }

        function h() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onWaiting", {isFocus: a.isFocus}), a.isFocus && (this.context.msg.broadcast("videoWaiting", {
                videoTag: a,
                index: this.context.dataset.playListIndex,
                playListType: this.context.dataset.currentPlayListType,
                seeking: a.seeking
            }), this.setPlayState(3))
        }

        function i() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onSeeking", {isFocus: a.isFocus}), a.isFocus && (this.context.dataset.isVideoSeeking = !0, this.context.msg.broadcast("videoSeeking", {
                videoTag: a,
                index: this.context.dataset.playListIndex,
                playListType: this.context.dataset.currentPlayListType,
                seeking: !0
            }))
        }

        function j() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onSeeked", {isFocus: a.isFocus}), a.isFocus && (this.context.dataset.isVideoSeeking = !1, this.context.msg.broadcast("videoSeeked", {
                videoTag: a,
                index: this.context.dataset.playListIndex,
                playListType: this.context.dataset.currentPlayListType,
                seeking: !1
            }), (s.browser.ie && "edge" === s.browser.ie.version || s.browser.safari) && l.apply(this, Array.prototype.slice.call(arguments)))
        }

        function k() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            a.isFocus && this.context.dataset.playbackRate && a.playbackRate != this.context.dataset.playbackRate && (a.playbackRate = this.context.dataset.playbackRate)
        }

        function l() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            if (s.v4log("onPlaying", {isFocus: a.isFocus, src: a.src}), a.isFocus && a.src) {
                if (this.context.dataset.isPlayingAd) return s.v4log("pip pause>>>>"), void this.videoHelper(a, "pause");
                var b = this.context.dataset.playList[this.context.dataset.playListIndex];
                b && (this.resetPlayListStatus("playing"), this.resetPlayListStatus("ended"), b.playing = !0), this.dataset.retryTimes = 0, this.dataset.hlsRetryTimes = 0, this.updateVideoStatus(a, "PLAYING"), this.setPlayState(1), this.context.msg.broadcast("videoPlaying", {
                    videoTag: a,
                    playListType: this.context.dataset.currentPlayListType,
                    index: this.context.dataset.playListIndex
                }), this.setVideoPlaybackRate(), this.context.dataset.isSkippingTime || (this.context.dataset.isVideoSeeking = !1), this.context.dataset.isSkippingTime = !1
            }
        }

        function m() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onPause", {isFocus: a.isFocus}), a.isFocus && (this.updateVideoStatus(a, "PAUSE"), this.context.dataset.isMinbufferControlPause || (this.context.msg.broadcast("videoPause", {
                videoTag: a,
                playListType: this.context.dataset.currentPlayListType,
                index: this.context.dataset.playListIndex,
                end: a.ended
            }), a.ended || this.setPlayState(2)))
        }

        function n() {
            var a = this.context.dataset.playList[this.context.dataset.playListIndex + 1];
            if (a && !a.preloading) {
                var b = 0;
                if (this.context.dataset.canPlayTime) {
                    for (var c = 0; c <= this.context.dataset.playListIndex + 1; c++) b += parseInt(this.context.dataset.playList[c].data.duration, 10);
                    if (b > this.context.dataset.canPlayTime) return
                }
                (this.isFocusVideoBufferComplete() || this.isChrome56PlayAtTimeCount()) && (s.v4log("\u6b63\u5728\u81ea\u52a8\u9884\u52a0\u8f7d\u4e0b\u4e00\u8d34\u89c6\u9891"), this.setPreloadVideoUrl(), a.preloading = !0)
            }
        }

        function o() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            if (!a.isFocus) return s.v4log("\u9884\u52a0\u8f7d\u7684\u89c6\u9891\u53d1\u73b0\u64ad\u653e \u7acb\u9a6c\u6682\u505c"), void this.videoHelper(a, "pause");
            var b = parseInt(a.currentTime);
            if (b && b !== this.dataset.prevCurrentTime) {
                this.dataset.prevCurrentTime = b;
                var c = this.getPlayListDurationFromGetinfo();
                if (!this.context.dataset.useHls && this.context.dataset.filmVideoData && this.context.dataset.filmVideoData.length > 1 && s.browser.chrome && c > -1 && a.currentTime - c > .2 && !a.ended) return this.context.dataset.videoCurrentTime = c, this.videoHelper(a, "pause"), void Txplayer.$(a).trigger("ended", {from: "timeupdate"});
                this.context.dataset.videoCurrentTime = a.currentTime > c && c > -1 ? c : a.currentTime, 0 == this.context.dataset.videoCurrentTime && (this.context.dataset.videoCurrentTime = this.context.dataset.currentTime || 0);
                var d = this.getVideoBufferedTime({video: a});
                this.context.dataset.bufferHealth = d - a.currentTime < 0 ? 0 : parseInt(d - a.currentTime), this.context.dataset.videoBufferedTime = d, this.context.dataset.bufferedTime = this.getBufferdTime(), n.call(this);
                var e = this.isTheLastFilm(), f = !0,
                    g = this.context.dataset.useHls && s.isTimeInHlsAdRange(this.context.dataset.videoCurrentTime, this.context, f);
                g || (this.context.msg.broadcast("videoTimeUpdateWithHlsAd", {
                    videoTag: a,
                    playListType: this.context.dataset.currentPlayListType,
                    isTheLastFilm: e,
                    time: this.context.dataset.currentTimeWithHlsAd
                }), this.context.msg.broadcast("videoTimeUpdate", {
                    videoTag: a,
                    playListType: this.context.dataset.currentPlayListType,
                    isTheLastFilm: e
                })), g !== this.context.dataset.isPlayingHlsAd && (this.context.dataset.isPlayingHlsAd = g, this.dataset.isFirstSwitchHls ? (s.v4log("switchHlsAd: ", g), this.context.msg.broadcast("switchHlsAd", g)) : this.dataset.isFirstSwitchHls = !0);
                try {
                    this.context.userMsg.broadcast("timeupdate", {
                        videoTag: a,
                        currentTimeWithHlsAd: this.context.dataset.currentTimeWithHlsAd,
                        currentTime: this.context.dataset.currentTime
                    })
                } catch (h) {
                }
            }
        }

        function p() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            s.v4log("onEnd", {isFocus: a.isFocus});
            var b = arguments && arguments[1] ? arguments[1] : {};
            if (a.isFocus) {
                if (this.context.dataset.isVideoSeeking = !1, a.duration === a.currentTime && a.currentTime < this.context.dataset.duration - 1 && this.context.dataset.useHls && s.browser.safari && !(this.context.dataset.canPlayTime && this.context.dataset.currentTime >= this.context.dataset.canPlayTime)) return void Txplayer.$(a).trigger("error");
                var c = this.context.dataset.playList[this.context.dataset.playListIndex];
                c && (this.resetPlayListStatus("playing"), this.resetPlayListStatus("ended"), c.ended = !0);
                var d = this.isTheLastFilm();
                d ? b.from && "skipPrelude" == b.from && (s.v4log("\u8df3\u8fc7\u7247\u5c3e\u4e3b\u52a8end", "video.pause"), a.pause()) : this.playTheNext(), this.updateVideoStatus(a, "IDLE"), s.v4log("broadcast-videoEnd", {
                    isTheLastFilm: d,
                    noHdAdPlugin: this.context.dataset.noHdAdPlugin || ""
                }), d && (this.context.dataset.isFilmEnded = !0), this.context.msg.broadcast("videoEnd", {
                    videoTag: a,
                    index: this.context.dataset.playListIndex,
                    playListType: this.context.dataset.currentPlayListType,
                    isTheLastFilm: d,
                    isAllEnd: !!(d && this.context.dataset.noHdAdPlugin || this.context.dataset.isEndingAdEnded),
                    from: b && b.from || "videoEvent"
                })
            }
        }

        function q(a, b, c) {
            var d = "";
            return a && a.detail ? "manifestLoadError" === a.detail || "levelLoadError" === a.detail ? (d = "05", d = Txplayer.v4errcode.getPlatformErrorCode("player", "h5video", d)) : "fragLoadError" === a.detail ? (d = "08", d = Txplayer.v4errcode.getPlatformErrorCode("player", "h5video", d)) : "manifestLoadLoadTimeOut" === a.detail || "levelLoadTimeOut" === a.detail ? (d = "06", d = Txplayer.v4errcode.getPlatformErrorCode("player", "h5video", d)) : "fragLoadTimeOut" === a.detail ? (d = "09", d = Txplayer.v4errcode.getPlatformErrorCode("player", "h5video", d)) : "timeout" === a.detail ? (d = "04", d = Txplayer.v4errcode.getPlatformErrorCode("player", "h5video", d)) : "keyIdChange" === a.detail && (d = "10", d = Txplayer.v4errcode.getPlatformErrorCode("player", "h5video", d)) : "film" == c && b.error && (d = Txplayer.v4errcode.getPlatformErrorCode("player", "h5video", "0" + (b.error.code - 1))), d
        }

        function r() {
            var a = arguments && arguments[0] && arguments[0].target ? arguments[0].target : {};
            this.context.dataset.videoWaitingReason = 3, s.v4log("onError", a.error ? a.error.code : "???", arguments);
            var b = arguments && arguments[1] ? arguments[1] : {},
                c = a.isFocus ? this.context.dataset.playListIndex : this.context.dataset.playListIndex + 1,
                d = a.error && a.error.code, e = 3 === d;
            !e || this.context.dataset.vid === u.vid && this.context.config.playerType === u.playerType || (u.vid = this.context.dataset.vid, u.playerType = this.context.config.playerType, u.errorCode = d, u.isDecodeError = e, u.decodeErrorCount = 0), e && "undefined" != typeof u.decodeErrorCount && (u.decodeErrorCount++, u.decodeErrorCount < this.context.config.globalRetryTimes), !a.isFocus && this.context.dataset.playList[this.context.dataset.playListIndex].preloading && (c = this.context.dataset.playListIndex);
            var f = this.context.dataset.playList[c];
            if (f) {
                var g = q(b, a, this.context.dataset.currentPlayListType);
                if (f.error = !0, f.errorCode = a.error && a.error.code, (a.isFocus || (this.context.dataset.useChromeHls || this.stopVideo(a), this.context.dataset.useHls)) && (this.context.msg.broadcast("reportVideoError", {
                    videoTag: a,
                    type: this.context.dataset.currentPlayListType,
                    index: this.context.dataset.playListIndex,
                    code: g || a.error && a.error.code || "",
                    url: b.url || f.url || a.src || "",
                    isFocus: a.isFocus
                }), !this.dataset.hasReportError)) {
                    if (this.dataset.retryTimes == this.context.config.globalRetryTimes || b.ckeyChange) return a._hlsDetail = b.detail || "", void this.triggerError(a, g, b);
                    if (a.isFocus && e && u.decodeErrorCount > this.context.config.globalRetryTimes) return void this.triggerError(a, g, b);
                    this.dataset.retryTimes++, 1 == this.dataset.retryTimes && (this.dataset.saveRetryTimes++, this.saveRetryTimes(!0)), s.v4log("retryTimes", {retryTimes: this.dataset.retryTimes}), s.v4log("video\u51fa\u9519\u91cd\u8bd5\uff0c\u672c\u6b21\u91cd\u8bd5\u539f\u56e0\uff1a" + v[d]), f.error = !1, this.context.msg.broadcast("retryUrlsWhenErr", {
                        currentTime: this.context.dataset.videoCurrentTime || 0,
                        index: this.context.dataset.playListIndex,
                        isFocus: a.isFocus
                    })
                }
            }
        }

        var s = Txplayer.util, t = {}, u = {}, v = {
            1: "\u8bf7\u6c42\u4e2d\u6b62",
            2: "\u7f51\u7edc\u51fa\u9519",
            3: "\u89e3\u7801\u51fa\u9519",
            4: "\u8d44\u6e90\u4e0d\u652f\u6301"
        };
        t.triggerError = function (a, b) {
            if (this.context.dataset.useChromeHls || !this.context.dataset.useChromeHls && this.context.dataset.useHls && s.browser.chrome) {
                var c = a.error && a.error.code || "", d = a.error && a.error.message || "";
                return this.context.msg.broadcast("destroyHlsPlayer", {msg: a._hlsDetail + ", code: " + c + ", message: " + d}), this.clearPlaylist(), this.context.dataset.currentTime && (this.context.dataset.connectionPlayTime = this.context.dataset.currentTime), this.dataset.hlsRetryTimes >= 2 ? (this.dataset.retryTimes = 0, s.v4log("chromehlsErrorSwitchToHtml5hd", {connectionPlayTime: this.context.dataset.connectionPlayTime}), delete this.context.dataset.hlsLoadStartTime, this.context.dataset.emeEnabled ? this.context.msg.broadcast("error", {
                    type: "hls",
                    code: -11111,
                    errCode: "-11111.2",
                    exem: -2
                }) : this.context.msg.broadcast("chromehlsErrorSwitchToHtml5hd", {code: b})) : (this.dataset.retryTimes = 0, s.v4log("chromehlsErrorSwitchToChromehls", {connectionPlayTime: this.context.dataset.connectionPlayTime}), this.context.msg.broadcast("chromehlsErrorSwitchToChromehls", {code: b})), void this.dataset.hlsRetryTimes++
            }
            var e = {};
            a && a.error ? e.code = a.error.code : e.code = 5, e.msg = Txplayer.v4errcode[e.code], e.type = this.context.dataset.currentPlayListType, e.videoTag = a, e.index = this.context.dataset.playListIndex, b && (e.errCode = b), e.flowId = this.context.dataset.flowid, s.v4log("broadcast:error", e), this.context.msg.broadcast("error", e);
            try {
                this.context.userMsg.broadcast("error", e)
            } catch (f) {
            }
            this.dataset.hasReportError = !0
        }, t.initVideoEvents = function () {
            this.dataset.$video.on("loadedmetadata", c.bind(this)).on("canplay", d.bind(this)).on("canplaythrough", e.bind(this)).on("play", f.bind(this)).on("playing", l.bind(this)).on("progress", g.bind(this)).on("pause", m.bind(this)).on("timeupdate", o.bind(this)).on("ended", p.bind(this)).on("error", r.bind(this)).on("waiting", h.bind(this)).on("seeking", i.bind(this)).on("seeked", j.bind(this)).on("ratechange", k.bind(this))
        }, a.exports = t
    }, 276: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            setVolume: function (a) {
                var b;
                if ("object" === Txplayer.$.type(a) ? b = a.volume : (b = a, a = {}), isNaN(b) || "number" !== Txplayer.$.type(b) || b > 100 && b < 0) return void c.showError("getVolume\u5931\u8d25", "player.setVolume(volume),volume\u5fc5\u987b\u4e3a0-100\u7684\u6574\u6570");
                0 == b ? this.mute({broadcast: !1, isUserAction: a.isUserAction}) : this.unMute({
                    broadcast: !1,
                    isUserAction: a.isUserAction
                }), this.dataset.$video.each(function (a, c) {
                    c.volume = b / 100
                });
                var d = b !== this.context.dataset.volume;
                this.context.dataset.volume = b, this.context.msg.broadcast("volumeChange", {
                    volume: b,
                    isUserAction: !!a.isUserAction
                });
                try {
                    d && this.context.userMsg.broadcast("volumeChange", {volume: b, isUserAction: !!a.isUserAction})
                } catch (e) {
                }
                a.showTips && this.context.msg.broadcast("showUiVolumeTip", {volume: b})
            }, getVolume: function () {
                return this.context.dataset.volume
            }, mute: function (a) {
                if (a = a || {}, a.hasOwnProperty("broadcast") || (a.broadcast = !0), this.dataset.$video.each(function (a, b) {
                    b.muted = !0
                }), this.context.dataset.muted = !0, a.broadcast) {
                    try {
                        this.context.userMsg.broadcast("volumeChange", {volume: 0, isUserAction: !!a.isUserAction})
                    } catch (b) {
                    }
                    this.context.msg.broadcast("volumeChange", {volume: 0, isUserAction: !!a.isUserAction})
                }
                a.showTips && this.context.msg.broadcast("showUiVolumeTip", {mute: !0})
            }, unMute: function (a) {
                if (a = a || {}, a.hasOwnProperty("broadcast") || (a.broadcast = !0), this.dataset.$video.each(function (a, b) {
                    b.muted = !1, b.removeAttribute("muted")
                }), this.context.dataset.muted = !1, a.broadcast) {
                    try {
                        this.context.userMsg.broadcast("volumeChange", {
                            volume: this.context.dataset.volume,
                            isUserAction: !!a.isUserAction
                        })
                    } catch (b) {
                    }
                    this.context.msg.broadcast("volumeChange", {
                        volume: this.context.dataset.volume,
                        isUserAction: !!a.isUserAction
                    })
                }
                a.showTips && this.context.msg.broadcast("showUiVolumeTip", {mute: !1})
            }, volumeUp: function (a) {
                var b = 5;
                "number" === Txplayer.$.type(a) && (b = parseInt(a));
                var c = this.getVolume();
                c += b, c > 100 && (c = 100), this.setVolume(c)
            }, volumeDown: function (a) {
                var b = 5;
                "number" === Txplayer.$.type(a) && (b = parseInt(a));
                var c = this.getVolume();
                c -= b, c < 0 && (c = 0), this.setVolume(c)
            }
        }
    }, 277: function (a, b) {
        function c() {
            var a = this;
            this.context.msg.on(d.getUniqueMsgKey("beforeVideoPlay"), function (b, c) {
                a.resetVideoStatus(), a.context.dataset.retryTimesInLast5Play = 0, a.context.dataset.bufferTimesInLast5Play = 0, a.updateMinBuffer(), a.dataset.saveRetryTimes = 0, a.dataset.retryTimes = 0, a.dataset.bufferTimes = 0, a.dataset.hasReportError = null, a.dataset.BUFFERINGTIME = 0, a.context.dataset.bufferHealth = null, a.context.dataset.videoCurrentTime = 0, a.context.dataset.videoBufferedTime = 0, a.context.dataset.bufferedTime = 0, a.context.dataset.bfTimeStart4564 = 0, a.context.dataset.bfTimeEnd4564 = 0, a.context.dataset.isVideoSeeking = !1, a.dataset.minBufferSpan = 1, a.context.dataset.isFilmEnded = !1, a.context.dataset.isEndingAdEnded = !1, a.context.dataset.loadEnoughBuffer = !1, a.context.dataset.isMinbufferControlPause = !1,
                    a.context.dataset.ckeytimeoutRetryCount = 0, a.context.dataset.adExtras = void 0, a.context.dataset.isPreloadFilm = !1, a.setPlayState(-1), a.context.msg.broadcast("destroyHlsPlayer", {msg: "player init"}), a.context.msg.off("videoWaiting.loadEnoughBuffer"), a.clearFocusVideoUrl(), a.clearPlaylist("vidEnd", c)
            }), this.context.msg.on(d.getUniqueMsgKey("beforeVideoRePlay"), function () {
                a.clearPlaylist("vidEnd", a.context.dataset.vid)
            }), this.context.msg.on("loadEnoughBuffer", function () {
                a.context.msg.off("videoWaiting.loadEnoughBuffer"), a.context.msg.on("videoWaiting.loadEnoughBuffer", function (b) {
                    if (!b.seeking && !a.context.dataset.isVideoSeeking && !(a.context.dataset.isDefinitionSwitching || a.dataset.retryTimes > 0)) {
                        a.dataset.bufferTimes++;
                        var c = a.getFocusVideoTag();
                        if (c) {
                            a.context.dataset.bfTimeStart4564 = a.getVideoBufferedTime({video: c});
                            var e = a.getVideoBufferedTime({video: c}),
                                f = e - c.currentTime < 0 ? 0 : parseInt(e - c.currentTime),
                                g = a.context.dataset.canPlayTime || c.duration;
                            d.v4log("\u7f13\u51b2\u7b56\u7565 - videoWaiting ", {
                                bufferHealth: f,
                                duration: g,
                                minBuffer: a.context.dataset.minBuffer,
                                bufferedTime: e
                            })
                        }
                        a.context.msg.off("videoCanplay.EndOfTs"), a.context.msg.on("videoCanplay.EndOfTs", function () {
                            if (a.context.msg.off("videoCanplay.EndOfTs"), a.context.dataset.useHls && !a.context.dataset.isVideoSeeking && !(a.context.dataset.isDefinitionSwitching || a.dataset.retryTimes > 0)) {
                                var b = a.getFocusVideoTag();
                                if (b) {
                                    var c = a.getVideoBufferedTime({video: b}),
                                        e = c - b.currentTime < 0 ? 0 : parseInt(c - b.currentTime),
                                        f = a.context.dataset.canPlayTime || b.duration;
                                    d.v4log("\u7f13\u51b2\u7b56\u7565 - videoCanplay ", {
                                        bufferHealth: e,
                                        duration: f,
                                        minBuffer: a.context.dataset.minBuffer,
                                        bufferedTime: c
                                    }), e < a.context.dataset.minBuffer && f - c > a.context.dataset.minBuffer && (a.context.msg.broadcast("pause", {from: "minbufferControl"}), a.context.dataset.isMinbufferControlPause = !0, a.context.msg.broadcast("minbufferControlStart"), a.context.msg.broadcast("showLoading"))
                                }
                            }
                        }), a.context.msg.off("videoPlaying.minbufferControl"), a.context.msg.on("videoPlaying.minbufferControl", function (b) {
                            if (a.context.dataset.useHls && (d.v4log("\u7f13\u51b2\u7b56\u7565-videoPlaying-before", {
                                seeking: a.context.dataset.isVideoSeeking,
                                isDefinitionSwitching: a.context.dataset.isDefinitionSwitching,
                                retryTimes: a.dataset.retryTimes
                            }), a.context.msg.off("videoPlaying.minbufferControl"), !a.context.dataset.isVideoSeeking && !(a.context.dataset.isDefinitionSwitching || a.dataset.retryTimes > 0))) {
                                a.dataset.endVideoWaitingTime = +new Date;
                                var c = b.videoTag, e = a.getVideoBufferedTime({video: c}),
                                    f = e - c.currentTime < 0 ? 0 : parseInt(e - c.currentTime);
                                f >= a.context.dataset.minBuffer && (a.context.dataset.isMinbufferControlPause = !1, a.context.dataset.bfTimeEnd4564 = e, a.context.dataset.videoWaitingReason = 1, a.context.msg.broadcast("minbufferControlEnd"))
                            }
                        })
                    }
                })
            }), this.context.msg.on("minbufferControlStart", function () {
                d.v4log("\u7f13\u51b2\u7b56\u7565-\u624b\u52a8\u6682\u505c\u4ee5\u540e-\u5f00\u59cb\u76d1\u542c\u4e0b\u8f7d\u4e8b\u4ef6minbufferControlStart"), a.context.msg.off("videoProgress.minbufferControl"), a.context.msg.on("videoProgress.minbufferControl", function (b) {
                    if (a.context.dataset.isMinbufferControlPause) {
                        var c = b.videoTag;
                        if (!a.context.dataset.useHls) return a.context.dataset.isMinbufferControlPause && (a.context.dataset.isMinbufferControlPause = !1, a.context.msg.broadcast("play", {from: "minbufferControl"})), d.v4log("\u7f13\u51b2\u7b56\u7565-chromehlsTomp4"), void a.context.msg.off("videoProgress.minbufferControl");
                        var e = a.getVideoBufferedTime({video: c});
                        a.context.dataset.bufferHealth = e - c.currentTime < 0 ? 0 : parseInt(e - c.currentTime), a.context.dataset.bufferHealth >= a.context.dataset.minBuffer ? (a.context.dataset.isMinbufferControlPause = !1, a.context.dataset.videoWaitingReason = 2, a.context.dataset.bfTimeEnd4564 = e, a.context.msg.broadcast("minbufferControlEnd"), a.context.msg.broadcast("play", {from: "minbufferControl"})) : a.context.msg.broadcast("showLoading"), d.v4log("\u7f13\u51b2\u7b56\u7565-\u4e0b\u8f7d\u8fdb\u5ea6videoProgress", {
                            bufferHealth: a.context.dataset.bufferHealth,
                            minBuffer: a.context.dataset.minBuffer,
                            isMinbufferControlPause: a.context.dataset.isMinbufferControlPause
                        })
                    }
                })
            }), this.context.msg.on("minbufferControlEnd", function () {
                a.context.msg.broadcast("hideLoading"), d.v4log("\u7f13\u51b2\u7b56\u7565-\u624b\u52a8\u6682\u505c\u6062\u590d\u64ad\u653e\u4ee5\u540e-\u7ed3\u675f\u76d1\u542c\u4e0b\u8f7d\u4e8b\u4ef6minbufferControlEnd"), a.context.msg.off("videoProgress.minbufferControl"), a.saveBufferTimes(!0), d.v4log("\u7f13\u51b2\u7b56\u7565-videoWaiting: ", {
                    minBuffer: a.context.dataset.minBuffer,
                    minBufferSpan: a.dataset.minBufferSpan
                }), a.context.dataset.minBuffer < 14 && (a.context.dataset.minBuffer += a.dataset.minBufferSpan, 1 === a.dataset.minBufferSpan && (a.dataset.minBufferSpan = 2))
            }), this.context.msg.on(d.getUniqueMsgKey("videoEnd"), function (b) {
                (b.isAllEnd || b.isTheLastFilm) && (a.updatePlayListIndex(0), a.clearPlaylist("vidEnd", a.context.dataset.vid), a.context.dataset.videoCurrentTime = 0, a.context.dataset.currentTime = 0, a.context.dataset.currentTimeWithHlsAd = 0, a.context.dataset.videoBufferedTime = 0, a.context.dataset.bufferedTime = 0), b.isAllEnd && b.isTheLastFilm && a.setPlayState(0), a.stopWaitingFinder(), a.stopVideoPlayingOnBadNet()
            }), this.context.msg.on(d.getUniqueMsgKey("error"), function (b) {
                a.clearFocusVideoUrl(), a.clearPlaylist("vidEnd", a.context.dataset.vid), a.stopVideoPlayingOnBadNet(), a.stopWaitingFinder()
            }), this.context.msg.on("filmVideoShow", function (b) {
                a.context.dataset.isPlayingAd = !1, a.context.msg.broadcast("isPlayingAdStatusChange", a.context.dataset.isPlayingAd, b), a.context.dataset.isPreloadFilm ? a.setFocusVideoPlay() : a.context.msg.broadcast("play", {isPreloadFirstFilm: !0})
            }), this.context.msg.on("filmVideoHide", function (b) {
                a.context.dataset.isPlayingAd = !0, a.context.msg.broadcast("isPlayingAdStatusChange", a.context.dataset.isPlayingAd, b), a.context.msg.broadcast("pause")
            })
        }

        var d = Txplayer.util;
        a.exports = {dealFilmMsgMoudle: c}
    }, 278: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            playTheNext: function () {
                if (!(this.context.dataset.canPlayTime >= this.context.dataset.currentTime)) {
                    if (this.isPreloadVideoReady()) return void this.setPreloadVideoPlay();
                    var a = this.context.dataset.playListIndex,
                        b = (this.context.dataset.playList[a], this.context.dataset.playList[a + 1]);
                    if (b) {
                        if (this.updatePlayListIndex(a + 1), b.error) return Txplayer.$(this.getFocusVideoTag()).trigger("error", {error: b.errorCode}), void this.resetPlayListStatus("error");
                        c.showInfo("playTheNext", b), b.autoplay = !0, this.setFocusVideoUrl(b), this.resetPlayListStatus("playing"), b.playing = !0
                    }
                }
            }, play: function (a) {
                if (this.context.dataset.playList && 0 != this.context.dataset.playList.length && !this.context.dataset.disableHotKey) {
                    var b = this.context.dataset.playList[this.context.dataset.playListIndex];
                    b && (a && "undefined" != typeof a.autoplay ? b.autoplay = a.autoplay : b.autoplay = !0, this.context.dataset.isDefinitionSwitching && this.context.dataset.useChromeHls && this.getFocusVideoTag().src && (b.playing = !0), b.playing && !b.error ? this.setFocusVideoPlay() : b.ended ? this.playTheNext() : b.error ? Txplayer.$(this.getFocusVideoTag()).trigger("error") : b.preloading && this.isPreloadVideoReady(a) ? this.setPreloadVideoPlay(a) : this.setFocusVideoUrl(b))
                }
            }, stop: function () {
                this.setFocusVideoPause(), this.resetVideoStatus(), this.clearPlaylist(), this.setPlayState(0, {reason: "stop"});
                var a = this;
                ["bufferedTime", "currentTime", "currentPlayListType", "currentDefinitionFormat", "currentDefinitionRate", "currentVideoUrl", "definition", "bufferHealth", "getinfoJSON", "isLoadingAdEmpty", "isDefinitionSwitching"].forEach(function (b) {
                    a.context.dataset[b] = null
                }), this.context.dataset.hasOwnProperty("isPlayingAd") && (this.context.dataset.isPlayingAd = !1), this.context.msg.broadcast("userStopVideo", {})
            }
        }
    }, 279: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            resetFocusVideoUrl: function (a, b) {
                var d = a.src;
                if (!this.context.dataset.useChromeHls && !isNaN(b)) {
                    c.v4log("resetFocusVideoUrl", {
                        time: b,
                        src: d
                    }), d = 0 == b ? d.split("#t=")[0] : d.split("#t=")[0] + "#t=" + Math.ceil(b), this.context.dataset.fairplay && this.context.dataset.fairplay.init();
                    try {
                        a.src = d, c.showInfo("resetFocusVideoUrl", d)
                    } catch (e) {
                    }
                }
            }, seekTo: function (a, b) {
                var d = this, e = Txplayer.$;
                if ("safarihls" === d.context.config.playerType && b > 0 && Math.abs(a.currentTime - b) >= 3) return e(a).on("playing.SafariHdPlayerSeekToPlayingHandler", function () {
                    e(a).off("playing.SafariHdPlayerSeekToPlayingHandler"), a.currentTime = b, d.videoHelper(a, "play")
                }), a.currentTime = b, void d.videoHelper(a, "play");
                var f = function () {
                    try {
                        if (d.checkTimeisInBufferdRange(b)) return d.context.dataset.useChromeHls ? void d.videoHelper(a, "play") : (a.currentTime = b, void d.videoHelper(a, "play"));
                        if (d.context.dataset.retrySeekTo || c.browser.ie) return delete d.context.dataset.retrySeekTo, a && a.duration && (a.currentTime = b, d.videoHelper(a, "play")), void e(a).on("playing.HdPlayerSeekToPlayingHandler", function () {
                            e(a).off("playing.HdPlayerSeekToPlayingHandler"), Math.abs(a.currentTime - b) >= 5 && (a.currentTime = b, d.videoHelper(a, "play"))
                        });
                        c.v4log("seekTo resetFocusVideoUrl\u8bbe\u7f6ecurrentTime"), d.resetFocusVideoUrl(a, b), d.videoHelper(a, "play")
                    } catch (f) {
                    }
                };
                f()
            }
        }
    }, 280: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            getPlayListDurationFromGetinfo: function () {
                var a = -1, b = this.context.dataset.playList[this.context.dataset.playListIndex];
                return b && b.data && b.data.duration && (a = parseFloat(b.data.duration)), a
            }, resetPlayListStatus: function (a) {
                a && Txplayer.$.each(this.context.dataset.playList || [], function (b, c) {
                    c.hasOwnProperty(a) && (c[a] = !1)
                })
            }, isTheLastOfPlayList: function () {
                if (!this.context.dataset.playList || 0 === this.context.dataset.playList.length) return !0;
                var a = this.context.dataset.playList[this.context.dataset.playListIndex + 1];
                return !a
            }, isTheLastFilm: function () {
                if (!this.context.dataset.playList || 0 === this.context.dataset.playList.length) return !0;
                var a = this.context.dataset.playList[this.context.dataset.playListIndex + 1];
                return !a || (a.vid != this.context.dataset.vid || !!(this.context.dataset.canPlayTime && this.context.dataset.canPlayTime >= this.context.dataset.currentTime))
            }, updatePlayListIndex: function (a) {
                c.showInfo("updatePlayListIndex", a), "number" !== Txplayer.$.type(a) || a < 0 || this.context.dataset.playList && this.context.dataset.playList.length && a >= this.context.dataset.playList.length || (this.context.dataset.playListIndex = a, this.context.dataset.currentPlayListType = "film")
            }, addUrls2Player: function (a) {
                var b = {}, d = this;
                if ("array" === Txplayer.$.type(a) && (b.data = a), "object" === Txplayer.$.type(a) && "array" === Txplayer.$.type(a.data) && (b = a), "array" !== Txplayer.$.type(b.data)) return void c.showInfo("addUrls2Player \u53c2\u6570\u9519\u8bef");
                if (d.context.dataset.playList && !b.clear || (d.context.dataset.playList = [], 0 !== d.context.dataset.playListIndex && d.updatePlayListIndex(0)), b.data && b.repalcePlayList === !0) {
                    var e = d.context.dataset.playList.length;
                    if (b.data.length === e) {
                        var f = 0;
                        Txplayer.$(d.context.dataset.playList).each(function (a, c) {
                            d.context.dataset.playList[a] = b.data[f], f++
                        })
                    } else 0 === e ? d.context.dataset.playList = d.context.dataset.playList.concat(b.data) : d.context.dataset.playList = b.data
                } else d.context.dataset.playList = d.context.dataset.playList.concat(b.data)
            }, clearPlaylist: function (a, b) {
                if (!this.context.dataset.playList) return void (this.context.dataset.playList = []);
                if ("vidEnd" === a && b) {
                    var c = [];
                    return Txplayer.$.each(this.context.dataset.playList, function (a, d) {
                        d.vid !== b && c.push(d)
                    }), this.context.dataset.playList = c, void this.updatePlayListIndex(0)
                }
                a || (this.context.dataset.playList = []), 0 !== this.context.dataset.playListIndex && this.updatePlayListIndex(0)
            }
        }
    }, 281: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            setPlayState: function (a, b) {
                if (b = b || {}, "number" === Txplayer.$.type(a) && a !== this.context.dataset.playState) {
                    this.context.dataset.playState = a, this.context.msg.broadcast("playStateChange", {
                        state: a,
                        vid: this.context.dataset.vid,
                        reason: b.reason || ""
                    });
                    try {
                        this.context.userMsg.broadcast("playStateChange", {
                            state: a,
                            vid: this.context.dataset.vid,
                            reason: b.reason || ""
                        })
                    } catch (c) {
                    }
                }
            }, getPlayState: function () {
                return this.context.dataset.playState
            }, setInternalPlaybackRate: function (a) {
                if (a >= 4 || a <= .4) return void this.context.msg.broadcast("showUiPlaybackRateTip", a);
                if (this.context.dataset.playbackRate !== a) {
                    a = Math.round(100 * a) / 100, this.context.dataset.playbackRate = a, this.setVideoPlaybackRate(a), this.context.msg.broadcast("showUiPlaybackRateTip", a), this.context.msg.broadcast("playbackRateChange", a);
                    try {
                        this.context.userMsg.broadcast("playbackRateChange", a)
                    } catch (b) {
                    }
                }
            }, setVideoPlaybackRate: function (a) {
                a = a || this.context.dataset.playbackRate, this.dataset.$video.each(function (b, c) {
                    c.playbackRate = a
                })
            }, getPlaybackRate: function () {
                return this.context.dataset.playbackRate
            }, setPlaybackRate: function (a) {
                this.context.msg.broadcast("setPlaybackRate", a)
            }, getAccurateTime: function () {
                var a = this.getFocusVideoTag();
                return a ? a.currentTime : 0
            }, isChrome56WithBugOfMp4: function () {
                return "chromehls" !== this.context.config.playerType && (this.context.dataset && this.context.dataset.filmVideoData && this.context.dataset.filmVideoData.length > 1 && c.browser.chrome && c.compareVersion(c.browser.chrome.version, "56.0.2924.10") > 0)
            }, isChrome56PlayAtTimeCount: function () {
                var a, b;
                return !!(this.isChrome56WithBugOfMp4() && (a = this.getPlayListDurationFromGetinfo(), b = this.getFocusVideoTag(), a - 30 <= b.currentTime && a > 0))
            }, getBufferdTime: function () {
                if (this.context.dataset.isPlayingAd) return 0;
                if (this.isChrome56WithBugOfMp4()) return 0;
                var a = this.context.dataset.playListIndex, b = 0;
                return Txplayer.$(this.context.dataset.filmVideoData).each(function (c, d) {
                    return c !== a && void (b += d.duration)
                }), b += this.context.dataset.videoBufferedTime
            }, saveRetryTimes: function (a) {
                if (this.context.dataset.useHls) {
                    var b = c.getData(Txplayer.dataset.localStorageKey.retryTimes) || "[]", d = JSON.parse(b);
                    if (a) {
                        var e = 0 == d.length ? 0 : d.length - 1;
                        d[e] = this.dataset.saveRetryTimes
                    } else {
                        6 == d.length && d.shift(), this.context.dataset.retryTimesInLast5Play = 0;
                        for (var f = 0; f < d.length; f++) this.context.dataset.retryTimesInLast5Play += d[f];
                        d.push(0)
                    }
                    c.v4log("\u7f13\u51b2\u7b56\u7565-saveRetryTimes", {
                        retryArray: d,
                        err: a
                    }), c.setData(Txplayer.dataset.localStorageKey.retryTimes, JSON.stringify(d))
                }
            }, saveBufferTimes: function (a) {
                if (this.context.dataset.useHls) {
                    var b = c.getData(Txplayer.dataset.localStorageKey.bufferTimes) || "[]", d = JSON.parse(b);
                    if (a) {
                        var e = 0 == d.length ? 0 : d.length - 1;
                        d[e] = this.dataset.bufferTimes
                    } else {
                        6 == d.length && d.shift(), this.context.dataset.bufferTimesInLast5Play = 0;
                        for (var f = 0; f < d.length; f++) this.context.dataset.bufferTimesInLast5Play += d[f];
                        d.push(0)
                    }
                    c.v4log("\u7f13\u51b2\u7b56\u7565-savebufferTimes", {
                        bufferTimes: d,
                        update: a
                    }), c.setData(Txplayer.dataset.localStorageKey.bufferTimes, JSON.stringify(d))
                }
            }
        }
    }, 282: function (a, b) {
        a.exports = {
            initUserApis: function () {
                var a = this;
                this.dataset.moduleApis = {}, this.dataset.moduleApis.mute = this.mute.bind(this), this.dataset.moduleApis.unMute = this.unMute.bind(this), this.dataset.moduleApis.isMuted = function () {
                    return !!a.context.dataset.muted
                }, this.dataset.moduleApis.getPlayerState = this.getPlayState.bind(this), this.dataset.moduleApis.setVolume = this.setVolume.bind(this), this.dataset.moduleApis.getVolume = this.getVolume.bind(this), this.dataset.moduleApis.volumeUp = this.volumeUp.bind(this), this.dataset.moduleApis.volumeDown = this.volumeDown.bind(this), this.dataset.moduleApis.getPlaybackRate = this.getPlaybackRate.bind(this), this.dataset.moduleApis.setPlaybackRate = this.setPlaybackRate.bind(this), this.dataset.moduleApis.setVideoPlaybackRate = this.setInternalPlaybackRate.bind(this), this.dataset.moduleApis.getAccurateTime = this.getAccurateTime.bind(this), this.dataset.moduleApis.stop = this.stop.bind(this), this.dataset.moduleApis.showPcClientPop = function (b) {
                    a.context.msg.broadcast("showPcClientPop", b)
                }, Txplayer.$.extend(this.context.userApi, this.dataset.moduleApis)
            }, initPrivateMsg: function () {
                var a = this;
                this.dataset.privateApis = {}, this.dataset.privateApis.setVolume = this.setVolume.bind(this), this.dataset.privateApis.mute = this.mute.bind(this), this.dataset.privateApis.unMute = this.unMute.bind(this), this.dataset.privateApis.setInternalPlaybackRate = this.setInternalPlaybackRate.bind(this), this.dataset.privateApis.addUrls2Player = this.addUrls2Player.bind(this), this.dataset.privateApis.play = this.play.bind(this), this.dataset.privateApis.pause = this.setFocusVideoPause.bind(this), this.dataset.privateApis.setFocusVideoCurrentTime = this.setFocusVideoCurrentTime.bind(this), this.dataset.privateApis.setFocusVideoUrl = this.setFocusVideoUrl.bind(this), this.dataset.privateApis.setPreloadVideoUrl = this.setPreloadVideoUrl.bind(this), this.dataset.privateApis.setVideoClass = this.setVideoClass.bind(this), Txplayer.$.each(this.dataset.privateApis, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }, initDataApis: function () {
                var a = this;
                this.dataset.dataApis = {}, this.dataset.dataApis.getFocusVideoTag = function (b, c) {
                    c.data = a.getFocusVideoTag()
                }, this.dataset.dataApis.checkTimeisInBufferdRange = function (b, c) {
                    c.data = a.checkTimeisInBufferdRange(b)
                }, Txplayer.$.each(this.dataset.dataApis, function (b, c) {
                    a.context.msg.setData(b, c)
                })
            }
        }
    }, 283: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            startBufferControl: function (a) {
                var b = this;
                if (!b.context.dataset.useHls) return void b.stopBufferControl();
                var c = Txplayer.util;
                if (b.context.dataset.loadEnoughBuffer) return void b.stopBufferControl();
                c.v4log("\u7f13\u51b2\u7b56\u7565-\u5f00\u59cb\u5b9a\u65f6\u5224\u65ad\u662f\u5426\u5230\u9996\u6b21\u53ef\u64ad\u72b6\u6001", a);
                var d = a.video || b.getFocusVideoTag();
                b.stopBufferControl(), this.dataset.bufferControl_TIMER = setInterval(function () {
                    if (d.buffered && d.buffered.length) {
                        var e = d.buffered.end(d.buffered.length - 1) - d.buffered.start(d.buffered.length - 1);
                        c.v4log("\u7f13\u51b2\u7b56\u7565-\u9996\u6b21\u52a0\u8f7dBuffer\u8fdb\u5ea6", {
                            hasBuffer: e,
                            minBuffer: b.context.dataset.minBuffer
                        }), c.v4log("step30-\u9996\u6b21\u52a0\u8f7dbuffer\u8fdb\u5ea6", {
                            hasBuffer: e,
                            minBuffer: b.context.dataset.minBuffer
                        }), e > 3 && (c.v4log("\u7f13\u51b2\u7b56\u7565-\u9996\u6b21\u52a0\u8f7dBuffer\u5b8c\u6210-\u629b\u51faloadEnoughBuffer\u4e8b\u4ef6"), b.context.msg.broadcast("loadEnoughBuffer", {src: a.src}), b.context.dataset.loadEnoughBuffer = !0, b.stopBufferControl())
                    }
                }, 100)
            }, stopBufferControl: function () {
                var a = this;
                a.dataset.bufferControl_TIMER && (clearInterval(a.dataset.bufferControl_TIMER), a.dataset.bufferControl_TIMER = null)
            }, updateMinBuffer: function () {
                var a = this;
                a.context.dataset.useHls && (0 == this.context.dataset.retryTimesInLast5Play && this.context.dataset.bufferTimesInLast5Play <= 3 ? this.context.dataset.minBuffer = 5 : this.context.dataset.retryTimesInLast5Play <= 2 && this.context.dataset.bufferTimesInLast5Play <= 6 ? this.context.dataset.minBuffer = 6 : this.context.dataset.retryTimesInLast5Play <= 3 && this.context.dataset.bufferTimesInLast5Play <= 10 ? this.context.dataset.minBuffer = 8 : (this.context.dataset.retryTimesInLast5Play > 3 || this.context.dataset.bufferTimesInLast5Play > 9) && (this.context.dataset.minBuffer = 10), a.context.msg.off("getVideoUrlSuccess.updateMinBuffer"), a.context.msg.once("getVideoUrlSuccess.updateMinBuffer", function () {
                    a.context.dataset.useHls && a.context.dataset.duration && a.context.dataset.duration < 600 && (a.context.dataset.minBuffer -= 2, c.v4log("\u7f13\u51b2\u7b56\u7565-updateMinBuffer-\u51cf2", {
                        minBuffer: a.context.dataset.minBuffer,
                        duration: a.context.dataset.duration || {}
                    }))
                }), c.v4log("\u7f13\u51b2\u7b56\u7565-updateMinBuffer", {
                    minBuffer: this.context.dataset.minBuffer,
                    duration: this.context.dataset.duration || {}
                }))
            }, startWaitingFinder: function () {
                this.dataset.waitingFinder_TIMER && this.stopWaitingFinder();
                var a = this.getFocusVideoTag();
                if (a) {
                    var b, c = this;
                    this.dataset.waitingFinder_TIMER = setInterval(function () {
                        if (a.isFocus || (a = c.getFocusVideoTag()), b !== a.currentTime || a.paused || a.ended) c.dataset.isBadNetWork && c.context.msg.broadcast("networkBadEnd", {
                            videoTag: a,
                            playListType: c.context.dataset.currentPlayListType,
                            index: c.context.dataset.playListIndex
                        }), c.dataset.isBadNetWork = !1; else {
                            if (c.dataset.isBadNetWork) return;
                            c.context.msg.broadcast("networkBadStart", {
                                videoTag: a,
                                playListType: c.context.dataset.currentPlayListType,
                                isOnWaiting: 3 === c.getPlayState(),
                                index: c.context.dataset.playListIndex
                            }), c.dataset.isBadNetWork = !0
                        }
                        b = a.currentTime
                    }, 1500)
                }
            }, stopWaitingFinder: function () {
                this.dataset.waitingFinder_TIMER && (clearInterval(this.dataset.waitingFinder_TIMER), this.dataset.waitingFinder_TIMER = null)
            }, startVideoPlayingOnBadNet: function () {
                this.dataset.keepPlaying_TIMER && this.stopVideoPlayingOnBadNet();
                var a, b, d, e = 0, f = this, g = 0, h = 0;
                this.dataset.keepPlaying_TIMER = setInterval(function () {
                    if (d = f.getFocusVideoTag(), 0 != f.context.dataset.playState && f.context.dataset.playState != -1 && 2 != f.context.dataset.playState && !d.error && d.src && !d.paused && !d.ended) {
                        if ("BUFFERING" === d.status) return void f.addBufferingTime(d);
                        a = f.getFocusVideoBuffer(), b = f.context.dataset.videoCurrentTime || 0, h === a && g === b ? (f.updateVideoStatus(d, "BUFFER-CONFORM"), e++) : (h = a, g = b, e = 0, f.updateVideoStatus(d, "PLAYING")), e < 5 || (f.updateVideoStatus(d, "BUFFERING"), f.context.dataset.useChromeHls || (c.v4log("\u7f13\u51b2\u63a7\u5236-startVideoPlayingOnBadNet-\u5361\u987f\u76d1\u542c\u8d85\u8fc75s-reloadFocusVideoUrl", {status: d.status}), f.resetFocusVideoUrl(d, b), f.videoHelper(d, "load"), f.videoHelper(d, "play")), e = 0, f.dataset.BUFFERINGTIME = 0)
                    }
                }, 1e3)
            }, addBufferingTime: function (a) {
                if (this.dataset.BUFFERINGTIME || (this.dataset.BUFFERINGTIME = 0), this.dataset.BUFFERINGTIME++, this.dataset.BUFFERINGTIME >= 30) {
                    if (this.context.dataset.useChromeHls && this.dataset.BUFFERINGTIME < 120) return;
                    Txplayer.util.v4log("triggererror", "startVideoPlayingOnBadNet"), Txplayer.$(a).trigger("error", {detail: "timeout"}), this.dataset.BUFFERINGTIME = 0
                }
            }, stopVideoPlayingOnBadNet: function () {
                this.dataset.keepPlaying_TIMER && (clearInterval(this.dataset.keepPlaying_TIMER), this.dataset.keepPlaying_TIMER = null)
            }
        }
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(241)
    }, 241: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = c(242);
        d.prototype = {
            init: function () {
                this.write(), this.addEventListerner()
            }, write: function () {
                var a = {shadow: "txp-shadow-mod"};
                this.dataset.renderData = a;
                var b = e.tmpl(g, a);
                this.context.$mod.$videomod.append(b), this.context.dataset.$shadow = this.context.$mod.$videomod.find("[data-role=" + a.shadow + "]")
            }, remove: function () {
                this.context.dataset.$shadow.remove()
            }, initHDPlayerEvent: function () {
                var a = 0, b = 400, c = !1, d = this, e = function () {
                    d.handlerClick()
                }, g = function () {
                    d.handlerDblClick()
                };
                this.context.dataset.$shadow.off("click.uishadow").off("dblclick.uishadow").on("click.uishadow", function (g) {
                    d.context.dataset.isRightClickMenu || (f.v4log("clickTigger: "), clearTimeout(a), a = setTimeout(function () {
                        c || e(), c = !1
                    }, b))
                }).on("dblclick.uishadow", function (a) {
                    c = !0, g()
                })
            }, handlerClick: function () {
                f.v4log("handlerClick: ");
                var a = this;
                try {
                    a.context.userMsg.broadcast("userClickPlayBtn")
                } catch (b) {
                }
                return a.context.dataset.getinfoJSON ? void (1 === a.context.dataset.playState ? (a.context.msg.broadcast("pause"), a.context.msg.broadcast("userPausePlayer"), a.context.userMsg.broadcast("pause")) : (a.context.msg.broadcast("playControl", {connectionPlayType: 1}), a.context.msg.broadcast("userPlayPlayer"))) : (a.context.msg.broadcast("beforeVideoRePlay"), a.context.msg.broadcast("playControl", {
                    playStartTime: a.context.dataset.playStartTime,
                    playEndTime: a.context.dataset.playEndTime,
                    vid: a.context.dataset.vid,
                    connectionPlayType: 1
                }), void a.context.msg.broadcast("userPlayPlayer"))
            }, handlerDblClick: function () {
                f.v4log("handlerDblClick: "), this.context.msg.broadcast("UiShadownDblClick")
            }, addEventListerner: function () {
                f.mobile || this.initHDPlayerEvent()
            }
        }, Txplayer.register("UiShadow", d)
    }, 242: function (a, b) {
        a.exports = '<txpdiv data-role="<%=shadow%>" class="txp_shadow"></txpdiv>'
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(106)
    }, 106: function (a, b, c) {
        function d() {
            var a = Array.prototype.slice.call(arguments);
            a.unshift("[adapter]"), /debug|debugad/.test(location.search) && window.console && window.console.log && window.console.log.apply(window.console, a)
        }

        function e(a) {
            f = Txplayer.$, this.context = a, this.context.adApi = {}, this.dataset = {
                loadingAdReporter: new j,
                adCreateParams: {},
                currentAdType: "",
                currentVideoAdType: "",
                videoEndForInsertAd: !1,
                adFirstPlay: !0,
                adMsg: new Txplayer.Events,
                adapterApi: {},
                adapterEvent: {},
                adEvent: {},
                adPlayer: null,
                waitForReport: {},
                adplayerLoadError: !1,
                startLoadAdMap: {}
            }, this.context.dataset.isPlayingAd = !1, this.init()
        }

        var f, g = Txplayer.util, h = c(107), i = c(108), j = c(109), k = h.getPfEx(g), l = i.AD_TYPE,
            m = i.PLAYER_STATE, n = i.AD_EVENT, o = g.getUniqueMsgKey, p = e.prototype;
        p.init = function () {
            this.render(f), this.initAdapterApi(), this.initAdapterEvent(), this.initAdEvent(), this.exportsAdApis()
        }, p.render = c(110), p.initAdapterApi = function () {
            var a = this.dataset.adapterApi, b = this, c = this.context;
            a.makeAdPlayer = function (a, c) {
                function e() {
                    if (!b.dataset.adPlayer) {
                        a.authData = b.context.dataset.txplayerAuth.raw();
                        try {
                            c(new window.TxpCreativePlayer(a))
                        } catch (e) {
                            d(e)
                        }
                    }
                }

                "undefined" != typeof window.TxpCreativePlayer ? e() : (d("pluginReady: ", window.TxpCreativePlayer), b.context.msg.on(o("pluginReady"), function (a) {
                    d("pluginReady: ", a), "TxpCreativePlayer" === a.name && "undefined" != typeof window.TxpCreativePlayer && e()
                }), b.dataset.adplayerLoadTimeHandler || (b.dataset.adplayerLoadTimeHandler = setTimeout(function () {
                    Txplayer.dataset.ready && "undefined" == typeof window.TxpCreativePlayer && (b.dataset.adplayerLoadError = !0, c())
                }, 5e3)))
            }, a.initAd = function () {
                var a = h.getPu(b.context.config);
                try {
                    b.dataset.adPlayer && "function" === f.type(b.dataset.adPlayer.init) && b.dataset.adPlayer.init({
                        playerData: {
                            playerPlatform: c.dataset.platform,
                            playerWidth: c.dataset.playerWidth,
                            playerHeight: c.dataset.playerHeight,
                            playerLeft: 0,
                            playerTop: 0,
                            playtime: 0,
                            playerEndTime: b.context.dataset.playEndTime || c.dataset.duration,
                            playerDuration: c.dataset.duration,
                            playerFrom: h.getPlayerFrom(g),
                            playerPf: h.getPf(b.getAdChannelId()),
                            playerPfEx: k,
                            playerVersion: Txplayer.dataset.ver,
                            playerCid: c.dataset.cid || "",
                            playerVid: c.dataset.vid,
                            playerFlowid: c.dataset.flowid || "",
                            playerGuid: c.dataset.guid || "",
                            playerChid: b.getAdChannelId(),
                            playerTpid: c.dataset.tpid,
                            playerPt: c.dataset.businessId || "",
                            playerPu: a,
                            playerTrailerMode: c.dataset.trailerMode || !1,
                            playerAdExt: c.dataset.adext || c.config.adext,
                            playerType: c.config.playerType,
                            playerIsSkipPrelude: c.dataset.skipPrelude,
                            playerVptag: g.getPTAG()
                        }
                    })
                } catch (e) {
                    d(e)
                }
            }, a.requestAdOrder = function (a) {
                if (!c.dataset.noHdAdPlugin) {
                    var e = a.adtype;
                    if (!e) return g.showError("\u5e7f\u544a\u8bf7\u6c42\u53c2\u6570\u9519\u8bef\uff0c\u6ca1\u6709adtype");
                    var f = h.getDefaultAdRequestParams(b.getAdRequestParam(e));
                    "undefined" != typeof a.zcindex && (f.zcindex = a.zcindex), c.config.usePreviewDomain && (f.domain = "l.cm.com", f.ehost = location.origin, f.auth_from = 1);
                    var i = (c.getinfo, h.getRequestor(a.adtype));
                    i && c.getinfo[i] && !function (a) {
                        var e = +new Date;
                        c.getinfo[i](f).always(function (f) {
                            var g = f.adcost || +new Date - e;
                            f.adcost || (f.adcost = g);
                            var i = b.getAdErrorCode(f);
                            i ? (c.msg.broadcast(h.getAdMsgName(a) + "End"), b.context.msg.broadcast("adPluginMsg", {
                                name: "reportAd",
                                adtype: a,
                                reportData: {
                                    info: !0,
                                    data: {adcost: 2101 == i ? -1 : g || "", errorCode: i, adtype: a}
                                }
                            })) : (f.adtype = a, d("broadcast: ", n.AD_ORDER_DATA_READY, ", type: ", a), c.msg.broadcast(n.AD_ORDER_DATA_READY, f))
                        })
                    }(e)
                }
            }, a.loadAd = function (c) {
                if (c.adtype !== l.ZT || b.context.dataset.playState != m.PLAYING) try {
                    if (b.dataset.adFirstPlay && (a.initAd(), b.dataset.adFirstPlay = !1), b.updateAdInfo(), b.dataset.adPlayer.setOrder(c), c.adtype !== l.VIDEO_MARK) {
                        var e = b.dataset.adPlayer.getOrdersByType(c.adtype) || [];
                        if (c.adtype === l.LD) {
                            var f = b.dataset.adPlayer.getOrdersByType(l.PVL) || [];
                            f.length && (f.adtype = "PVL", f.adcost = c.adcost, f.errorcode = c.errorcode, b.dataset.adPlayer.loadAd(f));
                            var g = b.dataset.adPlayer.getOrdersByType(l.KB) || [];
                            e = e.concat(g)
                        }
                        e.adtype = c.adtype, e.adcost = c.adcost, e.errorcode = c.errorcode, e.errMsg = c.orginStr || "";
                        var i = 0;
                        c.videoErrorCode ? (444 === c.videoErrorCode && (i = 2103), i = 2100) : i = c.errorcode, b.reportAd({
                            actionType: "info",
                            step: 1,
                            adtype: c.adtype,
                            errorCode: i,
                            stepDuration: c.adcost > 32e3 ? 32e3 : c.adcost
                        }), c.adList && "nintendo" !== b.context.config.playerType ? (b.context.config.browserDisableAutoPlay && b.dataset.adPlayer.muteAd(), b.dataset.adPlayer.loadAd(e)) : (b.context.msg.broadcast("adPluginMsg", {
                            name: "reportAd",
                            adtype: c.adtype,
                            reportData: {
                                info: !0,
                                data: {
                                    errMsg: c.orginStr,
                                    adcost: 2101 == c.errorcode ? -1 : c.adcost || "",
                                    errorCode: c.errorcode,
                                    adtype: c.adtype
                                }
                            }
                        }), b.context.msg.broadcast(h.getAdMsgName(c.adtype) + "End"))
                    }
                } catch (j) {
                    b.context.msg.broadcast(h.getAdMsgName(c.adtype) + "End"), d(j)
                }
            }, a.playAd = function (a) {
                b.dataset.adPlayer && b.dataset.adPlayer.playAd(a)
            }, a.pauseAd = function (a) {
                b.dataset.adPlayer && b.dataset.adPlayer.pauseAd(a)
            }, a.stopAd = function (a) {
                a !== l.LD && a !== l.ZC && a !== l.HT || (b.context.dataset.isPlayingAd = !1), b.dataset.adPlayer && b.dataset.adPlayer.stopAd(a)
            }, a.stopAllAd = function () {
                try {
                    b.context.dataset.isPlayingAd = !1, b.dataset.adPlayer && b.dataset.adPlayer.stopAllAd()
                } catch (a) {
                    d(a), b.dataset.$videoAdLayer.empty().addClass(Txplayer.dataset.hideClass)
                }
            }, a.setVolume = function (a) {
                b.dataset.adPlayer && b.dataset.adPlayer.setAdVolume(a)
            }, a.mute = function (a) {
                b.dataset.adPlayer && (a ? b.dataset.adPlayer.muteAd() : b.dataset.adPlayer.unMuteAd())
            }, a.resize = function (a, c, d, e) {
                var f, g, h, i, j = b.context.dataset.$playermod, k = j.width(), l = j.height(), m = j.find("video"),
                    n = b.context.dataset.originalHwRate;
                if (n) {
                    var o = m.width(), p = m.height(), q = (p / o).toFixed(3);
                    parseFloat(q) >= parseFloat(n) ? (f = o, g = o * n) : (g = p, f = p / n), d = (k - f) / 2, e = (l - g) / 2, h = f, i = g
                } else f = m.width(), g = m.height(), d = (k - f) / 2, e = (l - g) / 2;
                b.dataset.adPlayer && (b.dataset.adPlayer.resizeAd({
                    width: a,
                    height: c,
                    oWidth: h,
                    oHeight: i,
                    left: d,
                    top: e
                }), b.dataset.adPlayer.init({
                    playerData: {
                        playerOWidth: h,
                        playerOHeight: i,
                        playerWidth: a,
                        playerHeight: c,
                        playerLeft: d,
                        playerTop: e
                    }
                }))
            }, a.hideAdBeforeResize = function () {
                b.dataset.adPlayer && b.dataset.adPlayer.hideAdBeforeResize()
            }, a.setFullScreen = function (a) {
                b.dataset.adPlayer && b.dataset.adPlayer.setAdFullscreen(a)
            }, a.setSmallWindow = function (a) {
                setTimeout(function () {
                    var c = b.context.dataset.$playermod.width(), d = b.context.dataset.$playermod.height();
                    b.dataset.adPlayer && b.dataset.adPlayer.resizeAd({
                        width: c,
                        height: d,
                        oWidth: c,
                        oHeight: d,
                        left: 0,
                        top: 0
                    }), b.dataset.adPlayer && b.dataset.adPlayer.setAdSmallWindow({
                        isSmallWindow: a,
                        width: c,
                        height: d
                    })
                }, 50)
            }, a.setPosition = function (a) {
                b.dataset.adPlayer && b.dataset.adPlayer.setAdPosition(a)
            }, a.report = function (a, c) {
                b.dataset.adPlayer && b.dataset.adPlayer.reportAd(a, c)
            }, a.setPageWatchBuyData = function () {
                b.dataset.adPlayer && b.dataset.adPlayer.setPageWatchBuyData()
            }, a.clearPageWatchBuyData = function () {
                b.dataset.adPlayer && b.dataset.adPlayer.clearPageWatchBuyData()
            }, a.seekStart = function (a) {
                b.dataset.adPlayer && b.dataset.adPlayer.seekStart(a)
            }, a.setPlayerData = function (a, c) {
                var d = {};
                d[a] = c, b.dataset.adPlayer && b.dataset.adPlayer.setConf({playerData: d})
            }
        }, p.initAdapterEvent = function () {
            var a = this.dataset.adapterEvent, b = this.dataset.adapterApi, c = this.context, e = this;
            a[o(n.VIDEO_AD_LAYER_SHOW)] = function () {
                e.dataset.$videoAdLayer.removeClass(Txplayer.dataset.hideClass)
            }, a[o(n.VIDEO_AD_LAYER_HIDE)] = function () {
                e.context.dataset.disableHotKey = !1, e.dataset.$videoAdLayer.addClass(Txplayer.dataset.hideClass)
            }, a[n.AD_ORDER_PPB_DATA_READY] = function (a) {
                d(f, " \u8ba2\u5355\u6570\u636e: ", a), a = a || {};
                var f = a.adtype;
                a.adtype || (f = l.PPB);
                var g = a;
                g.adtype = f, g.vid = "", c.dataset.nextVid && c.dataset.nextVideoInfo && c.dataset.nextVideoInfo.vid && (g.vid = c.dataset.nextVideoInfo.vid), g.errorcode = e.getAdErrorCode(a), 0 == g.errorcode && (c.dataset.hasPpbRequest = !0), g.channel = h.getVideoType(), g.live = 0, e.dataset.adPlayer ? (e.context.dataset.$ppbAdLayer = e.context.dataset.$playermod.find('[data-role="txp-ui-control-preview-ad"]'), e.dataset.adPlayer.init({playerDom: {ppbAdLayer: e.context.dataset.$ppbAdLayer}}), b.loadAd(g)) : e.createAdPlayer(g)
            }, a[n.AD_ORDER_PDF_DATA_READY] = function (a) {
                d(f, " \u8ba2\u5355\u6570\u636e: ", a), a = a || {};
                var f = a.adtype;
                a.adtype || (f = l.PDF);
                var g = a;
                g.adtype = f, g.vid = "", c.dataset.nextVid && c.dataset.nextVideoInfo && c.dataset.nextVideoInfo.vid && (g.vid = c.dataset.nextVideoInfo.vid), g.errorcode = e.getAdErrorCode(a), g.channel = h.getVideoType(), g.live = 0, e.dataset.adPlayer ? (e.context.dataset.$pdfAdLayer = e.context.dataset.$playermod.find('[data-role="ui-definition-ad"]'), e.dataset.adPlayer.init({playerDom: {pdfAdLayer: e.context.dataset.$pdfAdLayer}}), b.loadAd(g)) : e.createAdPlayer(g)
            }, a[n.AD_ORDER_DATA_READY] = function (a) {
                d(f, " \u8ba2\u5355\u6570\u636e: ", a), a = a || {};
                var f = a.adtype;
                a.adtype || (f = l.LD);
                var g = a;
                g.adtype = f, g.vid = "", c.dataset.nextVid && c.dataset.nextVideoInfo && c.dataset.nextVideoInfo.vid && (g.vid = c.dataset.nextVideoInfo.vid), g.errorcode = e.getAdErrorCode(a), g.videoErrorCode = a.videoErrorCode, g.channel = h.getVideoType(), g.live = 0, g.orginStr = a.orginStr || "", e.dataset.adPlayer ? b.loadAd(g) : e.createAdPlayer(g)
            }, a[o("videoTimeUpdateWithHlsAd")] = function (a) {
                e.dataset.adPlayer && e.dataset.adPlayer.setPlaytime(e.context.dataset.currentTimeWithHlsAd)
            }, a[o("videoEnd")] = function (a) {
                try {
                    e.dataset.endingAdEmpty && !a.isAllEnd && a.isTheLastFilm ? (c.msg.broadcast("endingAdEnd"), e.dataset.videoEndForInsertAd = !1, e.resetData()) : !a.isAllEnd && a.isTheLastFilm ? (e.dataset.videoEndForInsertAd = !0, c.msg.broadcast("endingAdStart"), b.playAd(l.HT)) : a.isAllEnd && e.resetData()
                } catch (f) {
                    d(f)
                }
            }, a[o("userSeekStart")] = function () {
            }, a[o("seekStart")] = function (a) {
                b.seekStart(a)
            }, a[o("userPausePlayer")] = function () {
                e.context.dataset.currentTime && (e.context.dataset.isPlayingAd || e.context.dataset.disableHotKey || (b.requestAdOrder({adtype: l.ZT}), b.setPlayerData("playerIsPausing", !0), b.pauseAd(l.PSJ), b.pauseAd(l.CZC)))
            }, a[o("videoPlaying")] = function () {
                b.setPlayerData("playerIsPausing", !1), b.stopAd(l.ZT), "undefined" != typeof window.TxpCreativePlayer && window.TxpCreativePlayer.loadNextPart(), e.dataset.adPlayer && e.dataset.adPlayer.init({playerData: {playerEndTime: e.context.dataset.playEndTime || e.context.dataset.duration}}), e.dataset.adMsg.broadcast("filmFirstPlay")
            }, a[o("userStopVideo")] = function () {
                e.dataset.adapterApi.stopAllAd(), e.resetData()
            }, a[o("beforeVideoRePlay")] = function () {
                e.dataset.adapterApi.stopAllAd(), e.resetData()
            }, a[o("vidChange")] = function () {
                e.dataset.adapterApi.stopAllAd(), e.resetData(), e.updateAdInfo()
            }, a[o("skipPreludeChange")] = function (a) {
                e.dataset.adPlayer && "function" === f.type(e.dataset.adPlayer.init) && e.dataset.adPlayer.init({playerData: {playerIsSkipPrelude: e.context.dataset.skipPrelude}})
            }, a[o("error")] = function () {
                e.dataset.adapterApi.stopAllAd(), e.resetData()
            }, a[o("smallWindowModeChange")] = function (a) {
                b.setSmallWindow(a.isSmallWindow)
            }, a[o("windowFullscreenChange")] = function (a) {
                b.setFullScreen(a)
            }, a[o("videoScreenPercentChange")] = function (a) {
                a /= 100, setTimeout(function () {
                    var c = e.context.dataset.$playermod.width(), f = e.context.dataset.$playermod.height(), g = c * a,
                        h = f * a, i = g / a, j = h / a, k = (i - g) / 2, l = (j - h) / 2;
                    b.resize(g, h, k, l), d("videoScreenPercentChange resize: ", g, h)
                }, 250)
            }, a[o("resize")] = function (a) {
                var c = a.width, e = a.height, f = a.left || 0, g = a.top || 0;
                e > c && (e = parseInt(9 * c / 16, 10), g = parseInt((a.height - e) / 2, 10)), d("resize resize: ", a.width, a.height), b.resize(c, e, f, g)
            }, a[o("beforeResize")] = function () {
                b.hideAdBeforeResize()
            }, a[o("beforeUiControlShow")] = function () {
                e.context.dataset.isControlShow || b.setPosition({bottom: 50})
            }, a[o("hideUiControl")] = function () {
                e.context.dataset.isControlShow && b.setPosition({bottom: 5})
            }, a[o("volumeChange")] = function (a) {
                if (a && "undefined" !== f.type(a.volume)) {
                    var c = Math.min(80, a.volume);
                    b.setVolume(c)
                }
            }, a[o("adPluginMsg")] = function (a) {
                var c;
                if ("requestCgi" === a.name && a.params) {
                    c = a.params;
                    var d = c.toLowerCase() + "AdDataReady", i = h.getDefaultAdRequestParams(e.getAdRequestParam(c));
                    e.context.config.usePreviewDomain && (i.domain = "l.cm.com", i.ehost = location.origin, i.auth_from = 1);
                    var j = (e.context.getinfo, h.getRequestor(c));
                    if ("function" === f.type(e.context.getinfo[j])) {
                        var l = +new Date;
                        e.context.getinfo[j](i).always(function (a) {
                            var b = a.adcost || +new Date - l;
                            a.adcost || (a.adcost = b);
                            var f = e.getAdErrorCode(a);
                            f ? e.context.msg.broadcast("adPluginMsg", {
                                name: "reportAd",
                                adtype: c,
                                reportData: {
                                    info: !0,
                                    data: {adcost: 2101 == f ? -1 : b || "", errorCode: f, adtype: c}
                                }
                            }) : e.context.msg.broadcast(d, a)
                        })
                    }
                } else if ("reportAd" === a.name) {
                    if (c = a.adtype || "", !c) return;
                    a.reportData.info && (a.reportData.data.playerData = {
                        playerFrom: h.getPlayerFrom(g),
                        playerPf: h.getPf(e.getAdChannelId()),
                        playerPfEx: k,
                        playerVersion: Txplayer.dataset.ver,
                        playerDuration: e.context.dataset.duration,
                        playerChid: e.getAdChannelId(),
                        playerVid: e.context.dataset.vid,
                        playerCid: e.context.dataset.cid,
                        playerTpid: e.context.dataset.tpid,
                        playerFlowid: e.context.dataset.flowid,
                        playerGuid: e.context.dataset.guid
                    });
                    var m = b.report(c, a.reportData);
                    m || (e.dataset.waitForReport[c] = a)
                } else if ("stopAd" === a.name) {
                    if (!a.adtype) return;
                    b.stopAd(a.adtype)
                }
            }, a[o("relevanceAd_close")] = function () {
                b.stopAd(l.BS)
            }, a[o("watchAndBuyList")] = function () {
                b.setPageWatchBuyData()
            }, f.each(a, function (a, b) {
                c.msg.on(a, b)
            }), this.context.userMsg.on("1080pVipGuideClose.hdplayerad", function (a) {
                a && "closeSkipAd" === a.action && e.dataset.currentVideoAdType && b.playAd(e.dataset.currentVideoAdType)
            })
        }, p.initAdEvent = function () {
            var a = this.context, b = this.dataset.adEvent, c = this.dataset.adapterApi, e = this,
                g = this.dataset.loadingAdReporter;
            b.requestOrderEvt = function (a) {
                a && a.adtype && c.requestAdOrder({adtype: a.adtype})
            }, b.showAdEvt = function (b) {
                b && b.adtype === l.PSJ && c.resize && c.resize(e.context.dataset.playerWidth, e.context.dataset.playerHeight), b && b.adtype === l.BS && a.msg.broadcast("adShowToClosePlayPoint", b)
            }, b.getAdInfoEvt = function (a) {
                var b = a.adtype, c = h.getAdMsgName(a.adtype);
                e.dataset[c + "Empty"] = a.isEmpty, b === l.LD && (e.context.dataset.isLoadingAdEmpty = a.isEmpty), a.isEmpty || b !== l.LD || (e.context.dataset.isPlayingAd = !0, e.dataset.canPreloadP2P = !1)
            }, b.loadStartEvt = function (a) {
                a.index = +a.index;
                var b = +new Date;
                e.dataset.startLoadAdMap[a.adtype] || (e.dataset.startLoadAdMap[a.adtype] = []), e.dataset.startLoadAdMap[a.adtype].push({
                    vid: a.vid,
                    duration: a.duration,
                    index: a.index,
                    time: b
                }), a.adtype === l.LD && g.addStep25({
                    vid: a.vid,
                    duration: parseInt(a.duration / 1e3, 10),
                    index: a.index,
                    loadStartTime: b
                })
            }, b.loadReadyEvt = function (b) {
                var d = b.adtype, f = h.getAdMsgName(b.adtype);
                if (d === l.LD) a.msg.broadcast(f + "Start"); else if (d === l.ZC) var g = setTimeout(function () {
                    e.context.dataset.$shadow.css("pointer-events", "none"), e.context.dataset.disableHotKey = !0, e.context.msg.broadcast("disableProgress"), e.context.msg.broadcast("disablePlayBtn"), e.context.msg.broadcast("disableDefinitionBtn"), clearTimeout(g)
                }, 500); else d === l.HT && e.dataset.videoEndForInsertAd && (a.msg.broadcast(f + "Start"), c.playAd(l.HT));
                if (e.dataset.waitForReport[d]) {
                    var i = e.dataset.waitForReport[d];
                    e.dataset.adapterApi.report(i.adtype, i.reportData), delete e.dataset.waitForReport[d]
                }
            }, b.loadProgressEvt = function (a) {
                a.adtype === l.LD && e.context.msg.broadcast("adLoadProgress", {speed: a.speed})
            }, b.loadCompleteEvt = function (b) {
                b.index = +b.index, b.adtype === l.LD && (g.step25({
                    index: b.index,
                    loadCompleteTime: +new Date
                }), b.isAllEnd && !a.dataset.hasTriggerPreload && (a.dataset.hasTriggerPreload = !0, e.context.msg.broadcast("loadingAdLoadComplete", b)))
            }, b.enterCountdownEvt = function (a) {
                a.adtype === l.ZC && (e.context.dataset.isDuringZcCountdown = !0)
            }, b.enterCountdownCompleteEvt = function (b) {
                b.adtype === l.ZC && (e.context.dataset.isDuringZcCountdown = !1, a.dataset.$shadow.css("pointer-events", "initial"), a.dataset.playState !== m.NOT_START && a.dataset.playState !== m.END && (a.msg.broadcast("insertAdStart"), c.playAd(l.ZC)))
            }, b.playStartEvt = function (a) {
                a.index = +a.index, a.actionType = "playStart", e.reportAd(a), e.context.msg.broadcast("hideUiTips"), a.adtype === l.LD && (e.context.dataset.hasLdAd = !0, e.context.dataset.isLoadingAdEmpty = !1), [l.LD, l.ZC, l.HT, l.ZT].indexOf(a.adtype) > -1 && (e.dataset.currentVideoAdType = a.adtype), e.dataset.currentAdType = a.adtype, e.context.dataset.currentAdType = a.adtype, a.adtype === l.LD && g.step25({
                    index: a.index,
                    vid: a.vid,
                    playStartTime: +new Date
                })
            }, b.playEndEvt = function (a) {
                if (a.adtype === l.LD) {
                    var b = g.getItem({step: 25, index: a.index}), c = +new Date;
                    g.step25({
                        index: a.index,
                        playEndTime: c,
                        playduration: b && b.playStartTime ? parseFloat((c - b.playStartTime) / 1e3, 10) : ""
                    })
                }
            }, b.playErrorEvt = function (a) {
                a.actionType = "playError", e.reportAd(a);
                var b = g.getItem({step: 25, index: a.index}), c = +new Date;
                g.step25({
                    index: a.index,
                    playEndTime: +new Date,
                    errorCode: a.errorCode || "",
                    playduration: b && b.playStartTime ? parseInt((c - b.playStartTime) / 1e3, 10) : ""
                }), a.isAllEnd && (e.context.dataset.hasLdAd || (e.context.dataset.isLoadingAdEmpty = !0)), Txplayer.util.localLog("AD_PLAY_ERROR", "ERROR_CODE:" + a.errorCode)
            }, b.blackScreenEvt = function (a) {
                e.context.msg.broadcast("adVideoShow"), e.context.msg.broadcast("filmVideoHide", "loadingad"), e.context.dataset.adblockWaringCount = a ? a.bc : 0
            }, b.stopAdEvt = function (a) {
                try {
                    if (e.context.dataset.currentAdType = "", a.adtype !== l.LD && a.adtype !== l.HT && a.adtype !== l.ZC || e.context.msg.broadcast(h.getAdMsgName(a.adtype) + "End"), a.adtype === l.LD) {
                        var b = +new Date, c = g.getItem({step: 25, index: -1});
                        g.addStep35({loadingAdEndTime: b}), g.step25({
                            index: -1,
                            playEndTime: +new Date,
                            playduration: c && c.playStartTime ? parseInt((b - c.playStartTime) / 1e3, 10) : ""
                        })
                    }
                } catch (f) {
                    d(f)
                }
            }, f.each(b, function (a, b) {
                e.dataset.adMsg.on(a, b)
            })
        }, p.reportAd = function (a) {
            a = a || {};
            var b = a.adtype, c = 0, d = +new Date, e = this.dataset.startLoadAdMap[b];
            if (!a.stepDuration && e && e.length > 0) for (var f = 0, g = e.length; f < g; f++) if (e[f].index == a.index) {
                c = d - e[f].time, "number" == typeof c && c > 1e4 && 1 === a.index && (c = 1e4);
                break
            }
            if (1 == a.step) {
                if (a.stepDuration <= 0) return
            } else if (a.stepDuration <= 0 || c <= 0) return;
            var h = window.performance && window.performance.now() || 0, i = a.adtype,
                j = "undefined" != typeof a.errorMessage ? a.errorMessage : "";
            j = "undefined" != typeof a.actionType ? j + ";actionType:" + a.actionType : j, j = "undefined" != typeof a.preload ? j + ";preload:" + a.preload : j, j = "undefined" != typeof a.vid ? j + ";vid:" + a.vid : j, this.context.msg.broadcast("reportAdInfo", {
                version: Txplayer.appVersion,
                adtype: i,
                step: a.step || 2,
                step_duration: a.stepDuration || c,
                step_code: a.errorCode || 0,
                step_index: a.index || 1,
                firstview_duration: parseInt(h, 10),
                ext_info: j,
                src: a.src,
                step_dcode: a.detailErrCode || 0
            })
        }, p.exportsAdApis = function () {
            var a = this;
            this.dataset.adApis = {};
            var b = this.dataset.adApis;
            b.getAdRequestParam = function (b) {
                b = b || l.LD;
                var c = h.getDefaultAdRequestParams(a.getAdRequestParam(b));
                return a.context.config.usePreviewDomain && (c.ehost = location.origin, c.auth_from = 1), c
            }, b.getAdCreateParams = function () {
                return a.dataset.adCreateParams
            }, b.getAdReportData = function () {
                var b = a.dataset.loadingAdReporter, c = {adtype: l.LD, adDuration: 0, playAdDuration: 0, list: []};
                return b && b.map && f.each(b.map, function (a, d) {
                    if ("step25" === a) {
                        var e = b.map.step25 || [];
                        e.forEach(function (a) {
                            a.loadCompleteTime || (a.loadCompleteTime = a.playStartTime || ""), c.list.push(a), a.duration && (c.adDuration += a.duration), a.playduration && (c.playAdDuration += a.playduration)
                        })
                    } else if ("step35" === a) {
                        var f = b.map.step35 || [];
                        f.forEach(function (a) {
                            c.loadingAdEndTime = a.loadingAdEndTime
                        })
                    }
                }), c
            }, f.extend(this.context.adApi, b)
        }, p.createAdPlayer = function (a) {
            var b = this, c = this.dataset.adapterApi, d = this.dataset, e = this.context, i = {
                playerDom: {
                    player: e.dataset.$videomod[0],
                    pvlAdLayer: e.dataset.$pvlAdLayer,
                    ppbAdLayer: e.dataset.$ppbAdLayer,
                    pdfAdLayer: e.dataset.$pdfAdLayer,
                    videoAdLayer: d.$videoAdLayer[0],
                    videoAdCountdownLayer: d.$videoAdCountdownLayer[0],
                    interactiveAdLayer: d.$interactiveAdLayer[0]
                },
                playerMsg: this.dataset.adMsg,
                playerMethod: {
                    showOpenVIPGuide: function () {
                        return g.mobile && !g.os.ipad ? function () {
                            g.txLoginOnMobile && "function" === f.type(g.txLoginOnMobile.isLogin) && g.txLoginOnMobile.isLogin(function (a) {
                                0 === a ? g.txLoginOnMobile.goLogin() : location.href = "http://film.qq.com/weixin/upay.html?aid=V0$$4:1"
                            })
                        } : "function" === f.type(e.config.showOpenVIPGuide) ? function () {
                            b.context.dataset.isWindowFullscreen && b.context.msg.broadcast("exitWindowFullscreen"), b.context.dataset.isBrowserFullscreen && b.context.msg.broadcast("exitBrowserFullscreen"), e.config.showOpenVIPGuide()
                        } : void 0
                    }(), getUserType: e.config.getUserType || function () {
                    }, getAdChannelId: b.getAdChannelId, getControlStatus: function () {
                        return b.context.dataset.isControlShow
                    }, getPlayState: function () {
                        return b.context.dataset.playState
                    }, userPlay: function () {
                        b.context.userApi.play && b.context.userApi.play()
                    }, userPausePlayer: function () {
                        b.context.msg.broadcast("pause"), b.context.msg.broadcast("userPausePlayer")
                    }, toggleWindowFullScreen: function () {
                        b.context.userApi.toggleWindowFullScreen && b.context.userApi.toggleWindowFullScreen()
                    }, isLogin: function (a) {
                        b.context.config.loginHandler && "function" == f.type(b.context.config.loginHandler.isLogin) && b.context.config.loginHandler.isLogin(a)
                    }, isSmallWindow: function () {
                        return b.context.dataset.isSmallWindowMode
                    }, isWindowFullscreen: function () {
                        return b.context.userApi.isWindowFullscreen && b.context.userApi.isWindowFullscreen()
                    }, upBarrageZindex: function () {
                        b.context.dataset.$barrageMod && b.context.dataset.$barrageMod.css("z-index", 5)
                    }, resetBarrageZindex: function () {
                        b.context.dataset.$barrageMod && b.context.dataset.$barrageMod.css("z-index", 3)
                    }, getVolume: function () {
                        return e.dataset.muted ? 0 : Math.min(80, e.dataset.volume)
                    }, getBrowserDisableIframeAutoPlay: function () {
                        var a = Txplayer.util.browser, b = Txplayer.util.os, c = Txplayer.util.compareVersion;
                        return b.mac && a.safari && c(a.safari.version, "11.0") >= 1 || a.chrome && c(a.chrome.version, "66.0") >= 1
                    }
                },
                playerData: {
                    playerVolume: Math.min(80, e.dataset.volume),
                    playerPf: h.getPf(b.getAdChannelId()),
                    playerChid: b.getAdChannelId(),
                    playerVid: e.dataset.vid,
                    playerCid: e.dataset.cid,
                    playerTpid: e.dataset.tpid,
                    playerPt: e.dataset.businessId || "",
                    playerTrailerMode: e.dataset.trailerMode || !1,
                    playerType: e.config.playerType,
                    playerWidth: e.dataset.$playermod && e.dataset.$playermod.width() || e.dataset.playerWidth,
                    playerHeight: e.dataset.$playermod && e.dataset.$playermod.height() || e.dataset.playerHeight,
                    playerIsControlShow: e.dataset.isControlShow,
                    playerIsBrowserFullscreen: e.dataset.isBrowserFullscreen,
                    playerEndTime: e.dataset.playEndTime || e.dataset.duration,
                    playerIsSkipPrelude: e.dataset.skipPrelude,
                    playerVptag: g.getPTAG()
                },
                util: g
            };
            this.dataset.adCreateParams = i, c.makeAdPlayer(i, function (d) {
                d ? (b.dataset.adPlayer = d, c.loadAd(a)) : b.context.msg.broadcast(h.getAdMsgName(a.adtype) + "End")
            })
        }, p.resetData = function () {
            var a = this, b = this.dataset;
            b.adFirstPlay = !0, b.currentAdType = "", b.currentVideoAdType = "", b.videoEndForInsertAd = !1, b.playedTime = 0, b.loadingAdReporter.clear(), b.startLoadAdMap = {}, a.context.dataset.hasLdAd = !1, a.context.dataset.currentAdType = "", clearTimeout(b.endingAdTimeoutHandler), clearTimeout(b.adplayerLoadTimeHandler), this.context.dataset.hasTriggerPreload = !1, this.context.dataset.$shadow.css("pointer-events", "initial"), this.dataset.waitForReport = {}, this.dataset.adapterApi.clearPageWatchBuyData()
        }, p.getAdChannelId = function () {
            var a = this;
            return a.context.config && a.context.config.hasOwnProperty("chid") && "" !== a.context.config.chid ? a.context.config.chid : g.getAdChannelId()
        }, p.getAdErrorCode = function (a) {
            a = a || {};
            var b = 0;
            return a.requestOk ? a.adList && a.adLoc || (b = 2102) : b = 2101, b
        }, p.updateAdInfo = function () {
            try {
                var a = (this.dataset.adapterApi, this.context.dataset.currentPercent ? this.context.dataset.currentPercent / 100 : 1),
                    b = this.context.dataset.$playermod.width(), c = this.context.dataset.$playermod.height(),
                    d = b * a, e = c * a, f = d / a, g = e / a, h = (f - d) / 2, i = (g - e) / 2;
                this.dataset.adPlayer.init({
                    playerData: {
                        playerOWidth: d,
                        playerOHeight: e,
                        playerWidth: d,
                        playerHeight: e,
                        playerLeft: h,
                        playerTop: i,
                        playerIsSkipPrelude: this.context.dataset.playerIsSkipPrelude
                    }
                })
            } catch (j) {
            }
        }, p.getAdRequestParam = function (a) {
            var b = {};
            b.adtype = a, b.ad_type = a === l.LD ? l[b.adtype] + "|" + l.KB + "|" + l.PVL : l[b.adtype], b.chid = this.getAdChannelId() || 0, b.channelId = this.context.config.channelId, b.pf = h.getPf(b.chid), b.pf_ex = k, b.adaptor = 2, b.live = 0, b.cid = b.cid || this.context.dataset.cid || "", b.vid = b.vid || this.context.dataset.vid || "", b.rfid = g.getData(i.RFID), b.pt = this.context.dataset.businessId || "", b.flowid = this.context.dataset.flowid || "", b.trailerMode = this.context.dataset.trailerMode, b.isAnNewPlayAction = this.context.dataset.isAnNewPlayAction, b.adext = this.context.dataset.adext || this.context.config.adext, b.playerType = this.context.config.playerType, b.vptag = g.getPTAG(), b.guid = this.context.dataset.guid, b.platform = this.context.dataset.platform, b.adPage = this.context.config.adPage, b.tpid = this.context.config.tpid, b.pu = h.getPu(this.context.config) || 0, b.from = h.getPlayerFrom(g);
            var c = this.context.dataset.txplayerAuth.ad();
            return g.extend(b, c), b
        }, Txplayer.register("HdAdAdapter", e)
    }, 107: function (a, b, c) {
        var d = c(108), e = (d.AD_STATUS, d.AD_LOC_TIME, d.AD_TYPE);
        a.exports = {
            getVideoType: function () {
                var a = "";
                return window.COVER_INFO && window.COVER_INFO.typeid ? a = +window.COVER_INFO.typeid : window.VIDEO_INFO && window.VIDEO_INFO.type && (a = +window.VIDEO_INFO.type), a
            }, removeUrlParams: function (a) {
                if ("string" == typeof a) {
                    var b = document.createElement("a");
                    return b.href = a, b.protocol + "//" + b.host + b.pathname
                }
            }, getDefaultAdRequestParams: function (a) {
                var b = this.removeUrlParams(document.referrer) || "";
                if (!b && top !== window) try {
                    b = this.removeUrlParams(top.location.href) || ""
                } catch (c) {
                }
                var d = {
                    pf: a.pf,
                    ad_type: a.ad_type,
                    pf_ex: a.pf_ex,
                    url: this.removeUrlParams(location.href),
                    refer: b,
                    ty: "web",
                    plugin: "1.0.0",
                    v: Txplayer.dataset.ver,
                    coverid: a.cid,
                    vid: a.vid,
                    pt: a.pt,
                    flowid: a.flowid,
                    vptag: a.vptag,
                    pu: a.pu,
                    chid: a.chid,
                    adaptor: a.adaptor,
                    dtype: 1,
                    live: a.live,
                    resp_type: "json",
                    guid: a.guid,
                    req_type: 1,
                    from: a.from,
                    appversion: Txplayer.appVersion
                };
                if (a.uid && (d.uid = a.uid), a.tkn && (d.tkn = a.tkn), a.lt && (d.lt = a.lt), a.platform && (d.platform = a.platform), a.opid && (d.opid = a.opid), a.atkn && (d.atkn = a.atkn), a.appid && (d.appid = a.appid), a.adauthext && (d.adauthext = a.adauthext), a.tpid && (d.tpid = a.tpid), a.adtype === e.LD && a.rfid && (d.rfid = a.rfid), a.trailerMode && (d.page = "traileMode", d.trailerMode = 1), "coolOpen" === a.playerType && (d.page = "coolOpen", a.isAnNewPlayAction ? d.channelId = 1 : d.channelId = 2), "page_langSwitch" === a.adext) d.page = "langSwitch"; else if (a.adext) {
                    var f = a.adext;
                    f = f.split("|");
                    for (var g = /(\w+)\_(\w+)/, h = 0, i = f.length; h < i; h++) {
                        var j = f[h].match(g);
                        3 === j.length && (d[j[1]] = j[2])
                    }
                }
                return a.adPage && (d.page = a.adPage), a.channelId && (d.channelId = a.channelId), d
            }, getAdMsgName: function (a) {
                var b = "";
                switch (a) {
                    case"LD":
                        b = "loadingAd";
                        break;
                    case"HT":
                        b = "endingAd";
                        break;
                    case"ZC":
                        b = "insertAd";
                        break;
                    case"ZT":
                        b = "pauseAd";
                        break;
                    case"IVB":
                        b = "ivbAd";
                        break;
                    case"PVL":
                        b = "pvlAd";
                        break;
                    case"PSJ":
                        b = "yaliuAd"
                }
                return b
            }, getRequestor: function (a) {
                var b = "";
                switch (a) {
                    case"LD":
                        b = "loadingAd";
                        break;
                    case"HT":
                        b = "requestEndingAd";
                        break;
                    case"ZC":
                        b = "requestInsertAd";
                        break;
                    case"ZT":
                        b = "requestPauseAd";
                        break;
                    case"PPB":
                        b = "requestPpbAd";
                        break;
                    case"PDF":
                        b = "requestPdfAd";
                        break;
                    case"IVB":
                        b = "requestIvbAd";
                        break;
                    case"PSJ":
                        b = "requestYaliuAd"
                }
                return b
            }, getPfEx: function (a) {
                var b = this.getExtensionPlatform(a);
                return "mac" === b || "pc" === b ? "pc" : b
            }, getPu: function (a) {
                return "function" === Txplayer.$.type(a.getUserType) ? a.getUserType() : ""
            }, getExtensionPlatform: function (a) {
                return a.os.iphone ? "iphone" : a.os.ipad ? "ipad" : a.os.android ? "android" : a.os.mac ? "mac" : a.os.windows ? "pc" : ""
            }, getPlayerFrom: function (a) {
                var b = this.getExtensionPlatform(a);
                return "ipad" === b ? 6 : 0
            }, getPf: function (a) {
                if (Txplayer.util.inNewIframe()) return "out";
                var b = location.hostname;
                return "v.qq.com" === b || "film.qq.com" === b || 8 === a ? "in" : "out"
            }
        }
    }, 108: function (a, b) {
        a.exports = {
            RFID: "TxpCreativePlayer-rfid",
            AD_EVENT: {
                AD_ORDER_DATA_READY: "onAdOrderDataReady",
                AD_ORDER_PPB_DATA_READY: "ppbAdDataReady",
                AD_ORDER_PDF_DATA_READY: "pdfAdDataReady",
                VIDEO_AD_LAYER_SHOW: "adVideoShow",
                VIDEO_AD_LAYER_HIDE: "adVideoHide"
            },
            PLAYER_STATE: {NOT_START: -1, END: 0, PLAYING: 1, PAUSE: 2, LOADING: 3},
            AD_TYPE: {
                LD: "LD",
                HT: "HT",
                ZC: "ZC",
                ZT: "ZT",
                KB: "KB",
                PSJ: "PSJ",
                PPB: "PPB",
                PVL: "PVL",
                ZI: "ZI",
                BS: "BS",
                PDF: "PDF",
                VIDEO_MARK: "PSJ|BS|ZI|ZC|CZC|VIN|PHLS",
                PHLS: "PHLS",
                CZC: "CZC"
            },
            LD_AD_REG: /LD|KB/,
            VIDEO_AD_REG: /LD|KB|ZC|HT/
        }
    }, 109: function (a, b) {
        function c() {
            this.map = {}
        }

        var d = c.prototype;
        d.add = function (a) {
            var b = "step" + a.step;
            this.map[b] || (this.map[b] = []), delete a.step;
            var c = this.map[b], d = 0;
            c.forEach(function (b, c) {
                b.index === a.index && (d = 1)
            }), d || c.push(a)
        }, d.clear = function () {
            this.map = {}
        }, d.addStep25 = function (a) {
            a.step = 25, this.add(a)
        }, d.addStep35 = function (a) {
            a.step = 35, this.add(a)
        }, d.getItem = function (a) {
            var b = this.map["step" + a.step] || [], c = {};
            return a.index === -1 ? b.length > 0 ? b[b.length - 1] : {} : (b.forEach(function (b) {
                if (b.index === a.index) return c = b, !1
            }), c)
        }, d.step25 = function (a) {
            var b = this.map.step25 || [], c = b[b.length - 1];
            if (b.forEach(function (b, c) {
                if (b.index === a.index) for (var d in a) a.hasOwnProperty(d) && (b[d] = a[d])
            }), a.index === -1 && c) for (var d in a) a.hasOwnProperty(d) && "index" !== d && (c[d] = a[d])
        }, a.exports = c
    }, 110: function (a, b) {
        a.exports = function (a) {
            var b = {
                videoAdLayer: "hd-ad-adapter-adlayer",
                videoAdCountdownLayer: "hd-ad-adapter-videoadcountdownlayer",
                interActiveAdLayer: "hd-ad-adapter-interactivelayer"
            }, c = this.context.dataset.$videomod;
            c.after('<txpdiv data-role="' + b.videoAdLayer + '"></txpdiv>'), c.after('<txpdiv data-role="' + b.interActiveAdLayer + '"></txpdiv>'), c.after('<txpdiv data-role="' + b.videoAdCountdownLayer + '">');
            var d = this.context.dataset.$videomod.parent();
            this.dataset.$videoAdLayer = d.find('[data-role="' + b.videoAdLayer + '"]'), this.dataset.$interactiveAdLayer = d.find('[data-role="' + b.interActiveAdLayer + '"]'), this.dataset.$videoAdCountdownLayer = d.find('[data-role="' + b.videoAdCountdownLayer + '"]'), this.dataset.$videoAdLayer.css({
                position: "absolute",
                top: 0,
                right: 0,
                width: "100%",
                height: "100%",
                zIndex: 4,
                backgroundColor: "#000"
            }).addClass(Txplayer.dataset.hideClass), this.dataset.$interactiveAdLayer.css({
                position: "absolute",
                top: 0,
                right: 0,
                width: "100%",
                height: "100%",
                zIndex: 4,
                pointerEvents: "none"
            }).addClass(Txplayer.dataset.hideClass), this.dataset.$videoAdCountdownLayer.css({
                position: "absolute",
                top: 0,
                right: 0,
                width: "100%",
                height: "100%",
                zIndex: 4,
                pointerEvents: "none"
            }).addClass(Txplayer.dataset.hideClass)
        }
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(222)
    }, 86: function (a, b) {
        a.exports = '<txpdiv data-role="<%=poster%>" class="txp_poster"></txpdiv>'
    }, 222: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = c(86);
        d.prototype = {
            init: function () {
                this.dataset.showPoster = !0, this.context.config.poster === !1 ? this.dataset.showPoster = !1 : "string" === e.type(this.context.config.poster) && (this.context.dataset.poster = this.context.config.poster), this.write(), this.initDisplay(), this.addEventListerner(), this.exportsModuleApis()
            }, initDisplay: function () {
                function a() {
                    if (c.context.dataset.poster || (f.mobile ? c.context.dataset.poster = f.getMobileVideoPosterByVid(b, 0) : c.context.dataset.poster = f.getPcVideoPosterByVid(b)), c.context.dataset.poster) {
                        var a = {
                            "background-image": "url(" + c.context.dataset.poster + ")",
                            "background-size": "cover"
                        };
                        c.dataset.$poster.css(a), c.show()
                    }
                }

                if ((!this.context.config.official || !this.context.dataset.autoplay && !this.context.config.autoplay) && this.dataset.showPoster) {
                    var b = this.context.dataset.vid || this.context.config.vid, c = this;
                    b ? a() : this.context.msg.on("ready", function () {
                        b = c.context.dataset.vid, a()
                    })
                }
            }, write: function () {
                var a = {poster: "txp-ui-poster"};
                this.dataset.renderData = a;
                var b = e.tmpl(g, a);
                this.context.dataset.$playermod.append(b), this.dataset.$poster = this.context.dataset.$playermod.find('[data-role="' + a.poster + '"]')
            }, remove: function () {
                this.dataset.$poster.remove && this.dataset.$poster.remove()
            }, setPoster: function (a) {
                "string" === e.type(a) && (this.context.dataset.poster = a, this.initDisplay())
            }, getPoster: function () {
                return this.context.dataset.poster
            }, hide: function () {
                this.dataset.$poster.addClass(Txplayer.dataset.hideClass)
            }, show: function () {
                this.dataset.$poster.removeClass(Txplayer.dataset.hideClass)
            }, addEventListerner: function () {
                var a = this, b = this.context.dataset.playState, c = this.context.dataset.isPlayingAd;
                (e.inArray(b, [0, 1, 3]) > -1 || c) && this.hide(), this.dataset.eventsList = {}, this.dataset.eventsList[f.getUniqueMsgKey("videoPlaying")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoPlay")] = function () {
                    f.mobile || a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("vidChange")] = function () {
                    a.context.dataset.poster = null, a.initDisplay(), a.context.dataset.autoplay && a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("playStateChange")] = function (b) {
                    b = b || {}, 0 === b.state && (f.mobile || (a.context.dataset.poster = null), a.initDisplay())
                }, e.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                }), this.dataset.$poster.on("click", function () {
                    a.context.dataset.$shadow.trigger("click")
                }).on("dblclick", function () {
                    a.context.dataset.$shadow.trigger("dblclick")
                })
            }, exportsModuleApis: function () {
                this.dataset.moduleApis = {}, this.dataset.moduleApis.getPoster = this.getPoster.bind(this), this.dataset.moduleApis.setPoster = this.setPoster.bind(this), e.extend(this.context.userApi, this.dataset.moduleApis)
            }
        }, Txplayer.register("UiPoster", d)
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(267)
    }, 267: function (a, b) {
        function c(a) {
            d = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var d = Txplayer.$, e = Txplayer.util;
        c.prototype = {
            init: function () {
                this.addEventListener()
            }, getDefaultParams: function () {
                this.dataset.format = this.context.dataset.currentDefinitionFormat || "", this.dataset.rate = this.context.dataset.currentDefinitionRate || "", this.dataset.cdnID = this.context.dataset.cdnID;
                var a = e.getLoginID(), b = this.context.dataset.txplayerAuth.raw(), c = this.context.dataset.platform,
                    d = {
                        hc_main_login: b.main_login,
                        hc_vuserid: b.vuserid || Txplayer.util.cookie.get("vuserid"),
                        hc_openid: b.openid,
                        hc_appid: b.appid,
                        loginid: a.loginId,
                        loginex: a.loginIdEx,
                        logintype: a.logintype,
                        guid: this.context.dataset.guid || "",
                        longitude: "",
                        latitude: "",
                        vip: this.isVip(),
                        online: navigator.onLine ? 1 : 0,
                        p2p: this.context.dataset.useP2P ? 1 : 0,
                        downloadkit: this.context.dataset.useP2P ? 1 : 0,
                        resolution: [screen.width, screen.height, window.devicePixelRatio || 1].join("*"),
                        testid: this.context.dataset.reportTestId || "",
                        osver: [e.os.name, e.os.version].join(" "),
                        playerver: "",
                        playertype: 1,
                        uip: this.context.dataset.reportUsrIP || "",
                        confid: "",
                        cdnip: this.context.dataset.hlsServerIP || "",
                        cdnid: this.dataset.cdnID || "",
                        cdnuip: this.context.dataset.hlsClientIP || "",
                        freetype: "",
                        sstrength: "",
                        network: "",
                        speed: "",
                        device: "",
                        appver: this.context.dataset.testVer,
                        p2pver: "",
                        url: location.href,
                        refer: document.referrer,
                        ua: e.getReportUA(),
                        ptag: e.getPTAG(),
                        flowid: this.context.dataset.flowid,
                        platform: c || "",
                        dltype: this.context.dataset.useHls ? this.context.dataset.dltype || 3 : 1,
                        vid: this.context.dataset.vid || this.context.config.vid,
                        cid: this.context.dataset.cid || "",
                        fmt: this.dataset.format || "",
                        rate: this.dataset.rate || "",
                        clip: this.context.dataset.reportClip || "",
                        status: this.context.dataset.reportStatus || "",
                        type: this.context.dataset.reportType || "",
                        duration: this.context.dataset.originDuration || "",
                        ext: {dltype: this.context.dataset.useHls ? this.context.dataset.dltype || 3 : 1, m3u8: 0},
                        drm: this.context.dataset.emeEnabled ? 1 : 0
                    };
                if (this.context.dataset.getinfoJSON) {
                    d.ext.dltype = this.context.dataset.getinfoJSON.dltype;
                    var f = this.context.dataset.getinfoJSON.vl;
                    f && f.vi && f.vi[0] && f.vi[0].ul && f.vi[0].ul.m3u8 && (d.ext.m3u8 = 1)
                }
                return d.ext.dltype && (d.ext = JSON.stringify(d.ext)), 1 == this.context.dataset.isQuic ? (d.proto = "libquic", d.protover = this.context.dataset.quicVer || "") : (d.proto = "tcp", d.protover = "tcp00"), d
            }, isVip: function () {
                var a = "";
                return this.context && this.context.config && "function" === d.type(this.context.config.getUserType) && (a = 2 == this.context.config.getUserType() ? 1 : 0), a
            }, resetDataset: function () {
                this.dataset = {}, this.context.dataset.cdnID = "", this.context.dataset.currentVideoUrl = "", this.context.dataset.urlIndex = 0, this.context.dataset.isQuic = 0, this.context.dataset.quicVer = ""
            }, report: function (a, b) {
                if (b = b || "4501", this.dataset.hasOwnProperty("sequence") || (this.dataset.sequence = -1), "4564" != b && ++this.dataset.sequence, a.hasOwnProperty("seq") && "" !== a.seq || (a.seq = this.dataset.sequence || 0), "4564" == b) for (var c in a) (70 != a.step && d.inArray(c, ["step", "flowid", "data"]) == -1 || 70 == a.step && d.inArray(c, ["step", "flowid", "data", "ftime", "vid", "url", "refer", "loginid", "logintype", "ua"]) == -1) && delete a[c];
                var f = "//btrace.video.qq.com/kvcollect?BossId=4501&Pwd=142347456&";
                "4564" == b && (f = "//btrace.video.qq.com/kvcollect?BossId=4564&Pwd=213967996&"), f += d.param(a), Txplayer.imgRpt ? e.requestViaImage(f) : e.fetch({
                    url: f,
                    credentials: "include"
                })
            }, step0: function () {
                var a = {
                    code: "",
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    stime: this.context.config.pageInitTime
                };
                a = d.extend(this.getDefaultParams(), {data: JSON.stringify(a)}), a.step = 0, this.report(a)
            }, step5: function () {
                var a = this.context.config.playerInitTime || this.context.dataset.playerCreateStartTime, b = {
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    stime: a,
                    etime: this.context.dataset.playerCreateEndTime,
                    code: this.context.dataset.errorCodeOfStep5 || ""
                };
                b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 5, this.report(b)
            }, step15: function (a) {
                a = a || {};
                var b = {
                    ip: this.context.dataset.reportUsrIP,
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    stime: a.startTime,
                    etime: a.endTime,
                    code: ""
                };
                "timeout" === a.err ? b.code = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "03") : a.err && !a.hasOwnProperty("code") ? b.code = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "01") : a.err && a.hasOwnProperty("code") && (b.code = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "cgiInnerError", a.code + "")), b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 15, this.report(b)
            }, step20: function (a) {
                a = a || {};
                var b = {
                    ip: this.context.dataset.reportUsrIP,
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    stime: a.startTime,
                    etime: a.endTime,
                    code: a.errCode || ""
                };
                b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 20, this.report(b)
            }, step25: function () {
                if (this.dataset.adReportData && this.dataset.adReportData.list && 0 != this.dataset.adReportData.list.length) {
                    var a = [], b = this;
                    this.dataset.adReportData.list.forEach(function (c, d) {
                        c.playStartTime && c.loadStartTime && c.playStartTime - c.loadStartTime <= 200 && (c.loadStartTime = c.loadCompleteTime = c.playStartTime), a.push({
                            vid: c.vid || "",
                            format: "",
                            stime: c.loadStartTime || "",
                            letime: c.loadCompleteTime || "",
                            pstime: c.playStartTime || "",
                            petime: c.playEndTime || "",
                            playduration: c.playduration || 0,
                            duration: c.duration || 0,
                            quic: b.context.dataset.isQuic || 0,
                            quicver: b.context.dataset.quicVer || "",
                            code: c.errorCode || ""
                        })
                    });
                    var c = d.extend(this.getDefaultParams(), {data: JSON.stringify(a)});
                    c.step = 25, this.report(c)
                }
            }, step30: function (a) {
                a = a || {};
                var b = {
                    stime: this.dataset.playTime || "",
                    etime: this.dataset.playingTime || +new Date,
                    p2p_ctime: this.context.dataset.connectionPlayTime,
                    p2p_pretime: this.context.dataset.skipPrelude ? this.context.dataset.playStartTime : 0,
                    bufferduration: "",
                    vt: this.context.dataset.cdnID || "",
                    url: a.url || this.context.dataset.currentVideoUrl || "",
                    urlindex: this.context.dataset.urlIndex,
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    code: this.dataset.errorCodeOfStep30 || ""
                };
                this.dataset.hlsPlayTimeTheFirstTime && (b.stime = this.dataset.hlsPlayTimeTheFirstTime), this.dataset.hlsFirstFragementLoadEndTime && (this.context.dataset.hasLdAd && (b.etime = this.dataset.hlsFirstFragementLoadEndTime), e.v4log("step30-\u9996\u6b21\u52a0\u8f7d\u89c6\u9891\u8017\u65f6(m3u8\u5f00\u59cb\u5230\u7b2c\u4e00\u4e2ats30%\u4e0b\u8f7d\u5b8c)", {
                    stime: this.dataset.hlsPlayTimeTheFirstTime,
                    etiem: this.dataset.hlsFirstFragementLoadEndTime,
                    costtime: this.dataset.hlsFirstFragementLoadEndTime - this.dataset.hlsPlayTimeTheFirstTime
                })), e.v4log("step30-\u9996\u6b21\u52a0\u8f7d\u89c6\u9891\u8017\u65f6(\u6bcf\u9694100ms\u8f6e\u8be2video\u7684buffer\uff0c\u7b49buffer\u65f6\u957f\u5927\u4e8e3\u79d2", {
                    stime: this.dataset.hlsPlayTimeTheFirstTime,
                    etiem: this.dataset.playingTime,
                    costtime: this.dataset.playingTime - this.dataset.hlsPlayTimeTheFirstTime
                }), "undefined" != typeof this.context.dataset.adblockWaringCount && (b.cacdc = this.context.dataset.adblockWaringCount, this.context.dataset.adblockWaringCount = void 0), b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 30, this.report(b)
            }, step31: function () {
                var a = {
                    type: this.context.dataset.useChromeHls ? 2 : 1,
                    stime: this.dataset.switchDefnPlayTime,
                    etime: this.dataset.switchDefnPlayingTime,
                    bufferduration: "",
                    url: "",
                    urlindex: this.context.dataset.urlIndex,
                    vt: this.context.dataset.cdnID,
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    code: this.dataset.errorCodeOfStep31 || ""
                };
                a = d.extend(this.getDefaultParams(), {data: JSON.stringify(a)}), a.step = 31, this.report(a)
            }, step35: function () {
                if (!(this.dataset.waitingStartTime && this.dataset.waitingEndTime && this.dataset.waitingEndTime - this.dataset.waitingStartTime <= 200) && !(this.dataset.waitingDuration < 200) && this.context.dataset.currentTime && !(this.context.dataset.bfTimeStart4564 && this.context.dataset.bfTimeStart4564 - this.context.dataset.currentTime >= 5)) {
                    if (this.context.dataset.useChromeHls) {
                        this.context.msg.broadcast("reportChromeHlsError", 0);
                        var a = this.context.dataset.definition;
                        this.context.msg.broadcast("setChromeHlsData", {
                            k: "__stuck__",
                            v: {defn: a && a.replace("auto-", "") || "", vid: this.context.dataset.vid}
                        })
                    }
                    var b = this.context.dataset.currentVideoUrl, c = {
                        val: [{
                            reason: "",
                            scene: 1 != this.context.dataset.playbackRate ? 2 : 1,
                            format: this.context.dataset.currentDefinitionFormat || "",
                            ptime: this.context.dataset.currentTime || "",
                            stime: this.dataset.waitingStartTime || "",
                            etime: this.dataset.waitingEndTime || "",
                            code: this.dataset.errorCodeOfStep35 || "",
                            quic: this.context.dataset.isQuic || 0,
                            quicver: this.context.dataset.quicVer || "",
                            url: b
                        }], tcount: 1, tduration: this.dataset.waitingDuration || ""
                    };
                    e.v4log("\u7f13\u51b2\u7b56\u7565-reportstep35", c), c = d.extend(this.getDefaultParams(), {data: JSON.stringify(c)}), c.step = 35, this.report(c)
                }
            }, step40: function (a) {
                a = a || {};
                var b = {
                    tcount: 1,
                    tbcount: 0,
                    tbduration: this.dataset.seekWaitingDuration || 0,
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    val: {
                        format: this.context.dataset.currentDefinitionFormat,
                        pstime: a.currentTimeWhenSeekStart || this.dataset.currentTimeWhenSeekStart || "",
                        petime: a.currentTimeWhenSeekEnd || "",
                        code: this.dataset.errorCodeOfStep40 || ""
                    }
                };
                this.dataset.seekWaitingStartTime && a.isSeekOfWaiting ? (b.val.lstime = this.dataset.seekWaitingStartTime, b.val.letime = this.dataset.seekEndTime, b.tbcount = 1) : (b.val.lstime = 0, b.val.letime = 0, b.tbduration = 0), b.val = [b.val], b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 40, this.report(b), delete this.dataset.seekWaitingDuration
            }, step45: function () {
                var a = {
                    reason: "",
                    auto: 1,
                    format: this.context.dataset.currentDefinitionFormat || "",
                    pstime: this.dataset.switchDefnStartVideoTime || "",
                    petime: this.dataset.switchDefnEndVideoTime || "",
                    lstime: this.dataset.switchDefnPlayTime || "",
                    letime: this.dataset.switchDefnPlayingTime || +new Date,
                    url: this.context.dataset.currentVideoUrl || "",
                    urlindex: this.context.dataset.urlIndex,
                    vt: this.context.dataset.cdnID,
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    code: this.dataset.errorCodeOfStep45 || ""
                };
                a = d.extend(this.getDefaultParams(), {data: JSON.stringify(a)}), a.step = 45, this.report(a)
            }, step50: function (a) {
                var b = a || this.getStep50Data();
                try {
                    var c = JSON.parse(b.data);
                    c.code && c.code.indexOf("13083") > 0 ? (this.report(b, "4564"), c.code = "", b.data = JSON.stringify(c), this.report(b)) : (b.data.quic = this.context.dataset.isQuic || 0, b.data.quicver = this.context.dataset.quicVer || "", this.report(b))
                } catch (d) {
                }
                this.handlerStep50Data("delete", b.vid)
            }, getStep50Data: function (a) {
                a = a || {};
                var b = {
                    reason: a.reason || 0,
                    etime: +new Date,
                    playduration: this.dataset.userPlayedTime,
                    quic: this.context.dataset.isQuic || 0,
                    quicver: this.context.dataset.quicVer || "",
                    code: this.dataset.errorCodeOfStep50 || ""
                };
                return b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 50, b.seq = this.dataset.sequence ? this.dataset.sequence + 1 : 1, b
            }, autoReportStep50: function (a) {
                a = a || {}, a.hasOwnProperty("limitTime") || (a.limitTime = !0);
                var b = this.handlerStep50Data("get");
                if ("object" == d.type(b)) for (var c in b) if ("object" === d.type(b[c]) && (!a.prevVid || a.prevVid === c)) {
                    if (a.limitTime && +new Date - b[c].updateTime < 3e4) continue;
                    delete b[c].updateTime, this.step50(b[c]), this.handlerStep50Data("delete", b[c].vid)
                }
            }, autoSaveStep50Data: function () {
                var a = this.getStep50Data({reason: 1});
                a && a.vid && (a.updateTime = +new Date, this.handlerStep50Data("save", this.context.dataset.vid, a))
            }, handlerStep50Data: function (a, b, c) {
                if ("delete" !== a && "save" !== a || b) {
                    var f, g, h, i = Txplayer.dataset.localStorageKey.userPlayedTime;
                    f = e.getData(i), f || (f = "{}");
                    try {
                        g = JSON.parse(f)
                    } catch (j) {
                        h = !0
                    }
                    if (h || !g || "object" != d.type(g)) return void e.delData(i);
                    if ("delete" === a && g[b]) delete g[b], e.setData(i, JSON.stringify(g)); else {
                        if ("get" === a) return b ? g[b] : g;
                        "save" === a && c && (g[b] = c, e.setData(i, JSON.stringify(g)))
                    }
                }
            }, deleteErrorCodes: function () {
                for (var a in this.dataset) a && 0 == a.indexOf("errorCodeOfStep") && delete this.dataset[a]
            }, step36: function (a) {
                a = a || {};
                var b = {
                    type: a.type,
                    format: this.context.dataset.currentDefinitionFormat,
                    tcount: a.retryTimes,
                    ptime: this.context.dataset.currentTime,
                    stime: this.dataset.playTime,
                    etime: +new Date,
                    url: a.url || "",
                    code: a.code || "",
                    appver: Txplayer.dataset.ver,
                    guid: this.context.dataset.guid || ""
                };
                this.dataset.hlsPlayTime && (b.stime = this.dataset.hlsPlayTime), b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 36, this.report(b, "4564")
            }, step15_4564: function (a) {
                a = a || {};
                var b = {
                    stime: a.startTime,
                    etime: a.endTime,
                    code: a.errCode || "",
                    ip: this.context.dataset.reportUsrIP || "",
                    url: a.url || ""
                };
                b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 15, this.report(b, "4564")
            }, step20_4564: function (a) {
                a = a || {};
                var b = {
                    stime: a.startTime,
                    etime: a.endTime,
                    code: a.errCode || "",
                    ip: this.context.dataset.reportUsrIP || "",
                    url: a.url || ""
                };
                b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 20, this.report(b, "4564")
            }, step35_4564: function () {
                if (!(this.dataset.waitingStartTime && this.dataset.waitingEndTime && this.dataset.waitingEndTime - this.dataset.waitingStartTime <= 200) && !(this.dataset.waitingDuration < 200) && this.context.dataset.currentTime) {
                    var a = "1." + this.context.dataset.videoWaitingReason, b = {
                        reason: a || "",
                        appver: Txplayer.dataset.ver,
                        stime: this.dataset.waitingStartTime || "",
                        etime: this.dataset.waitingEndTime || "",
                        ptime: this.context.dataset.currentTime || "",
                        btime: this.context.dataset.bfTimeStart4564 || "",
                        betime: this.context.dataset.bfTimeEnd4564 || "",
                        duration: this.dataset.waitingDuration || "",
                        code: this.dataset.errorCodeOfStep35 || "",
                        ip: this.context.dataset.reportUsrIP || "",
                        url: this.context.dataset.currentVideoUrl || "",
                        format: this.context.dataset.currentDefinitionFormat || "",
                        scene: this.context.dataset.playbackRate || "",
                        dltype: this.context.dataset.useHls ? this.context.dataset.dltype || 3 : 1
                    };
                    b = d.extend(this.getDefaultParams(), {data: JSON.stringify(b)}), b.step = 35, this.context.dataset.bfTimeStart4564 = 0, this.context.dataset.bfTimeEnd4564 = 0, this.context.dataset.videoWaitingReason = "", this.report(b, "4564")
                }
            }, addEventListener: function () {
                var a = this, b = 0;
                this.autoReportStep50(), this.context.msg.on("beforeVideoPlay", function () {
                    a.dataset.hlsPlayTimeTheFirstTime = null, a.dataset.hlsPlayTime = null, a.dataset.hasReportAd = !1, a.dataset.hlsFirstFragementLoadStartTime = null, a.dataset.hlsFirstFragementLoadEndTime = null
                }), this.context.msg.on("getVideoUrlSuccess", function () {
                    delete a.dataset.switchDefnPlayingTime, delete a.dataset.switchDefnPlayTime
                }), this.context.config.pageInitTime && this.step0(), this.context.dataset.isReady ? a.step5() : this.context.msg.on("ready", function () {
                    a.step5()
                }), this.context.msg.on("getinfoFinish", function (b) {
                    a.step15_4564({
                        startTime: b.startTime,
                        endTime: b.endTime,
                        url: b.getinfoURL,
                        errCode: b.errCode || ""
                    }), b && b.err && !b.isLastRetry || a.step15(b)
                }), this.context.msg.on("getkeyFinish", function (b) {
                    a.step20_4564({
                        startTime: b.startTime,
                        endTime: b.endTime,
                        url: b.getkeyURL,
                        errCode: b.errCode || ""
                    }), b && b.err && !b.isLastRetry && !b.em || a.step20(b)
                }), this.context.msg.on("videoPlaying", function (b) {
                    if (b = b || {}, "film" === b.playListType) {
                        if (a.dataset.hasReportAd) return;
                        a.dataset.adReportData = a.context.adApi && a.context.adApi.getAdReportData(), a.step25(), a.dataset.hasReportAd = !0;
                        var c = a.dataset.playTime || "", d = a.dataset.playingTime || +new Date;
                        a.dataset.hlsPlayTimeTheFirstTime && (c = a.dataset.hlsPlayTimeTheFirstTime), a.dataset.hlsFirstFragementLoadEndTime && a.context.dataset.hasLdAd && (d = a.dataset.hlsFirstFragementLoadEndTime);
                        var e = d - c;
                        a.context.msg.broadcast("setChromeHlsData", {k: "onplay", v: {start_play_cost: e || ""}})
                    }
                }), this.context.msg.on("videoPlay.h5report-step30", function (b) {
                    "film" === b.playListType && (a.dataset.playTime || (a.dataset.playTime = +new Date, e.v4log("videoPlay.h5report-step30", {playTime: a.dataset.playTime})), a.dataset.currentVideoIndex = b.index)
                }), this.context.msg.on("setPreloadVideoUrlReport.h5report-step30", function () {
                    a.dataset.playTime || (a.dataset.playTime = +new Date, e.v4log("setPreloadVideoUrlReport.h5report-step30", {playTime: a.dataset.playTime}))
                }), this.context.msg.on("hlsStartPlay.h5report-step30", function (b) {
                    a.dataset.hlsPlayTimeTheFirstTime || (a.dataset.hlsPlayTimeTheFirstTime = +new Date), b.forceUpdate && (a.dataset.hlsPlayTimeTheFirstTime = b.stime), e.v4log("hlsStartPlay", {hlsPlayTime: a.dataset.hlsPlayTimeTheFirstTime}), a.dataset.hlsPlayTime = +new Date
                }), this.context.msg.on("hlsFirstFragementLoadFinish", function (b) {
                    a.dataset.hlsFirstFragementLoadEndTime || (e.v4log("step30-\u52a0\u8f7d\u5b8c\u7b2c\u4e00\u5e27\u753b\u9762", {
                        time: b.time,
                        loaded: b.loaded
                    }), a.dataset.hlsFirstFragementLoadEndTime = b.time)
                }), this.context.msg.on("loadEnoughBuffer.h5report-step30", function (b) {
                    var c = a.dataset.hasOwnProperty("playingTime");
                    e.v4log("loadEnoughBuffer", +new Date), a.dataset.playingTime = +new Date, e.v4log("loadEnoughBuffer", {playingTime: a.dataset.playingTime}), e.v4log("step30-loadEnoughBuffer: ", {time: a.dataset.playingTime}), a.deleteErrorCodes(), c || a.step30({url: b.src})
                }), this.context.msg.on("videoCanplay.h5report-step30", function (c) {
                    if (e.v4log("videoCanplay", +new Date), b = 0, "film" === c.playListType && !a.context.dataset.useHls) {
                        var d = a.dataset.hasOwnProperty("playingTime");
                        a.dataset.playingTime = +new Date, a.deleteErrorCodes(), d || (e.v4log("MP4videoCanplay", {playingTime: a.dataset.playingTime}), a.step30({url: c.src}))
                    }
                }), this.context.msg.on("setDefinitionStart", function (b) {
                    a.dataset.switchDefnStartVideoTime = a.context.dataset.currentTime;
                    var c = function () {
                        a.context.msg.off("videoPlay.h5report-step31"), a.context.msg.off("videoPlaying.h5report-step31"), a.context.msg.off("reportVideoError.h5report-step31")
                    };
                    a.context.msg.once("videoPlay.h5report-step31", function (b) {
                        a.dataset.switchDefnPlayTime = +new Date
                    }), a.context.msg.once("videoPlaying.h5report-step31", function (b) {
                        a.dataset.switchDefnHasReported = a.dataset.hasOwnProperty("switchDefnPlayingTime"), a.dataset.switchDefnPlayingTime = +new Date, a.dataset.currentVideoIndex = b.index, c()
                    })
                }), this.context.msg.on("setDefinitionDone", function (b) {
                    b && b.hasOwnProperty("hlsDefinitionEndTime") && (a.dataset.switchDefnPlayTime = a.dataset.switchDefnPlayingTime = b.hlsDefinitionEndTime), a.dataset.switchDefnEndVideoTime = a.context.dataset.currentTime, a.step45(), a.dataset.switchDefnHasReported || a.step31()
                }), this.context.msg.on("setDefinitionFail", function (b) {
                    a.dataset.switchDefnEndVideoTime = a.context.dataset.currentTime, b.errCode && (a.dataset.errorCodeOfStep45 = b.errCode, a.step45(), delete a.dataset.errorCodeOfStep45)
                });
                var c = function () {
                    a.dataset.hasOwnProperty("waitingTimes") || (a.dataset.waitingTimes = 0), a.dataset.waitingTimes++
                }, f = function () {
                    var b = a.dataset.waitingEndTime - a.dataset.waitingStartTime;
                    b > 3e4 && (b = 3e4), "number" !== d.type(a.dataset.waitingDuration) && (a.dataset.waitingDuration = 0), a.dataset.waitingDuration = b
                }, g = function (b) {
                    e.v4log("\u7f13\u51b2\u63a7\u5236-step35\u66f4\u65b0\u7f13\u51b2\u5f00\u59cb\u65f6\u95f4", {waitingTimes: a.dataset.waitingTimes}), a.dataset.waitingTimes > 20 || (a.dataset.waitingStartTime = +new Date, c(), a.context.dataset.loadEnoughBuffer || (a.context.msg.off("videoPlaying.h5report-step35"), a.context.msg.once("videoPlaying.h5report-step35", function () {
                        a.dataset.waitingEndTime = +new Date, f(), delete a.dataset.errorCodeOfStep35, a.step35(), a.context.dataset.videoWaitingReason = 8, a.step35_4564()
                    })))
                };
                this.context.msg.on("videoWaiting", function (b) {
                    e.v4log("videoWaiting", {isVideoSeeking: a.context.dataset.isVideoSeeking}), b && !b.seeking && "film" === b.playListType && a.dataset.hasOwnProperty("playingTime") && (a.context.dataset.isVideoSeeking || a.context.dataset.isDefinitionSwitching || g(b))
                }), this.context.msg.on("networkBadStart", function (b) {
                    "film" === b.playListType && (b.isOnWaiting || a.context.dataset.isVideoSeeking || a.context.dataset.isDefinitionSwitching || a.dataset.hasOwnProperty("playingTime") && g(b))
                }), this.context.msg.on("minbufferControlEnd", function (b) {
                    a.context.dataset.loadEnoughBuffer && (a.dataset.hasOwnProperty("waitingTimes") && a.dataset.waitingTimes > 20 || a.dataset.hasOwnProperty("waitingStartTime") && (a.dataset.waitingEndTime = +new Date, f(), delete a.dataset.errorCodeOfStep35, a.step35(), a.step35_4564()))
                });
                var h = function () {
                    return a.dataset.userSeekTimes > 32 || (a.dataset.hasOwnProperty("userSeekTimes") || (a.dataset.userSeekTimes = 1), !1)
                };
                this.context.msg.on("seekStart", function (b) {
                    b && b.isUserAction === !1 || h() || (b.currentTimeWhenSeekStart && (a.dataset.currentTimeWhenSeekStart = b.currentTimeWhenSeekStart), a.dataset.seekStartTime = +new Date, "number" !== d.type(a.dataset.seekTimes) && (a.dataset.seekTimes = 0), a.dataset.seekTimes += 1, a.context.msg.off("videoWaiting.h5report-step40"), a.context.msg.off("reportVideoError.h5report-step40"), a.context.msg.once("videoPlaying.h5report-step40", function (b) {
                        b && b.seeking && "film" === b.playListType && (a.context.msg.off("videoWaiting.h5report-step40"), a.context.msg.off("reportVideoError.h5report-step40"))
                    }))
                }), this.context.msg.on("seekEnd", function (b) {
                    if ((!b || b.isUserAction !== !1) && !h() && (a.dataset.seekEndTime = +new Date, a.context.msg.off("videoWaiting.h5report-step40"), a.context.msg.off("reportVideoError.h5report-step40"), b && b.seekStartTime && b.seekEndTime)) {
                        var c = b.seekEndTime - b.seekStartTime, d = c > 200;
                        d && (a.dataset.seekWaitingDuration = c, a.dataset.seekWaitingStartTime = b.seekStartTime), delete a.dataset.errorCodeOfStep40, a.step40({
                            currentTimeWhenSeekStart: b.currentTimeWhenSeekStart,
                            currentTimeWhenSeekEnd: b.currentTimeWhenSeekEnd,
                            isSeekOfWaiting: d
                        }), delete a.dataset.seekWaitingStartTime, a.dataset.userSeekTimes += 1
                    }
                }), this.context.msg.on("videoTimeUpdate", function (b) {
                    return b && "film" === b.playListType ? ("number" != typeof a.dataset.userPlayedTime && (a.dataset.userPlayedTime = 0), void (a.context.dataset.isPlayingHlsAd || (a.dataset.userPlayedTime++, a.autoSaveStep50Data()))) : void a.autoSaveStep50Data()
                }), this.context.msg.on("videoEnd.h5report-step50", function (b) {
                    b && "film" === b.playListType && b.isTheLastFilm && (e.v4log("videoEnd-step50"), a.step50(), delete a.dataset.userPlayedTime)
                }), this.context.msg.on("error.h5report-step50", function (b) {
                    b && "film" !== b.type && "cgi" !== b.type || (b && b.errCode && (a.dataset.errorCodeOfStep50 = b.errCode, a.dataset.hasOwnProperty("playingTime") || (a.dataset.errorCodeOfStep30 = b.errCode)), !a.dataset.hasOwnProperty("playingTime") && a.dataset.errorCodeOfStep30 ? (a.step30(), delete a.dataset.errorCodeOfStep30) : a.dataset.hasOwnProperty("playingTime") && (a.dataset.errorCodeOfStep31 ? (a.step31(), a.dataset.errorCodeOfStep45 = a.dataset.errorCodeOfStep31, a.step45(), delete a.dataset.errorCodeOfStep45, delete a.dataset.errorCodeOfStep31) : a.dataset.errorCodeOfStep40 ? (a.step40(), delete a.dataset.errorCodeOfStep40) : a.dataset.errorCodeOfStep35 && (a.step35(), a.step35_4564(), delete a.dataset.errorCodeOfStep35)), a.dataset.step50_TIMER && (clearTimeout(a.dataset.step50_TIMER), a.dataset.step50_TIMER = null), a.dataset.step50_TIMER = setTimeout(function () {
                        a.step50(), delete a.dataset.errorCodeOfStep50
                    }, 50))
                }), this.context.msg.on("vidChange", function (c, d) {
                    e.v4log("vidChange-autoReportStep50"), a.autoReportStep50({
                        limitTime: !1,
                        prevVid: d
                    }), b = 0, a.resetDataset()
                }), this.context.msg.on("bulletNumShow", function () {
                    var b = a.context.msg.listeners("playStateChange.float").length, c = "";
                    d("script").each(function (a, b) {
                        b.src && b.src.indexOf("vplay") != -1 && (c = b.src)
                    });
                    var e = {
                        open: 1,
                        event: b,
                        type: 3,
                        "switch": a.context.dataset.flashBulletSwitchStatus ? 1 : 0,
                        state: a.context.dataset.playState > 0 ? a.context.dataset.playState : 100,
                        vplaysrc: c
                    };
                    e = d.extend(a.getDefaultParams(), {data: JSON.stringify(e)}), e.step = 70, a.report(e, "4564")
                }), this.context.msg.on("reportVideoError", function (c) {
                    if (c = c || {}, "film" === c.type) {
                        var d;
                        a.dataset.hasOwnProperty("playingTime") ? a.context.dataset.isDefinitionSwitching ? (d = 3, a.dataset.errorCodeOfStep31 = c.code) : a.context.dataset.isVideoSeeking ? (d = 2, a.dataset.errorCodeOfStep40 = c.code) : (d = 1, a.dataset.errorCodeOfStep35 = c.code) : (d = 0, a.dataset.errorCodeOfStep30 = c.code), c.url && c.url.indexOf && c.url.indexOf("blob:") > -1 && (c.url = a.context.dataset.currentVideoUrl), a.step36({
                            type: d,
                            code: c.code,
                            url: c.url,
                            retryTimes: b++
                        })
                    }
                })
            }
        }, Txplayer.register("v4H5Report", c)
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(300)
    }, 68: function (a, b) {
        var c = {unstarted: -1, ended: 0, playing: 1, paused: 2, buffering: 3, cued: 4, stop: 5}, d = {
            msd: "\u6d41\u7545180P",
            sd: "\u6807\u6e05270P",
            hd: "\u9ad8\u6e05480P",
            shd: "\u8d85\u6e05720P",
            fhd: "\u84dd\u51491080P",
            uhd: "4K"
        };
        a.exports = {playerstate: c, definitionMap: d}
    }, 300: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util;
        c(68).definitionMap;
        d.prototype = {
            init: function () {
                this.dataset.dataKey = Txplayer.dataset.localStorageKey.playTime, this.dataset.videoPlayedIndex = -1, this.addEventListener(), this.exportsModuleApis()
            }, resetDataset: function () {
                if (this.dataset.isGetinfoDone) {
                    var a = ["videoPlayedIndex", "isGetinfoDone", "dataKey", "prevDefinition", "setDefinitionStartTime", "hasReportLoadingadLoadTime", "filmFirstPlayingTime"];
                    for (var b in this.dataset) e.inArray(b, a) > -1 || ("realPlayTime_TIMER" !== b && "totalPlayTime_TIMER" !== b || clearInterval(this.dataset[b]), delete this.dataset[b])
                }
            }, resetDatasetOnVidChange: function () {
                var a = ["hasGetVplayPageRecoReport", "isGetinfoDone", "setDefinitionStartTime", "hasReportLoadingadLoadTime", "filmFirstPlayingTime", "timeupdateCounter"],
                    b = this;
                e.each(a, function (a, c) {
                    delete b.dataset[c]
                }), "coolOpen" === this.context.config.playerType && (Txplayer.dataset.vplayPageRecoReport = null)
            }, getVplayPageRecoReport: function () {
                try {
                    var a = sessionStorage.getItem("report_recomm_player");
                    a ? Txplayer.dataset.vplayPageRecoReport = a : "coolOpen" === this.context.config.playerType && (Txplayer.dataset.vplayPageRecoReport = a), sessionStorage.removeItem("report_recomm_player")
                } catch (b) {
                }
            }, getDefaultReportData: function () {
                var a = this;
                !this.dataset.hasGetVplayPageRecoReport && this.context.config.reportRecomm && (this.dataset.hasGetVplayPageRecoReport = !0, "coolOpen" === this.context.config.playerType ? setTimeout(function () {
                    a.getVplayPageRecoReport()
                }) : this.getVplayPageRecoReport());
                var b = this.context.dataset.txplayerAuth.raw(), c = {
                    uin: Txplayer.util.getQQFromCookie(),
                    vid: this.context.dataset.vid || "",
                    coverid: this.context.dataset.cid || "",
                    pid: this.context.dataset.playerId || "",
                    guid: this.context.dataset.guid || "",
                    cmid: this.context.dataset.guid || "",
                    unid: this.context.dataset.unid || "",
                    vt: this.getCDNChannelId(),
                    type: this.getBusinessType(),
                    url: document.URL,
                    bi: this.getCurrentVideoDuration(),
                    bt: this.context.dataset.originDuration || "",
                    version: Txplayer.dataset.ver || "",
                    platform: this.context.dataset.platform,
                    format: this.context.dataset.currentDefinitionFormat || "",
                    defn: this.context.dataset.definition || "",
                    ctime: f.dateFormat(),
                    ptag: f.getPTAG(),
                    isvip: -1,
                    tpid: this.context.dataset.tpid || "",
                    pversion: this.context.config.playerType,
                    hc_uin: Txplayer.util.getQQFromCookie(),
                    hc_main_login: b.main_login,
                    hc_vuserid: b.vuserid || Txplayer.util.cookie.get("vuserid"),
                    hc_openid: b.openid,
                    hc_appid: b.appid,
                    hc_pvid: Txplayer.util.cookie.get("pgv_pvid"),
                    hc_ssid: Txplayer.util.cookie.get("psessionid"),
                    hc_qq: Txplayer.util.getQQFromCookie(),
                    ua: f.getReportUA(),
                    hh_ua: f.getReportUA(),
                    ckey: this.context.dataset.ckey || "",
                    iformat: this.context.dataset.currentDefinitionFormat || "",
                    hh_ref: f.getTopFrameUrl(),
                    vurl: this.context.dataset.currentVideoUrl || "",
                    v_idx: this.dataset.videoPlayedIndex || 0,
                    rcd_info: Txplayer.dataset.vplayPageRecoReport || "",
                    extrainfo: this.context.config.extrainfo || "",
                    bucket_id: Txplayer.util.cookie.get("bucket_id"),
                    drm: this.context.dataset.emeEnabled ? 1 : 0
                };
                return this.context && this.context.config && "function" === e.type(this.context.config.getUserType) && (c.isvip = 2 == this.context.config.getUserType() ? 1 : 0), c.triggerplay = this.context.config.triggerplay || "undefined" == typeof this.context.config.triggerplay ? 1 : 0, c
            }, reportStep3: function (a) {
                var b = {
                    step: 3,
                    val: 0 === this.context.dataset.connectionPlayType ? 1 : 2,
                    idx: this.context.dataset.connectionPlayType,
                    c_info: this.context.config.getOuterReportData(),
                    pcplatform: f.getPcPlatform()
                }, c = {width: this.context.dataset.playerWidth, height: this.context.dataset.playerHeight};
                c && c.width && c.height && (b.diagonal = parseInt(Math.sqrt(Math.pow(c.width, 2) + Math.pow(c.height, 2)))), b.isfocustab = this.context.dataset.isWindowFocus, b.isvisible = this.context.msg.getData("isPlayerInScreen"), b.isfocustab = b.isfocustab ? 1 : 0, b.isvisible = b.isvisible ? 1 : 0, this.doBossReport(b)
            }, reportStep4: function () {
                var a = {
                    step: 4,
                    val: this.context.dataset.playList.length,
                    val1: 1,
                    bi: this.context.dataset.hasOwnProperty("isPlayingAd") ? 2 : 1,
                    idx: this.context.dataset.connectionPlayType,
                    c_info: this.context.config.getOuterReportData(),
                    pcplatform: f.getPcPlatform()
                }, b = {width: this.context.dataset.playerWidth, height: this.context.dataset.playerHeight};
                b && b.width && b.height && (a.diagonal = parseInt(Math.sqrt(Math.pow(b.width, 2) + Math.pow(b.height, 2)))), a.isfocustab = this.context.dataset.isWindowFocus, a.isvisible = this.context.msg.getData("isPlayerInScreen"), a.isfocustab = a.isfocustab ? 1 : 0, a.isvisible = a.isvisible ? 1 : 0, a.reportFrom = this.context.config.reportFrom, this.doBossReport(a)
            }, reportStep5: function (a) {
                a = a || {};
                var b;
                a.isEnd ? b = {
                    step: 5,
                    val: 1e3 * a.realtime,
                    val1: a.isEnd ? 1 : 2,
                    val2: a.totaltime_pip || 0,
                    bi: a.totaltime
                } : (b = a, b.val1 = a.isEnd ? 1 : 2, b.val = 1e3 * a.realtime, b.bi = a.totaltime, b.step = 5, delete b.isEnd, delete b.realtime, delete b.totaltime), b.idx = this.context.dataset.connectionPlayType;
                var c = {width: this.context.dataset.playerWidth, height: this.context.dataset.playerHeight};
                c && c.width && c.height && (b.diagonal = parseInt(Math.sqrt(Math.pow(c.width, 2) + Math.pow(c.height, 2)))), a.vid && (b.vid = a.vid), b.isfocustab = this.context.dataset.isWindowFocus, b.isvisible = this.context.msg.getData("isPlayerInScreen"), b.isfocustab = b.isfocustab ? 1 : 0, b.isvisible = b.isvisible ? 1 : 0, b.c_info = this.context.config.getOuterReportData(), b.pcplatform = f.getPcPlatform(), this.doBossReport(b)
            }, reportStep6: function (a) {
                var b = {
                    step: 6,
                    val: a.firstLoadTime,
                    val1: this.getReport6Status(),
                    val2: 1,
                    idx: this.context.dataset.connectionPlayType,
                    bi: "",
                    bt: "",
                    c_info: this.context.config.getOuterReportData(),
                    pcplatform: f.getPcPlatform()
                }, c = {width: this.context.dataset.playerWidth, height: this.context.dataset.playerHeight};
                if (c && c.width && c.height && (b.diagonal = parseInt(Math.sqrt(Math.pow(c.width, 2) + Math.pow(c.height, 2)))), b.isfocustab = this.context.dataset.isWindowFocus, b.isvisible = this.context.msg.getData("isPlayerInScreen"), b.isfocustab = b.isfocustab ? 1 : 0, b.isvisible = b.isvisible ? 1 : 0, this.dataset.adReportData && this.dataset.adReportData.list.length > 0 && this.dataset.adReportData.loadingAdEndTime && this.dataset.adReportData.loadingadProgressedTime) {
                    var d = this.dataset.adReportData.list[0].playEndTime,
                        e = this.dataset.adReportData.list[0].loadCompleteTime;
                    d && e && (b.bi = d - e)
                }
                this.doBossReport(b)
            }, reportStep7: function (a) {
                var b = {
                    step: 7,
                    val: 0,
                    val1: 0,
                    idx: this.context.dataset.connectionPlayType,
                    c_info: this.context.config.getOuterReportData(),
                    pcplatform: f.getPcPlatform()
                };
                this.doBossReport(b)
            }, reportStep70: function (a) {
                var b = {step: 70, val: a};
                this.doBossReport(b)
            }, reportStep30: function (a) {
                var b = {
                    step: 30,
                    val: a.loadTime,
                    val1: a.hasOwnProperty("val1") ? a.val1 : 0,
                    val2: 2,
                    bi: this.context.dataset.videoDuration
                };
                this.context.dataset.useHls ? b.val2 = 3 : "html5hd" === this.context.config.playerType ? b.val2 = 1 : "ipadh5" !== this.context.config.playerType && "h5" !== this.context.config.playerType || (b.val2 = 2), this.doBossReport(b)
            }, reportStep50: function (a) {
                var b = {
                    step: 50,
                    val: a.loadTime || "",
                    val1: a.hasOwnProperty("val1") ? a.val1 : 0,
                    val2: 1,
                    bi: this.context.dataset.videoDuration
                };
                this.context.dataset.useHls ? b.val2 = 3 : "html5hd" === this.context.config.playerType ? b.val2 = 1 : "ipadhtml5" !== this.context.config.playerType && "h5" !== this.context.config.playerType || (b.val2 = 2), this.doBossReport(b)
            }, reportStep60: function (a) {
                var b = {
                    step: 60,
                    val: a.seekCostTime,
                    val1: a.hasOwnProperty("val1") ? a.val1 : 0,
                    val2: 1,
                    bi: this.context.dataset.videoDuration
                };
                this.context.dataset.useHls ? b.val2 = 3 : "html5hd" === this.context.config.playerType ? b.val2 = 1 : "ipadh5" !== this.context.config.playerType && "h5" !== this.context.config.playerType || (b.val2 = 2), this.doBossReport(b)
            }, reportStep31_51: function (a) {
                if (a.hasOwnProperty("waitingTime")) {
                    var b = a.waitingTime > 1e4;
                    a.waitingTime = b ? 1e4 : a.waitingTime;
                    var c = {
                        step: a.step,
                        val: a.waitingTime,
                        val1: b,
                        val2: 1,
                        bi: this.context.dataset.videoDuration || this.context.dataset.duration,
                        bt: this.context.dataset.duration
                    };
                    this.context.dataset.useHls ? c.val2 = 3 : "html5hd" === this.context.config.playerType ? c.val2 = 1 : "ipadh5" !== this.context.config.playerType && "h5" !== this.context.config.playerType || (c.val2 = 2), this.doBossReport(c)
                }
            }, reportStep35: function (a) {
                a = a || {};
                var b;
                this.dataset.loadingadEndTime = this.dataset.adReportData.loadingAdEndTime, this.context.dataset.adDuration = this.dataset.adReportData.adDuration, "number" !== e.type(this.dataset.filmFirstPlayingTime) || "number" !== e.type(this.dataset.loadingadEndTime) && "number" !== e.type(this.dataset.filmFirstPlayTime) || (b = this.dataset.filmFirstPlayingTime - (this.dataset.loadingadEndTime || this.dataset.filmFirstPlayTime)), Txplayer.util.v4log("4298-Step35-loading\u5e7f\u544a\u5207\u6b63\u7247\u8017\u65f6", {
                    swtichTime: b,
                    filmFirstPlayingTime: this.dataset.filmFirstPlayingTime,
                    filmFirstPlayTime: this.dataset.filmFirstPlayTime,
                    loadingadEndTime: this.dataset.loadingadEndTime
                });
                var c = {
                    step: 35,
                    val: a.swtichTime || b,
                    val1: "",
                    val2: this.context.dataset.adDuration || 0,
                    bi: this.context.dataset.videoDuration
                };
                "number" === e.type(this.context.dataset.preloadStartTime) && "number" === e.type(this.dataset.loadingadEndTime) && (c.val1 = this.dataset.loadingadEndTime - this.context.dataset.preloadStartTime), this.doBossReport(c)
            }, reportStep55: function (a) {
                var b = {
                    step: 55,
                    val: a.swtichTime,
                    val1: "",
                    val2: a.prevFilmDuration,
                    bi: this.context.dataset.videoDuration
                };
                this.doBossReport(b)
            }, reportStep100: function (a) {
                var b = {
                    step: 100,
                    val: a.costTime,
                    val1: a.val1,
                    val2: 1,
                    bi: this.context.dataset.videoDuration,
                    predefn: a.predefn
                };
                this.context.dataset.useHls ? b.val2 = 3 : "html5hd" === this.context.config.playerType ? b.val2 = 1 : "ipadh5" !== this.context.config.playerType && "h5" !== this.context.config.playerType || (b.val2 = 2), this.doBossReport(b)
            }, reportStep1011: function (a) {
                var b = {step: "1011", val1: 0, val2: 0, vt: 0};
                b.val = a.costTime, a.err ? a.code ? (b.val1 = 3, b.val2 = a.code) : (b.val1 = 2, b.val2 = 444) : b.val1 = 1, this.doBossReport(b)
            }, reportStep1003: function (a) {
                var b = {step: "1003", val1: 0, val2: 0, vt: 0};
                b.val = a.costTime, a.err ? a.code ? (b.val1 = 3, b.val2 = a.code) : a.code || !a.filename || a.key ? (b.val1 = 2, b.val2 = 445) : (b.val1 = 4, b.val2 = 445) : b.val1 = 1, this.doBossReport(b)
            }, getCDNChannelId: function () {
                var a = this.context.dataset.filmVideoData, b = this.context.dataset.playListIndex;
                return a && a[b] ? a[b].vt : ""
            }, getCurrentVideoDuration: function () {
                var a = this.context.dataset.filmVideoData, b = this.context.dataset.playListIndex;
                return a && a[b] ? a[b].duration : ""
            }, getBusinessType: function () {
                var a = this.context.dataset.getinfoJSON;
                return a && a.vl && a.vl.vi && a.vl.vi[0] && "object" === e.type(a.vl.vi[0]) && a.vl.vi[0].hasOwnProperty("type") ? a.vl.vi[0].type : ""
            }, doBossReport: function (a) {
                var b, c, d = {};
                if (d = e.extend(this.getDefaultReportData(), a), d && d.bi && (d.bi = parseInt(d.bi)), d && d.bt && (d.bt = parseInt(d.bt)), "html5hd" !== this.context.config.playerType && f.mobile ? "ipadh5" === this.context.config.playerType || f.os.ipad ? (b = "4299", c = "694498052") : "h5" === this.context.config.playerType || f.os.android || f.os.ios ? (b = "2865", c = "1698957057") : (b = "2865", c = "1698957057") : (b = "4298", c = "686148428"), "4298" === b && (d.cpay = this.context.dataset.isNeedPay ? 1 : 0, d.tpay = this.context.dataset.userPayStatus || 0, d.dltype = this.context.dataset.useHls ? this.context.dataset.dltype || 3 : 1, this.context.config.clientReportInfo)) {
                    var g = this.context.config.clientReportInfo;
                    for (var h in g) g.hasOwnProperty(h) && "undefined" != typeof g[h] && (d["clt_" + h] = g[h] || "")
                }
                var i = "//btrace.video.qq.com/kvcollect?BossId={bossid}&Pwd={pwd}".replace("{bossid}", b).replace("{pwd}", c);
                i += "&" + e.param(d), f.report(i)
            }, playTimeHeartBeatStart: function () {
                var a = this;
                this.dataset.realPlayTime_TIMER || (this.dataset.realPlayTime_TIMER = setInterval(function () {
                    a.dataset.realPlayTime || (a.dataset.realPlayTime = 0), a.dataset.realPlayTime += 5, a.saveData()
                }, 5e3)), this.dataset.totalPlayTime_TIMER || (this.dataset.totalPlayTime_TIMER = setInterval(function () {
                    a.dataset.totalPlayTime || (a.dataset.totalPlayTime = 0), a.context.dataset.isPlayingHlsAd || (a.dataset.totalPlayTime += 5, a.dataset.totalPlayTime_pip || (a.dataset.totalPlayTime_pip = 0), a.context.dataset.isPIP && (a.dataset.totalPlayTime_pip += 5), a.context.dataset.userTotalPlayedTime = a.dataset.totalPlayTime)
                }, 5e3))
            }, playTimeHeartBeatStop: function (a) {
                clearInterval(this.dataset.totalPlayTime_TIMER), delete this.dataset.totalPlayTime_TIMER, a && (clearInterval(this.dataset.realPlayTime_TIMER), delete this.dataset.realPlayTime_TIMER)
            }, saveData: function () {
                var a, b = f.getData(this.dataset.dataKey), c = this.context.dataset.vid;
                if (b) try {
                    a = JSON.parse(b)
                } catch (d) {
                    a = {}
                } else a = {};
                return c ? (a[c] = {
                    lastupdate: +new Date,
                    realtime: this.dataset.realPlayTime,
                    totaltime: this.dataset.totalPlayTime,
                    totaltime_pip: this.dataset.totalPlayTime_pip
                }, a[c] = e.extend(this.getDefaultReportData(), a[c]), void f.setData(this.dataset.dataKey, JSON.stringify(a))) : void f.showError("saveData Error", "\u627e\u4e0d\u5230vid")
            }, getData: function () {
                var a, b = f.getData(this.dataset.dataKey), c = this.context.dataset.vid;
                if (b) try {
                    a = JSON.parse(b)
                } catch (d) {
                    a = {}
                } else a = {};
                return c ? a[c] : void f.showError("getData Error", "\u627e\u4e0d\u5230vid")
            }, clearData: function (a) {
                var b, c = f.getData(this.dataset.dataKey);
                if (a = a || this.context.dataset.vid, c) try {
                    b = JSON.parse(c)
                } catch (d) {
                    b = {}
                } else b = {};
                return a ? (b[a] && delete b[a], void f.setData(this.dataset.dataKey, JSON.stringify(b))) : void f.showError("clearData Error", "\u627e\u4e0d\u5230vid")
            }, reportPlayTimeWhenPageInit: function () {
                var a, b = f.getData(this.dataset.dataKey), c = this, d = function (a, b) {
                    if (a) {
                        var d = parseInt(+new Date / 1e3), e = parseInt(parseInt(a.lastupdate) / 1e3);
                        d - e <= 180 || (a.isEnd = !1, c.reportStep5(a), c.clearData(b))
                    }
                };
                try {
                    a = JSON.parse(b)
                } catch (e) {
                    a = {}
                }
                for (var g in a) d(a[g], g)
            }, reportPlayTimeOnEnded: function () {
                var a, b = f.getData(this.dataset.dataKey), c = this, d = this.context.dataset.vid,
                    e = function (a, b) {
                        a = a && a[b] ? a[b] : null, a && (a.isEnd = !0, c.reportStep5(a), c.clearData(b))
                    };
                try {
                    a = JSON.parse(b)
                } catch (g) {
                    a = {}
                }
                e(a, d)
            }, reportPlayTimeOnBeforeVideoPlay: function (a) {
                if (a) {
                    var b, c = f.getData(this.dataset.dataKey), d = this, e = a, g = function (a, b) {
                        a = a && a[b] ? a[b] : null, a && (a.isEnd = !0, a.vid = b, d.reportStep5(a), d.clearData(b))
                    };
                    try {
                        b = JSON.parse(c)
                    } catch (h) {
                        b = {}
                    }
                    g(b, e)
                }
            }, getVideoAreaLevel: function () {
                var a = this.context.dataset.getinfoJSON;
                return a && a.vl && a.vl.vi && a.vl.vi.length && a.vl.vi[0] ? a.vl.vi[0].level : ""
            }, reportLoginUserPlayTime: function (a) {
                if (a = a || !1, "v.qq.com" === location.hostname || "film.qq.com" === location.hostname) {
                    var b;
                    if (this.context.config && "function" === e.type(this.context.config.getUserType)) try {
                        b = this.context.config.getUserType()
                    } catch (c) {
                    }
                    "number" !== e.type(b) || b <= 0 || this.context.msg.broadcast("reportLoginUserPlayTime", {isend: a})
                }
            }, getReport6Status: function () {
                return this.context.dataset.isLoadingAdEmpty || this.context.dataset.noHdAdPlugin ? 1 : this.dataset.isFilmBuffered ? 2 : 3
            }, reportPlayView: function () {
                var a = "";
                if (f.inWhichDomain("qzone") && (a = f.inNewIframe() ? f.removeUrlParams(document.referrer) : f.removeUrlParams(location.href)), (f.os.mac || f.os.windows) && (f.isInIframe() || !f.isInIframe() && "v.qq.com" !== location.hostname)) {
                    var b = {
                        lv_irt_id: f.cookie.get("uuid") || "",
                        dm: "v.qq.com",
                        ua: navigator.userAgent,
                        r: +new Date,
                        vid: this.context.dataset.vid,
                        sr: screen.width + "x" + screen.height,
                        ul: navigator.language || navigator.browserLanguage || "",
                        tv: "0.0.7",
                        pt: this.context.dataset.title || "\u817e\u8baf\u89c6\u9891",
                        guid: this.context.dataset.guid || "",
                        url: "https://v.qq.com/x/page/" + this.context.dataset.vid + ".html",
                        from: f.inNewIframe() ? f.removeUrlParams(document.referrer) : "https://v.qq.com/x/page/" + this.context.dataset.vid + ".html",
                        playing_url: a
                    }, c = new Image;
                    c.src = "//tj.video.qq.com/fcgi-bin/set_cookie?" + e.param(b)
                }
            }, reportIrs: function () {
                var a = this.context.config.playerType || "";
                if (a = a.toLowerCase(), f.inArray(["h5", "h5tiny"], a) === -1 && ("v.qq.com" === location.hostname || "film.qq.com" === location.hostname)) {
                    var b = new Image(1, 1);
                    this.context.dataset.vid && (b.src = "//v12-" + this.context.dataset.vid.toLowerCase() + ".z.irs01.com?p=v12&ts=" + +new Date)
                }
            }, addEventListener: function () {
                var a = this;
                this.addAdReport(), this.context.msg.on("beforeVideoPlay", function (b, c) {
                    b = b || {}, a.dataset.videoPlayedIndex++, a.reportStep3(b.isNewPlay), a.reportIrs(), a.reportPlayView(), a.reportPlayTimeOnBeforeVideoPlay(c)
                }), this.context.msg.on("vidChange", function (b, c) {
                    a.resetDataset()
                }), this.context.msg.on("getVideoUrlSuccess", function (b, c) {
                    a.resetDataset(), setTimeout(function () {
                        a.reportStep4(), a.dataset.isGetinfoDone = !0, a.context.dataset.reportVideoLevel = a.getVideoAreaLevel(), a.context.dataset.reportCDNChannelId = a.getCDNChannelId(), a.context.dataset.reportBusinessType = a.getBusinessType()
                    }, 0)
                }), this.context.msg.on("vidChange", function () {
                    a.resetDatasetOnVidChange()
                }), this.context.msg.on("videoPause", function () {
                    a.context.dataset.isPlayingAd || a.playTimeHeartBeatStop()
                }), this.context.msg.on("videoPlay", function (b) {
                    "film" !== b.playListType || 0 !== b.index || a.dataset.filmFirstPlayTime || (a.dataset.filmFirstPlayTime = +new Date), "film" === b.playListType && b.index > 0 && (a.dataset.filmPlayTime || (a.dataset.filmPlayTime = {}), a.dataset.filmPlayTime[b.index] || (a.dataset.filmPlayTime[b.index] = +new Date))
                }), this.context.msg.on("videoPlaying", function (b) {
                    b && "film" === b.playListType && (a.dataset.filmFirstPlayingTime || (a.dataset.filmFirstPlayingTime = +new Date, a.dataset.adReportData = a.getAdReportData(), a.reportStep6({firstLoadTime: a.dataset.filmFirstPlayingTime - a.dataset.filmFirstPlayTime}), a.reportStep35())), b && "film" === b.playListType && a.playTimeHeartBeatStart(), b && "film" === b.playListType && 0 === b.index && !a.dataset.filmPlayingTime && a.dataset.filmFirstPlayTime && (a.dataset.filmPlayingTime = +new Date, a.reportStep30({loadTime: a.dataset.filmPlayingTime - (a.dataset.preloadStartTime || a.dataset.filmFirstPlayTime)})), b && "film" === b.playListType && b.index > 0 && a.dataset.filmPlayTime && (a.dataset.filmPlayingTime || (a.dataset.filmPlayingTime = {}), a.dataset.filmPlayingTime[b.index] || (a.dataset.filmPlayingTime[b.index] = +new Date, a.reportStep50({loadTime: a.dataset.filmPlayingTime[b.index] - a.dataset.filmPlayTime[b.index]})))
                }), this.context.msg.on("videoWaiting", function (b) {
                    if (!a.context.dataset.isPlayingAd && !("film" !== b.playListType || b && b.videoTag && 0 === b.videoTag.buffered.length)) {
                        var c = a.context.dataset.isVideoSeeking;
                        if (!c && !b.seeking && (a.dataset.waitingTimes || (a.dataset.waitingTimes = 0), 1 !== a.dataset.waitingTimes)) {
                            a.dataset.waitingTimes++;
                            var d, e = "videoTimeUpdate.waiting_report", f = +new Date;
                            a.context.msg.off(e), a.context.msg.once(e, function () {
                                var c;
                                d = +new Date, c = 0 === b.index ? 31 : 51, a.reportStep31_51({
                                    step: c,
                                    waitingTime: d - f
                                })
                            })
                        }
                    }
                }), this.context.msg.on("networkBadStart", function (b) {
                    if ("film" === b.playListType && !b.isOnWaiting) {
                        var c = a.context.dataset.isVideoSeeking;
                        if (!c) {
                            a.dataset.waitingTimes ? a.dataset.waitingTimes++ : a.dataset.waitingTimes = 1;
                            var d, e = "networkBadEnd.waiting_report", f = +new Date;
                            a.context.msg.off(e), a.context.msg.once(e, function () {
                                var c;
                                d = +new Date, c = 0 === b.index ? 31 : 51, a.reportStep31_51({
                                    step: c,
                                    waitingTime: d - f
                                })
                            })
                        }
                    }
                }), this.context.msg.on("videoEnd", function (b) {
                    if ("film" === b.playListType && (a.dataset.waitingTimes = 0), "film" === b.playListType && !b.isTheLastFilm) {
                        var c, d = +new Date, e = b.videoTag.duration || a.context.dataset.videoDuration;
                        a.context.msg.once("videoPlaying.switch_film_section_report", function () {
                            c = +new Date, a.reportStep55({swtichTime: c - d, prevFilmDuration: e})
                        })
                    }
                    "film" === b.playListType && b.isTheLastFilm && (a.playTimeHeartBeatStop(!0), a.reportPlayTimeOnEnded(), a.reportLoginUserPlayTime(!0))
                }), this.context.msg.on("videoTimeUpdate", function (b) {
                    b && "film" === b.playListType && (a.dataset.timeupdateCounter ? a.dataset.timeupdateCounter += 1 : a.dataset.timeupdateCounter = 1, a.dataset.timeupdateCounter % 300 === 0 && a.reportLoginUserPlayTime(!1))
                }), this.context.msg.on("getinfoFinish", function (b) {
                    b = b || {}, a.reportStep1011(b)
                }), this.context.msg.on("getkeyStart", function () {
                    a.dataset.getkeyStartTime = +new Date
                }), this.context.msg.on("getkeyFinish", function (b) {
                    b = b || {}, a.dataset.getkeyEndTime = +new Date, a.reportStep1003(b)
                }), this.context.msg.on("ready", function () {
                    a.reportPlayTimeWhenPageInit()
                }), this.context.msg.on("seekStart", function () {
                    a.dataset.filmSeekStartTime = +new Date
                }), this.context.msg.on("seekEnd", function () {
                    a.dataset.filmSeekEndTime = +new Date, a.reportStep60({seekCostTime: a.dataset.filmSeekEndTime - a.dataset.filmSeekStartTime})
                }), this.context.msg.on("seekFail", function () {
                    a.dataset.filmSeekFailTime = +new Date, a.reportStep60({
                        val1: 1,
                        seekCostTime: a.dataset.filmSeekFailTime - a.dataset.filmSeekStartTime
                    })
                }), this.context.msg.on("setDefinitionStart", function () {
                    a.dataset.setDefinitionStartTime = +new Date, a.dataset.prevDefinition = a.context.dataset.definition
                }), this.context.msg.on("setDefinitionDone", function () {
                    a.dataset.setDefinitionDoneTime = +new Date, a.reportStep100({
                        costTime: a.dataset.setDefinitionDoneTime - a.dataset.setDefinitionStartTime,
                        val1: 2,
                        predefn: a.dataset.prevDefinition
                    })
                }), this.context.msg.on("setDefinitionFail", function (b) {
                    a.dataset.setDefinitionFailTime = +new Date, a.reportStep100({
                        costTime: a.dataset.setDefinitionFailTime - a.dataset.setDefinitionStartTime,
                        val1: 3,
                        predefn: a.dataset.prevDefinition
                    })
                }), this.context.msg.on("videoPlay", function (b) {
                    if (b = b || {}, !b || "film" === b.playListType) {
                        var c = +new Date;
                        a.dataset.hasOwnProperty("_1_bufferFailTime") || 0 !== b.index || (a.context.msg.off("error._1_bufferFailTime"), a.context.msg.once("error._1_bufferFailTime", function (b) {
                            a.context.msg.off("videoPlaying._1_bufferFailTime"), a.dataset._1_bufferFailTime = +new Date, a.reportStep30({
                                loadTime: a.dataset._1_bufferFailTime - c,
                                val1: 1
                            })
                        }), a.context.msg.once("videoPlaying._1_bufferFailTime", function () {
                            a.context.msg.off("error._1_bufferFailTime")
                        })), !a.dataset.hasOwnProperty("_2_bufferFailTime") && b.index > 0 && (a.context.msg.once("error._2_bufferFailTime", function (b) {
                            a.context.msg.off("videoPlaying._2_bufferFailTime"), a.dataset._2_bufferFailTime = +new Date, a.reportStep50({
                                loadTime: a.dataset._2_bufferFailTime - c,
                                val1: 1
                            })
                        }), a.context.msg.once("videoPlaying._2_bufferFailTime", function () {
                            a.context.msg.off("error._2_bufferFailTime")
                        }))
                    }
                })
            }, setExtrainfo: function (a) {
                this.context.config.extrainfo = a || ""
            }, setClientReportInfo: function (a) {
                this.context.config.clientReportInfo = a || {}
            }, setOuterReportData: function (a) {
                this.context.config.outerReportData = a
            }, exportsModuleApis: function () {
                this.dataset.moduleApis = {}, this.dataset.moduleApis.setExtrainfo = this.setExtrainfo.bind(this), this.dataset.moduleApis.setClientReportInfo = this.setClientReportInfo.bind(this), this.dataset.moduleApis.setOuterReportData = this.setOuterReportData.bind(this), e.extend(this.context.userApi, this.dataset.moduleApis)
            }, addAdReport: function () {
                var a = this;
                this.context.msg.on("loadingAdStart", function (b, c) {
                    a.dataset.loadingadPlayingTime || (a.dataset.loadingadPlayingTime = +new Date, a.reportStep7())
                })
            }, getAdReportData: function () {
                return this.context.adApi && this.context.adApi.getAdReportData()
            }
        }, Txplayer.register("v4HdPlayerReport", d)
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(190)
    }, 190: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = c(191);
        d.prototype = {
            init: function () {
                this.write(), this.addEventListerner()
            }, write: function () {
                var a = {
                    loading: "txp-ui-loading",
                    continuePlay: "txp-ui-continue-play",
                    hide: Txplayer.dataset.hideClass
                }, b = e.tmpl(g, a);
                this.context.dataset.$playermod.append(b), this.dataset.$loading = this.context.dataset.$playermod.find('[data-role="' + a.loading + '"]'), this.dataset.$continue = this.context.dataset.$playermod.find('[data-role="' + a.continuePlay + '"]')
            }, remove: function () {
                this.dataset.$loading.remove()
            }, isNeedShowLoading: function () {
                if (1 == this.context.dataset.playState || 0 == this.context.dataset.playState || 2 == this.context.dataset.playState) return !1;
                var a = this.context.msg.getData("checkTimeisInBufferdRange", this.context.dataset.videoCurrentTime);
                if (!a || 3 == this.context.dataset.playState) return !this.context.dataset.isPlayingAd
            }, stopTimer: function () {
                this.dataset.timer && (clearTimeout(this.dataset.timer), this.dataset.timer = null)
            }, hide: function () {
                this.stopTimer(), this.dataset.isShowing && (this.context.dataset.isMinbufferControlPause || (this.dataset.$loading.addClass(Txplayer.dataset.hideClass), this.dataset.isShowing = !1))
            }, show: function () {
                if (!this.dataset.isShowing && this.dataset.isPlayed) {
                    var a = this, b = function () {
                        a.dataset.$loading.removeClass(Txplayer.dataset.hideClass), a.dataset.isShowing = !0
                    };
                    this.stopTimer(), this.dataset.timer = setTimeout(function () {
                        a.isNeedShowLoading() && b()
                    }, 50)
                }
            }, addEventListerner: function () {
                var a = this;
                this.dataset.eventsList = {}, this.dataset.eventsList[f.getUniqueMsgKey("videoPlaying")] = function () {
                    a.hide(), a.dataset.isPlayed = !0
                }, this.dataset.eventsList[f.getUniqueMsgKey("isPlayingAdStatusChange")] = function (b) {
                    b && (a.dataset.isPlayed = !0, a.hide())
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoSeeked")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("networkBadEnd")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoLoadstart")] = function () {
                    a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoSeeking")] = function () {
                    a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoWaiting")] = function () {
                    a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("networkBadStart")] = function () {
                    a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("showLoading")] = function () {
                    a.context.dataset.isPlayingAd || (a.dataset.$loading.removeClass(Txplayer.dataset.hideClass), a.dataset.isShowing = !0)
                }, this.dataset.eventsList[f.getUniqueMsgKey("hideLoading")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("showContinuePlay")] = function (b) {
                    if ("number" == typeof b) {
                        var c = parseInt(b / 60), d = parseInt(b % 60),
                            e = "\u4e0a\u6b21\u89c2\u770b\u81f3" + (c ? c + "\u5206" : "") + d + "\u79d2\uff0c\u6b63\u5728\u4e3a\u4f60\u7eed\u64ad";
                        a.dataset.$continue.text(e), a.dataset.$continue.removeClass(Txplayer.dataset.hideClass), setTimeout(function () {
                            a.dataset.$continue.addClass(Txplayer.dataset.hideClass)
                        }, 3e3)
                    }
                }, this.dataset.eventsList[f.getUniqueMsgKey("error")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("vidChange")] = function () {
                    a.dataset.isPlayed = null
                }, e.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }
        }, Txplayer.register("UiLoading", d)
    }, 191: function (a, b) {
        a.exports = '<txpdiv  class="txp_overlay_loading">\n  <txpdiv class="txp_text <%=hide%>" data-role="<%=continuePlay%>"></txpdiv>\n  <txpdiv class="txp_icon_loading <%=hide%>" data-role="<%=loading%>"></txpdiv>\n</txpdiv>'
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(192)
    }, 192: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = c(193);
        c(194);
        d.prototype = {
            init: function () {
                this.dataset.adFlag = !1, this.write(), this.addEventListerner()
            }, write: function () {
                var a = {
                    loading: "txp-ui-loading-with-ad",
                    speed: "txp-ui-loading-with-ad-speed",
                    canvas: "txp-ui-loading-with-ad-canvas",
                    pvlAdLayer: "txp-ui-loading-with-ad-layer",
                    hide: Txplayer.dataset.hideClass,
                    hideLoadingSlogan: this.context.config.hideLoadingSlogan
                }, b = e.tmpl(g, a);
                this.context.dataset.$playermod.append(b), this.dataset.$loading = this.context.dataset.$playermod.find('[data-role="' + a.loading + '"]'), this.context.dataset.$loading = this.dataset.$loading, this.dataset.$speed = this.context.dataset.$playermod.find('[data-role="' + a.speed + '"]'), this.dataset.$canvas = this.context.dataset.$playermod.find('[data-role="' + a.canvas + '"]'), this.context.dataset.$pvlAdLayer = this.context.dataset.$playermod.find('[data-role="' + a.pvlAdLayer + '"]')
            }, remove: function () {
                this.dataset.$loading.remove()
            }, getSpeedStart: function () {
                if (!this.dataset.timer) {
                    var a = this;
                    this.dataset.timer = setInterval(function () {
                        var b = a.context.dataset.videoDownloadSpeed || 0;
                        b <= 0 || a.dataset.$speed.html(f.formatDownloadSpeed(b))
                    }, 200)
                }
            }, getSpeedStop: function () {
                this.dataset.timer && (clearInterval(this.dataset.timer), this.dataset.timer = null)
            }, isNeedShowLoading: function () {
                if (1 == this.context.dataset.playState || 0 == this.context.dataset.playState || 2 == this.context.dataset.playState) return !1;
                var a = this.context.msg.getData("checkTimeisInBufferdRange", this.context.dataset.videoCurrentTime);
                if (!a) return !0
            }, hide: function () {
                this.dataset.showTimer && (clearTimeout(this.dataset.showTimer), this.dataset.showTimer = null), this.context.dataset.isImgAdLoadingShowing && (this.context.dataset.disableCalcDownloadSpeed = !0, this.dataset.$loading.addClass(Txplayer.dataset.hideClass), this.dataset.$speed.html(""), this.getSpeedStop(), this.context.msg.broadcast("adPluginMsg", {
                    name: "stopAd",
                    adtype: "PVL"
                }), this.context.dataset.isImgAdLoadingShowing = !1)
            }, show: function () {
                if (!this.context.dataset.isImgAdLoadingShowing && !this.dataset.isPlayed && !this.dataset.showTimer) {
                    var a = this;
                    this.dataset.showTimer = setTimeout(function () {
                        a.dataset.showTimer = null, a.isNeedShowLoading() && (f.v4log("showLoadingWithad"), a.context.dataset.disableCalcDownloadSpeed = !1, a.dataset.$loading.removeClass(Txplayer.dataset.hideClass), a.getSpeedStart(), a.context.dataset.isImgAdLoadingShowing = !0)
                    }, 50)
                }
            }, getAdFlag: function () {
                return this.dataset.adFlag = 1 === this.context.adApi.getAdTagConfig("PVL"), this.dataset.adFlag
            }, updateAdFlagInHtml: function () {
                this.getAdFlag() ? this.dataset.$adflag.removeClass("txp_none") : this.dataset.$adflag.addClass("txp_none")
            }, addEventListerner: function () {
                var a = this;
                this.dataset.eventsList = {}, this.dataset.eventsList[f.getUniqueMsgKey("videoPlaying")] = function () {
                    a.dataset.isPlayed = !0, a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoTimeUpdate")] = function () {
                    a.dataset.isPlayed = !0, a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("isPlayingAdStatusChange")] = function (b) {
                    b && (a.dataset.isPlayed = !0, a.hide())
                }, this.dataset.eventsList[f.getUniqueMsgKey("hlsStartPlay")] = function () {
                    a.dataset.isPlayed || a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoPlay")] = function () {
                    a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("userPlayPlayer")] = function () {
                    a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("beforeVideoPlay")] = function () {
                    a.show()
                }, this.dataset.eventsList[f.getUniqueMsgKey("error")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("showUIVipGuide")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("vidChange")] = function () {
                    a.reset()
                }, e.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }, reset: function () {
                this.context.dataset.disableCalcDownloadSpeed = !0, this.dataset.isPlayed = null
            }
        }, Txplayer.register("UiLoadingWithAD", d)
    }, 193: function (a, b) {
        a.exports = '<txpdiv data-role="<%=loading%>" class="txp_overlay_loading <%=hide%>">\n  <txpdiv class="txp_overlay_loading_content">\n    <txpdiv class="txp_overlay_loading_ad" data-role="<%=pvlAdLayer%>"></txpdiv>\n    <% if (!hideLoadingSlogan) { %>\n    <img class="txp_overlay_loading_slogan" src="//vm.gtimg.cn/tencentvideo/txp/style/img/slogan.png" style="width:165px">\n    <txpdiv class="txp_overlay_loading_name">\u817e\u8baf\u89c6\u9891 v.qq.com</txpdiv>\n    <% } %>\n    <txpdiv data-role="<%=speed%>" class="txp_overlay_loading_speed"></txpdiv>\n    <txpdiv  class="txp_overlay_loading_canvas">\n      <canvas data-role="<%=canvas%>" width="800" height="450"></canvas>\n    </txpdiv>\n  </txpdiv>\n</txpdiv>'
    }, 194: function (a, b) {
        var c = {
            frameRate: 24, stageHeight: 450, stageWidth: 600, bgColor: null, definitionPool: [{
                frameActionList: [[0, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 245,
                    t: "MC",
                    id: 2,
                    a: 0,
                    d: 0,
                    x: 382.8
                }], ["tE", "1-2", 4, {
                    alpha: .23,
                    y: 229.3,
                    scaleX: 1.15,
                    scaleY: 1.15,
                    x: 377
                }], ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 270.7,
                    t: "MC",
                    id: 4,
                    a: 0,
                    d: 1,
                    x: 207.3
                }], ["pE", {n: "5-5", y: 293, t: "MC", id: 5, a: 0, d: 2, x: 405}], ["pE", {
                    n: "7-6",
                    y: 259,
                    t: "MC",
                    id: 6,
                    a: 0,
                    d: 3,
                    x: 193
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "9-7",
                    y: 270.7,
                    t: "MC",
                    id: 7,
                    a: 0,
                    d: 4,
                    x: 190.7
                }], ["pE", {n: "11-9", y: 313, t: "MC", id: 9, a: 0, d: 5, x: 257}], ["pE", {
                    filters: [{
                        blurY: 5,
                        quality: 1,
                        type: "BF",
                        blurX: 5
                    }], n: "13-10", y: 322.6, t: "MC", id: 10, sY: .81, a: 0, d: 6, sX: .81, x: 287.6
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 285.6,
                    t: "MC",
                    id: 11,
                    sY: .92,
                    a: 0,
                    d: 7,
                    sX: .92,
                    x: 229.2
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 269,
                    t: "MC",
                    id: 12,
                    a: 0,
                    d: 8,
                    x: 363.1
                }]], [5, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 225.4,
                    sX: 1.19,
                    sY: 1.19,
                    a: .29,
                    x: 375.5
                }]], [6, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 221.5,
                    sX: 1.23,
                    sY: 1.23,
                    a: .36,
                    x: 374.1
                }], ["tE", "1-2", 3, {
                    alpha: .53,
                    y: 209.7,
                    scaleX: 1.34,
                    scaleY: 1.34,
                    x: 369.8
                }], ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 267.3,
                    sX: 1.03,
                    sY: 1.03,
                    a: .09,
                    x: 205.5
                }]], [7, ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 263.9,
                    sX: 1.05,
                    sY: 1.05,
                    a: .17,
                    x: 203.6
                }]], [8, ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 260.4,
                    sX: 1.08,
                    sY: 1.08,
                    a: .26,
                    x: 201.8
                }]], [9, ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 257,
                    sX: 1.1,
                    sY: 1.1,
                    a: .34,
                    x: 199.9
                }], ["pE", {n: "5-5", y: 324, a: 0, x: 423}], ["tE", "5-5", 30, {
                    alpha: .86,
                    y: 250.5,
                    scaleX: 1,
                    scaleY: 1,
                    x: 440.4
                }]], [10, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 205.8,
                    sX: 1.38,
                    sY: 1.38,
                    a: .59,
                    x: 368.3
                }], ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 253.6,
                    sX: 1.13,
                    sY: 1.13,
                    a: .43,
                    x: 198.1
                }], ["tE", "3-4", 2, {
                    alpha: .6,
                    y: 246.7,
                    scaleX: 1.18,
                    scaleY: 1.18,
                    x: 194.4
                }]], [11, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 202,
                    sX: 1.42,
                    sY: 1.42,
                    a: .65,
                    x: 366.9
                }], ["tE", "1-2", 2, {
                    alpha: .55,
                    y: 196.9,
                    scaleX: 1.36,
                    scaleY: 1.36,
                    x: 369.9
                }]], [13, ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 243.3,
                    sX: 1.2,
                    sY: 1.2,
                    a: .68,
                    x: 192.5
                }]], [14, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 194.3,
                    sX: 1.32,
                    sY: 1.32,
                    a: .5,
                    x: 371.4
                }], ["tE", "1-2", 5, {
                    alpha: .25,
                    y: 181.7,
                    scaleX: 1.16,
                    scaleY: 1.16,
                    x: 378.7
                }], ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 239.9,
                    sX: 1.23,
                    sY: 1.23,
                    a: .77,
                    x: 190.7
                }]], [15, ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 236.4,
                    sX: 1.25,
                    sY: 1.25,
                    a: .86,
                    x: 188.8
                }]], [16, ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 233,
                    sX: 1.28,
                    sY: 1.28,
                    a: .94,
                    x: 187
                }], ["tE", "3-4", 8, {
                    alpha: .11,
                    y: 193.1,
                    scaleX: 1.28,
                    scaleY: 1.28,
                    x: 199.5
                }]], [20, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 179.2,
                    sX: 1.13,
                    sY: 1.13,
                    a: .2,
                    x: 380.2
                }], ["pE", {n: "7-6", y: 256.8, sX: 1.01, sY: 1.01, a: .04, x: 192.6}], ["tE", "7-6", 4, {
                    alpha: .2,
                    y: 248,
                    scaleX: 1.04,
                    scaleY: 1.04,
                    x: 190.9
                }]], [21, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 176.7,
                    sX: 1.1,
                    sY: 1.1,
                    a: .15,
                    x: 381.6
                }]], [22, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 174.2,
                    sX: 1.06,
                    sY: 1.06,
                    a: .1,
                    x: 383.2
                }]], [23, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 171.6,
                    sX: 1.03,
                    sY: 1.03,
                    a: .05,
                    x: 384.7
                }]], [24, ["pE", {
                    filters: [{blurY: 95, quality: 3, type: "BF", blurX: 95}],
                    n: "1-2",
                    y: 169,
                    a: 0,
                    x: 386
                }]], [25, ["pE", {
                    filters: [{blurY: 62, quality: 3, type: "BF", blurX: 62}],
                    n: "3-4",
                    y: 188,
                    sX: 1.28,
                    sY: 1.28,
                    a: 0,
                    x: 201
                }], ["pE", {n: "7-6", y: 245.8, sX: 1.05, sY: 1.05, a: .25, x: 190.4}]], [26, ["pE", {
                    n: "7-6",
                    y: 243.6,
                    sX: 1.06,
                    sY: 1.06,
                    a: .29,
                    x: 190.1
                }], ["tE", "7-6", 4, {
                    alpha: .45,
                    y: 234.8,
                    scaleX: 1.1,
                    scaleY: 1.1,
                    x: 188.3
                }]], [31, ["pE", {n: "7-6", y: 232.5, sX: 1.1, sY: 1.1, a: .49, x: 188}]], [32, ["pE", {
                    n: "7-6",
                    y: 230.4,
                    sX: 1.11,
                    sY: 1.11,
                    a: .53,
                    x: 187.5
                }], ["tE", "7-6", 4, {
                    alpha: .7,
                    y: 221.5,
                    scaleX: 1.15,
                    scaleY: 1.15,
                    x: 185.8
                }]], [35, ["pE", {
                    n: "11-9",
                    y: 309.1,
                    sX: 1.02,
                    sY: 1.02,
                    a: .04,
                    x: 257.8
                }], ["tE", "11-9", 9, {
                    alpha: .4,
                    y: 273.5,
                    scaleX: 1.21,
                    scaleY: 1.21,
                    x: 265.4
                }]], [37, ["pE", {n: "7-6", y: 219.3, sX: 1.16, sY: 1.16, a: .74, x: 185.4}]], [38, ["pE", {
                    n: "7-6",
                    y: 217.1,
                    sX: 1.17,
                    sY: 1.17,
                    a: .78,
                    x: 185
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 316.9,
                    sX: .82,
                    sY: .82,
                    a: .04,
                    x: 286.9
                }], ["tE", "13-10", 8, {
                    alpha: .36,
                    y: 271.2,
                    scaleX: .92,
                    scaleY: .92,
                    x: 281.2
                }]], [39, ["pE", {
                    n: "7-6",
                    y: 214.9,
                    sX: 1.17,
                    sY: 1.17,
                    a: .82,
                    x: 184.5
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "9-7",
                    y: 267.3,
                    a: .02,
                    x: 189.3
                }], ["tE", "9-7", 13, {alpha: .29, y: 223.4, scaleX: 1, scaleY: 1, x: 171.4}]], [40, ["pE", {
                    n: "5-5",
                    y: 248,
                    a: .89,
                    x: 441
                }], ["tE", "5-5", 30, {alpha: .03, y: 192.9, scaleX: 1, scaleY: 1, x: 423.6}], ["pE", {
                    n: "7-6",
                    y: 212.7,
                    sX: 1.18,
                    sY: 1.18,
                    a: .86,
                    x: 184.2
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 310,
                    sX: .92,
                    sY: .92,
                    a: 0,
                    x: 229.2
                }]], [41, ["pE", {
                    n: "7-6",
                    y: 210.5,
                    sX: 1.19,
                    sY: 1.19,
                    a: .9,
                    x: 183.7
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 306.4,
                    sX: .95,
                    sY: .95,
                    a: .02,
                    x: 227.3
                }]], [42, ["pE", {
                    n: "7-6",
                    y: 208.3,
                    sX: 1.2,
                    sY: 1.2,
                    a: .94,
                    x: 183.3
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 302.9,
                    sX: .98,
                    sY: .98,
                    a: .04,
                    x: 225.2
                }]], [43, ["pE", {
                    n: "7-6",
                    y: 204.9,
                    sX: 1.19,
                    sY: 1.19,
                    a: .9,
                    x: 183.7
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 299.2,
                    sX: 1.01,
                    sY: 1.01,
                    a: .06,
                    x: 223.2
                }]], [44, ["pE", {
                    n: "7-6",
                    y: 201.6,
                    sX: 1.18,
                    sY: 1.18,
                    a: .87,
                    x: 184
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 295.6,
                    sX: 1.04,
                    sY: 1.04,
                    a: .08,
                    x: 221.2
                }], ["tE", "15-11", 7, {
                    alpha: .22,
                    y: 270.6,
                    scaleX: 1.26,
                    scaleY: 1.26,
                    x: 207.2
                }]], [45, ["pE", {
                    n: "7-6",
                    y: 198.3,
                    sX: 1.18,
                    sY: 1.18,
                    a: .83,
                    x: 184.5
                }], ["tE", "7-6", 11, {alpha: .41, y: 161.6, scaleX: 1.09, scaleY: 1.09, x: 188.8}], ["pE", {
                    n: "11-9",
                    y: 269.5,
                    sX: 1.24,
                    sY: 1.24,
                    a: .44,
                    x: 266.2
                }], ["tE", "11-9", 2, {
                    alpha: .52,
                    y: 261.7,
                    scaleX: 1.28,
                    scaleY: 1.28,
                    x: 267.9
                }]], [47, ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 265.4,
                    sX: .93,
                    sY: .93,
                    a: .4,
                    x: 280.4
                }]], [48, ["pE", {
                    n: "11-9",
                    y: 257.8,
                    sX: 1.3,
                    sY: 1.3,
                    a: .56,
                    x: 268.8
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 259.8,
                    sX: .94,
                    sY: .94,
                    a: .44,
                    x: 279.8
                }], ["tE", "13-10", 2, {
                    alpha: .52,
                    y: 248.3,
                    scaleX: .97,
                    scaleY: .97,
                    x: 278.3
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 267.1,
                    sX: 1.02,
                    sY: 1.02,
                    a: .02,
                    x: 364
                }]], [49, ["pE", {
                    n: "11-9",
                    y: 254.4,
                    sX: 1.28,
                    sY: 1.28,
                    a: .54,
                    x: 268.7
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 265,
                    sX: 1.04,
                    sY: 1.04,
                    a: .04,
                    x: 364.8
                }]], [50, ["pE", {
                    n: "11-9",
                    y: 250.9,
                    sX: 1.25,
                    sY: 1.25,
                    a: .51,
                    x: 268.5
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 263.1,
                    sX: 1.06,
                    sY: 1.06,
                    a: .06,
                    x: 365.7
                }]], [51, ["pE", {
                    n: "11-9",
                    y: 247.5,
                    sX: 1.23,
                    sY: 1.23,
                    a: .48,
                    x: 268.4
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 242.6,
                    sX: .98,
                    sY: .98,
                    a: .56,
                    x: 277.6
                }], ["tE", "13-10", 5, {
                    alpha: .37,
                    y: 210.7,
                    scaleX: .84,
                    scaleY: .84,
                    x: 284.7
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 261.1,
                    sX: 1.08,
                    sY: 1.08,
                    a: .08,
                    x: 366.6
                }]], [52, ["pE", {
                    n: "11-9",
                    y: 244,
                    sX: 1.21,
                    sY: 1.21,
                    a: .46,
                    x: 268.3
                }], ["tE", "11-9", 2, {
                    alpha: .41,
                    y: 237.2,
                    scaleX: 1.16,
                    scaleY: 1.16,
                    x: 268.1
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 267,
                    sX: 1.29,
                    sY: 1.29,
                    a: .24,
                    x: 205.3
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 259.2,
                    sX: 1.1,
                    sY: 1.1,
                    a: .1,
                    x: 367.5
                }], ["tE", "17-12", 8, {
                    alpha: .26,
                    y: 243.4,
                    scaleX: 1.25,
                    scaleY: 1.25,
                    x: 374.5
                }]], [53, ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "9-7",
                    y: 220,
                    a: .31,
                    x: 170
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 260.6,
                    sX: 1.34,
                    sY: 1.34,
                    a: .21,
                    x: 206.9
                }], ["tE", "15-11", 4, {
                    alpha: .12,
                    y: 234.6,
                    scaleX: 1.57,
                    scaleY: 1.57,
                    x: 213.6
                }]], [54, ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "9-7",
                    y: 216.6,
                    sX: .98,
                    sY: .98,
                    a: .29,
                    x: 171.5
                }]], [55, ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "9-7",
                    y: 213,
                    sX: .96,
                    sY: .96,
                    a: .27,
                    x: 172.9
                }], ["tE", "9-7", 13, {alpha: .02, y: 167.5, scaleX: .71, scaleY: .71, x: 191.8}], ["pE", {
                    n: "11-9",
                    y: 233.8,
                    sX: 1.14,
                    sY: 1.14,
                    a: .39,
                    x: 268
                }], ["tE", "11-9", 4, {
                    alpha: .29,
                    y: 220.1,
                    scaleX: 1.05,
                    scaleY: 1.05,
                    x: 267.5
                }]], [57, ["pE", {
                    n: "7-6",
                    y: 158.3,
                    sX: 1.08,
                    sY: 1.08,
                    a: .38,
                    x: 189.1
                }], ["tE", "7-6", 2, {
                    alpha: .3,
                    y: 151.7,
                    scaleX: 1.06,
                    scaleY: 1.06,
                    x: 189.9
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 204.3,
                    sX: .81,
                    sY: .81,
                    a: .34,
                    x: 286.2
                }]], [58, ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 197.9,
                    sX: .78,
                    sY: .78,
                    a: .3,
                    x: 287.5
                }], ["tE", "13-10", 5, {
                    alpha: .11,
                    y: 166,
                    scaleX: .64,
                    scaleY: .64,
                    x: 294.6
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 228,
                    sX: 1.62,
                    sY: 1.62,
                    a: .09,
                    x: 215.3
                }]], [59, ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 221.6,
                    sX: 1.68,
                    sY: 1.68,
                    a: .07,
                    x: 217
                }]], [60, ["pE", {
                    n: "7-6",
                    y: 148.3,
                    sX: 1.06,
                    sY: 1.06,
                    a: .26,
                    x: 190.3
                }], ["tE", "7-6", 4, {alpha: .11, y: 135, scaleX: 1.02, scaleY: 1.02, x: 191.9}], ["pE", {
                    n: "11-9",
                    y: 216.7,
                    sX: 1.02,
                    sY: 1.02,
                    a: .27,
                    x: 267.4
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 215.1,
                    sX: 1.73,
                    sY: 1.73,
                    a: .05,
                    x: 218.7
                }]], [61, ["pE", {n: "11-9", y: 213.2, sX: 1, sY: 1, a: .24, x: 267.2}], ["pE", {
                    filters: [{
                        blurY: 40,
                        quality: 3,
                        type: "BF",
                        blurX: 40
                    }], n: "15-11", y: 208.5, sX: 1.79, sY: 1.79, a: .02, x: 220.3
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 241.4,
                    sX: 1.27,
                    sY: 1.27,
                    a: .28,
                    x: 375.4
                }], ["tE", "17-12", 9, {
                    alpha: .03,
                    y: 197,
                    scaleX: 1.67,
                    scaleY: 1.67,
                    x: 358
                }]], [62, ["pE", {
                    n: "11-9",
                    y: 209.9,
                    sX: .98,
                    sY: .98,
                    a: .22,
                    x: 267.1
                }], ["tE", "11-9", 2, {
                    alpha: .17,
                    y: 203,
                    scaleX: .93,
                    scaleY: .93,
                    x: 266.9
                }], ["pE", {
                    filters: [{blurY: 40, quality: 3, type: "BF", blurX: 40}],
                    n: "15-11",
                    y: 202,
                    sX: 1.84,
                    sY: 1.84,
                    a: 0,
                    x: 222
                }]], [64, ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 159.6,
                    sX: .61,
                    sY: .61,
                    a: .07,
                    x: 296
                }]], [65, ["pE", {n: "7-6", y: 131.6, sX: 1.02, sY: 1.02, a: .07, x: 192.3}], ["pE", {
                    n: "11-9",
                    y: 199.6,
                    sX: .91,
                    sY: .91,
                    a: .14,
                    x: 266.7
                }], ["tE", "11-9", 5, {
                    alpha: .02,
                    y: 182.4,
                    scaleX: .79,
                    scaleY: .79,
                    x: 266.1
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 153.2,
                    sX: .58,
                    sY: .58,
                    a: .04,
                    x: 297.4
                }]], [66, ["pE", {
                    n: "7-6",
                    y: 128.4,
                    sX: 1.01,
                    sY: 1.01,
                    a: .04,
                    x: 192.7
                }], ["pE", {
                    filters: [{blurY: 5, quality: 1, type: "BF", blurX: 5}],
                    n: "13-10",
                    y: 146.9,
                    sX: .55,
                    sY: .55,
                    a: 0,
                    x: 298.8
                }]], [67, ["pE", {n: "7-6", y: 125, a: 0, x: 193}]], [69, ["pE", {
                    filters: [{
                        blurY: 5,
                        quality: 1,
                        type: "BF",
                        blurX: 5
                    }], n: "9-7", y: 164, sX: .69, sY: .69, a: 0, x: 193.3
                }]], [71, ["pE", {n: "5-5", y: 191, a: 0, x: 423}], ["pE", {
                    n: "11-9",
                    y: 179,
                    sX: .77,
                    sY: .77,
                    a: 0,
                    x: 266
                }], ["pE", {
                    filters: [{blurY: 63, quality: 3, type: "BF", blurX: 63}],
                    n: "17-12",
                    y: 192,
                    sX: 1.71,
                    sY: 1.71,
                    a: 0,
                    x: 356
                }]]], totalFrames: 72, rect: {x: 190.7, y: 245, height: 100.3, width: 273.5}
            }, {
                graphics: [["f", "#70DF00"], ["p", "ACKEVQg5AAgpgpQgogogAg5QAAg5AogpQApgoA5AAQA6gAAoAoQApApAAA5QAAA5gpAoQgoApg5AA"], ["ef"]],
                rect: {x: 0, y: 0, height: 27.7, width: 27.7}
            }, {
                frameActionList: [[0, ["pE", {n: "1-1", t: "SH", id: 1, sY: 2.94, d: 0, sX: 2.94}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 81.4, width: 81.4}
            }, {
                graphics: [["f", "#FF920B"], ["p", "AAADrQAAhhBFhFQBFhEBiAAQBiAABFBFQBFBFAABiQAABihFBFQhFBFhhAAQhhAAhFhFQhEhFAAhh"], ["ef"]],
                rect: {x: 0, y: 0, height: 47, width: 47}
            }, {
                frameActionList: [[0, ["pE", {n: "1-3", t: "SH", id: 3, sY: 1.04, d: 0, sX: 1.04}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 49, width: 49}
            }, {
                frameActionList: [[0, ["pE", {n: "1-1", t: "SH", id: 1, sY: .38, d: 0, sX: .38}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 10.5, width: 10.5}
            }, {
                frameActionList: [[0, ["pE", {n: "1-3", t: "SH", id: 3, sY: .16, d: 0, sX: .16}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 7.5, width: 7.5}
            }, {
                frameActionList: [[0, ["pE", {n: "1-1", t: "SH", d: 0, id: 1}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 27.7, width: 27.7}
            }, {
                graphics: [["f", "#44BFFB"], ["p", "AH4D8QAABphKBKQhKBKhoAAQhoAAhKhKQhJhKAAhoQAAhoBKhKQBKhJBpAAQBpAABKBKQBKBKAABp"], ["ef"]],
                rect: {x: 0, y: 0, height: 50.4, width: 50.4}
            }, {
                frameActionList: [[0, ["pE", {n: "1-8", t: "SH", id: 8, sY: .17, d: 0, sX: .17}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 8.5, width: 8.5}
            }, {
                frameActionList: [[0, ["pE", {n: "1-3", t: "SH", id: 3, sY: .6, d: 0, sX: .6}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 28, width: 28}
            }, {
                frameActionList: [[0, ["pE", {n: "1-8", t: "SH", d: 0, id: 8}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 50.4, width: 50.4}
            }, {
                frameActionList: [[0, ["pE", {n: "1-3", t: "SH", d: 0, id: 3}]]],
                totalFrames: 1,
                rect: {x: 0, y: 0, height: 47, width: 47}
            }]
        };
        a.exports = c
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(123)
    }, 123: function (a, b) {
        function c(a) {
            d = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var d = Txplayer.$, e = (Txplayer.apiList, Txplayer.util);
        c.prototype = {
            init: function () {
                this.dataset.maxHistoryPlayTimeList = 50, this.dataset.useConnectionPlay = this.context.config.useConnectionPlay, this.context.dataset.historyDefinition = this.getHistoryDefinition(), this.context.config && "v3" == this.context.config.version && (this.dataset.adMuteHistory = this.getAdMuteHistory()), this.context.dataset.historyPlayTime = this.getHistoryPlayTime(), this.addEventListener()
            }, savePlaytimeData: function (a) {
                var b, c = e.getData(Txplayer.dataset.localStorageKey.historyPlayTime), d = this.context.dataset.vid,
                    f = 0;
                if (c) try {
                    b = JSON.parse(c)
                } catch (g) {
                    b = {}
                } else b = {};
                if (!d) return void e.showError("savePlaytimeData Error", "\u627e\u4e0d\u5230vid");
                for (var h in b) f++;
                f >= this.dataset.maxHistoryPlayTimeList && (b = {}), b[d] = a, this.context.dataset.historyPlayTime = JSON.stringify(b), e.setData(Txplayer.dataset.localStorageKey.historyPlayTime, JSON.stringify(b))
            }, getHistoryPlayTime: function () {
                var a, b = e.getData(Txplayer.dataset.localStorageKey.historyPlayTime), c = this.context.dataset.vid;
                if (c || (c = this.context.config.vid), b) try {
                    a = JSON.parse(b)
                } catch (d) {
                    a = {}
                } else a = {};
                return c ? a[c] : void e.showError("getHistoryPlayTime Error", "\u627e\u4e0d\u5230vid")
            }, clearPlaytimeData: function () {
                var a, b = e.getData(Txplayer.dataset.localStorageKey.historyPlayTime), c = this.context.dataset.vid;
                if (b) try {
                    a = JSON.parse(b)
                } catch (d) {
                    a = {}
                } else a = {};
                return c ? (delete a[c], this.context.dataset.historyPlayTime = JSON.stringify(a), void e.setData(Txplayer.dataset.localStorageKey.historyPlayTime, JSON.stringify(a))) : void e.showError("clearPlaytimeData Error", "\u627e\u4e0d\u5230vid")
            }, saveDefinitionData: function (a) {
                a && (this.context.dataset.historyDefinition = a, e.setData(Txplayer.dataset.localStorageKey.historyDefinition, a))
            }, getHistoryDefinition: function () {
                var a = e.getData(Txplayer.dataset.localStorageKey.historyDefinition);
                return "mp4" == a && (a = ""), a
            }, saveAdMuteData: function (a) {
                this.dataset.adMuteHistory = JSON.stringify(a), e.setData(Txplayer.dataset.localStorageKey.adMuteHistory, a)
            }, getAdMuteHistory: function () {
                return this.dataset.adMuteHistory = e.getData(Txplayer.dataset.localStorageKey.adMuteHistory), e.getData(Txplayer.dataset.localStorageKey.adMuteHistory)
            }, addEventListener: function () {
                var a = this;
                this.dataset.eventsList = {}, this.context.config && "v3" == this.context.config.version && (this.dataset.eventsList[e.getUniqueMsgKey("videoPlay")] = function (b) {
                    if (b && "film" !== b.playListType) {
                        var c = "true" === a.dataset.adMuteHistory;
                        a.context.msg.broadcast("adMuteStateUpdate", {mute: c})
                    }
                }, this.dataset.eventsList[e.getUniqueMsgKey("adMuteChange")] = function (b) {
                    b && b.hasOwnProperty("mute") && a.saveAdMuteData(b.mute)
                }), this.dataset.eventsList[e.getUniqueMsgKey("videoTimeUpdate")] = function (b) {
                    if (b) if (b.currentTime && parseInt(b.currentTime) % 3 === 0) a.savePlaytimeData(parseInt(b.currentTime)); else {
                        if (b && "film" !== b.playListType) return;
                        if (b && b.videoTag && b.videoTag.currentTime && parseInt(b.videoTag.currentTime) % 3 === 0) {
                            var c = a.context.dataset.currentTime;
                            a.savePlaytimeData(parseInt(c))
                        }
                    }
                }, this.dataset.eventsList[e.getUniqueMsgKey("videoEnd")] = function (b) {
                    "film" === b.playListType && (b.isAllEnd || b.isTheLastFilm) && a.clearPlaytimeData()
                }, this.dataset.eventsList[e.getUniqueMsgKey("definitionChange")] = function (b) {
                    a.saveDefinitionData(b)
                }, d.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }
        }, Txplayer.register("HdPlayerHistory", c)
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(141)
    }, 130: function (a, b, c) {
        (function (a) {
            "use strict";

            function d() {
                try {
                    var a = new Uint8Array(1);
                    return a.__proto__ = {
                        __proto__: Uint8Array.prototype, foo: function () {
                            return 42
                        }
                    }, 42 === a.foo() && "function" == typeof a.subarray && 0 === a.subarray(1, 1).byteLength
                } catch (b) {
                    return !1
                }
            }

            function e() {
                return g.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
            }

            function f(a, b) {
                if (e() < b) throw new RangeError("Invalid typed array length");
                return g.TYPED_ARRAY_SUPPORT ? (a = new Uint8Array(b), a.__proto__ = g.prototype) : (null === a && (a = new g(b)), a.length = b), a
            }

            function g(a, b, c) {
                if (!(g.TYPED_ARRAY_SUPPORT || this instanceof g)) return new g(a, b, c);
                if ("number" == typeof a) {
                    if ("string" == typeof b) throw new Error("If encoding is specified then the first argument must be a string");
                    return k(this, a)
                }
                return h(this, a, b, c)
            }

            function h(a, b, c, d) {
                if ("number" == typeof b) throw new TypeError('"value" argument must not be a number');
                return "undefined" != typeof ArrayBuffer && b instanceof ArrayBuffer ? n(a, b, c, d) : "string" == typeof b ? l(a, b, c) : o(a, b)
            }

            function i(a) {
                if ("number" != typeof a) throw new TypeError('"size" argument must be a number');
                if (a < 0) throw new RangeError('"size" argument must not be negative')
            }

            function j(a, b, c, d) {
                return i(b), b <= 0 ? f(a, b) : void 0 !== c ? "string" == typeof d ? f(a, b).fill(c, d) : f(a, b).fill(c) : f(a, b)
            }

            function k(a, b) {
                if (i(b), a = f(a, b < 0 ? 0 : 0 | p(b)), !g.TYPED_ARRAY_SUPPORT) for (var c = 0; c < b; ++c) a[c] = 0;
                return a
            }

            function l(a, b, c) {
                if ("string" == typeof c && "" !== c || (c = "utf8"), !g.isEncoding(c)) throw new TypeError('"encoding" must be a valid string encoding');
                var d = 0 | r(b, c);
                a = f(a, d);
                var e = a.write(b, c);
                return e !== d && (a = a.slice(0, e)), a
            }

            function m(a, b) {
                var c = b.length < 0 ? 0 : 0 | p(b.length);
                a = f(a, c);
                for (var d = 0; d < c; d += 1) a[d] = 255 & b[d];
                return a
            }

            function n(a, b, c, d) {
                if (b.byteLength, c < 0 || b.byteLength < c) throw new RangeError("'offset' is out of bounds");
                if (b.byteLength < c + (d || 0)) throw new RangeError("'length' is out of bounds");
                return b = void 0 === c && void 0 === d ? new Uint8Array(b) : void 0 === d ? new Uint8Array(b, c) : new Uint8Array(b, c, d), g.TYPED_ARRAY_SUPPORT ? (a = b, a.__proto__ = g.prototype) : a = m(a, b), a
            }

            function o(a, b) {
                if (g.isBuffer(b)) {
                    var c = 0 | p(b.length);
                    return a = f(a, c), 0 === a.length ? a : (b.copy(a, 0, 0, c), a)
                }
                if (b) {
                    if ("undefined" != typeof ArrayBuffer && b.buffer instanceof ArrayBuffer || "length" in b) return "number" != typeof b.length || Y(b.length) ? f(a, 0) : m(a, b);
                    if ("Buffer" === b.type && _(b.data)) return m(a, b.data)
                }
                throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
            }

            function p(a) {
                if (a >= e()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + e().toString(16) + " bytes");
                return 0 | a
            }

            function q(a) {
                return +a != a && (a = 0), g.alloc(+a)
            }

            function r(a, b) {
                if (g.isBuffer(a)) return a.length;
                if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(a) || a instanceof ArrayBuffer)) return a.byteLength;
                "string" != typeof a && (a = "" + a);
                var c = a.length;
                if (0 === c) return 0;
                for (var d = !1; ;) switch (b) {
                    case"ascii":
                    case"latin1":
                    case"binary":
                        return c;
                    case"utf8":
                    case"utf-8":
                    case void 0:
                        return T(a).length;
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return 2 * c;
                    case"hex":
                        return c >>> 1;
                    case"base64":
                        return W(a).length;
                    default:
                        if (d) return T(a).length;
                        b = ("" + b).toLowerCase(), d = !0
                }
            }

            function s(a, b, c) {
                var d = !1;
                if ((void 0 === b || b < 0) && (b = 0), b > this.length) return "";
                if ((void 0 === c || c > this.length) && (c = this.length), c <= 0) return "";
                if (c >>>= 0, b >>>= 0, c <= b) return "";
                for (a || (a = "utf8"); ;) switch (a) {
                    case"hex":
                        return H(this, b, c);
                    case"utf8":
                    case"utf-8":
                        return D(this, b, c);
                    case"ascii":
                        return F(this, b, c);
                    case"latin1":
                    case"binary":
                        return G(this, b, c);
                    case"base64":
                        return C(this, b, c);
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return I(this, b, c);
                    default:
                        if (d) throw new TypeError("Unknown encoding: " + a);
                        a = (a + "").toLowerCase(), d = !0
                }
            }

            function t(a, b, c) {
                var d = a[b];
                a[b] = a[c], a[c] = d
            }

            function u(a, b, c, d, e) {
                if (0 === a.length) return -1;
                if ("string" == typeof c ? (d = c, c = 0) : c > 2147483647 ? c = 2147483647 : c < -2147483648 && (c = -2147483648), c = +c, isNaN(c) && (c = e ? 0 : a.length - 1), c < 0 && (c = a.length + c), c >= a.length) {
                    if (e) return -1;
                    c = a.length - 1
                } else if (c < 0) {
                    if (!e) return -1;
                    c = 0
                }
                if ("string" == typeof b && (b = g.from(b, d)), g.isBuffer(b)) return 0 === b.length ? -1 : v(a, b, c, d, e);
                if ("number" == typeof b) return b = 255 & b, g.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? e ? Uint8Array.prototype.indexOf.call(a, b, c) : Uint8Array.prototype.lastIndexOf.call(a, b, c) : v(a, [b], c, d, e);
                throw new TypeError("val must be string, number or Buffer")
            }

            function v(a, b, c, d, e) {
                function f(a, b) {
                    return 1 === g ? a[b] : a.readUInt16BE(b * g)
                }

                var g = 1, h = a.length, i = b.length;
                if (void 0 !== d && (d = String(d).toLowerCase(), "ucs2" === d || "ucs-2" === d || "utf16le" === d || "utf-16le" === d)) {
                    if (a.length < 2 || b.length < 2) return -1;
                    g = 2, h /= 2, i /= 2, c /= 2
                }
                var j;
                if (e) {
                    var k = -1;
                    for (j = c; j < h; j++) if (f(a, j) === f(b, k === -1 ? 0 : j - k)) {
                        if (k === -1 && (k = j), j - k + 1 === i) return k * g
                    } else k !== -1 && (j -= j - k), k = -1
                } else for (c + i > h && (c = h - i), j = c; j >= 0; j--) {
                    for (var l = !0, m = 0; m < i; m++) if (f(a, j + m) !== f(b, m)) {
                        l = !1;
                        break
                    }
                    if (l) return j
                }
                return -1
            }

            function w(a, b, c, d) {
                c = Number(c) || 0;
                var e = a.length - c;
                d ? (d = Number(d), d > e && (d = e)) : d = e;
                var f = b.length;
                if (f % 2 !== 0) throw new TypeError("Invalid hex string");
                d > f / 2 && (d = f / 2);
                for (var g = 0; g < d; ++g) {
                    var h = parseInt(b.substr(2 * g, 2), 16);
                    if (isNaN(h)) return g;
                    a[c + g] = h
                }
                return g
            }

            function x(a, b, c, d) {
                return X(T(b, a.length - c), a, c, d)
            }

            function y(a, b, c, d) {
                return X(U(b), a, c, d)
            }

            function z(a, b, c, d) {
                return y(a, b, c, d)
            }

            function A(a, b, c, d) {
                return X(W(b), a, c, d)
            }

            function B(a, b, c, d) {
                return X(V(b, a.length - c), a, c, d)
            }

            function C(a, b, c) {
                return 0 === b && c === a.length ? Z.fromByteArray(a) : Z.fromByteArray(a.slice(b, c))
            }

            function D(a, b, c) {
                c = Math.min(a.length, c);
                for (var d = [], e = b; e < c;) {
                    var f = a[e], g = null, h = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1;
                    if (e + h <= c) {
                        var i, j, k, l;
                        switch (h) {
                            case 1:
                                f < 128 && (g = f);
                                break;
                            case 2:
                                i = a[e + 1], 128 === (192 & i) && (l = (31 & f) << 6 | 63 & i, l > 127 && (g = l));
                                break;
                            case 3:
                                i = a[e + 1], j = a[e + 2], 128 === (192 & i) && 128 === (192 & j) && (l = (15 & f) << 12 | (63 & i) << 6 | 63 & j, l > 2047 && (l < 55296 || l > 57343) && (g = l));
                                break;
                            case 4:
                                i = a[e + 1], j = a[e + 2], k = a[e + 3], 128 === (192 & i) && 128 === (192 & j) && 128 === (192 & k) && (l = (15 & f) << 18 | (63 & i) << 12 | (63 & j) << 6 | 63 & k, l > 65535 && l < 1114112 && (g = l))
                        }
                    }
                    null === g ? (g = 65533, h = 1) : g > 65535 && (g -= 65536, d.push(g >>> 10 & 1023 | 55296), g = 56320 | 1023 & g), d.push(g), e += h
                }
                return E(d)
            }

            function E(a) {
                var b = a.length;
                if (b <= aa) return String.fromCharCode.apply(String, a);
                for (var c = "", d = 0; d < b;) c += String.fromCharCode.apply(String, a.slice(d, d += aa));
                return c
            }

            function F(a, b, c) {
                var d = "";
                c = Math.min(a.length, c);
                for (var e = b; e < c; ++e) d += String.fromCharCode(127 & a[e]);
                return d
            }

            function G(a, b, c) {
                var d = "";
                c = Math.min(a.length, c);
                for (var e = b; e < c; ++e) d += String.fromCharCode(a[e]);
                return d
            }

            function H(a, b, c) {
                var d = a.length;
                (!b || b < 0) && (b = 0), (!c || c < 0 || c > d) && (c = d);
                for (var e = "", f = b; f < c; ++f) e += S(a[f]);
                return e
            }

            function I(a, b, c) {
                for (var d = a.slice(b, c), e = "", f = 0; f < d.length; f += 2) e += String.fromCharCode(d[f] + 256 * d[f + 1]);
                return e
            }

            function J(a, b, c) {
                if (a % 1 !== 0 || a < 0) throw new RangeError("offset is not uint");
                if (a + b > c) throw new RangeError("Trying to access beyond buffer length")
            }

            function K(a, b, c, d, e, f) {
                if (!g.isBuffer(a)) throw new TypeError('"buffer" argument must be a Buffer instance');
                if (b > e || b < f) throw new RangeError('"value" argument is out of bounds');
                if (c + d > a.length) throw new RangeError("Index out of range")
            }

            function L(a, b, c, d) {
                b < 0 && (b = 65535 + b + 1);
                for (var e = 0, f = Math.min(a.length - c, 2); e < f; ++e) a[c + e] = (b & 255 << 8 * (d ? e : 1 - e)) >>> 8 * (d ? e : 1 - e)
            }

            function M(a, b, c, d) {
                b < 0 && (b = 4294967295 + b + 1);
                for (var e = 0, f = Math.min(a.length - c, 4); e < f; ++e) a[c + e] = b >>> 8 * (d ? e : 3 - e) & 255
            }

            function N(a, b, c, d, e, f) {
                if (c + d > a.length) throw new RangeError("Index out of range");
                if (c < 0) throw new RangeError("Index out of range")
            }

            function O(a, b, c, d, e) {
                return e || N(a, b, c, 4, 3.4028234663852886e38, -3.4028234663852886e38), $.write(a, b, c, d, 23, 4), c + 4
            }

            function P(a, b, c, d, e) {
                return e || N(a, b, c, 8, 1.7976931348623157e308, -1.7976931348623157e308), $.write(a, b, c, d, 52, 8), c + 8
            }

            function Q(a) {
                if (a = R(a).replace(ba, ""), a.length < 2) return "";
                for (; a.length % 4 !== 0;) a += "=";
                return a
            }

            function R(a) {
                return a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "")
            }

            function S(a) {
                return a < 16 ? "0" + a.toString(16) : a.toString(16)
            }

            function T(a, b) {
                b = b || 1 / 0;
                for (var c, d = a.length, e = null, f = [], g = 0; g < d; ++g) {
                    if (c = a.charCodeAt(g), c > 55295 && c < 57344) {
                        if (!e) {
                            if (c > 56319) {
                                (b -= 3) > -1 && f.push(239, 191, 189);
                                continue
                            }
                            if (g + 1 === d) {
                                (b -= 3) > -1 && f.push(239, 191, 189);
                                continue
                            }
                            e = c;
                            continue
                        }
                        if (c < 56320) {
                            (b -= 3) > -1 && f.push(239, 191, 189), e = c;
                            continue
                        }
                        c = (e - 55296 << 10 | c - 56320) + 65536
                    } else e && (b -= 3) > -1 && f.push(239, 191, 189);
                    if (e = null, c < 128) {
                        if ((b -= 1) < 0) break;
                        f.push(c)
                    } else if (c < 2048) {
                        if ((b -= 2) < 0) break;
                        f.push(c >> 6 | 192, 63 & c | 128)
                    } else if (c < 65536) {
                        if ((b -= 3) < 0) break;
                        f.push(c >> 12 | 224, c >> 6 & 63 | 128, 63 & c | 128)
                    } else {
                        if (!(c < 1114112)) throw new Error("Invalid code point");
                        if ((b -= 4) < 0) break;
                        f.push(c >> 18 | 240, c >> 12 & 63 | 128, c >> 6 & 63 | 128, 63 & c | 128)
                    }
                }
                return f
            }

            function U(a) {
                for (var b = [], c = 0; c < a.length; ++c) b.push(255 & a.charCodeAt(c));
                return b
            }

            function V(a, b) {
                for (var c, d, e, f = [], g = 0; g < a.length && !((b -= 2) < 0); ++g) c = a.charCodeAt(g), d = c >> 8, e = c % 256, f.push(e), f.push(d);
                return f
            }

            function W(a) {
                return Z.toByteArray(Q(a))
            }

            function X(a, b, c, d) {
                for (var e = 0; e < d && !(e + c >= b.length || e >= a.length); ++e) b[e + c] = a[e];
                return e
            }

            function Y(a) {
                return a !== a
            }

            var Z = c(131), $ = c(132), _ = c(133);
            b.Buffer = g, b.SlowBuffer = q, b.INSPECT_MAX_BYTES = 50, g.TYPED_ARRAY_SUPPORT = void 0 !== a.TYPED_ARRAY_SUPPORT ? a.TYPED_ARRAY_SUPPORT : d(), b.kMaxLength = e(), g.poolSize = 8192, g._augment = function (a) {
                return a.__proto__ = g.prototype, a
            }, g.from = function (a, b, c) {
                return h(null, a, b, c)
            }, g.TYPED_ARRAY_SUPPORT && (g.prototype.__proto__ = Uint8Array.prototype, g.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && g[Symbol.species] === g && Object.defineProperty(g, Symbol.species, {
                value: null,
                configurable: !0
            })), g.alloc = function (a, b, c) {
                return j(null, a, b, c)
            }, g.allocUnsafe = function (a) {
                return k(null, a)
            }, g.allocUnsafeSlow = function (a) {
                return k(null, a)
            }, g.isBuffer = function (a) {
                return !(null == a || !a._isBuffer)
            }, g.compare = function (a, b) {
                if (!g.isBuffer(a) || !g.isBuffer(b)) throw new TypeError("Arguments must be Buffers");
                if (a === b) return 0;
                for (var c = a.length, d = b.length, e = 0, f = Math.min(c, d); e < f; ++e) if (a[e] !== b[e]) {
                    c = a[e], d = b[e];
                    break
                }
                return c < d ? -1 : d < c ? 1 : 0
            }, g.isEncoding = function (a) {
                switch (String(a).toLowerCase()) {
                    case"hex":
                    case"utf8":
                    case"utf-8":
                    case"ascii":
                    case"latin1":
                    case"binary":
                    case"base64":
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return !0;
                    default:
                        return !1
                }
            }, g.concat = function (a, b) {
                if (!_(a)) throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === a.length) return g.alloc(0);
                var c;
                if (void 0 === b) for (b = 0, c = 0; c < a.length; ++c) b += a[c].length;
                var d = g.allocUnsafe(b), e = 0;
                for (c = 0; c < a.length; ++c) {
                    var f = a[c];
                    if (!g.isBuffer(f)) throw new TypeError('"list" argument must be an Array of Buffers');
                    f.copy(d, e), e += f.length
                }
                return d
            }, g.byteLength = r, g.prototype._isBuffer = !0, g.prototype.swap16 = function () {
                var a = this.length;
                if (a % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var b = 0; b < a; b += 2) t(this, b, b + 1);
                return this
            }, g.prototype.swap32 = function () {
                var a = this.length;
                if (a % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var b = 0; b < a; b += 4) t(this, b, b + 3), t(this, b + 1, b + 2);
                return this
            }, g.prototype.swap64 = function () {
                var a = this.length;
                if (a % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var b = 0; b < a; b += 8) t(this, b, b + 7), t(this, b + 1, b + 6), t(this, b + 2, b + 5), t(this, b + 3, b + 4);
                return this
            }, g.prototype.toString = function () {
                var a = 0 | this.length;
                return 0 === a ? "" : 0 === arguments.length ? D(this, 0, a) : s.apply(this, arguments)
            }, g.prototype.equals = function (a) {
                if (!g.isBuffer(a)) throw new TypeError("Argument must be a Buffer");
                return this === a || 0 === g.compare(this, a)
            }, g.prototype.inspect = function () {
                var a = "", c = b.INSPECT_MAX_BYTES;
                return this.length > 0 && (a = this.toString("hex", 0, c).match(/.{2}/g).join(" "), this.length > c && (a += " ... ")), "<Buffer " + a + ">"
            }, g.prototype.compare = function (a, b, c, d, e) {
                if (!g.isBuffer(a)) throw new TypeError("Argument must be a Buffer");
                if (void 0 === b && (b = 0), void 0 === c && (c = a ? a.length : 0), void 0 === d && (d = 0), void 0 === e && (e = this.length), b < 0 || c > a.length || d < 0 || e > this.length) throw new RangeError("out of range index");
                if (d >= e && b >= c) return 0;
                if (d >= e) return -1;
                if (b >= c) return 1;
                if (b >>>= 0, c >>>= 0, d >>>= 0, e >>>= 0, this === a) return 0;
                for (var f = e - d, h = c - b, i = Math.min(f, h), j = this.slice(d, e), k = a.slice(b, c), l = 0; l < i; ++l) if (j[l] !== k[l]) {
                    f = j[l], h = k[l];
                    break
                }
                return f < h ? -1 : h < f ? 1 : 0
            }, g.prototype.includes = function (a, b, c) {
                return this.indexOf(a, b, c) !== -1
            }, g.prototype.indexOf = function (a, b, c) {
                return u(this, a, b, c, !0)
            }, g.prototype.lastIndexOf = function (a, b, c) {
                return u(this, a, b, c, !1)
            }, g.prototype.write = function (a, b, c, d) {
                if (void 0 === b) d = "utf8", c = this.length, b = 0; else if (void 0 === c && "string" == typeof b) d = b, c = this.length, b = 0; else {
                    if (!isFinite(b)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    b = 0 | b, isFinite(c) ? (c = 0 | c, void 0 === d && (d = "utf8")) : (d = c, c = void 0)
                }
                var e = this.length - b;
                if ((void 0 === c || c > e) && (c = e), a.length > 0 && (c < 0 || b < 0) || b > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                d || (d = "utf8");
                for (var f = !1; ;) switch (d) {
                    case"hex":
                        return w(this, a, b, c);
                    case"utf8":
                    case"utf-8":
                        return x(this, a, b, c);
                    case"ascii":
                        return y(this, a, b, c);
                    case"latin1":
                    case"binary":
                        return z(this, a, b, c);
                    case"base64":
                        return A(this, a, b, c);
                    case"ucs2":
                    case"ucs-2":
                    case"utf16le":
                    case"utf-16le":
                        return B(this, a, b, c);
                    default:
                        if (f) throw new TypeError("Unknown encoding: " + d);
                        d = ("" + d).toLowerCase(), f = !0
                }
            }, g.prototype.toJSON = function () {
                return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)}
            };
            var aa = 4096;
            g.prototype.slice = function (a, b) {
                var c = this.length;
                a = ~~a, b = void 0 === b ? c : ~~b, a < 0 ? (a += c, a < 0 && (a = 0)) : a > c && (a = c), b < 0 ? (b += c, b < 0 && (b = 0)) : b > c && (b = c), b < a && (b = a);
                var d;
                if (g.TYPED_ARRAY_SUPPORT) d = this.subarray(a, b), d.__proto__ = g.prototype; else {
                    var e = b - a;
                    d = new g(e, (void 0));
                    for (var f = 0; f < e; ++f) d[f] = this[f + a]
                }
                return d
            }, g.prototype.readUIntLE = function (a, b, c) {
                a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;
                return d
            }, g.prototype.readUIntBE = function (a, b, c) {
                a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                for (var d = this[a + --b], e = 1; b > 0 && (e *= 256);) d += this[a + --b] * e;
                return d
            }, g.prototype.readUInt8 = function (a, b) {
                return b || J(a, 1, this.length), this[a]
            }, g.prototype.readUInt16LE = function (a, b) {
                return b || J(a, 2, this.length), this[a] | this[a + 1] << 8
            }, g.prototype.readUInt16BE = function (a, b) {
                return b || J(a, 2, this.length), this[a] << 8 | this[a + 1]
            }, g.prototype.readUInt32LE = function (a, b) {
                return b || J(a, 4, this.length), (this[a] | this[a + 1] << 8 | this[a + 2] << 16) + 16777216 * this[a + 3]
            }, g.prototype.readUInt32BE = function (a, b) {
                return b || J(a, 4, this.length), 16777216 * this[a] + (this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3])
            }, g.prototype.readIntLE = function (a, b, c) {
                a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;
                return e *= 128, d >= e && (d -= Math.pow(2, 8 * b)), d
            }, g.prototype.readIntBE = function (a, b, c) {
                a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                for (var d = b, e = 1, f = this[a + --d]; d > 0 && (e *= 256);) f += this[a + --d] * e;
                return e *= 128, f >= e && (f -= Math.pow(2, 8 * b)), f
            }, g.prototype.readInt8 = function (a, b) {
                return b || J(a, 1, this.length), 128 & this[a] ? (255 - this[a] + 1) * -1 : this[a]
            }, g.prototype.readInt16LE = function (a, b) {
                b || J(a, 2, this.length);
                var c = this[a] | this[a + 1] << 8;
                return 32768 & c ? 4294901760 | c : c
            }, g.prototype.readInt16BE = function (a, b) {
                b || J(a, 2, this.length);
                var c = this[a + 1] | this[a] << 8;
                return 32768 & c ? 4294901760 | c : c
            }, g.prototype.readInt32LE = function (a, b) {
                return b || J(a, 4, this.length), this[a] | this[a + 1] << 8 | this[a + 2] << 16 | this[a + 3] << 24
            }, g.prototype.readInt32BE = function (a, b) {
                return b || J(a, 4, this.length), this[a] << 24 | this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3]
            }, g.prototype.readFloatLE = function (a, b) {
                return b || J(a, 4, this.length), $.read(this, a, !0, 23, 4)
            }, g.prototype.readFloatBE = function (a, b) {
                return b || J(a, 4, this.length), $.read(this, a, !1, 23, 4)
            }, g.prototype.readDoubleLE = function (a, b) {
                return b || J(a, 8, this.length), $.read(this, a, !0, 52, 8)
            }, g.prototype.readDoubleBE = function (a, b) {
                return b || J(a, 8, this.length), $.read(this, a, !1, 52, 8)
            }, g.prototype.writeUIntLE = function (a, b, c, d) {
                if (a = +a, b = 0 | b, c = 0 | c, !d) {
                    var e = Math.pow(2, 8 * c) - 1;
                    K(this, a, b, c, e, 0)
                }
                var f = 1, g = 0;
                for (this[b] = 255 & a; ++g < c && (f *= 256);) this[b + g] = a / f & 255;
                return b + c
            }, g.prototype.writeUIntBE = function (a, b, c, d) {
                if (a = +a, b = 0 | b, c = 0 | c, !d) {
                    var e = Math.pow(2, 8 * c) - 1;
                    K(this, a, b, c, e, 0)
                }
                var f = c - 1, g = 1;
                for (this[b + f] = 255 & a; --f >= 0 && (g *= 256);) this[b + f] = a / g & 255;
                return b + c
            }, g.prototype.writeUInt8 = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 1, 255, 0), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), this[b] = 255 & a, b + 1
            }, g.prototype.writeUInt16LE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2
            }, g.prototype.writeUInt16BE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1), b + 2
            }, g.prototype.writeUInt32LE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b + 3] = a >>> 24, this[b + 2] = a >>> 16, this[b + 1] = a >>> 8, this[b] = 255 & a) : M(this, a, b, !0), b + 4
            }, g.prototype.writeUInt32BE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4
            }, g.prototype.writeIntLE = function (a, b, c, d) {
                if (a = +a, b = 0 | b, !d) {
                    var e = Math.pow(2, 8 * c - 1);
                    K(this, a, b, c, e - 1, -e)
                }
                var f = 0, g = 1, h = 0;
                for (this[b] = 255 & a; ++f < c && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f - 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
                return b + c
            }, g.prototype.writeIntBE = function (a, b, c, d) {
                if (a = +a, b = 0 | b, !d) {
                    var e = Math.pow(2, 8 * c - 1);
                    K(this, a, b, c, e - 1, -e)
                }
                var f = c - 1, g = 1, h = 0;
                for (this[b + f] = 255 & a; --f >= 0 && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f + 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
                return b + c
            }, g.prototype.writeInt8 = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 1, 127, -128), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), a < 0 && (a = 255 + a + 1), this[b] = 255 & a, b + 1
            }, g.prototype.writeInt16LE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2
            }, g.prototype.writeInt16BE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1), b + 2
            }, g.prototype.writeInt32LE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8, this[b + 2] = a >>> 16, this[b + 3] = a >>> 24) : M(this, a, b, !0), b + 4
            }, g.prototype.writeInt32BE = function (a, b, c) {
                return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), a < 0 && (a = 4294967295 + a + 1), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4
            }, g.prototype.writeFloatLE = function (a, b, c) {
                return O(this, a, b, !0, c)
            }, g.prototype.writeFloatBE = function (a, b, c) {
                return O(this, a, b, !1, c)
            }, g.prototype.writeDoubleLE = function (a, b, c) {
                return P(this, a, b, !0, c)
            }, g.prototype.writeDoubleBE = function (a, b, c) {
                return P(this, a, b, !1, c)
            }, g.prototype.copy = function (a, b, c, d) {
                if (c || (c = 0), d || 0 === d || (d = this.length), b >= a.length && (b = a.length), b || (b = 0), d > 0 && d < c && (d = c), d === c) return 0;
                if (0 === a.length || 0 === this.length) return 0;
                if (b < 0) throw new RangeError("targetStart out of bounds");
                if (c < 0 || c >= this.length) throw new RangeError("sourceStart out of bounds");
                if (d < 0) throw new RangeError("sourceEnd out of bounds");
                d > this.length && (d = this.length), a.length - b < d - c && (d = a.length - b + c);
                var e, f = d - c;
                if (this === a && c < b && b < d) for (e = f - 1; e >= 0; --e) a[e + b] = this[e + c]; else if (f < 1e3 || !g.TYPED_ARRAY_SUPPORT) for (e = 0; e < f; ++e) a[e + b] = this[e + c]; else Uint8Array.prototype.set.call(a, this.subarray(c, c + f), b);
                return f
            }, g.prototype.fill = function (a, b, c, d) {
                if ("string" == typeof a) {
                    if ("string" == typeof b ? (d = b, b = 0, c = this.length) : "string" == typeof c && (d = c, c = this.length), 1 === a.length) {
                        var e = a.charCodeAt(0);
                        e < 256 && (a = e)
                    }
                    if (void 0 !== d && "string" != typeof d) throw new TypeError("encoding must be a string");
                    if ("string" == typeof d && !g.isEncoding(d)) throw new TypeError("Unknown encoding: " + d)
                } else "number" == typeof a && (a = 255 & a);
                if (b < 0 || this.length < b || this.length < c) throw new RangeError("Out of range index");
                if (c <= b) return this;
                b >>>= 0, c = void 0 === c ? this.length : c >>> 0, a || (a = 0);
                var f;
                if ("number" == typeof a) for (f = b; f < c; ++f) this[f] = a; else {
                    var h = g.isBuffer(a) ? a : T(new g(a, d).toString()), i = h.length;
                    for (f = 0; f < c - b; ++f) this[f + b] = h[f % i]
                }
                return this
            };
            var ba = /[^+\/0-9A-Za-z-_]/g
        }).call(b, function () {
            return this
        }())
    }, 131: function (a, b) {
        "use strict";

        function c(a) {
            var b = a.length;
            if (b % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
            var c = a.indexOf("=");
            c === -1 && (c = b);
            var d = c === b ? 0 : 4 - c % 4;
            return [c, d]
        }

        function d(a) {
            var b = c(a), d = b[0], e = b[1];
            return 3 * (d + e) / 4 - e
        }

        function e(a, b, c) {
            return 3 * (b + c) / 4 - c
        }

        function f(a) {
            var b, d, f = c(a), g = f[0], h = f[1], i = new l(e(a, g, h)), j = 0, m = h > 0 ? g - 4 : g;
            for (d = 0; d < m; d += 4) b = k[a.charCodeAt(d)] << 18 | k[a.charCodeAt(d + 1)] << 12 | k[a.charCodeAt(d + 2)] << 6 | k[a.charCodeAt(d + 3)], i[j++] = b >> 16 & 255, i[j++] = b >> 8 & 255, i[j++] = 255 & b;
            return 2 === h && (b = k[a.charCodeAt(d)] << 2 | k[a.charCodeAt(d + 1)] >> 4, i[j++] = 255 & b), 1 === h && (b = k[a.charCodeAt(d)] << 10 | k[a.charCodeAt(d + 1)] << 4 | k[a.charCodeAt(d + 2)] >> 2, i[j++] = b >> 8 & 255, i[j++] = 255 & b), i
        }

        function g(a) {
            return j[a >> 18 & 63] + j[a >> 12 & 63] + j[a >> 6 & 63] + j[63 & a]
        }

        function h(a, b, c) {
            for (var d, e = [], f = b; f < c; f += 3) d = (a[f] << 16 & 16711680) + (a[f + 1] << 8 & 65280) + (255 & a[f + 2]), e.push(g(d));
            return e.join("")
        }

        function i(a) {
            for (var b, c = a.length, d = c % 3, e = [], f = 16383, g = 0, i = c - d; g < i; g += f) e.push(h(a, g, g + f > i ? i : g + f));
            return 1 === d ? (b = a[c - 1], e.push(j[b >> 2] + j[b << 4 & 63] + "==")) : 2 === d && (b = (a[c - 2] << 8) + a[c - 1], e.push(j[b >> 10] + j[b >> 4 & 63] + j[b << 2 & 63] + "=")), e.join("")
        }

        b.byteLength = d, b.toByteArray = f, b.fromByteArray = i;
        for (var j = [], k = [], l = "undefined" != typeof Uint8Array ? Uint8Array : Array, m = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n = 0, o = m.length; n < o; ++n) j[n] = m[n], k[m.charCodeAt(n)] = n;
        k["-".charCodeAt(0)] = 62, k["_".charCodeAt(0)] = 63
    }, 132: function (a, b) {
        b.read = function (a, b, c, d, e) {
            var f, g, h = 8 * e - d - 1, i = (1 << h) - 1, j = i >> 1, k = -7, l = c ? e - 1 : 0, m = c ? -1 : 1,
                n = a[b + l];
            for (l += m, f = n & (1 << -k) - 1, n >>= -k, k += h; k > 0; f = 256 * f + a[b + l], l += m, k -= 8) ;
            for (g = f & (1 << -k) - 1, f >>= -k, k += d; k > 0; g = 256 * g + a[b + l], l += m, k -= 8) ;
            if (0 === f) f = 1 - j; else {
                if (f === i) return g ? NaN : (n ? -1 : 1) * (1 / 0);
                g += Math.pow(2, d), f -= j
            }
            return (n ? -1 : 1) * g * Math.pow(2, f - d)
        }, b.write = function (a, b, c, d, e, f) {
            var g, h, i, j = 8 * f - e - 1, k = (1 << j) - 1, l = k >> 1,
                m = 23 === e ? Math.pow(2, -24) - Math.pow(2, -77) : 0, n = d ? 0 : f - 1, o = d ? 1 : -1,
                p = b < 0 || 0 === b && 1 / b < 0 ? 1 : 0;
            for (b = Math.abs(b), isNaN(b) || b === 1 / 0 ? (h = isNaN(b) ? 1 : 0, g = k) : (g = Math.floor(Math.log(b) / Math.LN2), b * (i = Math.pow(2, -g)) < 1 && (g--, i *= 2), b += g + l >= 1 ? m / i : m * Math.pow(2, 1 - l), b * i >= 2 && (g++, i /= 2), g + l >= k ? (h = 0, g = k) : g + l >= 1 ? (h = (b * i - 1) * Math.pow(2, e), g += l) : (h = b * Math.pow(2, l - 1) * Math.pow(2, e), g = 0)); e >= 8; a[c + n] = 255 & h, n += o, h /= 256, e -= 8) ;
            for (g = g << e | h, j += e; j > 0; a[c + n] = 255 & g, n += o, g /= 256, j -= 8) ;
            a[c + n - o] |= 128 * p
        }
    }, 133: function (a, b) {
        var c = {}.toString;
        a.exports = Array.isArray || function (a) {
            return "[object Array]" == c.call(a)
        }
    }, 141: function (a, b, c) {
        function d(a) {
            g = Txplayer.$, this.context = a, this.context.dataset.hasChromeHlsPlugin = !0, i.IsSupportVideoIn && (this.context.dataset.IsSupportVideoIn = i.IsSupportVideoIn()), location.search && location.search.indexOf("p2plog") > -1 && i.SetP2PLogConsole(!0), Txplayer.Hls = i, this.dataset = {}, this._hls = null, this._video = null, this.addEventListener()
        }

        var e, f, g = Txplayer.$, h = Txplayer.util, i = c(142), j = {
            debug: 1 == h.getUrlParam("debughls"),
            manifestLoadingMaxRetry: 2,
            manifestLoadingRetryDelay: 100,
            manifestLoadingTimeOut: 1e4,
            levelLoadingMaxRetry: 2,
            levelLoadingRetryDelay: 100,
            levelLoadingTimeOut: 1e4,
            fragLoadingRetryDelay: 10,
            fragLoadingMaxRetry: 3,
            fragLoadingTimeOut: 3e4,
            maxBufferLength: 180,
            maxMaxBufferLength: 180,
            autoStartLoad: !1,
            widevineLicenseUrl: "",
            emeEnabled: !1
        };
        d.prototype = {
            destroyHlsPlayer: function (a) {
                a = a || "";
                var b = g.Deferred(), c = this;
                if (this.context.dataset.emeEnabled) if (this._video) {
                    this._video.src = "";
                    var d = this._video.setMediaKeys(null);
                    d.then(function () {
                        c._hls.destroy(a), c._hls = null, c._video = null, b.resolve()
                    }), d["catch"](function () {
                        b.resolve()
                    })
                } else b.resolve(); else this._hls && (this._hls.destroy(a), this._hls = null), this._video && (this._video = null), b.resolve();
                return b
            }, createHlsPlayer: function (a, b, c) {
                var d = this;
                return this.destroyHlsPlayer(c).then(function () {
                    e = null, f = null, a = a || j, a.p2pConfig = b.p2pConfig, a.m3u8Urls = b.m3u8Urls;
                    var c = parseFloat(b.byterate);
                    return isNaN(c) || (a.p2pConfig.maxBufferTime = 61440 / c), a.emeEnabled = d.context.dataset.emeEnabled || !1, d.dataset.lastEmeEnabled = a.emeEnabled, a.emeEnabled ? a.widevineLicenseUrl = d.context.dataset.ckc : a.widevineLicenseUrl = "", a.emeEnabled && a.widevineLicenseUrl && !h.isSupportEme ? void d.context.msg.broadcast("error", {
                        type: "hls",
                        code: -11111,
                        errCode: "-11111.1",
                        exem: -1
                    }) : (d.context.dataset.p2pLoadingAdLoadComplete ? (d.dataset.p2pPreloadStatus = "preload", a.videoPreLoad = 1) : a.videoPreLoad = 0, d._hls && h.v4log("detect mutil hls instance"), d.context.dataset.flowid && (a.flowid = d.context.dataset.flowid), a.vinfo = d.context.dataset.getinfoJSON, d._hls = new i(a), void d.initHlsEvent())
                })
            }, loadHlsSource: function (a) {
                function b() {
                    if (a.fromSetDefinition && c._hls) {
                        if (h.v4log("setInfo", {p2pConfig: a.p2pConfig}), c._hls) {
                            var b = parseFloat(a.byterate);
                            isNaN(b) || (a.p2pConfig.maxBufferTime = 61440 / b), c._hls.setInfo && c._hls.setInfo(a.p2pConfig)
                        }
                        c.addDefinition(a)
                    } else c.createHlsPlayer(null, a, a.reason).then(function () {
                        c._hls && (c._hls.attachMedia(a.video), a.m3u8 ? (c.initSetCurrenTime(a), c._hls.loadSource({
                            m3u8: f,
                            url: e
                        })) : (c._hls.loadSource({url: e}), c.initSetCurrenTime(a)), c.dataset.level = 0, c.dataset.urlsNum = 1, c.dataset.hasSetDefinitionFail = null, "function" === Txplayer.$.type(c.context.config.getUserType) && c.context.msg.broadcast("setChromeHlsData", {
                            k: "vip",
                            v: 2 == c.context.config.getUserType() ? 1 : 0
                        }))
                    })
                }

                var c = this;
                if (a.src && a.video) {
                    this.dataset.p2pPreloadStatus = "empty";
                    var d, e = a.src || "", f = (a.m3u8Urls || [], a.m3u8 || "");
                    this._hls && (d = this._hls.config.emeEnabled), this.dataset.isSwitchDrm = !1, this.dataset.switchDrmCurrentTime = 0, (this.dataset.lastEmeEnabled || this.context.dataset.emeEnabled) && this._hls ? (this.dataset.isSwitchDrm = !0, this.dataset.switchDrmCurrentTime = this.context.dataset.currentTime, this.destroyHlsPlayer("swich drm").then(function () {
                        b()
                    })) : b()
                }
            }, dealSrc: function (a) {
                var b = this.context.dataset.definition, c = b && b.replace("auto-", "") || "hd",
                    d = "#EXTM3U\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=" + this.context.dataset.currentDefinitionRate + ",NAME=" + c + "\n" + a + "\n";
                return "data:appliction/x-mpegurl," + encodeURIComponent(d)
            }, addDefinition: function (a) {
                this.dataset.urlsNum++;
                var b = this.context.dataset.definition, c = b && b.replace("auto-", "") || "hd",
                    d = "#EXTM3U\n#EXT-X-STREAM-INF:PROGRAM-ID=1,BANDWIDTH=" + this.context.dataset.currentDefinitionRate + ",NAME=" + c + "\n" + a.src + "\n",
                    e = this._hls.coreComponents[0].parseMasterPlaylist(d, encodeURIComponent(d));
                e[0].url = [e[0].url], e[0].urlId = 0, e[0].m3u8 = a.m3u8 || "", this._hls.levelController._levels.push(e[0]), this._hls.nextLevel = this.dataset.urlsNum - 1, a.autoplay && this._video && this._video.play()
            }, initSetCurrenTime: function (a) {
                if (a.video) {
                    h && h.v4log("hls-initSetCurrenTime", {src: a.src, currentTime: a.currentTime});
                    var b = this;
                    this._hls.on(i.Events.MANIFEST_PARSED, function (c, d) {
                        var e = d && d.levels && d.levels[0] && d.levels[0].details;
                        if (e) {
                            e.discontinuityTimeRanges && e.discontinuityTimeRanges.length > 0 ? (b.context.dataset.hlsAdTimeRanges = e.discontinuityTimeRanges, b.context.dataset.hlsAdTimeRanges.sort(function (a, b) {
                                return a.start < b.start ? -1 : a.start > b.start ? 1 : 0
                            })) : b.context.dataset.hlsAdTimeRanges = [], h.log("hlsAdTimeRanges/durationChange", b.context.dataset.hlsAdTimeRanges, "/" + b.context.dataset.duration + "-> " + e.totalduration);
                            var f = b.context.dataset.hlsAdTimeRanges && b.context.dataset.hlsAdTimeRanges.length > 0;
                            f && b.context.dataset.duration !== e.totalduration && (b.context.dataset.duration = e.totalduration, e.durationChanged = !0), b.context.msg.broadcast("videoHlsManifestParsed", e)
                        }
                        if (a.currentTime) {
                            var g = !0, i = parseInt(h.getHlsAdOffsetTime(a.currentTime, b.context, g));
                            a.currentTime = i, b._hls.config.startPosition = a.currentTime;
                            var j, k = function (a) {
                                if (!b._video) return j && window.clearInterval(j), void (j = window.setInterval(function () {
                                    k(a)
                                }, 50));
                                if (window.clearInterval(j), j = null, b._hls.startLoad(a.currentTime), b._hls.config.startPosition = 0, a.autoplay) {
                                    var c = a.video.play();
                                    c && c["catch"] && c["catch"](function (a) {
                                        h.v4log("hls-play-catch2", a)
                                    })
                                }
                            };
                            k(a)
                        } else b._hls.startLoad(), b.setCurrenTime(a)
                    })
                }
            }, setCurrenTime: function (a) {
                h && h.v4log("hls-setCurrenTime", a);
                var b;
                a.hasOwnProperty("currentTime") && !isNaN(a.currentTime) ? a.autoplay ? (b = a.video.play(), b && b.then ? b.then(function () {
                    a.video.currentTime = a.currentTime
                })["catch"](function (b) {
                    a.video.currentTime = a.currentTime, h.v4log("hls-play-catch", b)
                }) : a.video.currentTime = a.currentTime) : a.video.currentTime = a.currentTime : a.autoplay && (b = a.video.play(), b && b["catch"] && b["catch"](function (a) {
                    h.v4log("hls-play-catch1", a)
                }))
            }, initHlsEvent: function () {
                var a = this;
                this._hls.on(i.Events.LEVEL_SWITCHED, function (b, c) {
                    if (h.v4log("LEVEL_SWITCHED", {
                        urlsNum: a.dataset.urlsNum,
                        level: a.dataset.level,
                        currentLevel: a._hls && a._hls.currentLevel
                    }), a._hls && a.context.dataset.useChromeHls && (a.dataset.urlsNum > 1 && a.dataset.level != c.level || a.dataset.isSwitchDrm)) {
                        h.v4log("\u5df2\u6210\u529f\u4e3a\u60a8\u5207\u6362\u6e05\u6670\u5ea6"), a.dataset.level = c.level, a.context.dataset.playList[a.context.dataset.playListIndex].playing = !0, a.context.msg.broadcast("videoPlaying.h5report-step31", {index: 0}), a.context.msg.broadcast("videoPlaying.switch_definition", {hlsDefinitionEndTime: +new Date});
                        var d = a.context.dataset.historyDefinition || "";
                        d.indexOf("auto-") === -1 && a.context.msg.broadcast("showUiTips", {
                            text: "\u5df2\u6210\u529f\u4e3a\u60a8\u5207\u6362\u6e05\u6670\u5ea6",
                            time: 3
                        }), a.dataset.isSwitchDrm && a.context.msg.broadcast("seekTo", a.dataset.switchDrmCurrentTime)
                    }
                }), this._hls.on(i.Events.MEDIA_ATTACHING, function (a, b) {
                    h.v4log("hls-MEDIA_ATTACHING", {stime: +new Date})
                }), this._hls.on(i.Events.MEDIA_ATTACHED, function (b, c) {
                    h.v4log("hls-MEDIA_ATTACHED", {stime: +new Date}), a._video = c.media
                }), this._hls.on(i.Events.MANIFEST_LOADING, function (b, c) {
                    h.v4log("hls-MANIFEST_LOADING", {stime: +new Date}), a.context.msg.broadcast("hlsStartPlay", {stime: +new Date})
                }), this._hls.on(i.Events.MEDIA_DETACHED, function (b, c) {
                    a._video = null
                }), this._hls.on(i.Events.CKEY_TIMEOUT, function (b, c) {
                    a.context.msg.broadcast("chromehlsCkeyTimeout")
                }), this._hls.on(i.Events.KEYID_CHANGE, function () {
                    a.context.dataset.videoWaitingReason = 8, g(a._video).trigger("error", {
                        detail: "keyIdChange",
                        ckeyChange: !0
                    })
                }), this._hls.on(i.Events.SERVER_AND_CLIENT_IP_NOTIFY, function (b, c) {
                    h.v4log("Hls.Event.SERVER_AND_CLIENT_IP_NOTIFY", b, c), c = c || {}, a.context.dataset.hlsServerIP = c.serverIP || "", a.context.dataset.hlsClientIP = c.clientIP || ""
                }), this._hls.on(i.Events.ERROR, function (b, c) {
                    h.v4log("Hls.Events.ERROR", c);
                    var d = g(a._video);
                    if (c.fatal) switch (c.tsUrl = "", c.frag && c.frag.url && (c.tsUrl = c.frag.url), c.type) {
                        case i.ErrorTypes.MEDIA_ERROR:
                            "bufferAppendError" == c.details && (a.context.dataset.videoWaitingReason = 4, d.trigger("waiting"), d.trigger("error", {
                                detail: c.details,
                                url: c.tsUrl,
                                from: "p2p"
                            })), "bufferStalledError" == c.details && (a.context.dataset.videoWaitingReason = 5, d.trigger("waiting"), d.trigger("error", {
                                detail: c.details,
                                url: c.tsUrl,
                                from: "p2p"
                            }));
                            break;
                        case i.ErrorTypes.KEY_SYSTEM_ERROR:
                            h.v4log("KEY_SYSTEM_ERROR", {detail: c.details}), a.context.dataset.videoWaittingReason = 9, d.trigger("waiting"), d.trigger("error", {
                                detail: c.details,
                                url: c.tsUrl,
                                from: "p2p"
                            });
                            break;
                        case i.ErrorTypes.NETWORK_ERROR:
                            h.v4log("NETWORK_ERROR", {detail: c.details}), a.context.dataset.videoWaitingReason = 6, d.trigger("waiting"), d.trigger("error", {
                                detail: c.details,
                                url: c.tsUrl,
                                from: "p2p"
                            });
                            break;
                        default:
                            a.context.dataset.videoWaitingReason = 7, d.trigger("error", {
                                detail: c.details,
                                url: c.tsUrl,
                                from: "p2p"
                            })
                    }
                }), this._hls.on(i.Events.FRAG_LOAD_PROGRESS, function (b, c) {
                    "empty" !== a.dataset.p2pPreloadStatus && "finish" !== a.dataset.p2pPreloadStatus || (c && c.stats && a.context.msg.broadcast("hlsProgress", {
                        loaded: c.stats.loaded,
                        total: c.stats.total
                    }), c && c.stats && c.stats.loaded > 0 && c.frag && 0 === c.frag.loadIdx && (c.stats.loaded / c.stats.total > .3 && a.context.msg.broadcast("hlsFirstFragementLoadFinish", {
                        time: +new Date,
                        loaded: c.stats.loaded
                    }), h.v4log("step30-\u5f53\u524d\u52a0\u8f7d\u8fdb\u5ea6", {
                        time: +new Date,
                        loaded: c.stats.loaded,
                        percent: c.stats.loaded / c.stats.total
                    })))
                }), this._hls.on(i.Events.BUFFER_FULL_ERROR, function (a, b) {
                    h.v4log("BUFFER_FULL_ERROR", b)
                }), this._hls.on(i.Events.QUIC_NOTIFY, function (b, c) {
                    a.context.dataset.isQuic = c.is_quic ? 1 : 0, c.is_quic && (a.context.dataset.quicVer = c.quicver || "")
                }), this._hls.on("hlsCanChangeDef", function (b, c) {
                    function d() {
                        var a = !1;
                        e.indexOf(f) > -1 && (a = !0), c.can_change_definition = a, i.setData && i.setData("can_change_definition", c)
                    }

                    var e = ["sd", "hd"], f = c.to_definition,
                        g = a.context.config.loginHandler && a.context.config.loginHandler.isLogin && a.context.config.loginHandler.isLogin();
                    if (g) {
                        e.push("shd");
                        var h = a.context.config.loginHandler.getVipInfo;
                        h ? h().then(function (a) {
                            1 == a.vip && e.push("fhd"), d()
                        }, function () {
                            d()
                        }) : d()
                    } else d()
                }), this._hls.on("hlsChangeDef", function (b, c) {
                    var d = c.to_definition, e = a.context.dataset.definition;
                    e = e.replace("auto-", ""), d != e && a.context.msg.broadcast("setDefinition", "auto-" + d)
                })
            }, handleMediaError: function (a) {
                var b = this, c = (new Date).getTime();
                !e || c - e > 3e3 ? (e = (new Date).getTime(), this._hls.recoverMediaError()) : !f || c - f > 3e3 ? (f = (new Date).getTime(), this._hls.swapAudioCodec(), this._hls.recoverMediaError()) : g(b._video).trigger("error", {
                    detail: a.details,
                    url: a.tsUrl,
                    from: "p2p"
                })
            }, remove: function () {
                this.destroyHlsPlayer()
            }, addEventListener: function () {
                var a = this;
                a.context.msg.on("loadHlsSource", function (b) {
                    h.v4log("hlshelper-broadcast:loadHlsSource"), a.loadHlsSource(b)
                }), a.context.msg.on("destroyHlsPlayer", function (b) {
                    b = b || {}, h.v4log("hlshelper-broadcast:destroyHlsPlayer"), a.destroyHlsPlayer(b.msg).then(function () {
                        i.log && i.log("destroyHlsPlayer: " + (b.msg || ""))
                    })
                }), a.context.msg.on("setHlsCurrenTime", function (b) {
                    h.v4log("hlshelper-broadcast:setHlsCurrenTime"), a.setCurrenTime(b)
                }), a.context.msg.on("reportChromeHlsLog", function (b) {
                    a.context.dataset.useChromeHls && (h.v4log("hlshelper-broadcast:ReportHlsLog"), i.postLog && i.postLog(b && b.code || 0))
                }), a.context.msg.on("reportChromeHlsError", function (a) {
                    h.v4log("hlshelper-broadcast:ReportHlsError"), i.setPlayerError && i.setPlayerError(a), i.log && i.log("playerLoading: " + a)
                }), a.context.msg.on("setChromeHlsData", function (b) {
                    return "__stuck__" == b.k ? void (i.stuck && i.stuck(b.v.defn, b.v.vid)) : (i.setData && i.setData(b.k, b.v), void ("videoPreLoadFinish" === b.k && (a.dataset.p2pPreloadStatus = "finish", h.v4log("hls-preload-p2p-finished"), a.context.msg.broadcast("hlsStartPlay", {
                        forceUpdate: !0,
                        stime: +new Date
                    }))))
                }), a.context.msg.on("stopP2P", function () {
                    try {
                        i.setData && i.setData("stopp2p", 1)
                    } catch (a) {
                    }
                })
            }
        }, Txplayer.register("HlsHelperP2PEncrypt", d)
    }, 142: function (module, exports, __webpack_require__) {
        (function (Buffer) {
            !function (a, b) {
                module.exports = b()
            }("undefined" != typeof self ? self : this, function () {
                return function (a) {
                    function b(d) {
                        if (c[d]) return c[d].exports;
                        var e = c[d] = {i: d, l: !1, exports: {}};
                        return a[d].call(e.exports, e, e.exports, b), e.l = !0, e.exports
                    }

                    var c = {};
                    return b.m = a, b.c = c, b.d = function (a, c, d) {
                        b.o(a, c) || Object.defineProperty(a, c, {configurable: !1, enumerable: !0, get: d})
                    }, b.n = function (a) {
                        var c = a && a.__esModule ? function () {
                            return a["default"]
                        } : function () {
                            return a
                        };
                        return b.d(c, "a", c), c
                    }, b.o = function (a, b) {
                        return Object.prototype.hasOwnProperty.call(a, b)
                    }, b.p = "/dist/", b(b.s = 48)
                }([function (a, b, c) {
                    "use strict";

                    function d() {
                    }

                    function e(a, b) {
                        return b = "[" + a + "] > " + b
                    }

                    function f(a) {
                        if ("debug" == a || "log" == a || "info" == a || "warn" == a || "error" == a) {
                            var b = self.console[a];
                            return b ? function () {
                                for (var c = arguments.length, d = Array(c), f = 0; f < c; f++) d[f] = arguments[f];
                                d[0] && (d[0] = e(a, d[0])), b.apply(self.console, d)
                            } : d
                        }
                    }

                    function g(a) {
                        for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
                        c.forEach(function (b) {
                            j[b] = a[b] ? a[b].bind(a) : f(b)
                        })
                    }

                    c.d(b, "a", function () {
                        return k
                    }), c.d(b, "b", function () {
                        return l
                    });
                    var h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) {
                        return typeof a
                    } : function (a) {
                        return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                    }, i = {trace: d, debug: d, log: d, warn: d, info: d, error: d}, j = i, k = function (a) {
                        if (a === !0 || "object" === ("undefined" == typeof a ? "undefined" : h(a))) {
                            g(a, "debug", "log", "info", "warn", "error", "setdata", "getdata", "postdata", "recvlog", "getMemBuf");
                            try {
                                j.log()
                            } catch (b) {
                                j = i
                            }
                        } else j = i
                    }, l = j
                }, function (a, b, c) {
                    "use strict";
                    var d = {
                        P2PVersion: "5.2.39",
                        PIECE_SIZE: 1024,
                        BLOCK_SIZE: 65536,
                        ConfigURL: "https://live.fp.qq.com/commdatav2?cmd=2",
                        playerVer: "",
                        guid: "",
                        osVer: "",
                        broVer: "",
                        platform: 10201,
                        qq: "",
                        wx: "",
                        UseTimeoutCtrl: !0,
                        SecondTimer: 1e3,
                        BossIDServerQuality: 3646,
                        BossIDPlayQuality: 3647,
                        BossPwdPlayQuality: 1005892234,
                        BossPwdServerQuality: 1408787169,
                        P2PProtocolVersion: "1.0",
                        appid: 12201,
                        busiid: 0,
                        isSupportP2P: void 0,
                        isAdPreLoading: !1,
                        adPreLoadTick: 0,
                        flowid: 0,
                        test: 0,
                        stopP2PValue: 0,
                        IsReportServerAndClientIP: 0,
                        quicTest: 0,
                        playType: 0,
                        hasReportQuic: 0
                    };
                    b.a = d
                }, function (a, b, c) {
                    "use strict";
                    c.d(b, "b", function () {
                        return d
                    }), c.d(b, "a", function () {
                        return e
                    }), c.d(b, "c", function () {
                        return f
                    });
                    var d = {
                        NETWORK_ERROR: "networkError",
                        MEDIA_ERROR: "mediaError",
                        KEY_SYSTEM_ERROR: "keySystemError",
                        MUX_ERROR: "muxError",
                        OTHER_ERROR: "otherError"
                    }, e = {
                        KEY_SYSTEM_NO_KEYS: "keySystemNoKeys",
                        KEY_SYSTEM_NO_ACCESS: "keySystemNoAccess",
                        KEY_SYSTEM_NO_SESSION: "keySystemNoSession",
                        KEY_SYSTEM_NO_INIT_DATA: "keySystemNoInitData",
                        KEY_SYSTEM_LICENSE_REQUEST_FAILED: "keySystemLicenseRequestFailed",
                        MANIFEST_LOAD_ERROR: "manifestLoadError",
                        MANIFEST_LOAD_TIMEOUT: "manifestLoadTimeOut",
                        MANIFEST_PARSING_ERROR: "manifestParsingError",
                        MANIFEST_INCOMPATIBLE_CODECS_ERROR: "manifestIncompatibleCodecsError",
                        LEVEL_LOAD_ERROR: "levelLoadError",
                        LEVEL_LOAD_TIMEOUT: "levelLoadTimeOut",
                        LEVEL_SWITCH_ERROR: "levelSwitchError",
                        AUDIO_TRACK_LOAD_ERROR: "audioTrackLoadError",
                        AUDIO_TRACK_LOAD_TIMEOUT: "audioTrackLoadTimeOut",
                        FRAG_LOAD_ERROR: "fragLoadError",
                        FRAG_LOOP_LOADING_ERROR: "fragLoopLoadingError",
                        FRAG_LOAD_TIMEOUT: "fragLoadTimeOut",
                        FRAG_DECRYPT_ERROR: "fragDecryptError",
                        FRAG_PARSING_ERROR: "fragParsingError",
                        REMUX_ALLOC_ERROR: "remuxAllocError",
                        KEY_LOAD_ERROR: "keyLoadError",
                        KEY_LOAD_TIMEOUT: "keyLoadTimeOut",
                        BUFFER_ADD_CODEC_ERROR: "bufferAddCodecError",
                        BUFFER_APPEND_ERROR: "bufferAppendError",
                        BUFFER_APPENDING_ERROR: "bufferAppendingError",
                        BUFFER_STALLED_ERROR: "bufferStalledError",
                        BUFFER_FULL_ERROR: "bufferFullError",
                        BUFFER_SEEK_OVER_HOLE: "bufferSeekOverHole",
                        BUFFER_NUDGE_ON_STALL: "bufferNudgeOnStall",
                        INTERNAL_EXCEPTION: "internalException",
                        WEBVTT_EXCEPTION: "webVTTException"
                    }, f = {
                        NETWORK_ERROR: "[NetworkError]",
                        MEDIA_ERROR: "[MediaError]",
                        PARSING_ERROR: "[ParsingError]",
                        ENCRYPT_HANDLE_ERROR: "[EncryptHandleError]",
                        BUFFER_ERROR: "[BufferError]",
                        TS_CHECK_ERROR: "[TsCheckError]",
                        P2P_SIGNAL_ERROR: "[P2PSignalError]",
                        P2P_PEERSERVER_ERROR: "[P2PPeerserverError]",
                        P2P_OTHER_ERROR: "[P2POtherError]"
                    }
                }, function (a, b, c) {
                    "use strict";
                    var d = {
                        MEDIA_ATTACHING: "hlsMediaAttaching",
                        MEDIA_ATTACHED: "hlsMediaAttached",
                        MEDIA_DETACHING: "hlsMediaDetaching",
                        MEDIA_DETACHED: "hlsMediaDetached",
                        BUFFER_RESET: "hlsBufferReset",
                        BUFFER_CODECS: "hlsBufferCodecs",
                        BUFFER_CREATED: "hlsBufferCreated",
                        BUFFER_APPENDING: "hlsBufferAppending",
                        BUFFER_APPENDED: "hlsBufferAppended",
                        BUFFER_EOS: "hlsBufferEos",
                        BUFFER_FLUSHING: "hlsBufferFlushing",
                        BUFFER_FLUSHED: "hlsBufferFlushed",
                        HLS_CONFIG_INFO: "hlsConfigInfo",
                        MANIFEST_LOADING: "hlsManifestLoading",
                        MANIFEST_LOADED: "hlsManifestLoaded",
                        MANIFEST_PARSED: "hlsManifestParsed",
                        LEVEL_SWITCH: "hlsLevelSwitch",
                        LEVEL_SWITCHING: "hlsLevelSwitching",
                        LEVEL_SWITCHED: "hlsLevelSwitched",
                        LEVEL_LOADING: "hlsLevelLoading",
                        LEVEL_LOADED: "hlsLevelLoaded",
                        LEVEL_UPDATED: "hlsLevelUpdated",
                        LEVEL_PTS_UPDATED: "hlsLevelPtsUpdated",
                        AUDIO_TRACKS_UPDATED: "hlsAudioTracksUpdated",
                        AUDIO_TRACK_SWITCH: "hlsAudioTrackSwitch",
                        AUDIO_TRACK_SWITCHING: "hlsAudioTrackSwitching",
                        AUDIO_TRACK_SWITCHED: "hlsAudioTrackSwitched",
                        AUDIO_TRACK_LOADING: "hlsAudioTrackLoading",
                        AUDIO_TRACK_LOADED: "hlsAudioTrackLoaded",
                        SUBTITLE_TRACKS_UPDATED: "hlsSubtitleTracksUpdated",
                        SUBTITLE_TRACK_SWITCH: "hlsSubtitleTrackSwitch",
                        SUBTITLE_TRACK_LOADING: "hlsSubtitleTrackLoading",
                        SUBTITLE_TRACK_LOADED: "hlsSubtitleTrackLoaded",
                        SUBTITLE_FRAG_PROCESSED: "hlsSubtitleFragProcessed",
                        INIT_PTS_FOUND: "hlsInitPtsFound",
                        FRAG_LOADING: "hlsFragLoading",
                        FRAG_BUFFER_INFO: "hlsBufferInfo",
                        FRAG_LOAD_PROGRESS: "hlsFragLoadProgress",
                        FRAG_LOAD_EMERGENCY_ABORTED: "hlsFragLoadEmergencyAborted",
                        FRAG_LOADED: "hlsFragLoaded",
                        FRAG_DECRYPTED: "hlsFragDecrypted",
                        FRAG_PARSING_INIT_SEGMENT: "hlsFragParsingInitSegment",
                        FRAG_PARSING_USERDATA: "hlsFragParsingUserdata",
                        FRAG_PARSING_METADATA: "hlsFragParsingMetadata",
                        FRAG_PARSING_DATA: "hlsFragParsingData",
                        FRAG_PARSED: "hlsFragParsed",
                        FRAG_BUFFERED: "hlsFragBuffered",
                        FRAG_CHANGED: "hlsFragChanged",
                        FPS_DROP: "hlsFpsDrop",
                        FPS_DROP_LEVEL_CAPPING: "hlsFpsDropLevelCapping",
                        ERROR: "hlsError",
                        DESTROYING: "hlsDestroying",
                        KEY_LOADING: "hlsKeyLoading",
                        KEY_LOADED: "hlsKeyLoaded",
                        STREAM_STATE_TRANSITION: "hlsStreamStateTransition",
                        WRITE_FILE: "writeFile",
                        LOG: "log",
                        DATA_ERROR: "hlsDataError",
                        BUFFER_CUT: "hlsBufferCut",
                        END_STREAM: "hlsEndStream",
                        AUDIO_NOT_IN_SEQUENCE: "hlsAudioNotInSequence",
                        CKEY_TIMEOUT: "hlsCkeyTimeout",
                        KEYID_CHANGE: "hlsKeyIdChange",
                        QUIC_NOTIFY: "hlsQuicNotify",
                        SERVER_AND_CLIENT_IP_NOTIFY: "hlsServerAndClientNotify",
                        LOAD_M3U8_DIRECT_DATA: "hlsLoadM3U8DirectData",
                        REMOVE_BUFFERED_FRAG: "hlsRemoveBufferedFrag"
                    };
                    b.a = d
                }, function (a, b, c) {
                    "use strict";
                    var d = {
                        SendDataScheduleInterval: 30,
                        DownloadScheduleInterval: 1e3,
                        CommitBlockCntPerTime: 16,
                        MinEmergencyTime: 90,
                        MinSafeTime: 120,
                        MaxCacheSize: 104857600,
                        FastReleaseRatio: 0,
                        P2PDownloadMemoryRatio: 20,
                        HttpRecvTimeout: 8e3,
                        HttpConnectTimeout: 3e3,
                        XhrRecvTimeout: 1e4,
                        XhrConnectTimeout: 3e3,
                        P2PStartTime: 15,
                        AdjustHttpBufferTime: "0-19 210 240,19-24 90 120",
                        IsStartP2P: 1,
                        reportLogParm: 1e3,
                        macReportLogParm: 1,
                        reportDataErrorLogParm: 1e3,
                        MinPeerWindowSize: 8,
                        MaxPeerWindowSize: 64,
                        QuerySeedInterval: 5,
                        MaxQuerySeedNum: 30,
                        MaxPeerNum: 50,
                        ReducePeerCount: 30,
                        AddQuerySeedInterval: 10,
                        MaxKeepPeerPoolTime: 60,
                        ConnectPeerIntervar: 6,
                        MaxConnectingPeerNumber: 8,
                        MaxConnectedPeerNumber: 6,
                        MaxConnectPeerNumberOneTime: 1,
                        MaxUploadConnectingPeerNum: 8,
                        MaxUploadConnectedPeerNum: 5,
                        ExchangeBitmapInterval: 5,
                        MaxBitmapNumber: 30,
                        MaxChooseTsNum: 30,
                        MaxP2PRecvTimeout: 3,
                        logOpen: 1,
                        logLevel: "debug",
                        logSize: 1024e3,
                        logType: "mem",
                        logSupportZip: 1,
                        filterInclude: "",
                        filterExclude: "",
                        filterIgnore: 0,
                        openDemuxLog: 0,
                        MinReportErrorTime: 5,
                        MinReportTimeoutTime: 5,
                        ErrorRetryTimes: 3,
                        TimeoutRetryTime: 3,
                        ReportInterval: 60,
                        HeartbeatInterval: 40,
                        IceServer: [{ip: "webrtcice.video.qq.com", port: 3478}, {
                            ip: "bakwebrtcice.video.qq.com",
                            port: 3478
                        }],
                        PSServer: [{ip: "webrtcpunch.video.qq.com", port: 0}, {
                            ip: "bakwebrtcpunch.video.qq.com",
                            port: 0
                        }],
                        EnableDeletePeerWhenDestory: !0,
                        HttpCheckInterval: 5,
                        EnableSwitchUrl: !0,
                        HttpMaxFailedTimes: 2,
                        PeerBlackTime: 90,
                        PeerSpareTime: 60,
                        MinPlayingConnectPeer: 5,
                        MaxP2PConnectTimeout: 30,
                        MaxP2PRecvDataTimeOut: 30,
                        MinPeerQos: 5e3,
                        MaxProtectPeerTime: 15,
                        MaxP2POfflineSendDataTimeOut: 60,
                        ErrorRetryInterval: 1e3,
                        UseVodFragmentLoader: 1,
                        P2PServerRetryInternal: 3e3,
                        P2PServerRetryTimes: 5,
                        P2PWebSockMaxRetryTimes: 30,
                        P2PSendPackTimeout: 10,
                        P2PPackRetryTimes: 3,
                        P2PLoginRetryTimes: 3,
                        P2PPeerUploadMsgDead: 40,
                        P2PPeerDownloadMsgDead: 40,
                        ReqConfigInterval: 1800,
                        PlayMaxRemainTime: 120,
                        MultiThread: 1,
                        CheckSourceBufferTime: 10,
                        CheckSourceBufferLen: 120,
                        ParseDataFailSwitchUrl: 1,
                        TPTSuccReportRate: 10,
                        IsUseRange: 1,
                        OnlyXHR: 0,
                        AudioFrameInternalDelta: 3,
                        OpenDropFrameBetweenTs: 1,
                        EnableCDNSlowSwitch: !0,
                        MaxLastBitrateCount: 5,
                        LowSpeedRatio: 1,
                        MaxLowSpeedCount: 8,
                        M3U8RecvTimeOut: 3e3,
                        M3u8RetryTimes: 0,
                        CanUploadRemainTime: 25,
                        HttpFluxInvalid: 1073741824,
                        M3U8403SwitchUrl: 0,
                        JumpVideoHead: 1,
                        AdPreLoadConnectedPeerNum: 1,
                        AdPreLoadMaxWindowNum: 30,
                        HighTime: "",
                        EnableFirstCachestrategy: !0,
                        FirstCacheTime: 60,
                        FirstCacheEmerTime: 30,
                        FirstCacheSafeTime: 60,
                        FirstCacheMinPoolSize: 10,
                        BTRatio: 2,
                        MinDecreaseEmerTime: 50,
                        MinDecreaseSafeTime: 80,
                        MaxAddEmerTime: 90,
                        MaxAddSafeTime: 120,
                        DecreaseTimeDelta: 5,
                        AddTimeDelta: 5,
                        DropFrameFirstLevel: 5,
                        DropFrameSecondLevel: 10,
                        DropFrameThirdLevel: 20,
                        DFFirstDecreseConPeer: 5,
                        DFSecondDecreseConPeer: 4,
                        DFThirdDecreseConPeer: 3,
                        DFFirstDecreseConInterval: 8,
                        DFSecondDecreseConInterval: 10,
                        DFThirdDecreseConInterval: 12,
                        ReportQuic: 1e3,
                        IsReportQuic: 0,
                        ReportGoQuic: 100,
                        ForbiddenCloseP2P: 0,
                        ForbiddenCloseP2PDuration: [{start: 0, end: 19, forbidden: 0}, {
                            start: 20,
                            end: 24,
                            forbidden: 0
                        }],
                        DropFrameSpan: 10,
                        DropFramePercent: 3,
                        ImmediateDownloadTime: 20,
                        DataChannelReliableMode: 1,
                        UseSlidingWindow: 1,
                        ForbiddenInsertVideoInAdP2P: 1
                    };
                    b.a = d
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    var e = c(82), f = c.n(e), g = function () {
                        function a() {
                            d(this, a)
                        }

                        return a.GetTick = function () {
                            return (new Date).valueOf()
                        }, a.GetHttpSeq = function () {
                            return void 0 == a.httpseq ? a.httpseq = 0 : a.httpseq++, a.httpseq
                        }, a.GetMultiloaderSeq = function () {
                            return void 0 == a.multiseq ? a.multiseq = 0 : a.multiseq++, a.multiseq
                        }, a.GetPeerConnectionSeq = function () {
                            return void 0 == a.peerConnectionSeq ? a.peerConnectionSeq = 0 : a.peerConnectionSeq++, a.peerConnectionSeq
                        }, a.GetMd5 = function (a) {
                            return f()(a)
                        }, a.GetStackString = function (a, b) {
                            function c(a) {
                                var b = a.indexOf(")");
                                return b > 0 ? a.substr(0, b + 1) : a
                            }

                            function d(a, b) {
                                for (var d = "", e = 0; a && e < b;) a && a.toString && (d += c(a.toString()), d += "\n"), a = a.caller, e++;
                                return d
                            }

                            return d(a, b)
                        }, a.GetDataHex = function (a, b, c) {
                            if (!a || void 0 === a.byteLength) return "";
                            for (var d = "", e = Math.min(c + b, a.byteLength), f = b; f < e; f++) d += "0x0" + a[f].toString(16).toUpperCase() + " ";
                            return d
                        }, a.GetWantCalcTs = function (a, b) {
                            var c = [];
                            if (null === a || void 0 === a || void 0 === a.length) return c;
                            for (var d = -1, e = 0; e <= a.length - 1; e++) if (a[e].m_Start <= b && a[e].m_Start + a[e].m_Duration >= b) {
                                d = e;
                                break
                            }
                            return d == -1 ? c : (c.push(d), a[d].m_Start >= b && a[d].m_Start + .5 <= b ? d - 1 >= 0 && c.push(d - 1) : a[d].m_Start + a[d].m_Duration - .5 <= b && a[d].m_Start + a[d].m_Duration >= b && d + 1 < a.length && c.push(d + 1), c)
                        }, a.GetCacheSecond = function (a, b, c, d) {
                            for (var e = c - b, f = d, g = f; g < a.length - 1 && a[g].isFinish(); g++) e += a[g].m_Duration;
                            return e
                        }, a.isSupportWebRtc = function () {
                            function a() {
                                var a = !1;
                                try {
                                    var b = window.RTCPeerConnection || window.webkitRTCPeerConnection || window.mozRTCPeerConnection;
                                    if (b) {
                                        var c = new b({iceServers: [{url: "stun:0"}]});
                                        a = "createDataChannel" in c
                                    }
                                } catch (d) {
                                    a = !1
                                }
                                return a
                            }

                            function b() {
                                var a = !1;
                                return a = ["RTCPeerConnection", "webkitRTCPeerConnection", "mozRTCPeerConnection"].some(function (a) {
                                    return a in window
                                })
                            }

                            return a() && b()
                        }, a.ReplaceDomain = function (a, b) {
                            var c = a.indexOf("//");
                            if (c == -1) return a;
                            var d = a.indexOf("/", c + "//".length);
                            if (d == -1) return a;
                            var e = a.substr(0, c + "//".length), f = a.substr(d, a.length - d);
                            return e + b + f
                        }, a.ReplaceDomain1 = function (a, b) {
                            var c = a.indexOf("%2F%2F");
                            if (c == -1) return a;
                            var d = a.indexOf("%2F", c + "%2F%2F".length);
                            if (d == -1) return a;
                            var e = a.substr(0, c + "%2F%2F".length), f = a.substr(d, a.length - d);
                            return e + b + f
                        }, a.GetUA = function () {
                            var a = navigator.userAgent || "", b = navigator.appVersion || "",
                                c = navigator.vendor || "", d = (a + " " + b + " " + c).toLowerCase(),
                                e = /(chrome)[ \/]([\w.]+)/.exec(d) || /(webkit)[ \/]([\w.]+)/.exec(d) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(d) || /(msie) ([\w.]+)/.exec(d) || /(trident)(?:.*? rv:([\w.]+)|)/.exec(d) || d.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(d) || [],
                                f = e[0], g = e[2].split(".")[0];
                            0 === f.indexOf("chrome") && g >= 46 ? (window.__disableNativeFetch = !1, this.m_SupportFetch = !0) : 0 === f.indexOf("mozilla") && g >= 39 || (window.__disableNativeFetch = !0, this.m_SupportFetch = !1);
                            var h = void 0;
                            return h = e.length > 2 ? e[1] + " " + e[2] : f.length <= 32 ? f : f.substring(0, 32)
                        }, a.Str2ArrayBuffer = function (a) {
                            for (var b = new ArrayBuffer(2 * a.length), c = new Uint16Array(b), d = 0, e = a.length; d < e; d++) c[d] = a.charCodeAt(d);
                            return b
                        }, a.Str2ArrayBuffer2 = function (a) {
                            for (var b = "", c = 0; c < a.length; c++) "" === b ? b = a.charCodeAt(c).toString(16) : b += "," + a.charCodeAt(c).toString(16);
                            return new Uint8Array(b.match(/[\da-f]{2}/gi).map(function (a) {
                                return parseInt(a, 16)
                            })).buffer
                        }, a.getDomainFromUrl = function (a) {
                            var b = null;
                            if (!a) return b;
                            var c = /(\w+):\/\/([^\/:]+)(:\d*)?([^# ]*)/, d = a.match(c);
                            return d && d.length >= 3 && (b = d[2]), b
                        }, a.getFileNameFromUrl = function (a) {
                            var b = null, c = a.lastIndexOf("/");
                            return c != -1 && (b = a.substr(c + 1)), b
                        }, a
                    }();
                    b.a = g
                }, function (a, b, c) {
                    "use strict";
                    (function (a) {
                        function d() {
                            try {
                                var a = new Uint8Array(1);
                                return a.__proto__ = {
                                    __proto__: Uint8Array.prototype, foo: function () {
                                        return 42
                                    }
                                }, 42 === a.foo() && "function" == typeof a.subarray && 0 === a.subarray(1, 1).byteLength
                            } catch (b) {
                                return !1
                            }
                        }

                        function e() {
                            return g.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
                        }

                        function f(a, b) {
                            if (e() < b) throw new RangeError("Invalid typed array length");
                            return g.TYPED_ARRAY_SUPPORT ? (a = new Uint8Array(b), a.__proto__ = g.prototype) : (null === a && (a = new g(b)), a.length = b), a
                        }

                        function g(a, b, c) {
                            if (!(g.TYPED_ARRAY_SUPPORT || this instanceof g)) return new g(a, b, c);
                            if ("number" == typeof a) {
                                if ("string" == typeof b) throw new Error("If encoding is specified then the first argument must be a string");
                                return k(this, a)
                            }
                            return h(this, a, b, c)
                        }

                        function h(a, b, c, d) {
                            if ("number" == typeof b) throw new TypeError('"value" argument must not be a number');
                            return "undefined" != typeof ArrayBuffer && b instanceof ArrayBuffer ? n(a, b, c, d) : "string" == typeof b ? l(a, b, c) : o(a, b)
                        }

                        function i(a) {
                            if ("number" != typeof a) throw new TypeError('"size" argument must be a number');
                            if (a < 0) throw new RangeError('"size" argument must not be negative')
                        }

                        function j(a, b, c, d) {
                            return i(b), b <= 0 ? f(a, b) : void 0 !== c ? "string" == typeof d ? f(a, b).fill(c, d) : f(a, b).fill(c) : f(a, b)
                        }

                        function k(a, b) {
                            if (i(b), a = f(a, b < 0 ? 0 : 0 | p(b)), !g.TYPED_ARRAY_SUPPORT) for (var c = 0; c < b; ++c) a[c] = 0;
                            return a
                        }

                        function l(a, b, c) {
                            if ("string" == typeof c && "" !== c || (c = "utf8"), !g.isEncoding(c)) throw new TypeError('"encoding" must be a valid string encoding');
                            var d = 0 | r(b, c);
                            a = f(a, d);
                            var e = a.write(b, c);
                            return e !== d && (a = a.slice(0, e)), a
                        }

                        function m(a, b) {
                            var c = b.length < 0 ? 0 : 0 | p(b.length);
                            a = f(a, c);
                            for (var d = 0; d < c; d += 1) a[d] = 255 & b[d];
                            return a
                        }

                        function n(a, b, c, d) {
                            if (b.byteLength, c < 0 || b.byteLength < c) throw new RangeError("'offset' is out of bounds");
                            if (b.byteLength < c + (d || 0)) throw new RangeError("'length' is out of bounds");
                            return b = void 0 === c && void 0 === d ? new Uint8Array(b) : void 0 === d ? new Uint8Array(b, c) : new Uint8Array(b, c, d), g.TYPED_ARRAY_SUPPORT ? (a = b, a.__proto__ = g.prototype) : a = m(a, b), a
                        }

                        function o(a, b) {
                            if (g.isBuffer(b)) {
                                var c = 0 | p(b.length);
                                return a = f(a, c), 0 === a.length ? a : (b.copy(a, 0, 0, c), a)
                            }
                            if (b) {
                                if ("undefined" != typeof ArrayBuffer && b.buffer instanceof ArrayBuffer || "length" in b) return "number" != typeof b.length || Y(b.length) ? f(a, 0) : m(a, b);
                                if ("Buffer" === b.type && _(b.data)) return m(a, b.data)
                            }
                            throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                        }

                        function p(a) {
                            if (a >= e()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + e().toString(16) + " bytes");
                            return 0 | a
                        }

                        function q(a) {
                            return +a != a && (a = 0), g.alloc(+a)
                        }

                        function r(a, b) {
                            if (g.isBuffer(a)) return a.length;
                            if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(a) || a instanceof ArrayBuffer)) return a.byteLength;
                            "string" != typeof a && (a = "" + a);
                            var c = a.length;
                            if (0 === c) return 0;
                            for (var d = !1; ;) switch (b) {
                                case"ascii":
                                case"latin1":
                                case"binary":
                                    return c;
                                case"utf8":
                                case"utf-8":
                                case void 0:
                                    return T(a).length;
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return 2 * c;
                                case"hex":
                                    return c >>> 1;
                                case"base64":
                                    return W(a).length;
                                default:
                                    if (d) return T(a).length;
                                    b = ("" + b).toLowerCase(), d = !0
                            }
                        }

                        function s(a, b, c) {
                            var d = !1;
                            if ((void 0 === b || b < 0) && (b = 0), b > this.length) return "";
                            if ((void 0 === c || c > this.length) && (c = this.length), c <= 0) return "";
                            if (c >>>= 0, b >>>= 0, c <= b) return "";
                            for (a || (a = "utf8"); ;) switch (a) {
                                case"hex":
                                    return H(this, b, c);
                                case"utf8":
                                case"utf-8":
                                    return D(this, b, c);
                                case"ascii":
                                    return F(this, b, c);
                                case"latin1":
                                case"binary":
                                    return G(this, b, c);
                                case"base64":
                                    return C(this, b, c);
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return I(this, b, c);
                                default:
                                    if (d) throw new TypeError("Unknown encoding: " + a);
                                    a = (a + "").toLowerCase(), d = !0
                            }
                        }

                        function t(a, b, c) {
                            var d = a[b];
                            a[b] = a[c], a[c] = d
                        }

                        function u(a, b, c, d, e) {
                            if (0 === a.length) return -1;
                            if ("string" == typeof c ? (d = c, c = 0) : c > 2147483647 ? c = 2147483647 : c < -2147483648 && (c = -2147483648), c = +c, isNaN(c) && (c = e ? 0 : a.length - 1), c < 0 && (c = a.length + c), c >= a.length) {
                                if (e) return -1;
                                c = a.length - 1
                            } else if (c < 0) {
                                if (!e) return -1;
                                c = 0
                            }
                            if ("string" == typeof b && (b = g.from(b, d)), g.isBuffer(b)) return 0 === b.length ? -1 : v(a, b, c, d, e);
                            if ("number" == typeof b) return b = 255 & b, g.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? e ? Uint8Array.prototype.indexOf.call(a, b, c) : Uint8Array.prototype.lastIndexOf.call(a, b, c) : v(a, [b], c, d, e);
                            throw new TypeError("val must be string, number or Buffer")
                        }

                        function v(a, b, c, d, e) {
                            function f(a, b) {
                                return 1 === g ? a[b] : a.readUInt16BE(b * g)
                            }

                            var g = 1, h = a.length, i = b.length;
                            if (void 0 !== d && (d = String(d).toLowerCase(), "ucs2" === d || "ucs-2" === d || "utf16le" === d || "utf-16le" === d)) {
                                if (a.length < 2 || b.length < 2) return -1;
                                g = 2, h /= 2, i /= 2, c /= 2
                            }
                            var j;
                            if (e) {
                                var k = -1;
                                for (j = c; j < h; j++) if (f(a, j) === f(b, k === -1 ? 0 : j - k)) {
                                    if (k === -1 && (k = j), j - k + 1 === i) return k * g
                                } else k !== -1 && (j -= j - k), k = -1
                            } else for (c + i > h && (c = h - i), j = c; j >= 0; j--) {
                                for (var l = !0, m = 0; m < i; m++) if (f(a, j + m) !== f(b, m)) {
                                    l = !1;
                                    break
                                }
                                if (l) return j
                            }
                            return -1
                        }

                        function w(a, b, c, d) {
                            c = Number(c) || 0;
                            var e = a.length - c;
                            d ? (d = Number(d), d > e && (d = e)) : d = e;
                            var f = b.length;
                            if (f % 2 !== 0) throw new TypeError("Invalid hex string");
                            d > f / 2 && (d = f / 2);
                            for (var g = 0; g < d; ++g) {
                                var h = parseInt(b.substr(2 * g, 2), 16);
                                if (isNaN(h)) return g;
                                a[c + g] = h
                            }
                            return g
                        }

                        function x(a, b, c, d) {
                            return X(T(b, a.length - c), a, c, d)
                        }

                        function y(a, b, c, d) {
                            return X(U(b), a, c, d)
                        }

                        function z(a, b, c, d) {
                            return y(a, b, c, d)
                        }

                        function A(a, b, c, d) {
                            return X(W(b), a, c, d)
                        }

                        function B(a, b, c, d) {
                            return X(V(b, a.length - c), a, c, d)
                        }

                        function C(a, b, c) {
                            return 0 === b && c === a.length ? Z.fromByteArray(a) : Z.fromByteArray(a.slice(b, c))
                        }

                        function D(a, b, c) {
                            c = Math.min(a.length, c);
                            for (var d = [], e = b; e < c;) {
                                var f = a[e], g = null, h = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1;
                                if (e + h <= c) {
                                    var i, j, k, l;
                                    switch (h) {
                                        case 1:
                                            f < 128 && (g = f);
                                            break;
                                        case 2:
                                            i = a[e + 1], 128 === (192 & i) && (l = (31 & f) << 6 | 63 & i, l > 127 && (g = l));
                                            break;
                                        case 3:
                                            i = a[e + 1], j = a[e + 2], 128 === (192 & i) && 128 === (192 & j) && (l = (15 & f) << 12 | (63 & i) << 6 | 63 & j, l > 2047 && (l < 55296 || l > 57343) && (g = l));
                                            break;
                                        case 4:
                                            i = a[e + 1], j = a[e + 2], k = a[e + 3], 128 === (192 & i) && 128 === (192 & j) && 128 === (192 & k) && (l = (15 & f) << 18 | (63 & i) << 12 | (63 & j) << 6 | 63 & k, l > 65535 && l < 1114112 && (g = l))
                                    }
                                }
                                null === g ? (g = 65533, h = 1) : g > 65535 && (g -= 65536, d.push(g >>> 10 & 1023 | 55296), g = 56320 | 1023 & g), d.push(g), e += h
                            }
                            return E(d)
                        }

                        function E(a) {
                            var b = a.length;
                            if (b <= aa) return String.fromCharCode.apply(String, a);
                            for (var c = "", d = 0; d < b;) c += String.fromCharCode.apply(String, a.slice(d, d += aa));
                            return c
                        }

                        function F(a, b, c) {
                            var d = "";
                            c = Math.min(a.length, c);
                            for (var e = b; e < c; ++e) d += String.fromCharCode(127 & a[e]);
                            return d
                        }

                        function G(a, b, c) {
                            var d = "";
                            c = Math.min(a.length, c);
                            for (var e = b; e < c; ++e) d += String.fromCharCode(a[e]);
                            return d
                        }

                        function H(a, b, c) {
                            var d = a.length;
                            (!b || b < 0) && (b = 0), (!c || c < 0 || c > d) && (c = d);
                            for (var e = "", f = b; f < c; ++f) e += S(a[f]);
                            return e
                        }

                        function I(a, b, c) {
                            for (var d = a.slice(b, c), e = "", f = 0; f < d.length; f += 2) e += String.fromCharCode(d[f] + 256 * d[f + 1]);
                            return e
                        }

                        function J(a, b, c) {
                            if (a % 1 !== 0 || a < 0) throw new RangeError("offset is not uint");
                            if (a + b > c) throw new RangeError("Trying to access beyond buffer length")
                        }

                        function K(a, b, c, d, e, f) {
                            if (!g.isBuffer(a)) throw new TypeError('"buffer" argument must be a Buffer instance');
                            if (b > e || b < f) throw new RangeError('"value" argument is out of bounds');
                            if (c + d > a.length) throw new RangeError("Index out of range")
                        }

                        function L(a, b, c, d) {
                            b < 0 && (b = 65535 + b + 1);
                            for (var e = 0, f = Math.min(a.length - c, 2); e < f; ++e) a[c + e] = (b & 255 << 8 * (d ? e : 1 - e)) >>> 8 * (d ? e : 1 - e)
                        }

                        function M(a, b, c, d) {
                            b < 0 && (b = 4294967295 + b + 1);
                            for (var e = 0, f = Math.min(a.length - c, 4); e < f; ++e) a[c + e] = b >>> 8 * (d ? e : 3 - e) & 255
                        }

                        function N(a, b, c, d, e, f) {
                            if (c + d > a.length) throw new RangeError("Index out of range");
                            if (c < 0) throw new RangeError("Index out of range")
                        }

                        function O(a, b, c, d, e) {
                            return e || N(a, b, c, 4, 3.4028234663852886e38, -3.4028234663852886e38), $.write(a, b, c, d, 23, 4), c + 4
                        }

                        function P(a, b, c, d, e) {
                            return e || N(a, b, c, 8, 1.7976931348623157e308, -1.7976931348623157e308), $.write(a, b, c, d, 52, 8), c + 8
                        }

                        function Q(a) {
                            if (a = R(a).replace(ba, ""), a.length < 2) return "";
                            for (; a.length % 4 !== 0;) a += "=";
                            return a
                        }

                        function R(a) {
                            return a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "")
                        }

                        function S(a) {
                            return a < 16 ? "0" + a.toString(16) : a.toString(16)
                        }

                        function T(a, b) {
                            b = b || 1 / 0;
                            for (var c, d = a.length, e = null, f = [], g = 0; g < d; ++g) {
                                if (c = a.charCodeAt(g), c > 55295 && c < 57344) {
                                    if (!e) {
                                        if (c > 56319) {
                                            (b -= 3) > -1 && f.push(239, 191, 189);
                                            continue
                                        }
                                        if (g + 1 === d) {
                                            (b -= 3) > -1 && f.push(239, 191, 189);
                                            continue
                                        }
                                        e = c;
                                        continue
                                    }
                                    if (c < 56320) {
                                        (b -= 3) > -1 && f.push(239, 191, 189), e = c;
                                        continue
                                    }
                                    c = (e - 55296 << 10 | c - 56320) + 65536
                                } else e && (b -= 3) > -1 && f.push(239, 191, 189);
                                if (e = null, c < 128) {
                                    if ((b -= 1) < 0) break;
                                    f.push(c)
                                } else if (c < 2048) {
                                    if ((b -= 2) < 0) break;
                                    f.push(c >> 6 | 192, 63 & c | 128)
                                } else if (c < 65536) {
                                    if ((b -= 3) < 0) break;
                                    f.push(c >> 12 | 224, c >> 6 & 63 | 128, 63 & c | 128)
                                } else {
                                    if (!(c < 1114112)) throw new Error("Invalid code point");
                                    if ((b -= 4) < 0) break;
                                    f.push(c >> 18 | 240, c >> 12 & 63 | 128, c >> 6 & 63 | 128, 63 & c | 128)
                                }
                            }
                            return f
                        }

                        function U(a) {
                            for (var b = [], c = 0; c < a.length; ++c) b.push(255 & a.charCodeAt(c));
                            return b
                        }

                        function V(a, b) {
                            for (var c, d, e, f = [], g = 0; g < a.length && !((b -= 2) < 0); ++g) c = a.charCodeAt(g), d = c >> 8, e = c % 256, f.push(e), f.push(d);
                            return f
                        }

                        function W(a) {
                            return Z.toByteArray(Q(a))
                        }

                        function X(a, b, c, d) {
                            for (var e = 0; e < d && !(e + c >= b.length || e >= a.length); ++e) b[e + c] = a[e];
                            return e
                        }

                        function Y(a) {
                            return a !== a
                        }

                        var Z = c(29), $ = c(30), _ = c(22);
                        b.Buffer = g, b.SlowBuffer = q, b.INSPECT_MAX_BYTES = 50, g.TYPED_ARRAY_SUPPORT = void 0 !== a.TYPED_ARRAY_SUPPORT ? a.TYPED_ARRAY_SUPPORT : d(), b.kMaxLength = e(), g.poolSize = 8192, g._augment = function (a) {
                            return a.__proto__ = g.prototype, a
                        }, g.from = function (a, b, c) {
                            return h(null, a, b, c)
                        }, g.TYPED_ARRAY_SUPPORT && (g.prototype.__proto__ = Uint8Array.prototype, g.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && g[Symbol.species] === g && Object.defineProperty(g, Symbol.species, {
                            value: null,
                            configurable: !0
                        })), g.alloc = function (a, b, c) {
                            return j(null, a, b, c)
                        }, g.allocUnsafe = function (a) {
                            return k(null, a)
                        }, g.allocUnsafeSlow = function (a) {
                            return k(null, a)
                        }, g.isBuffer = function (a) {
                            return !(null == a || !a._isBuffer)
                        }, g.compare = function (a, b) {
                            if (!g.isBuffer(a) || !g.isBuffer(b)) throw new TypeError("Arguments must be Buffers");
                            if (a === b) return 0;
                            for (var c = a.length, d = b.length, e = 0, f = Math.min(c, d); e < f; ++e) if (a[e] !== b[e]) {
                                c = a[e], d = b[e];
                                break
                            }
                            return c < d ? -1 : d < c ? 1 : 0
                        }, g.isEncoding = function (a) {
                            switch (String(a).toLowerCase()) {
                                case"hex":
                                case"utf8":
                                case"utf-8":
                                case"ascii":
                                case"latin1":
                                case"binary":
                                case"base64":
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return !0;
                                default:
                                    return !1
                            }
                        }, g.concat = function (a, b) {
                            if (!_(a)) throw new TypeError('"list" argument must be an Array of Buffers');
                            if (0 === a.length) return g.alloc(0);
                            var c;
                            if (void 0 === b) for (b = 0, c = 0; c < a.length; ++c) b += a[c].length;
                            var d = g.allocUnsafe(b), e = 0;
                            for (c = 0; c < a.length; ++c) {
                                var f = a[c];
                                if (!g.isBuffer(f)) throw new TypeError('"list" argument must be an Array of Buffers');
                                f.copy(d, e), e += f.length
                            }
                            return d
                        }, g.byteLength = r, g.prototype._isBuffer = !0, g.prototype.swap16 = function () {
                            var a = this.length;
                            if (a % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                            for (var b = 0; b < a; b += 2) t(this, b, b + 1);
                            return this
                        }, g.prototype.swap32 = function () {
                            var a = this.length;
                            if (a % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                            for (var b = 0; b < a; b += 4) t(this, b, b + 3), t(this, b + 1, b + 2);
                            return this
                        }, g.prototype.swap64 = function () {
                            var a = this.length;
                            if (a % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                            for (var b = 0; b < a; b += 8) t(this, b, b + 7), t(this, b + 1, b + 6), t(this, b + 2, b + 5), t(this, b + 3, b + 4);
                            return this
                        }, g.prototype.toString = function () {
                            var a = 0 | this.length;
                            return 0 === a ? "" : 0 === arguments.length ? D(this, 0, a) : s.apply(this, arguments)
                        }, g.prototype.equals = function (a) {
                            if (!g.isBuffer(a)) throw new TypeError("Argument must be a Buffer");
                            return this === a || 0 === g.compare(this, a)
                        }, g.prototype.inspect = function () {
                            var a = "", c = b.INSPECT_MAX_BYTES;
                            return this.length > 0 && (a = this.toString("hex", 0, c).match(/.{2}/g).join(" "), this.length > c && (a += " ... ")), "<Buffer " + a + ">"
                        }, g.prototype.compare = function (a, b, c, d, e) {
                            if (!g.isBuffer(a)) throw new TypeError("Argument must be a Buffer");
                            if (void 0 === b && (b = 0), void 0 === c && (c = a ? a.length : 0), void 0 === d && (d = 0), void 0 === e && (e = this.length), b < 0 || c > a.length || d < 0 || e > this.length) throw new RangeError("out of range index");
                            if (d >= e && b >= c) return 0;
                            if (d >= e) return -1;
                            if (b >= c) return 1;
                            if (b >>>= 0, c >>>= 0, d >>>= 0, e >>>= 0, this === a) return 0;
                            for (var f = e - d, h = c - b, i = Math.min(f, h), j = this.slice(d, e), k = a.slice(b, c), l = 0; l < i; ++l) if (j[l] !== k[l]) {
                                f = j[l], h = k[l];
                                break
                            }
                            return f < h ? -1 : h < f ? 1 : 0
                        }, g.prototype.includes = function (a, b, c) {
                            return this.indexOf(a, b, c) !== -1
                        }, g.prototype.indexOf = function (a, b, c) {
                            return u(this, a, b, c, !0)
                        }, g.prototype.lastIndexOf = function (a, b, c) {
                            return u(this, a, b, c, !1)
                        }, g.prototype.write = function (a, b, c, d) {
                            if (void 0 === b) d = "utf8", c = this.length, b = 0; else if (void 0 === c && "string" == typeof b) d = b, c = this.length, b = 0; else {
                                if (!isFinite(b)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                                b = 0 | b, isFinite(c) ? (c = 0 | c, void 0 === d && (d = "utf8")) : (d = c, c = void 0)
                            }
                            var e = this.length - b;
                            if ((void 0 === c || c > e) && (c = e), a.length > 0 && (c < 0 || b < 0) || b > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                            d || (d = "utf8");
                            for (var f = !1; ;) switch (d) {
                                case"hex":
                                    return w(this, a, b, c);
                                case"utf8":
                                case"utf-8":
                                    return x(this, a, b, c);
                                case"ascii":
                                    return y(this, a, b, c);
                                case"latin1":
                                case"binary":
                                    return z(this, a, b, c);
                                case"base64":
                                    return A(this, a, b, c);
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return B(this, a, b, c);
                                default:
                                    if (f) throw new TypeError("Unknown encoding: " + d);
                                    d = ("" + d).toLowerCase(), f = !0
                            }
                        }, g.prototype.toJSON = function () {
                            return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)}
                        };
                        var aa = 4096;
                        g.prototype.slice = function (a, b) {
                            var c = this.length;
                            a = ~~a, b = void 0 === b ? c : ~~b, a < 0 ? (a += c, a < 0 && (a = 0)) : a > c && (a = c), b < 0 ? (b += c, b < 0 && (b = 0)) : b > c && (b = c), b < a && (b = a);
                            var d;
                            if (g.TYPED_ARRAY_SUPPORT) d = this.subarray(a, b), d.__proto__ = g.prototype; else {
                                var e = b - a;
                                d = new g(e, (void 0));
                                for (var f = 0; f < e; ++f) d[f] = this[f + a]
                            }
                            return d
                        }, g.prototype.readUIntLE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;
                            return d
                        }, g.prototype.readUIntBE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = this[a + --b], e = 1; b > 0 && (e *= 256);) d += this[a + --b] * e;
                            return d
                        }, g.prototype.readUInt8 = function (a, b) {
                            return b || J(a, 1, this.length), this[a]
                        }, g.prototype.readUInt16LE = function (a, b) {
                            return b || J(a, 2, this.length), this[a] | this[a + 1] << 8
                        }, g.prototype.readUInt16BE = function (a, b) {
                            return b || J(a, 2, this.length), this[a] << 8 | this[a + 1]
                        }, g.prototype.readUInt32LE = function (a, b) {
                            return b || J(a, 4, this.length), (this[a] | this[a + 1] << 8 | this[a + 2] << 16) + 16777216 * this[a + 3]
                        }, g.prototype.readUInt32BE = function (a, b) {
                            return b || J(a, 4, this.length), 16777216 * this[a] + (this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3])
                        }, g.prototype.readIntLE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;
                            return e *= 128, d >= e && (d -= Math.pow(2, 8 * b)), d
                        }, g.prototype.readIntBE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = b, e = 1, f = this[a + --d]; d > 0 && (e *= 256);) f += this[a + --d] * e;
                            return e *= 128, f >= e && (f -= Math.pow(2, 8 * b)), f
                        }, g.prototype.readInt8 = function (a, b) {
                            return b || J(a, 1, this.length), 128 & this[a] ? (255 - this[a] + 1) * -1 : this[a]
                        }, g.prototype.readInt16LE = function (a, b) {
                            b || J(a, 2, this.length);
                            var c = this[a] | this[a + 1] << 8;
                            return 32768 & c ? 4294901760 | c : c
                        }, g.prototype.readInt16BE = function (a, b) {
                            b || J(a, 2, this.length);
                            var c = this[a + 1] | this[a] << 8;
                            return 32768 & c ? 4294901760 | c : c
                        }, g.prototype.readInt32LE = function (a, b) {
                            return b || J(a, 4, this.length), this[a] | this[a + 1] << 8 | this[a + 2] << 16 | this[a + 3] << 24
                        }, g.prototype.readInt32BE = function (a, b) {
                            return b || J(a, 4, this.length), this[a] << 24 | this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3]
                        }, g.prototype.readFloatLE = function (a, b) {
                            return b || J(a, 4, this.length), $.read(this, a, !0, 23, 4)
                        }, g.prototype.readFloatBE = function (a, b) {
                            return b || J(a, 4, this.length), $.read(this, a, !1, 23, 4)
                        }, g.prototype.readDoubleLE = function (a, b) {
                            return b || J(a, 8, this.length), $.read(this, a, !0, 52, 8)
                        }, g.prototype.readDoubleBE = function (a, b) {
                            return b || J(a, 8, this.length), $.read(this, a, !1, 52, 8)
                        }, g.prototype.writeUIntLE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, c = 0 | c, !d) {
                                var e = Math.pow(2, 8 * c) - 1;
                                K(this, a, b, c, e, 0)
                            }
                            var f = 1, g = 0;
                            for (this[b] = 255 & a; ++g < c && (f *= 256);) this[b + g] = a / f & 255;
                            return b + c
                        }, g.prototype.writeUIntBE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, c = 0 | c, !d) {
                                var e = Math.pow(2, 8 * c) - 1;
                                K(this, a, b, c, e, 0)
                            }
                            var f = c - 1, g = 1;
                            for (this[b + f] = 255 & a; --f >= 0 && (g *= 256);) this[b + f] = a / g & 255;
                            return b + c
                        }, g.prototype.writeUInt8 = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 1, 255, 0), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), this[b] = 255 & a, b + 1
                        }, g.prototype.writeUInt16LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2
                        }, g.prototype.writeUInt16BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1),
                            b + 2
                        }, g.prototype.writeUInt32LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b + 3] = a >>> 24, this[b + 2] = a >>> 16, this[b + 1] = a >>> 8, this[b] = 255 & a) : M(this, a, b, !0), b + 4
                        }, g.prototype.writeUInt32BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4
                        }, g.prototype.writeIntLE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, !d) {
                                var e = Math.pow(2, 8 * c - 1);
                                K(this, a, b, c, e - 1, -e)
                            }
                            var f = 0, g = 1, h = 0;
                            for (this[b] = 255 & a; ++f < c && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f - 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
                            return b + c
                        }, g.prototype.writeIntBE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, !d) {
                                var e = Math.pow(2, 8 * c - 1);
                                K(this, a, b, c, e - 1, -e)
                            }
                            var f = c - 1, g = 1, h = 0;
                            for (this[b + f] = 255 & a; --f >= 0 && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f + 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
                            return b + c
                        }, g.prototype.writeInt8 = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 1, 127, -128), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), a < 0 && (a = 255 + a + 1), this[b] = 255 & a, b + 1
                        }, g.prototype.writeInt16LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2
                        }, g.prototype.writeInt16BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1), b + 2
                        }, g.prototype.writeInt32LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8, this[b + 2] = a >>> 16, this[b + 3] = a >>> 24) : M(this, a, b, !0), b + 4
                        }, g.prototype.writeInt32BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), a < 0 && (a = 4294967295 + a + 1), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4
                        }, g.prototype.writeFloatLE = function (a, b, c) {
                            return O(this, a, b, !0, c)
                        }, g.prototype.writeFloatBE = function (a, b, c) {
                            return O(this, a, b, !1, c)
                        }, g.prototype.writeDoubleLE = function (a, b, c) {
                            return P(this, a, b, !0, c)
                        }, g.prototype.writeDoubleBE = function (a, b, c) {
                            return P(this, a, b, !1, c)
                        }, g.prototype.copy = function (a, b, c, d) {
                            if (c || (c = 0), d || 0 === d || (d = this.length), b >= a.length && (b = a.length), b || (b = 0), d > 0 && d < c && (d = c), d === c) return 0;
                            if (0 === a.length || 0 === this.length) return 0;
                            if (b < 0) throw new RangeError("targetStart out of bounds");
                            if (c < 0 || c >= this.length) throw new RangeError("sourceStart out of bounds");
                            if (d < 0) throw new RangeError("sourceEnd out of bounds");
                            d > this.length && (d = this.length), a.length - b < d - c && (d = a.length - b + c);
                            var e, f = d - c;
                            if (this === a && c < b && b < d) for (e = f - 1; e >= 0; --e) a[e + b] = this[e + c]; else if (f < 1e3 || !g.TYPED_ARRAY_SUPPORT) for (e = 0; e < f; ++e) a[e + b] = this[e + c]; else Uint8Array.prototype.set.call(a, this.subarray(c, c + f), b);
                            return f
                        }, g.prototype.fill = function (a, b, c, d) {
                            if ("string" == typeof a) {
                                if ("string" == typeof b ? (d = b, b = 0, c = this.length) : "string" == typeof c && (d = c, c = this.length), 1 === a.length) {
                                    var e = a.charCodeAt(0);
                                    e < 256 && (a = e)
                                }
                                if (void 0 !== d && "string" != typeof d) throw new TypeError("encoding must be a string");
                                if ("string" == typeof d && !g.isEncoding(d)) throw new TypeError("Unknown encoding: " + d)
                            } else "number" == typeof a && (a = 255 & a);
                            if (b < 0 || this.length < b || this.length < c) throw new RangeError("Out of range index");
                            if (c <= b) return this;
                            b >>>= 0, c = void 0 === c ? this.length : c >>> 0, a || (a = 0);
                            var f;
                            if ("number" == typeof a) for (f = b; f < c; ++f) this[f] = a; else {
                                var h = g.isBuffer(a) ? a : T(new g(a, d).toString()), i = h.length;
                                for (f = 0; f < c - b; ++f) this[f + b] = h[f % i]
                            }
                            return this
                        };
                        var ba = /[^+\/0-9A-Za-z-_]/g
                    }).call(b, c(7))
                }, function (a, b) {
                    var c;
                    c = function () {
                        return this
                    }();
                    try {
                        c = c || Function("return this")() || (0, eval)("this")
                    } catch (d) {
                        "object" == typeof window && (c = window)
                    }
                    a.exports = c
                }, function (a, b) {
                    function c() {
                        throw new Error("setTimeout has not been defined")
                    }

                    function d() {
                        throw new Error("clearTimeout has not been defined")
                    }

                    function e(a) {
                        if (k === setTimeout) return setTimeout(a, 0);
                        if ((k === c || !k) && setTimeout) return k = setTimeout, setTimeout(a, 0);
                        try {
                            return k(a, 0)
                        } catch (b) {
                            try {
                                return k.call(null, a, 0)
                            } catch (b) {
                                return k.call(this, a, 0)
                            }
                        }
                    }

                    function f(a) {
                        if (l === clearTimeout) return clearTimeout(a);
                        if ((l === d || !l) && clearTimeout) return l = clearTimeout, clearTimeout(a);
                        try {
                            return l(a)
                        } catch (b) {
                            try {
                                return l.call(null, a)
                            } catch (b) {
                                return l.call(this, a)
                            }
                        }
                    }

                    function g() {
                        p && n && (p = !1, n.length ? o = n.concat(o) : q = -1, o.length && h())
                    }

                    function h() {
                        if (!p) {
                            var a = e(g);
                            p = !0;
                            for (var b = o.length; b;) {
                                for (n = o, o = []; ++q < b;) n && n[q].run();
                                q = -1, b = o.length
                            }
                            n = null, p = !1, f(a)
                        }
                    }

                    function i(a, b) {
                        this.fun = a, this.array = b
                    }

                    function j() {
                    }

                    var k, l, m = a.exports = {};
                    !function () {
                        try {
                            k = "function" == typeof setTimeout ? setTimeout : c
                        } catch (a) {
                            k = c
                        }
                        try {
                            l = "function" == typeof clearTimeout ? clearTimeout : d
                        } catch (a) {
                            l = d
                        }
                    }();
                    var n, o = [], p = !1, q = -1;
                    m.nextTick = function (a) {
                        var b = new Array(arguments.length - 1);
                        if (arguments.length > 1) for (var c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];
                        o.push(new i(a, b)), 1 !== o.length || p || e(h)
                    }, i.prototype.run = function () {
                        this.fun.apply(null, this.array)
                    }, m.title = "browser", m.browser = !0, m.env = {}, m.argv = [], m.version = "", m.versions = {}, m.on = j, m.addListener = j, m.once = j, m.off = j, m.removeListener = j, m.removeAllListeners = j, m.emit = j, m.prependListener = j, m.prependOnceListener = j, m.listeners = function (a) {
                        return []
                    }, m.binding = function (a) {
                        throw new Error("process.binding is not supported")
                    }, m.cwd = function () {
                        return "/"
                    }, m.chdir = function (a) {
                        throw new Error("process.chdir is not supported")
                    }, m.umask = function () {
                        return 0
                    }
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        return this instanceof d ? (j.call(this, a), k.call(this, a), a && a.readable === !1 && (this.readable = !1), a && a.writable === !1 && (this.writable = !1), this.allowHalfOpen = !0, a && a.allowHalfOpen === !1 && (this.allowHalfOpen = !1), void this.once("end", e)) : new d(a)
                    }

                    function e() {
                        this.allowHalfOpen || this._writableState.ended || g.nextTick(f, this)
                    }

                    function f(a) {
                        a.end()
                    }

                    var g = c(17), h = Object.keys || function (a) {
                        var b = [];
                        for (var c in a) b.push(c);
                        return b
                    };
                    a.exports = d;
                    var i = Object.create(c(15));
                    i.inherits = c(11);
                    var j = c(36), k = c(25);
                    i.inherits(d, j);
                    for (var l = h(k.prototype), m = 0; m < l.length; m++) {
                        var n = l[m];
                        d.prototype[n] || (d.prototype[n] = k.prototype[n])
                    }
                    Object.defineProperty(d.prototype, "writableHighWaterMark", {
                        enumerable: !1, get: function () {
                            return this._writableState.highWaterMark
                        }
                    }), Object.defineProperty(d.prototype, "destroyed", {
                        get: function () {
                            return void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed && this._writableState.destroyed)
                        }, set: function (a) {
                            void 0 !== this._readableState && void 0 !== this._writableState && (this._readableState.destroyed = a, this._writableState.destroyed = a)
                        }
                    }), d.prototype._destroy = function (a, b) {
                        this.push(null), this.end(), g.nextTick(b, a)
                    }
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        console && console.warn
                    }

                    function e() {
                        e.init.call(this)
                    }

                    function f(a) {
                        if ("function" != typeof a) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof a)
                    }

                    function g(a) {
                        return void 0 === a._maxListeners ? e.defaultMaxListeners : a._maxListeners
                    }

                    function h(a, b, c, e) {
                        var h, i, j;
                        if (f(c), i = a._events, void 0 === i ? (i = a._events = Object.create(null), a._eventsCount = 0) : (void 0 !== i.newListener && (a.emit("newListener", b, c.listener ? c.listener : c), i = a._events), j = i[b]), void 0 === j) j = i[b] = c, ++a._eventsCount; else if ("function" == typeof j ? j = i[b] = e ? [c, j] : [j, c] : e ? j.unshift(c) : j.push(c), h = g(a), h > 0 && j.length > h && !j.warned) {
                            j.warned = !0;
                            var k = new Error("Possible EventEmitter memory leak detected. " + j.length + " " + String(b) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                            k.name = "MaxListenersExceededWarning", k.emitter = a, k.type = b, k.count = j.length, d(k)
                        }
                        return a
                    }

                    function i() {
                        if (!this.fired) return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, 0 === arguments.length ? this.listener.call(this.target) : this.listener.apply(this.target, arguments)
                    }

                    function j(a, b, c) {
                        var d = {fired: !1, wrapFn: void 0, target: a, type: b, listener: c}, e = i.bind(d);
                        return e.listener = c, d.wrapFn = e, e
                    }

                    function k(a, b, c) {
                        var d = a._events;
                        if (void 0 === d) return [];
                        var e = d[b];
                        return void 0 === e ? [] : "function" == typeof e ? c ? [e.listener || e] : [e] : c ? o(e) : m(e, e.length)
                    }

                    function l(a) {
                        var b = this._events;
                        if (void 0 !== b) {
                            var c = b[a];
                            if ("function" == typeof c) return 1;
                            if (void 0 !== c) return c.length
                        }
                        return 0
                    }

                    function m(a, b) {
                        for (var c = new Array(b), d = 0; d < b; ++d) c[d] = a[d];
                        return c
                    }

                    function n(a, b) {
                        for (; b + 1 < a.length; b++) a[b] = a[b + 1];
                        a.pop()
                    }

                    function o(a) {
                        for (var b = new Array(a.length), c = 0; c < b.length; ++c) b[c] = a[c].listener || a[c];
                        return b
                    }

                    var p, q = "object" == typeof Reflect ? Reflect : null,
                        r = q && "function" == typeof q.apply ? q.apply : function (a, b, c) {
                            return Function.prototype.apply.call(a, b, c)
                        };
                    p = q && "function" == typeof q.ownKeys ? q.ownKeys : Object.getOwnPropertySymbols ? function (a) {
                        return Object.getOwnPropertyNames(a).concat(Object.getOwnPropertySymbols(a))
                    } : function (a) {
                        return Object.getOwnPropertyNames(a)
                    };
                    var s = Number.isNaN || function (a) {
                        return a !== a
                    };
                    a.exports = e, e.EventEmitter = e, e.prototype._events = void 0, e.prototype._eventsCount = 0, e.prototype._maxListeners = void 0;
                    var t = 10;
                    Object.defineProperty(e, "defaultMaxListeners", {
                        enumerable: !0, get: function () {
                            return t
                        }, set: function (a) {
                            if ("number" != typeof a || a < 0 || s(a)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + a + ".");
                            t = a
                        }
                    }), e.init = function () {
                        void 0 !== this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0
                    }, e.prototype.setMaxListeners = function (a) {
                        if ("number" != typeof a || a < 0 || s(a)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + a + ".");
                        return this._maxListeners = a, this
                    }, e.prototype.getMaxListeners = function () {
                        return g(this)
                    }, e.prototype.emit = function (a) {
                        for (var b = [], c = 1; c < arguments.length; c++) b.push(arguments[c]);
                        var d = "error" === a, e = this._events;
                        if (void 0 !== e) d = d && void 0 === e.error; else if (!d) return !1;
                        if (d) {
                            var f;
                            if (b.length > 0 && (f = b[0]), f instanceof Error) throw f;
                            var g = new Error("Unhandled error." + (f ? " (" + f.message + ")" : ""));
                            throw g.context = f, g
                        }
                        var h = e[a];
                        if (void 0 === h) return !1;
                        if ("function" == typeof h) r(h, this, b); else for (var i = h.length, j = m(h, i), c = 0; c < i; ++c) r(j[c], this, b);
                        return !0
                    }, e.prototype.addListener = function (a, b) {
                        return h(this, a, b, !1)
                    }, e.prototype.on = e.prototype.addListener, e.prototype.prependListener = function (a, b) {
                        return h(this, a, b, !0)
                    }, e.prototype.once = function (a, b) {
                        return f(b), this.on(a, j(this, a, b)), this
                    }, e.prototype.prependOnceListener = function (a, b) {
                        return f(b), this.prependListener(a, j(this, a, b)), this
                    }, e.prototype.removeListener = function (a, b) {
                        var c, d, e, g, h;
                        if (f(b), d = this._events, void 0 === d) return this;
                        if (c = d[a], void 0 === c) return this;
                        if (c === b || c.listener === b) 0 === --this._eventsCount ? this._events = Object.create(null) : (delete d[a], d.removeListener && this.emit("removeListener", a, c.listener || b)); else if ("function" != typeof c) {
                            for (e = -1, g = c.length - 1; g >= 0; g--) if (c[g] === b || c[g].listener === b) {
                                h = c[g].listener, e = g;
                                break
                            }
                            if (e < 0) return this;
                            0 === e ? c.shift() : n(c, e), 1 === c.length && (d[a] = c[0]), void 0 !== d.removeListener && this.emit("removeListener", a, h || b)
                        }
                        return this
                    }, e.prototype.off = e.prototype.removeListener, e.prototype.removeAllListeners = function (a) {
                        var b, c, d;
                        if (c = this._events, void 0 === c) return this;
                        if (void 0 === c.removeListener) return 0 === arguments.length ? (this._events = Object.create(null), this._eventsCount = 0) : void 0 !== c[a] && (0 === --this._eventsCount ? this._events = Object.create(null) : delete c[a]), this;
                        if (0 === arguments.length) {
                            var e, f = Object.keys(c);
                            for (d = 0; d < f.length; ++d) e = f[d], "removeListener" !== e && this.removeAllListeners(e);
                            return this.removeAllListeners("removeListener"), this._events = Object.create(null), this._eventsCount = 0, this
                        }
                        if (b = c[a], "function" == typeof b) this.removeListener(a, b); else if (void 0 !== b) for (d = b.length - 1; d >= 0; d--) this.removeListener(a, b[d]);
                        return this
                    }, e.prototype.listeners = function (a) {
                        return k(this, a, !0)
                    }, e.prototype.rawListeners = function (a) {
                        return k(this, a, !1)
                    }, e.listenerCount = function (a, b) {
                        return "function" == typeof a.listenerCount ? a.listenerCount(b) : l.call(a, b)
                    }, e.prototype.listenerCount = l, e.prototype.eventNames = function () {
                        return this._eventsCount > 0 ? p(this._events) : []
                    }
                }, function (a, b) {
                    "function" == typeof Object.create ? a.exports = function (a, b) {
                        b && (a.super_ = b, a.prototype = Object.create(b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }))
                    } : a.exports = function (a, b) {
                        if (b) {
                            a.super_ = b;
                            var c = function () {
                            };
                            c.prototype = b.prototype, a.prototype = new c, a.prototype.constructor = a
                        }
                    }
                }, function (a, b, c) {
                    "use strict";
                    (function (a) {
                        function d() {
                            try {
                                var a = new Uint8Array(1);
                                return a.__proto__ = {
                                    __proto__: Uint8Array.prototype, foo: function () {
                                        return 42
                                    }
                                }, 42 === a.foo() && "function" == typeof a.subarray && 0 === a.subarray(1, 1).byteLength
                            } catch (b) {
                                return !1
                            }
                        }

                        function e() {
                            return g.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
                        }

                        function f(a, b) {
                            if (e() < b) throw new RangeError("Invalid typed array length");
                            return g.TYPED_ARRAY_SUPPORT ? (a = new Uint8Array(b), a.__proto__ = g.prototype) : (null === a && (a = new g(b)), a.length = b), a
                        }

                        function g(a, b, c) {
                            if (!(g.TYPED_ARRAY_SUPPORT || this instanceof g)) return new g(a, b, c);
                            if ("number" == typeof a) {
                                if ("string" == typeof b) throw new Error("If encoding is specified then the first argument must be a string");
                                return k(this, a)
                            }
                            return h(this, a, b, c)
                        }

                        function h(a, b, c, d) {
                            if ("number" == typeof b) throw new TypeError('"value" argument must not be a number');
                            return "undefined" != typeof ArrayBuffer && b instanceof ArrayBuffer ? n(a, b, c, d) : "string" == typeof b ? l(a, b, c) : o(a, b)
                        }

                        function i(a) {
                            if ("number" != typeof a) throw new TypeError('"size" argument must be a number');
                            if (a < 0) throw new RangeError('"size" argument must not be negative')
                        }

                        function j(a, b, c, d) {
                            return i(b), b <= 0 ? f(a, b) : void 0 !== c ? "string" == typeof d ? f(a, b).fill(c, d) : f(a, b).fill(c) : f(a, b)
                        }

                        function k(a, b) {
                            if (i(b), a = f(a, b < 0 ? 0 : 0 | p(b)), !g.TYPED_ARRAY_SUPPORT) for (var c = 0; c < b; ++c) a[c] = 0;
                            return a
                        }

                        function l(a, b, c) {
                            if ("string" == typeof c && "" !== c || (c = "utf8"), !g.isEncoding(c)) throw new TypeError('"encoding" must be a valid string encoding');
                            var d = 0 | r(b, c);
                            a = f(a, d);
                            var e = a.write(b, c);
                            return e !== d && (a = a.slice(0, e)), a
                        }

                        function m(a, b) {
                            var c = b.length < 0 ? 0 : 0 | p(b.length);
                            a = f(a, c);
                            for (var d = 0; d < c; d += 1) a[d] = 255 & b[d];
                            return a
                        }

                        function n(a, b, c, d) {
                            if (b.byteLength, c < 0 || b.byteLength < c) throw new RangeError("'offset' is out of bounds");
                            if (b.byteLength < c + (d || 0)) throw new RangeError("'length' is out of bounds");
                            return b = void 0 === c && void 0 === d ? new Uint8Array(b) : void 0 === d ? new Uint8Array(b, c) : new Uint8Array(b, c, d), g.TYPED_ARRAY_SUPPORT ? (a = b, a.__proto__ = g.prototype) : a = m(a, b), a
                        }

                        function o(a, b) {
                            if (g.isBuffer(b)) {
                                var c = 0 | p(b.length);
                                return a = f(a, c), 0 === a.length ? a : (b.copy(a, 0, 0, c), a)
                            }
                            if (b) {
                                if ("undefined" != typeof ArrayBuffer && b.buffer instanceof ArrayBuffer || "length" in b) return "number" != typeof b.length || Y(b.length) ? f(a, 0) : m(a, b);
                                if ("Buffer" === b.type && _(b.data)) return m(a, b.data)
                            }
                            throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                        }

                        function p(a) {
                            if (a >= e()) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + e().toString(16) + " bytes");
                            return 0 | a
                        }

                        function q(a) {
                            return +a != a && (a = 0), g.alloc(+a)
                        }

                        function r(a, b) {
                            if (g.isBuffer(a)) return a.length;
                            if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(a) || a instanceof ArrayBuffer)) return a.byteLength;
                            "string" != typeof a && (a = "" + a);
                            var c = a.length;
                            if (0 === c) return 0;
                            for (var d = !1; ;) switch (b) {
                                case"ascii":
                                case"latin1":
                                case"binary":
                                    return c;
                                case"utf8":
                                case"utf-8":
                                case void 0:
                                    return T(a).length;
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return 2 * c;
                                case"hex":
                                    return c >>> 1;
                                case"base64":
                                    return W(a).length;
                                default:
                                    if (d) return T(a).length;
                                    b = ("" + b).toLowerCase(), d = !0
                            }
                        }

                        function s(a, b, c) {
                            var d = !1;
                            if ((void 0 === b || b < 0) && (b = 0), b > this.length) return "";
                            if ((void 0 === c || c > this.length) && (c = this.length), c <= 0) return "";
                            if (c >>>= 0, b >>>= 0, c <= b) return "";
                            for (a || (a = "utf8"); ;) switch (a) {
                                case"hex":
                                    return H(this, b, c);
                                case"utf8":
                                case"utf-8":
                                    return D(this, b, c);
                                case"ascii":
                                    return F(this, b, c);
                                case"latin1":
                                case"binary":
                                    return G(this, b, c);
                                case"base64":
                                    return C(this, b, c);
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return I(this, b, c);
                                default:
                                    if (d) throw new TypeError("Unknown encoding: " + a);
                                    a = (a + "").toLowerCase(), d = !0
                            }
                        }

                        function t(a, b, c) {
                            var d = a[b];
                            a[b] = a[c], a[c] = d
                        }

                        function u(a, b, c, d, e) {
                            if (0 === a.length) return -1;
                            if ("string" == typeof c ? (d = c, c = 0) : c > 2147483647 ? c = 2147483647 : c < -2147483648 && (c = -2147483648), c = +c, isNaN(c) && (c = e ? 0 : a.length - 1), c < 0 && (c = a.length + c), c >= a.length) {
                                if (e) return -1;
                                c = a.length - 1
                            } else if (c < 0) {
                                if (!e) return -1;
                                c = 0
                            }
                            if ("string" == typeof b && (b = g.from(b, d)), g.isBuffer(b)) return 0 === b.length ? -1 : v(a, b, c, d, e);
                            if ("number" == typeof b) return b = 255 & b, g.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? e ? Uint8Array.prototype.indexOf.call(a, b, c) : Uint8Array.prototype.lastIndexOf.call(a, b, c) : v(a, [b], c, d, e);
                            throw new TypeError("val must be string, number or Buffer")
                        }

                        function v(a, b, c, d, e) {
                            function f(a, b) {
                                return 1 === g ? a[b] : a.readUInt16BE(b * g)
                            }

                            var g = 1, h = a.length, i = b.length;
                            if (void 0 !== d && (d = String(d).toLowerCase(), "ucs2" === d || "ucs-2" === d || "utf16le" === d || "utf-16le" === d)) {
                                if (a.length < 2 || b.length < 2) return -1;
                                g = 2, h /= 2, i /= 2, c /= 2
                            }
                            var j;
                            if (e) {
                                var k = -1;
                                for (j = c; j < h; j++) if (f(a, j) === f(b, k === -1 ? 0 : j - k)) {
                                    if (k === -1 && (k = j), j - k + 1 === i) return k * g
                                } else k !== -1 && (j -= j - k), k = -1
                            } else for (c + i > h && (c = h - i), j = c; j >= 0; j--) {
                                for (var l = !0, m = 0; m < i; m++) if (f(a, j + m) !== f(b, m)) {
                                    l = !1;
                                    break
                                }
                                if (l) return j
                            }
                            return -1
                        }

                        function w(a, b, c, d) {
                            c = Number(c) || 0;
                            var e = a.length - c;
                            d ? (d = Number(d), d > e && (d = e)) : d = e;
                            var f = b.length;
                            if (f % 2 !== 0) throw new TypeError("Invalid hex string");
                            d > f / 2 && (d = f / 2);
                            for (var g = 0; g < d; ++g) {
                                var h = parseInt(b.substr(2 * g, 2), 16);
                                if (isNaN(h)) return g;
                                a[c + g] = h
                            }
                            return g
                        }

                        function x(a, b, c, d) {
                            return X(T(b, a.length - c), a, c, d)
                        }

                        function y(a, b, c, d) {
                            return X(U(b), a, c, d)
                        }

                        function z(a, b, c, d) {
                            return y(a, b, c, d)
                        }

                        function A(a, b, c, d) {
                            return X(W(b), a, c, d)
                        }

                        function B(a, b, c, d) {
                            return X(V(b, a.length - c), a, c, d)
                        }

                        function C(a, b, c) {
                            return 0 === b && c === a.length ? Z.fromByteArray(a) : Z.fromByteArray(a.slice(b, c))
                        }

                        function D(a, b, c) {
                            c = Math.min(a.length, c);
                            for (var d = [], e = b; e < c;) {
                                var f = a[e], g = null, h = f > 239 ? 4 : f > 223 ? 3 : f > 191 ? 2 : 1;
                                if (e + h <= c) {
                                    var i, j, k, l;
                                    switch (h) {
                                        case 1:
                                            f < 128 && (g = f);
                                            break;
                                        case 2:
                                            i = a[e + 1], 128 === (192 & i) && (l = (31 & f) << 6 | 63 & i, l > 127 && (g = l));
                                            break;
                                        case 3:
                                            i = a[e + 1], j = a[e + 2], 128 === (192 & i) && 128 === (192 & j) && (l = (15 & f) << 12 | (63 & i) << 6 | 63 & j, l > 2047 && (l < 55296 || l > 57343) && (g = l));
                                            break;
                                        case 4:
                                            i = a[e + 1], j = a[e + 2], k = a[e + 3], 128 === (192 & i) && 128 === (192 & j) && 128 === (192 & k) && (l = (15 & f) << 18 | (63 & i) << 12 | (63 & j) << 6 | 63 & k, l > 65535 && l < 1114112 && (g = l))
                                    }
                                }
                                null === g ? (g = 65533, h = 1) : g > 65535 && (g -= 65536, d.push(g >>> 10 & 1023 | 55296), g = 56320 | 1023 & g), d.push(g), e += h
                            }
                            return E(d)
                        }

                        function E(a) {
                            var b = a.length;
                            if (b <= aa) return String.fromCharCode.apply(String, a);
                            for (var c = "", d = 0; d < b;) c += String.fromCharCode.apply(String, a.slice(d, d += aa));
                            return c
                        }

                        function F(a, b, c) {
                            var d = "";
                            c = Math.min(a.length, c);
                            for (var e = b; e < c; ++e) d += String.fromCharCode(127 & a[e]);
                            return d
                        }

                        function G(a, b, c) {
                            var d = "";
                            c = Math.min(a.length, c);
                            for (var e = b; e < c; ++e) d += String.fromCharCode(a[e]);
                            return d
                        }

                        function H(a, b, c) {
                            var d = a.length;
                            (!b || b < 0) && (b = 0), (!c || c < 0 || c > d) && (c = d);
                            for (var e = "", f = b; f < c; ++f) e += S(a[f]);
                            return e
                        }

                        function I(a, b, c) {
                            for (var d = a.slice(b, c), e = "", f = 0; f < d.length; f += 2) e += String.fromCharCode(d[f] + 256 * d[f + 1]);
                            return e
                        }

                        function J(a, b, c) {
                            if (a % 1 !== 0 || a < 0) throw new RangeError("offset is not uint");
                            if (a + b > c) throw new RangeError("Trying to access beyond buffer length")
                        }

                        function K(a, b, c, d, e, f) {
                            if (!g.isBuffer(a)) throw new TypeError('"buffer" argument must be a Buffer instance');
                            if (b > e || b < f) throw new RangeError('"value" argument is out of bounds');
                            if (c + d > a.length) throw new RangeError("Index out of range")
                        }

                        function L(a, b, c, d) {
                            b < 0 && (b = 65535 + b + 1);
                            for (var e = 0, f = Math.min(a.length - c, 2); e < f; ++e) a[c + e] = (b & 255 << 8 * (d ? e : 1 - e)) >>> 8 * (d ? e : 1 - e)
                        }

                        function M(a, b, c, d) {
                            b < 0 && (b = 4294967295 + b + 1);
                            for (var e = 0, f = Math.min(a.length - c, 4); e < f; ++e) a[c + e] = b >>> 8 * (d ? e : 3 - e) & 255
                        }

                        function N(a, b, c, d, e, f) {
                            if (c + d > a.length) throw new RangeError("Index out of range");
                            if (c < 0) throw new RangeError("Index out of range")
                        }

                        function O(a, b, c, d, e) {
                            return e || N(a, b, c, 4, 3.4028234663852886e38, -3.4028234663852886e38), $.write(a, b, c, d, 23, 4), c + 4
                        }

                        function P(a, b, c, d, e) {
                            return e || N(a, b, c, 8, 1.7976931348623157e308, -1.7976931348623157e308), $.write(a, b, c, d, 52, 8), c + 8
                        }

                        function Q(a) {
                            if (a = R(a).replace(ba, ""), a.length < 2) return "";
                            for (; a.length % 4 !== 0;) a += "=";
                            return a
                        }

                        function R(a) {
                            return a.trim ? a.trim() : a.replace(/^\s+|\s+$/g, "")
                        }

                        function S(a) {
                            return a < 16 ? "0" + a.toString(16) : a.toString(16)
                        }

                        function T(a, b) {
                            b = b || 1 / 0;
                            for (var c, d = a.length, e = null, f = [], g = 0; g < d; ++g) {
                                if (c = a.charCodeAt(g), c > 55295 && c < 57344) {
                                    if (!e) {
                                        if (c > 56319) {
                                            (b -= 3) > -1 && f.push(239, 191, 189);
                                            continue
                                        }
                                        if (g + 1 === d) {
                                            (b -= 3) > -1 && f.push(239, 191, 189);
                                            continue
                                        }
                                        e = c;
                                        continue
                                    }
                                    if (c < 56320) {
                                        (b -= 3) > -1 && f.push(239, 191, 189), e = c;
                                        continue
                                    }
                                    c = (e - 55296 << 10 | c - 56320) + 65536
                                } else e && (b -= 3) > -1 && f.push(239, 191, 189);
                                if (e = null, c < 128) {
                                    if ((b -= 1) < 0) break;
                                    f.push(c)
                                } else if (c < 2048) {
                                    if ((b -= 2) < 0) break;
                                    f.push(c >> 6 | 192, 63 & c | 128)
                                } else if (c < 65536) {
                                    if ((b -= 3) < 0) break;
                                    f.push(c >> 12 | 224, c >> 6 & 63 | 128, 63 & c | 128)
                                } else {
                                    if (!(c < 1114112)) throw new Error("Invalid code point");
                                    if ((b -= 4) < 0) break;
                                    f.push(c >> 18 | 240, c >> 12 & 63 | 128, c >> 6 & 63 | 128, 63 & c | 128)
                                }
                            }
                            return f
                        }

                        function U(a) {
                            for (var b = [], c = 0; c < a.length; ++c) b.push(255 & a.charCodeAt(c));
                            return b
                        }

                        function V(a, b) {
                            for (var c, d, e, f = [], g = 0; g < a.length && !((b -= 2) < 0); ++g) c = a.charCodeAt(g), d = c >> 8, e = c % 256, f.push(e), f.push(d);
                            return f
                        }

                        function W(a) {
                            return Z.toByteArray(Q(a))
                        }

                        function X(a, b, c, d) {
                            for (var e = 0; e < d && !(e + c >= b.length || e >= a.length); ++e) b[e + c] = a[e];
                            return e
                        }

                        function Y(a) {
                            return a !== a
                        }

                        var Z = c(29), $ = c(30), _ = c(22);
                        b.Buffer = g, b.SlowBuffer = q, b.INSPECT_MAX_BYTES = 50, g.TYPED_ARRAY_SUPPORT = void 0 !== a.TYPED_ARRAY_SUPPORT ? a.TYPED_ARRAY_SUPPORT : d(), b.kMaxLength = e(), g.poolSize = 8192, g._augment = function (a) {
                            return a.__proto__ = g.prototype, a
                        }, g.from = function (a, b, c) {
                            return h(null, a, b, c)
                        }, g.TYPED_ARRAY_SUPPORT && (g.prototype.__proto__ = Uint8Array.prototype, g.__proto__ = Uint8Array, "undefined" != typeof Symbol && Symbol.species && g[Symbol.species] === g && Object.defineProperty(g, Symbol.species, {
                            value: null,
                            configurable: !0
                        })), g.alloc = function (a, b, c) {
                            return j(null, a, b, c)
                        }, g.allocUnsafe = function (a) {
                            return k(null, a)
                        }, g.allocUnsafeSlow = function (a) {
                            return k(null, a)
                        }, g.isBuffer = function (a) {
                            return !(null == a || !a._isBuffer)
                        }, g.compare = function (a, b) {
                            if (!g.isBuffer(a) || !g.isBuffer(b)) throw new TypeError("Arguments must be Buffers");
                            if (a === b) return 0;
                            for (var c = a.length, d = b.length, e = 0, f = Math.min(c, d); e < f; ++e) if (a[e] !== b[e]) {
                                c = a[e], d = b[e];
                                break
                            }
                            return c < d ? -1 : d < c ? 1 : 0
                        }, g.isEncoding = function (a) {
                            switch (String(a).toLowerCase()) {
                                case"hex":
                                case"utf8":
                                case"utf-8":
                                case"ascii":
                                case"latin1":
                                case"binary":
                                case"base64":
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return !0;
                                default:
                                    return !1
                            }
                        }, g.concat = function (a, b) {
                            if (!_(a)) throw new TypeError('"list" argument must be an Array of Buffers');
                            if (0 === a.length) return g.alloc(0);
                            var c;
                            if (void 0 === b) for (b = 0, c = 0; c < a.length; ++c) b += a[c].length;
                            var d = g.allocUnsafe(b), e = 0;
                            for (c = 0; c < a.length; ++c) {
                                var f = a[c];
                                if (!g.isBuffer(f)) throw new TypeError('"list" argument must be an Array of Buffers');
                                f.copy(d, e), e += f.length
                            }
                            return d
                        }, g.byteLength = r, g.prototype._isBuffer = !0, g.prototype.swap16 = function () {
                            var a = this.length;
                            if (a % 2 !== 0) throw new RangeError("Buffer size must be a multiple of 16-bits");
                            for (var b = 0; b < a; b += 2) t(this, b, b + 1);
                            return this
                        }, g.prototype.swap32 = function () {
                            var a = this.length;
                            if (a % 4 !== 0) throw new RangeError("Buffer size must be a multiple of 32-bits");
                            for (var b = 0; b < a; b += 4) t(this, b, b + 3), t(this, b + 1, b + 2);
                            return this
                        }, g.prototype.swap64 = function () {
                            var a = this.length;
                            if (a % 8 !== 0) throw new RangeError("Buffer size must be a multiple of 64-bits");
                            for (var b = 0; b < a; b += 8) t(this, b, b + 7), t(this, b + 1, b + 6), t(this, b + 2, b + 5), t(this, b + 3, b + 4);
                            return this
                        }, g.prototype.toString = function () {
                            var a = 0 | this.length;
                            return 0 === a ? "" : 0 === arguments.length ? D(this, 0, a) : s.apply(this, arguments)
                        }, g.prototype.equals = function (a) {
                            if (!g.isBuffer(a)) throw new TypeError("Argument must be a Buffer");
                            return this === a || 0 === g.compare(this, a)
                        }, g.prototype.inspect = function () {
                            var a = "", c = b.INSPECT_MAX_BYTES;
                            return this.length > 0 && (a = this.toString("hex", 0, c).match(/.{2}/g).join(" "), this.length > c && (a += " ... ")), "<Buffer " + a + ">"
                        }, g.prototype.compare = function (a, b, c, d, e) {
                            if (!g.isBuffer(a)) throw new TypeError("Argument must be a Buffer");
                            if (void 0 === b && (b = 0), void 0 === c && (c = a ? a.length : 0), void 0 === d && (d = 0), void 0 === e && (e = this.length), b < 0 || c > a.length || d < 0 || e > this.length) throw new RangeError("out of range index");
                            if (d >= e && b >= c) return 0;
                            if (d >= e) return -1;
                            if (b >= c) return 1;
                            if (b >>>= 0, c >>>= 0, d >>>= 0, e >>>= 0, this === a) return 0;
                            for (var f = e - d, h = c - b, i = Math.min(f, h), j = this.slice(d, e), k = a.slice(b, c), l = 0; l < i; ++l) if (j[l] !== k[l]) {
                                f = j[l], h = k[l];
                                break
                            }
                            return f < h ? -1 : h < f ? 1 : 0
                        }, g.prototype.includes = function (a, b, c) {
                            return this.indexOf(a, b, c) !== -1
                        }, g.prototype.indexOf = function (a, b, c) {
                            return u(this, a, b, c, !0)
                        }, g.prototype.lastIndexOf = function (a, b, c) {
                            return u(this, a, b, c, !1)
                        }, g.prototype.write = function (a, b, c, d) {
                            if (void 0 === b) d = "utf8", c = this.length, b = 0; else if (void 0 === c && "string" == typeof b) d = b, c = this.length, b = 0; else {
                                if (!isFinite(b)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                                b = 0 | b, isFinite(c) ? (c = 0 | c, void 0 === d && (d = "utf8")) : (d = c, c = void 0)
                            }
                            var e = this.length - b;
                            if ((void 0 === c || c > e) && (c = e), a.length > 0 && (c < 0 || b < 0) || b > this.length) throw new RangeError("Attempt to write outside buffer bounds");
                            d || (d = "utf8");
                            for (var f = !1; ;) switch (d) {
                                case"hex":
                                    return w(this, a, b, c);
                                case"utf8":
                                case"utf-8":
                                    return x(this, a, b, c);
                                case"ascii":
                                    return y(this, a, b, c);
                                case"latin1":
                                case"binary":
                                    return z(this, a, b, c);
                                case"base64":
                                    return A(this, a, b, c);
                                case"ucs2":
                                case"ucs-2":
                                case"utf16le":
                                case"utf-16le":
                                    return B(this, a, b, c);
                                default:
                                    if (f) throw new TypeError("Unknown encoding: " + d);
                                    d = ("" + d).toLowerCase(), f = !0
                            }
                        }, g.prototype.toJSON = function () {
                            return {type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0)}
                        };
                        var aa = 4096;
                        g.prototype.slice = function (a, b) {
                            var c = this.length;
                            a = ~~a, b = void 0 === b ? c : ~~b, a < 0 ? (a += c, a < 0 && (a = 0)) : a > c && (a = c), b < 0 ? (b += c, b < 0 && (b = 0)) : b > c && (b = c), b < a && (b = a);
                            var d;
                            if (g.TYPED_ARRAY_SUPPORT) d = this.subarray(a, b), d.__proto__ = g.prototype; else {
                                var e = b - a;
                                d = new g(e, (void 0));
                                for (var f = 0; f < e; ++f) d[f] = this[f + a]
                            }
                            return d
                        }, g.prototype.readUIntLE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;
                            return d
                        }, g.prototype.readUIntBE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = this[a + --b], e = 1; b > 0 && (e *= 256);) d += this[a + --b] * e;
                            return d
                        }, g.prototype.readUInt8 = function (a, b) {
                            return b || J(a, 1, this.length), this[a]
                        }, g.prototype.readUInt16LE = function (a, b) {
                            return b || J(a, 2, this.length), this[a] | this[a + 1] << 8
                        }, g.prototype.readUInt16BE = function (a, b) {
                            return b || J(a, 2, this.length), this[a] << 8 | this[a + 1]
                        }, g.prototype.readUInt32LE = function (a, b) {
                            return b || J(a, 4, this.length), (this[a] | this[a + 1] << 8 | this[a + 2] << 16) + 16777216 * this[a + 3]
                        }, g.prototype.readUInt32BE = function (a, b) {
                            return b || J(a, 4, this.length), 16777216 * this[a] + (this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3])
                        }, g.prototype.readIntLE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = this[a], e = 1, f = 0; ++f < b && (e *= 256);) d += this[a + f] * e;
                            return e *= 128, d >= e && (d -= Math.pow(2, 8 * b)), d
                        }, g.prototype.readIntBE = function (a, b, c) {
                            a = 0 | a, b = 0 | b, c || J(a, b, this.length);
                            for (var d = b, e = 1, f = this[a + --d]; d > 0 && (e *= 256);) f += this[a + --d] * e;
                            return e *= 128, f >= e && (f -= Math.pow(2, 8 * b)), f
                        }, g.prototype.readInt8 = function (a, b) {
                            return b || J(a, 1, this.length), 128 & this[a] ? (255 - this[a] + 1) * -1 : this[a]
                        }, g.prototype.readInt16LE = function (a, b) {
                            b || J(a, 2, this.length);
                            var c = this[a] | this[a + 1] << 8;
                            return 32768 & c ? 4294901760 | c : c
                        }, g.prototype.readInt16BE = function (a, b) {
                            b || J(a, 2, this.length);
                            var c = this[a + 1] | this[a] << 8;
                            return 32768 & c ? 4294901760 | c : c
                        }, g.prototype.readInt32LE = function (a, b) {
                            return b || J(a, 4, this.length), this[a] | this[a + 1] << 8 | this[a + 2] << 16 | this[a + 3] << 24
                        }, g.prototype.readInt32BE = function (a, b) {
                            return b || J(a, 4, this.length), this[a] << 24 | this[a + 1] << 16 | this[a + 2] << 8 | this[a + 3]
                        }, g.prototype.readFloatLE = function (a, b) {
                            return b || J(a, 4, this.length), $.read(this, a, !0, 23, 4)
                        }, g.prototype.readFloatBE = function (a, b) {
                            return b || J(a, 4, this.length), $.read(this, a, !1, 23, 4)
                        }, g.prototype.readDoubleLE = function (a, b) {
                            return b || J(a, 8, this.length), $.read(this, a, !0, 52, 8)
                        }, g.prototype.readDoubleBE = function (a, b) {
                            return b || J(a, 8, this.length), $.read(this, a, !1, 52, 8)
                        }, g.prototype.writeUIntLE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, c = 0 | c, !d) {
                                var e = Math.pow(2, 8 * c) - 1;
                                K(this, a, b, c, e, 0)
                            }
                            var f = 1, g = 0;
                            for (this[b] = 255 & a; ++g < c && (f *= 256);) this[b + g] = a / f & 255;
                            return b + c
                        }, g.prototype.writeUIntBE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, c = 0 | c, !d) {
                                var e = Math.pow(2, 8 * c) - 1;
                                K(this, a, b, c, e, 0)
                            }
                            var f = c - 1, g = 1;
                            for (this[b + f] = 255 & a; --f >= 0 && (g *= 256);) this[b + f] = a / g & 255;
                            return b + c
                        }, g.prototype.writeUInt8 = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 1, 255, 0), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), this[b] = 255 & a, b + 1
                        }, g.prototype.writeUInt16LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2
                        }, g.prototype.writeUInt16BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 65535, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1), b + 2
                        }, g.prototype.writeUInt32LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b + 3] = a >>> 24, this[b + 2] = a >>> 16, this[b + 1] = a >>> 8, this[b] = 255 & a) : M(this, a, b, !0), b + 4
                        }, g.prototype.writeUInt32BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 4294967295, 0), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4
                        }, g.prototype.writeIntLE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, !d) {
                                var e = Math.pow(2, 8 * c - 1);
                                K(this, a, b, c, e - 1, -e)
                            }
                            var f = 0, g = 1, h = 0;
                            for (this[b] = 255 & a; ++f < c && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f - 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
                            return b + c
                        }, g.prototype.writeIntBE = function (a, b, c, d) {
                            if (a = +a, b = 0 | b, !d) {
                                var e = Math.pow(2, 8 * c - 1);
                                K(this, a, b, c, e - 1, -e)
                            }
                            var f = c - 1, g = 1, h = 0;
                            for (this[b + f] = 255 & a; --f >= 0 && (g *= 256);) a < 0 && 0 === h && 0 !== this[b + f + 1] && (h = 1), this[b + f] = (a / g >> 0) - h & 255;
                            return b + c
                        }, g.prototype.writeInt8 = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 1, 127, -128), g.TYPED_ARRAY_SUPPORT || (a = Math.floor(a)), a < 0 && (a = 255 + a + 1), this[b] = 255 & a, b + 1
                        }, g.prototype.writeInt16LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8) : L(this, a, b, !0), b + 2
                        }, g.prototype.writeInt16BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 2, 32767, -32768), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 8, this[b + 1] = 255 & a) : L(this, a, b, !1), b + 2
                        }, g.prototype.writeInt32LE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), g.TYPED_ARRAY_SUPPORT ? (this[b] = 255 & a, this[b + 1] = a >>> 8, this[b + 2] = a >>> 16, this[b + 3] = a >>> 24) : M(this, a, b, !0), b + 4
                        }, g.prototype.writeInt32BE = function (a, b, c) {
                            return a = +a, b = 0 | b, c || K(this, a, b, 4, 2147483647, -2147483648), a < 0 && (a = 4294967295 + a + 1), g.TYPED_ARRAY_SUPPORT ? (this[b] = a >>> 24, this[b + 1] = a >>> 16, this[b + 2] = a >>> 8, this[b + 3] = 255 & a) : M(this, a, b, !1), b + 4
                        }, g.prototype.writeFloatLE = function (a, b, c) {
                            return O(this, a, b, !0, c)
                        }, g.prototype.writeFloatBE = function (a, b, c) {
                            return O(this, a, b, !1, c)
                        }, g.prototype.writeDoubleLE = function (a, b, c) {
                            return P(this, a, b, !0, c)
                        }, g.prototype.writeDoubleBE = function (a, b, c) {
                            return P(this, a, b, !1, c)
                        }, g.prototype.copy = function (a, b, c, d) {
                            if (c || (c = 0), d || 0 === d || (d = this.length), b >= a.length && (b = a.length), b || (b = 0), d > 0 && d < c && (d = c), d === c) return 0;
                            if (0 === a.length || 0 === this.length) return 0;
                            if (b < 0) throw new RangeError("targetStart out of bounds");
                            if (c < 0 || c >= this.length) throw new RangeError("sourceStart out of bounds");
                            if (d < 0) throw new RangeError("sourceEnd out of bounds");
                            d > this.length && (d = this.length), a.length - b < d - c && (d = a.length - b + c);
                            var e, f = d - c;
                            if (this === a && c < b && b < d) for (e = f - 1; e >= 0; --e) a[e + b] = this[e + c]; else if (f < 1e3 || !g.TYPED_ARRAY_SUPPORT) for (e = 0; e < f; ++e) a[e + b] = this[e + c]; else Uint8Array.prototype.set.call(a, this.subarray(c, c + f), b);
                            return f
                        }, g.prototype.fill = function (a, b, c, d) {
                            if ("string" == typeof a) {
                                if ("string" == typeof b ? (d = b, b = 0, c = this.length) : "string" == typeof c && (d = c, c = this.length), 1 === a.length) {
                                    var e = a.charCodeAt(0);
                                    e < 256 && (a = e)
                                }
                                if (void 0 !== d && "string" != typeof d) throw new TypeError("encoding must be a string");
                                if ("string" == typeof d && !g.isEncoding(d)) throw new TypeError("Unknown encoding: " + d)
                            } else "number" == typeof a && (a = 255 & a);
                            if (b < 0 || this.length < b || this.length < c) throw new RangeError("Out of range index");
                            if (c <= b) return this;
                            b >>>= 0, c = void 0 === c ? this.length : c >>> 0, a || (a = 0);
                            var f;
                            if ("number" == typeof a) for (f = b; f < c; ++f) this[f] = a; else {
                                var h = g.isBuffer(a) ? a : T(new g(a, d).toString()), i = h.length;
                                for (f = 0; f < c - b; ++f) this[f + b] = h[f % i]
                            }
                            return this
                        };
                        var ba = /[^+\/0-9A-Za-z-_]/g
                    }).call(b, c(7))
                }, function (a, b, c) {
                    !function (b) {
                        var c = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/,
                            d = /^([^\/?#]*)(.*)$/, e = /(?:\/|^)\.(?=\/)/g, f = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g,
                            g = {
                                buildAbsoluteURL: function (a, b, c) {
                                    if (c = c || {}, a = a.trim(), b = b.trim(), !b) {
                                        if (!c.alwaysNormalize) return a;
                                        var e = g.parseURL(a);
                                        if (!e) throw new Error("Error trying to parse base URL.");
                                        return e.path = g.normalizePath(e.path), g.buildURLFromParts(e)
                                    }
                                    var f = g.parseURL(b);
                                    if (!f) throw new Error("Error trying to parse relative URL.");
                                    if (f.scheme) return c.alwaysNormalize ? (f.path = g.normalizePath(f.path), g.buildURLFromParts(f)) : b;
                                    var h = g.parseURL(a);
                                    if (!h) throw new Error("Error trying to parse base URL.");
                                    if (!h.netLoc && h.path && "/" !== h.path[0]) {
                                        var i = d.exec(h.path);
                                        h.netLoc = i[1], h.path = i[2]
                                    }
                                    h.netLoc && !h.path && (h.path = "/");
                                    var j = {
                                        scheme: h.scheme,
                                        netLoc: f.netLoc,
                                        path: null,
                                        params: f.params,
                                        query: f.query,
                                        fragment: f.fragment
                                    };
                                    if (!f.netLoc && (j.netLoc = h.netLoc, "/" !== f.path[0])) if (f.path) {
                                        var k = h.path, l = k.substring(0, k.lastIndexOf("/") + 1) + f.path;
                                        j.path = g.normalizePath(l)
                                    } else j.path = h.path, f.params || (j.params = h.params, f.query || (j.query = h.query));
                                    return null === j.path && (j.path = c.alwaysNormalize ? g.normalizePath(f.path) : f.path), g.buildURLFromParts(j)
                                }, parseURL: function (a) {
                                    var b = c.exec(a);
                                    return b ? {
                                        scheme: b[1] || "",
                                        netLoc: b[2] || "",
                                        path: b[3] || "",
                                        params: b[4] || "",
                                        query: b[5] || "",
                                        fragment: b[6] || ""
                                    } : null
                                }, normalizePath: function (a) {
                                    for (a = a.split("").reverse().join("").replace(e, ""); a.length !== (a = a.replace(f, "")).length;) ;
                                    return a.split("").reverse().join("")
                                }, buildURLFromParts: function (a) {
                                    return a.scheme + a.netLoc + a.path + a.params + a.query + a.fragment
                                }
                            };
                        a.exports = g
                    }(this)
                }, function (a, b, c) {
                    a.exports = c(50), a.exports.Constants = c(32), a.exports.Errors = c(33), a.exports.FileAttr = c(51)
                }, function (a, b, c) {
                    (function (a) {
                        function c(a) {
                            return Array.isArray ? Array.isArray(a) : "[object Array]" === q(a)
                        }

                        function d(a) {
                            return "boolean" == typeof a
                        }

                        function e(a) {
                            return null === a
                        }

                        function f(a) {
                            return null == a
                        }

                        function g(a) {
                            return "number" == typeof a
                        }

                        function h(a) {
                            return "string" == typeof a
                        }

                        function i(a) {
                            return "symbol" == typeof a
                        }

                        function j(a) {
                            return void 0 === a
                        }

                        function k(a) {
                            return "[object RegExp]" === q(a)
                        }

                        function l(a) {
                            return "object" == typeof a && null !== a
                        }

                        function m(a) {
                            return "[object Date]" === q(a)
                        }

                        function n(a) {
                            return "[object Error]" === q(a) || a instanceof Error
                        }

                        function o(a) {
                            return "function" == typeof a
                        }

                        function p(a) {
                            return null === a || "boolean" == typeof a || "number" == typeof a || "string" == typeof a || "symbol" == typeof a || "undefined" == typeof a
                        }

                        function q(a) {
                            return Object.prototype.toString.call(a)
                        }

                        b.isArray = c, b.isBoolean = d, b.isNull = e, b.isNullOrUndefined = f, b.isNumber = g, b.isString = h, b.isSymbol = i, b.isUndefined = j, b.isRegExp = k, b.isObject = l, b.isDate = m, b.isError = n, b.isFunction = o, b.isPrimitive = p, b.isBuffer = a.isBuffer
                    }).call(b, c(6).Buffer)
                }, function (a, b) {
                }, function (a, b, c) {
                    "use strict";
                    (function (b) {
                        function c(a, c, d, e) {
                            if ("function" != typeof a) throw new TypeError('"callback" argument must be a function');
                            var f, g, h = arguments.length;
                            switch (h) {
                                case 0:
                                case 1:
                                    return b.nextTick(a);
                                case 2:
                                    return b.nextTick(function () {
                                        a.call(null, c)
                                    });
                                case 3:
                                    return b.nextTick(function () {
                                        a.call(null, c, d)
                                    });
                                case 4:
                                    return b.nextTick(function () {
                                        a.call(null, c, d, e)
                                    });
                                default:
                                    for (f = new Array(h - 1), g = 0; g < f.length;) f[g++] = arguments[g];
                                    return b.nextTick(function () {
                                        a.apply(null, f)
                                    })
                            }
                        }

                        "undefined" == typeof b || !b.version || 0 === b.version.indexOf("v0.") || 0 === b.version.indexOf("v1.") && 0 !== b.version.indexOf("v1.8.") ? a.exports = {nextTick: c} : a.exports = b
                    }).call(b, c(8))
                }, function (a, b, c) {
                    function d(a, b) {
                        for (var c in a) b[c] = a[c]
                    }

                    function e(a, b, c) {
                        return g(a, b, c)
                    }

                    var f = c(6), g = f.Buffer;
                    g.from && g.alloc && g.allocUnsafe && g.allocUnsafeSlow ? a.exports = f : (d(f, b), b.Buffer = e), d(g, e), e.from = function (a, b, c) {
                        if ("number" == typeof a) throw new TypeError("Argument must not be a number");
                        return g(a, b, c)
                    }, e.alloc = function (a, b, c) {
                        if ("number" != typeof a) throw new TypeError("Argument must be a number");
                        var d = g(a);
                        return void 0 !== b ? "string" == typeof c ? d.fill(b, c) : d.fill(b) : d.fill(0), d
                    }, e.allocUnsafe = function (a) {
                        if ("number" != typeof a) throw new TypeError("Argument must be a number");
                        return g(a)
                    }, e.allocUnsafeSlow = function (a) {
                        if ("number" != typeof a) throw new TypeError("Argument must be a number");
                        return f.SlowBuffer(a)
                    }
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        return Object.prototype.hasOwnProperty.call(a, b)
                    }

                    var e = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
                    b.assign = function (a) {
                        for (var b = Array.prototype.slice.call(arguments, 1); b.length;) {
                            var c = b.shift();
                            if (c) {
                                if ("object" != typeof c) throw new TypeError(c + "must be non-object");
                                for (var e in c) d(c, e) && (a[e] = c[e])
                            }
                        }
                        return a
                    }, b.shrinkBuf = function (a, b) {
                        return a.length === b ? a : a.subarray ? a.subarray(0, b) : (a.length = b, a)
                    };
                    var f = {
                        arraySet: function (a, b, c, d, e) {
                            if (b.subarray && a.subarray) return void a.set(b.subarray(c, c + d), e);
                            for (var f = 0; f < d; f++) a[e + f] = b[c + f]
                        }, flattenChunks: function (a) {
                            var b, c, d, e, f, g;
                            for (d = 0, b = 0, c = a.length; b < c; b++) d += a[b].length;
                            for (g = new Uint8Array(d), e = 0, b = 0, c = a.length; b < c; b++) f = a[b], g.set(f, e), e += f.length;
                            return g
                        }
                    }, g = {
                        arraySet: function (a, b, c, d, e) {
                            for (var f = 0; f < d; f++) a[e + f] = b[c + f]
                        }, flattenChunks: function (a) {
                            return [].concat.apply([], a)
                        }
                    };
                    b.setTyped = function (a) {
                        a ? (b.Buf8 = Uint8Array, b.Buf16 = Uint16Array, b.Buf32 = Int32Array, b.assign(b, f)) : (b.Buf8 = Array, b.Buf16 = Array, b.Buf32 = Array, b.assign(b, g))
                    }, b.setTyped(e)
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    c.d(b, "b", function () {
                        return f
                    });
                    var e = function () {
                        function a() {
                            d(this, a)
                        }

                        return a.isHeader = function (a, b) {
                            return b + 10 <= a.length && 73 === a[b] && 68 === a[b + 1] && 51 === a[b + 2] && a[b + 3] < 255 && a[b + 4] < 255 && a[b + 6] < 128 && a[b + 7] < 128 && a[b + 8] < 128 && a[b + 9] < 128
                        }, a.isFooter = function (a, b) {
                            return b + 10 <= a.length && 51 === a[b] && 68 === a[b + 1] && 73 === a[b + 2] && a[b + 3] < 255 && a[b + 4] < 255 && a[b + 6] < 128 && a[b + 7] < 128 && a[b + 8] < 128 && a[b + 9] < 128
                        }, a.getID3Data = function (b, c) {
                            for (var d = c, e = 0; a.isHeader(b, c);) {
                                e += 10;
                                var f = a._readSize(b, c + 6);
                                e += f, a.isFooter(b, c + 10) && (e += 10), c += e
                            }
                            if (e > 0) return b.subarray(d, d + e)
                        }, a._readSize = function (a, b) {
                            var c = 0;
                            return c = (127 & a[b]) << 21, c |= (127 & a[b + 1]) << 14, c |= (127 & a[b + 2]) << 7, c |= 127 & a[b + 3]
                        }, a.getTimeStamp = function (b) {
                            for (var c = a.getID3Frames(b), d = 0; d < c.length; d++) {
                                var e = c[d];
                                if (a.isTimeStampFrame(e)) return a._readTimeStamp(e)
                            }
                        }, a.isTimeStampFrame = function (a) {
                            return a && "PRIV" === a.key && "com.apple.streaming.transportStreamTimestamp" === a.info
                        }, a._getFrameData = function (b) {
                            var c = String.fromCharCode(b[0], b[1], b[2], b[3]), d = a._readSize(b, 4), e = 10;
                            return {type: c, size: d, data: b.subarray(e, e + d)}
                        }, a.getID3Frames = function (b) {
                            for (var c = 0, d = []; a.isHeader(b, c);) {
                                var e = a._readSize(b, c + 6);
                                c += 10;
                                for (var f = c + e; c + 8 < f;) {
                                    var g = a._getFrameData(b.subarray(c)), h = a._decodeFrame(g);
                                    h && d.push(h), c += g.size + 10
                                }
                                a.isFooter(b, c) && (c += 10)
                            }
                            return d
                        }, a._decodeFrame = function (b) {
                            return "PRIV" === b.type ? a._decodePrivFrame(b) : "T" === b.type[0] ? a._decodeTextFrame(b) : "W" === b.type[0] ? a._decodeURLFrame(b) : void 0
                        }, a._readTimeStamp = function (a) {
                            if (8 === a.data.byteLength) {
                                var b = new Uint8Array(a.data), c = 1 & b[3],
                                    d = (b[4] << 23) + (b[5] << 15) + (b[6] << 7) + b[7];
                                return d /= 45, c && (d += 47721858.84), Math.round(d)
                            }
                        }, a._decodePrivFrame = function (b) {
                            if (!(b.size < 2)) {
                                var c = a._utf8ArrayToStr(b.data, !0),
                                    d = new Uint8Array(b.data.subarray(c.length + 1));
                                return {key: b.type, info: c, data: d.buffer}
                            }
                        }, a._decodeTextFrame = function (b) {
                            if (!(b.size < 2)) {
                                if ("TXXX" === b.type) {
                                    var c = 1, d = a._utf8ArrayToStr(b.data.subarray(c));
                                    c += d.length + 1;
                                    var e = a._utf8ArrayToStr(b.data.subarray(c));
                                    return {key: b.type, info: d, data: e}
                                }
                                var f = a._utf8ArrayToStr(b.data.subarray(1));
                                return {key: b.type, data: f}
                            }
                        }, a._decodeURLFrame = function (b) {
                            if ("WXXX" === b.type) {
                                if (b.size < 2) return;
                                var c = 1, d = a._utf8ArrayToStr(b.data.subarray(c));
                                c += d.length + 1;
                                var e = a._utf8ArrayToStr(b.data.subarray(c));
                                return {key: b.type, info: d, data: e}
                            }
                            var f = a._utf8ArrayToStr(b.data);
                            return {key: b.type, data: f}
                        }, a._utf8ArrayToStr = function (a) {
                            for (var b = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], c = a.length, d = void 0, e = void 0, f = void 0, g = "", h = 0; h < c;) {
                                if (d = a[h++], 0 === d && b) return g;
                                if (0 !== d && 3 !== d) switch (d >> 4) {
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        g += String.fromCharCode(d);
                                        break;
                                    case 12:
                                    case 13:
                                        e = a[h++], g += String.fromCharCode((31 & d) << 6 | 63 & e);
                                        break;
                                    case 14:
                                        e = a[h++], f = a[h++], g += String.fromCharCode((15 & d) << 12 | (63 & e) << 6 | (63 & f) << 0)
                                }
                            }
                            return g
                        }, a
                    }(), f = e._utf8ArrayToStr;
                    b.a = e
                }, function (a, b, c) {
                    "use strict";
                    c.d(b, "a", function () {
                        return d
                    }), c.d(b, "b", function () {
                        return e
                    });
                    var d = {CUT_BY_IDR: "CutByIDR", CUT_BY_SAMPLE: "CutBySample", CUT_BY_TS: "CutByTs"},
                        e = {NO_ERROR: "NoError", DATA_ERROR: "DataError"}
                }, function (a, b) {
                    var c = {}.toString;
                    a.exports = Array.isArray || function (a) {
                        return "[object Array]" == c.call(a)
                    }
                }, function (a, b, c) {
                    (function (a) {
                        function c(a, b) {
                            for (var c = 0, d = a.length - 1; d >= 0; d--) {
                                var e = a[d];
                                "." === e ? a.splice(d, 1) : ".." === e ? (a.splice(d, 1), c++) : c && (a.splice(d, 1), c--)
                            }
                            if (b) for (; c--; c) a.unshift("..");
                            return a
                        }

                        function d(a) {
                            "string" != typeof a && (a += "");
                            var b, c = 0, d = -1, e = !0;
                            for (b = a.length - 1; b >= 0; --b) if (47 === a.charCodeAt(b)) {
                                if (!e) {
                                    c = b + 1;
                                    break
                                }
                            } else d === -1 && (e = !1, d = b + 1);
                            return d === -1 ? "" : a.slice(c, d)
                        }

                        function e(a, b) {
                            if (a.filter) return a.filter(b);
                            for (var c = [], d = 0; d < a.length; d++) b(a[d], d, a) && c.push(a[d]);
                            return c
                        }

                        b.resolve = function () {
                            for (var b = "", d = !1, f = arguments.length - 1; f >= -1 && !d; f--) {
                                var g = f >= 0 ? arguments[f] : a.cwd();
                                if ("string" != typeof g) throw new TypeError("Arguments to path.resolve must be strings");
                                g && (b = g + "/" + b, d = "/" === g.charAt(0))
                            }
                            return b = c(e(b.split("/"), function (a) {
                                return !!a
                            }), !d).join("/"), (d ? "/" : "") + b || "."
                        }, b.normalize = function (a) {
                            var d = b.isAbsolute(a), g = "/" === f(a, -1);
                            return a = c(e(a.split("/"), function (a) {
                                return !!a
                            }), !d).join("/"), a || d || (a = "."), a && g && (a += "/"), (d ? "/" : "") + a
                        }, b.isAbsolute = function (a) {
                            return "/" === a.charAt(0)
                        }, b.join = function () {
                            var a = Array.prototype.slice.call(arguments, 0);
                            return b.normalize(e(a, function (a, b) {
                                if ("string" != typeof a) throw new TypeError("Arguments to path.join must be strings");
                                return a
                            }).join("/"))
                        }, b.relative = function (a, c) {
                            function d(a) {
                                for (var b = 0; b < a.length && "" === a[b]; b++) ;
                                for (var c = a.length - 1; c >= 0 && "" === a[c]; c--) ;
                                return b > c ? [] : a.slice(b, c - b + 1)
                            }

                            a = b.resolve(a).substr(1), c = b.resolve(c).substr(1);
                            for (var e = d(a.split("/")), f = d(c.split("/")), g = Math.min(e.length, f.length), h = g, i = 0; i < g; i++) if (e[i] !== f[i]) {
                                h = i;
                                break
                            }
                            for (var j = [], i = h; i < e.length; i++) j.push("..");
                            return j = j.concat(f.slice(h)), j.join("/")
                        }, b.sep = "/", b.delimiter = ":", b.dirname = function (a) {
                            if ("string" != typeof a && (a += ""), 0 === a.length) return ".";
                            for (var b = a.charCodeAt(0), c = 47 === b, d = -1, e = !0, f = a.length - 1; f >= 1; --f) if (b = a.charCodeAt(f), 47 === b) {
                                if (!e) {
                                    d = f;
                                    break
                                }
                            } else e = !1;
                            return d === -1 ? c ? "/" : "." : c && 1 === d ? "/" : a.slice(0, d)
                        }, b.basename = function (a, b) {
                            var c = d(a);
                            return b && c.substr(-1 * b.length) === b && (c = c.substr(0, c.length - b.length)), c
                        }, b.extname = function (a) {
                            "string" != typeof a && (a += "");
                            for (var b = -1, c = 0, d = -1, e = !0, f = 0, g = a.length - 1; g >= 0; --g) {
                                var h = a.charCodeAt(g);
                                if (47 !== h) d === -1 && (e = !1, d = g + 1), 46 === h ? b === -1 ? b = g : 1 !== f && (f = 1) : b !== -1 && (f = -1); else if (!e) {
                                    c = g + 1;
                                    break
                                }
                            }
                            return b === -1 || d === -1 || 0 === f || 1 === f && b === d - 1 && b === c + 1 ? "" : a.slice(b, d)
                        };
                        var f = "b" === "ab".substr(-1) ? function (a, b, c) {
                            return a.substr(b, c)
                        } : function (a, b, c) {
                            return b < 0 && (b = a.length + b), a.substr(b, c)
                        }
                    }).call(b, c(8))
                }, function (a, b, c) {
                    b = a.exports = c(36), b.Stream = b, b.Readable = b, b.Writable = c(25), b.Duplex = c(9), b.Transform = c(40), b.PassThrough = c(63)
                }, function (a, b, c) {
                    "use strict";
                    (function (b, d, e) {
                        function f(a) {
                            var b = this;
                            this.next = null, this.entry = null, this.finish = function () {
                                B(b, a)
                            }
                        }

                        function g(a) {
                            return I.from(a)
                        }

                        function h(a) {
                            return I.isBuffer(a) || a instanceof J
                        }

                        function i() {
                        }

                        function j(a, b) {
                            D = D || c(9), a = a || {};
                            var d = b instanceof D;
                            this.objectMode = !!a.objectMode, d && (this.objectMode = this.objectMode || !!a.writableObjectMode);
                            var e = a.highWaterMark, g = a.writableHighWaterMark, h = this.objectMode ? 16 : 16384;
                            e || 0 === e ? this.highWaterMark = e : d && (g || 0 === g) ? this.highWaterMark = g : this.highWaterMark = h, this.highWaterMark = Math.floor(this.highWaterMark), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                            var i = a.decodeStrings === !1;
                            this.decodeStrings = !i, this.defaultEncoding = a.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function (a) {
                                s(b, a)
                            }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.bufferedRequestCount = 0, this.corkedRequestsFree = new f(this)
                        }

                        function k(a) {
                            return D = D || c(9), L.call(k, this) || this instanceof D ? (this._writableState = new j(a, this), this.writable = !0, a && ("function" == typeof a.write && (this._write = a.write), "function" == typeof a.writev && (this._writev = a.writev), "function" == typeof a.destroy && (this._destroy = a.destroy), "function" == typeof a["final"] && (this._final = a["final"])), void H.call(this)) : new k(a)
                        }

                        function l(a, b) {
                            var c = new Error("write after end");
                            a.emit("error", c), C.nextTick(b, c)
                        }

                        function m(a, b, c, d) {
                            var e = !0, f = !1;
                            return null === c ? f = new TypeError("May not write null values to stream") : "string" == typeof c || void 0 === c || b.objectMode || (f = new TypeError("Invalid non-string/buffer chunk")), f && (a.emit("error", f), C.nextTick(d, f), e = !1), e
                        }

                        function n(a, b, c) {
                            return a.objectMode || a.decodeStrings === !1 || "string" != typeof b || (b = I.from(b, c)), b
                        }

                        function o(a, b, c, d, e, f) {
                            if (!c) {
                                var g = n(b, d, e);
                                d !== g && (c = !0, e = "buffer", d = g)
                            }
                            var h = b.objectMode ? 1 : d.length;
                            b.length += h;
                            var i = b.length < b.highWaterMark;
                            if (i || (b.needDrain = !0), b.writing || b.corked) {
                                var j = b.lastBufferedRequest;
                                b.lastBufferedRequest = {
                                    chunk: d,
                                    encoding: e,
                                    isBuf: c,
                                    callback: f,
                                    next: null
                                }, j ? j.next = b.lastBufferedRequest : b.bufferedRequest = b.lastBufferedRequest, b.bufferedRequestCount += 1
                            } else p(a, b, !1, h, d, e, f);
                            return i
                        }

                        function p(a, b, c, d, e, f, g) {
                            b.writelen = d, b.writecb = g, b.writing = !0, b.sync = !0, c ? a._writev(e, b.onwrite) : a._write(e, f, b.onwrite), b.sync = !1
                        }

                        function q(a, b, c, d, e) {
                            --b.pendingcb, c ? (C.nextTick(e, d), C.nextTick(z, a, b), a._writableState.errorEmitted = !0, a.emit("error", d)) : (e(d), a._writableState.errorEmitted = !0, a.emit("error", d), z(a, b))
                        }

                        function r(a) {
                            a.writing = !1, a.writecb = null, a.length -= a.writelen, a.writelen = 0
                        }

                        function s(a, b) {
                            var c = a._writableState, d = c.sync, e = c.writecb;
                            if (r(c), b) q(a, c, d, b, e); else {
                                var f = w(c);
                                f || c.corked || c.bufferProcessing || !c.bufferedRequest || v(a, c), d ? E(t, a, c, f, e) : t(a, c, f, e)
                            }
                        }

                        function t(a, b, c, d) {
                            c || u(a, b), b.pendingcb--, d(), z(a, b)
                        }

                        function u(a, b) {
                            0 === b.length && b.needDrain && (b.needDrain = !1, a.emit("drain"))
                        }

                        function v(a, b) {
                            b.bufferProcessing = !0;
                            var c = b.bufferedRequest;
                            if (a._writev && c && c.next) {
                                var d = b.bufferedRequestCount, e = new Array(d), g = b.corkedRequestsFree;
                                g.entry = c;
                                for (var h = 0, i = !0; c;) e[h] = c, c.isBuf || (i = !1), c = c.next, h += 1;
                                e.allBuffers = i, p(a, b, !0, b.length, e, "", g.finish), b.pendingcb++, b.lastBufferedRequest = null, g.next ? (b.corkedRequestsFree = g.next, g.next = null) : b.corkedRequestsFree = new f(b), b.bufferedRequestCount = 0
                            } else {
                                for (; c;) {
                                    var j = c.chunk, k = c.encoding, l = c.callback, m = b.objectMode ? 1 : j.length;
                                    if (p(a, b, !1, m, j, k, l), c = c.next, b.bufferedRequestCount--, b.writing) break
                                }
                                null === c && (b.lastBufferedRequest = null)
                            }
                            b.bufferedRequest = c, b.bufferProcessing = !1
                        }

                        function w(a) {
                            return a.ending && 0 === a.length && null === a.bufferedRequest && !a.finished && !a.writing
                        }

                        function x(a, b) {
                            a._final(function (c) {
                                b.pendingcb--, c && a.emit("error", c), b.prefinished = !0, a.emit("prefinish"), z(a, b)
                            })
                        }

                        function y(a, b) {
                            b.prefinished || b.finalCalled || ("function" == typeof a._final ? (b.pendingcb++, b.finalCalled = !0, C.nextTick(x, a, b)) : (b.prefinished = !0, a.emit("prefinish")))
                        }

                        function z(a, b) {
                            var c = w(b);
                            return c && (y(a, b), 0 === b.pendingcb && (b.finished = !0, a.emit("finish"))), c
                        }

                        function A(a, b, c) {
                            b.ending = !0, z(a, b), c && (b.finished ? C.nextTick(c) : a.once("finish", c)), b.ended = !0, a.writable = !1
                        }

                        function B(a, b, c) {
                            var d = a.entry;
                            for (a.entry = null; d;) {
                                var e = d.callback;
                                b.pendingcb--, e(c), d = d.next
                            }
                            b.corkedRequestsFree ? b.corkedRequestsFree.next = a : b.corkedRequestsFree = a
                        }

                        var C = c(17);
                        a.exports = k;
                        var D,
                            E = !b.browser && ["v0.10", "v0.9."].indexOf(b.version.slice(0, 5)) > -1 ? d : C.nextTick;
                        k.WritableState = j;
                        var F = Object.create(c(15));
                        F.inherits = c(11);
                        var G = {deprecate: c(62)}, H = c(37), I = c(18).Buffer, J = e.Uint8Array || function () {
                        }, K = c(38);
                        F.inherits(k, H), j.prototype.getBuffer = function () {
                            for (var a = this.bufferedRequest, b = []; a;) b.push(a), a = a.next;
                            return b
                        }, function () {
                            try {
                                Object.defineProperty(j.prototype, "buffer", {
                                    get: G.deprecate(function () {
                                        return this.getBuffer()
                                    }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                                })
                            } catch (a) {
                            }
                        }();
                        var L;
                        "function" == typeof Symbol && Symbol.hasInstance && "function" == typeof Function.prototype[Symbol.hasInstance] ? (L = Function.prototype[Symbol.hasInstance], Object.defineProperty(k, Symbol.hasInstance, {
                            value: function (a) {
                                return !!L.call(this, a) || this === k && (a && a._writableState instanceof j)
                            }
                        })) : L = function (a) {
                            return a instanceof this
                        }, k.prototype.pipe = function () {
                            this.emit("error", new Error("Cannot pipe, not readable"))
                        }, k.prototype.write = function (a, b, c) {
                            var d = this._writableState, e = !1, f = !d.objectMode && h(a);
                            return f && !I.isBuffer(a) && (a = g(a)), "function" == typeof b && (c = b, b = null), f ? b = "buffer" : b || (b = d.defaultEncoding), "function" != typeof c && (c = i), d.ended ? l(this, c) : (f || m(this, d, a, c)) && (d.pendingcb++, e = o(this, d, f, a, b, c)), e
                        }, k.prototype.cork = function () {
                            var a = this._writableState;
                            a.corked++
                        }, k.prototype.uncork = function () {
                            var a = this._writableState;
                            a.corked && (a.corked--, a.writing || a.corked || a.finished || a.bufferProcessing || !a.bufferedRequest || v(this, a))
                        }, k.prototype.setDefaultEncoding = function (a) {
                            if ("string" == typeof a && (a = a.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((a + "").toLowerCase()) > -1)) throw new TypeError("Unknown encoding: " + a);
                            return this._writableState.defaultEncoding = a, this
                        }, Object.defineProperty(k.prototype, "writableHighWaterMark", {
                            enumerable: !1,
                            get: function () {
                                return this._writableState.highWaterMark
                            }
                        }), k.prototype._write = function (a, b, c) {
                            c(new Error("_write() is not implemented"))
                        }, k.prototype._writev = null, k.prototype.end = function (a, b, c) {
                            var d = this._writableState;
                            "function" == typeof a ? (c = a, a = null, b = null) : "function" == typeof b && (c = b, b = null), null !== a && void 0 !== a && this.write(a, b), d.corked && (d.corked = 1, this.uncork()), d.ending || d.finished || A(this, d, c)
                        }, Object.defineProperty(k.prototype, "destroyed", {
                            get: function () {
                                return void 0 !== this._writableState && this._writableState.destroyed
                            }, set: function (a) {
                                this._writableState && (this._writableState.destroyed = a)
                            }
                        }), k.prototype.destroy = K.destroy, k.prototype._undestroy = K.undestroy, k.prototype._destroy = function (a, b) {
                            this.end(), b(a)
                        }
                    }).call(b, c(8), c(60).setImmediate, c(7))
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function e() {
                        this.logOpen = 1, this.logLevel = "debug", this.logSize = 512e3, this.logType = "mem", this.logSupportZip = 1, this.filterInclude = "", this.filterExclude = "", this.filterIgnore = 0
                    }

                    var f = c(28), g = c(1), h = "uploadlog.video.qq.com", i = function () {
                        function a(b) {
                            d(this, a);
                            var f = c(85);
                            this.config = b ? f.deepcopy(b) : new e, this.memBuf = null, this.memPos = 0, this.memBufLen = 0, this.errorCode = 0, this.supportConsole = !1, this.supportMem = !1, this.supportPostLog = !1, this.threadobj = void 0, this.writefull = !1, this.filterListIn = void 0, this.filterListEx = void 0, this.fiterIgnore = 0, this.postCount = 0, this.hasDatErrorBefore = !1, this.videoTotalDuration = 0, this.__setConfig(this.config)
                        }

                        return a.prototype.destroy = function () {
                            this.memBuf = null, this.memBufLen = 0, this.memPos = 0
                        }, a.prototype.debug = function () {
                            var a = "debug";
                            if (this.__canLog(a)) {
                                var b = this.__getLogStr(arguments, a);
                                this.__write(b, a)
                            }
                        }, a.prototype.log = function () {
                            var a = "log";
                            if (this.__canLog(a)) {
                                var b = this.__getLogStr(arguments, a);
                                this.__write(b, a)
                            }
                        }, a.prototype.info = function () {
                            var a = "info";
                            if (this.__canLog(a)) {
                                var b = this.__getLogStr(arguments, a);
                                this.__write(b, a)
                            }
                        }, a.prototype.warn = function () {
                            var a = "warn";
                            if (this.__canLog(a)) {
                                var b = this.__getLogStr(arguments, a);
                                this.__write(b, a)
                            }
                        }, a.prototype.error = function () {
                            var a = "error";
                            if (this.__canLog(a)) {
                                var b = this.__getLogStr(arguments, a);
                                this.__write(b, a)
                            }
                        }, a.prototype.recvlog = function (a, b) {
                            this.__canLog(b) && this.__write(a, b)
                        }, a.prototype.setdata = function (a, b) {
                            if ("errorcode" == a) this.errorCode = b; else if ("threadobj" == a) this.threadobj = b; else if ("supportPostLog" == a) this.supportPostLog = b; else if ("supportMem" == a) this.supportMem = b; else if ("supportConsole" == a) this.supportConsole = b; else if ("total_duration" == a) this.videoTotalDuration = b; else if ("updateconfig" == a) {
                                this.config.logOpen = void 0 === b.logOpen ? this.config.logOpen : b.logOpen, this.config.logType = void 0 === b.logType ? this.config.logType : b.logType, this.config.logSupportZip = void 0 === b.logSupportZip ? this.config.logSupportZip : b.logSupportZip;
                                var c = void 0 === b.logSize ? this.config.logSize : b.logSize;
                                this.__reAllocMem(c), this.config.filterInclude = b.filterInclude, this.config.filterExclude = b.filterExclude, this.config.filterIgnore = b.filterIgnore, this.__setConfig(this.config)
                            }
                        }, a.prototype.getdata = function (a) {
                            if ("memdata" == a) return this.__getMemBuf()
                        }, a.prototype.__forcePrintLog = function (a) {
                            var b = !1;
                            this.videoTotalDuration < 1e3 && (b = !0);
                            var c = "h5_ver:" + g.a.P2PVersion + "\n";
                            c += "errorCode:" + a + "\n", c += "guid:" + g.a.guid + "\n", c += "postcount:" + this.postCount + "\n", c += "hasDataErrorBefore:" + this.hasDatErrorBefore + "\n", c += "shortVideo:" + b + " duration:" + this.videoTotalDuration + "\n";
                            var d = "";
                            navigator && (d = navigator.appVersion), c += "sysVer:" + d + "\n", 1e3 == a && (this.hasDatErrorBefore = !0), this.__writeMem(c)
                        }, a.prototype.postdata = function (a) {
                            this.__forcePrintLog(a);
                            var b = this.__getUrl(), c = this.__getMemBuf(), d = !0, e = new f.a;
                            e.post(b, c, d, this.config.logSupportZip), this.postCount++, this.memPos = 0, this.writefull = !1
                        }, a.prototype.__getUrl = function () {
                            return this.__format("//%s/cgi-bin/logreport?platform=%d&qq=%s&guid=%s&error=buffering&errcode=%d&deviceid=%s&app_version=%s", h, g.a.platform, g.a.qq, g.a.guid, this.errorCode, g.a.platform, g.a.playerVer)
                        }, a.prototype.__getMemBuf = function () {
                            return this.writefull ? this.memBuf : this.memBuf.slice ? this.memBuf.slice(0, this.memPos) : new Uint8Array(Array.prototype.slice.call(this.memBuf, 0, this.memPos))
                        }, a.prototype.__canLog = function (a) {
                            var b = this.config.logOpen, c = this.config.logLevel;
                            if (void 0 === c || null === c || 0 === b) return !1;
                            if ("debug" === c) {
                                if ("debug" === a || "log" === a || "info" === a || "warn" === a || "error" === a) return !0
                            } else if ("log" === c) {
                                if ("log" === a || "info" === a || "warn" === a || "error" === a) return !0
                            } else if ("info" === c) {
                                if ("info" === a || "warn" === a || "error" === a) return !0
                            } else if ("warn" === c) {
                                if ("warn" === a || "error" === a) return !0
                            } else if ("error" === c && "error" === a) return !0;
                            return !1
                        }, a.prototype.__setConfig = function (a) {
                            var b = a.logType;
                            if (void 0 !== b && null !== b) {
                                this.supportConsole = !1, this.supportMem = !1, this.supportPostLog = !1;
                                for (var c = b.split("|"), d = 0; d < c.length; d++) "console" == c[d] ? this.supportConsole = !0 : "mem" == c[d] ? this.supportMem = !0 : "postlog" == c[d] && (this.supportPostLog = !0);
                                var e = a.filterInclude;
                                if (void 0 !== e && null !== e) {
                                    this.filterListIn = e.split("|");
                                    var f = a.filterExclude;
                                    void 0 !== f && null !== f && (this.filterListEx = f.split("|"), this.fiterIgnore = a.filterIgnore)
                                }
                            }
                        }, a.prototype.__strCanLog = function (a) {
                            if (0 != this.fiterIgnore) {
                                if (this.filterListIn.length >= 1 && "" != this.filterListIn[0]) for (var b = 0; b < this.filterListIn.length; b++) {
                                    for (var c = this.filterListIn[b].split("&"), d = !0, e = 0; e < c.length; e++) if (a.indexOf(c[e]) == -1) {
                                        d = !1;
                                        break
                                    }
                                    if (d) return !0
                                }
                                if (this.filterListEx.length >= 1 && "" != this.filterListEx[0]) for (var b = 0; b < this.filterListEx.length; b++) {
                                    for (var c = this.filterListEx[b].split("&"), d = !0, e = 0; e < c.length; e++) if (a.indexOf(c[e]) == -1) {
                                        d = !1;
                                        break
                                    }
                                    if (d) return !1
                                }
                                if (1 == this.fiterIgnore) return !0;
                                if (2 == this.fiterIgnore) return !1
                            }
                            return !0
                        }, a.prototype.__write = function (a, b) {
                            this.supportConsole && this.__strCanLog(a) && this.__writeConsole(a, b), this.supportMem && this.__strCanLog(a) && this.__writeMem(a), this.supportPostLog && this.__postLog(a, b)
                        }, a.prototype.__postLog = function (a, b) {
                            if (this.threadobj && this.threadobj.postMessage) {
                                var c = {logdata: a, type: b};
                                this.threadobj.postMessage({event: "log", data: c})
                            }
                        }, a.prototype.__reAllocMem = function (a) {
                            if (0 == a) this.memBufLen = a, this.config.logSize = a, this.memPos = a, this.memBuf = null; else if (a != this.config.logSize) if (a > this.config.logSize) {
                                var b = c(12), d = new b.Buffer(a);
                                this.memBuf && d.set(this.memBuf), this.memBuf = d, this.config.logSize = a, this.memBufLen = a
                            } else a < this.config.logSize && (this.memBuf.slice ? this.memBuf = this.memBuf.slice(0, a) : this.memBuf = new Uint8Array(Array.prototype.slice.call(this.memBuf, 0, a)), this.config.logSize = a, this.memBufLen = a, this.memPos > a && (this.memPos = a))
                        }, a.prototype.__writeMem = function (a) {
                            if ((null === this.memBuf || void 0 == this.memBuf) && this.config.logSize > 0) {
                                this.memPos = 0, this.memBufLen = this.config.logSize;
                                var b = c(12);
                                this.memBuf = new b.Buffer(this.config.logSize)
                            }
                            var d = a.length;
                            d >= this.memBufLen || (this.memPos + d > this.memBufLen - 1 && (this.writefull = !0, this.memPos = 0), this.memBuf.write(a, this.memPos), this.memPos += d)
                        }, a.prototype.__writeConsole = function (a, b) {
                            "debug" == b ? window.console && window.console.debug(a) : "log" == b ? window.console && window.console.log(a) : "info" == b ? window.console && window.console.info(a) : "warn" == b ? window.console && window.console.warn(a) : "error" == b && window.console && window.console.error(a)
                        }, a.prototype.__getLogStr = function (a, b) {
                            var c = "";
                            return c += this.__getDateStr(), c += "-", c += this.__getTypeStr(b), c += " ", c += this.__formatArgs(a), c += "\n"
                        }, a.prototype.__getTypeStr = function (a) {
                            return "[" + a + "]"
                        }, a.prototype.__getDateStr = function () {
                            var a = new Date;
                            return this.__format("[%d-%d-%d %d:%d:%d.%d]", a.getFullYear(), a.getMonth() + 1, a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds())
                        }, a.prototype.__format = function () {
                            return this.__formatArgs(arguments)
                        }, a.prototype.__formatArgs = function (a) {
                            for (var b = /%[sdj%]/g, c = 1, d = a.length, e = a[0], f = String(e).replace(b, function (b) {
                                if ("%%" === b) return "%";
                                if (c >= d) return b;
                                switch (b) {
                                    case"%s":
                                        return String(a[c++]);
                                    case"%d":
                                        return Number(a[c++]);
                                    case"%j":
                                        try {
                                            return JSON.stringify(a[c++])
                                        } catch (e) {
                                            return "[Circular]"
                                        }
                                    default:
                                        return b
                                }
                            }), g = a[c]; c < d; g = a[++c]) f += " " + g;
                            return f
                        }, a.prototype.getMemBuf = function () {
                            return this.__getMemBuf()
                        }, a
                    }();
                    b.a = i
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function e(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function f(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function g(a) {
                        var b = a.byteLength, c = b && new DataView(a).getUint8(b - 1);
                        return c ? a.slice(0, b - c) : a
                    }

                    function h(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    var i = function () {
                        function a(b, c) {
                            d(this, a), this.subtle = b, this.aesIV = c
                        }

                        return a.prototype.decrypt = function (a, b) {
                            return this.subtle.decrypt({name: "AES-CBC", iv: this.aesIV}, b, a)
                        }, a
                    }(), j = i, k = function () {
                        function a(b, c) {
                            e(this, a), this.subtle = b, this.key = c
                        }

                        return a.prototype.expandKey = function () {
                            return this.subtle.importKey("raw", this.key, {name: "AES-CBC"}, !1, ["encrypt", "decrypt"])
                        }, a
                    }(), l = k, m = function () {
                        function a() {
                            f(this, a), this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)], this.sBox = new Uint32Array(256), this.invSBox = new Uint32Array(256), this.key = new Uint32Array(0), this.initTable()
                        }

                        return a.prototype.uint8ArrayToUint32Array_ = function (a) {
                            for (var b = new DataView(a), c = new Uint32Array(4), d = 0; d < 4; d++) c[d] = b.getUint32(4 * d);
                            return c
                        }, a.prototype.initTable = function () {
                            var a = this.sBox, b = this.invSBox, c = this.subMix, d = c[0], e = c[1], f = c[2],
                                g = c[3], h = this.invSubMix, i = h[0], j = h[1], k = h[2], l = h[3],
                                m = new Uint32Array(256), n = 0, o = 0, p = 0;
                            for (p = 0; p < 256; p++) p < 128 ? m[p] = p << 1 : m[p] = p << 1 ^ 283;
                            for (p = 0; p < 256; p++) {
                                var q = o ^ o << 1 ^ o << 2 ^ o << 3 ^ o << 4;
                                q = q >>> 8 ^ 255 & q ^ 99, a[n] = q, b[q] = n;
                                var r = m[n], s = m[r], t = m[s], u = 257 * m[q] ^ 16843008 * q;
                                d[n] = u << 24 | u >>> 8, e[n] = u << 16 | u >>> 16, f[n] = u << 8 | u >>> 24, g[n] = u, u = 16843009 * t ^ 65537 * s ^ 257 * r ^ 16843008 * n, i[q] = u << 24 | u >>> 8, j[q] = u << 16 | u >>> 16, k[q] = u << 8 | u >>> 24, l[q] = u, n ? (n = r ^ m[m[m[t ^ r]]], o ^= m[m[o]]) : n = o = 1
                            }
                        }, a.prototype.expandKey = function (a) {
                            for (var b = this.uint8ArrayToUint32Array_(a), c = !0, d = 0; d < b.length && c;) c = b[d] === this.key[d], d++;
                            if (!c) {
                                this.key = b;
                                var e = this.keySize = b.length;
                                if (4 !== e && 6 !== e && 8 !== e) throw new Error("Invalid aes key size=" + e);
                                var f = this.ksRows = 4 * (e + 6 + 1), g = void 0, h = void 0,
                                    i = this.keySchedule = new Uint32Array(f),
                                    j = this.invKeySchedule = new Uint32Array(f), k = this.sBox, l = this.rcon,
                                    m = this.invSubMix, n = m[0], o = m[1], p = m[2], q = m[3], r = void 0, s = void 0;
                                for (g = 0; g < f; g++) g < e ? r = i[g] = b[g] : (s = r, g % e === 0 ? (s = s << 8 | s >>> 24, s = k[s >>> 24] << 24 | k[s >>> 16 & 255] << 16 | k[s >>> 8 & 255] << 8 | k[255 & s], s ^= l[g / e | 0] << 24) : e > 6 && g % e === 4 && (s = k[s >>> 24] << 24 | k[s >>> 16 & 255] << 16 | k[s >>> 8 & 255] << 8 | k[255 & s]), i[g] = r = (i[g - e] ^ s) >>> 0);
                                for (h = 0; h < f; h++) g = f - h, s = 3 & h ? i[g] : i[g - 4], h < 4 || g <= 4 ? j[h] = s : j[h] = n[k[s >>> 24]] ^ o[k[s >>> 16 & 255]] ^ p[k[s >>> 8 & 255]] ^ q[k[255 & s]], j[h] = j[h] >>> 0
                            }
                        }, a.prototype.networkToHostOrderSwap = function (a) {
                            return a << 24 | (65280 & a) << 8 | (16711680 & a) >> 8 | a >>> 24
                        }, a.prototype.decrypt = function (a, b, c, d) {
                            for (var e = this.keySize + 6, f = this.invKeySchedule, h = this.invSBox, i = this.invSubMix, j = i[0], k = i[1], l = i[2], m = i[3], n = this.uint8ArrayToUint32Array_(c), o = n[0], p = n[1], q = n[2], r = n[3], s = new Int32Array(a), t = new Int32Array(s.length), u = void 0, v = void 0, w = void 0, x = void 0, y = void 0, z = void 0, A = void 0, B = void 0, C = void 0, D = void 0, E = void 0, F = void 0, G = void 0, H = void 0, I = this.networkToHostOrderSwap; b < s.length;) {
                                for (C = I(s[b]), D = I(s[b + 1]), E = I(s[b + 2]), F = I(s[b + 3]), y = C ^ f[0], z = F ^ f[1], A = E ^ f[2], B = D ^ f[3], G = 4, H = 1; H < e; H++) u = j[y >>> 24] ^ k[z >> 16 & 255] ^ l[A >> 8 & 255] ^ m[255 & B] ^ f[G], v = j[z >>> 24] ^ k[A >> 16 & 255] ^ l[B >> 8 & 255] ^ m[255 & y] ^ f[G + 1], w = j[A >>> 24] ^ k[B >> 16 & 255] ^ l[y >> 8 & 255] ^ m[255 & z] ^ f[G + 2], x = j[B >>> 24] ^ k[y >> 16 & 255] ^ l[z >> 8 & 255] ^ m[255 & A] ^ f[G + 3], y = u, z = v, A = w, B = x, G += 4;
                                u = h[y >>> 24] << 24 ^ h[z >> 16 & 255] << 16 ^ h[A >> 8 & 255] << 8 ^ h[255 & B] ^ f[G], v = h[z >>> 24] << 24 ^ h[A >> 16 & 255] << 16 ^ h[B >> 8 & 255] << 8 ^ h[255 & y] ^ f[G + 1], w = h[A >>> 24] << 24 ^ h[B >> 16 & 255] << 16 ^ h[y >> 8 & 255] << 8 ^ h[255 & z] ^ f[G + 2], x = h[B >>> 24] << 24 ^ h[y >> 16 & 255] << 16 ^ h[z >> 8 & 255] << 8 ^ h[255 & A] ^ f[G + 3], G += 3, t[b] = I(u ^ o), t[b + 1] = I(x ^ p), t[b + 2] = I(w ^ q), t[b + 3] = I(v ^ r), o = C, p = D, q = E, r = F, b += 4
                            }
                            return d ? g(t.buffer) : t.buffer
                        }, a.prototype.destroy = function () {
                            this.key = void 0, this.keySize = void 0, this.ksRows = void 0, this.sBox = void 0, this.invSBox = void 0, this.subMix = void 0, this.invSubMix = void 0, this.keySchedule = void 0, this.invKeySchedule = void 0, this.rcon = void 0
                        }, a
                    }(), n = m, o = c(2), p = c(0), q = function () {
                        function a(b, c) {
                            var d = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                                e = d.removePKCS7Padding, f = void 0 === e || e;
                            if (h(this, a), this.logEnabled = !0, this.observer = b, this.config = c, this.removePKCS7Padding = f, f) try {
                                var g = crypto || self.crypto;
                                this.subtle = g.subtle || g.webkitSubtle
                            } catch (i) {
                            }
                            this.disableWebCrypto = !this.subtle
                        }

                        return a.prototype.isSync = function () {
                            return this.disableWebCrypto && this.config.enableSoftwareAES
                        }, a.prototype.decrypt = function (a, b, c, d) {
                            var e = this;
                            if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                                this.logEnabled && (p.b.log("JS AES decrypt"), this.logEnabled = !1);
                                var f = this.decryptor;
                                f || (this.decryptor = f = new n), f.expandKey(b), d(f.decrypt(a, 0, c, this.removePKCS7Padding))
                            } else {
                                this.logEnabled && (p.b.log("WebCrypto AES decrypt"), this.logEnabled = !1);
                                var g = this.subtle;
                                this.key !== b && (this.key = b, this.fastAesKey = new l(g, b)), this.fastAesKey.expandKey().then(function (f) {
                                    var h = new j(g, c);
                                    h.decrypt(a, f)["catch"](function (f) {
                                        e.onWebCryptoError(f, a, b, c, d)
                                    }).then(function (a) {
                                        d(a)
                                    })
                                })["catch"](function (f) {
                                    e.onWebCryptoError(f, a, b, c, d)
                                })
                            }
                        }, a.prototype.onWebCryptoError = function (a, b, c, d, e) {
                            this.config.enableSoftwareAES ? (p.b.log("WebCrypto Error, disable WebCrypto API"), this.disableWebCrypto = !0, this.logEnabled = !0, this.decrypt(b, c, d, e)) : (p.b.error(o.c.ENCRYPT_HANDLE_ERROR, "decrypting error : " + a.message), this.observer.trigger(Event.ERROR, {
                                type: o.b.MEDIA_ERROR,
                                details: o.a.FRAG_DECRYPT_ERROR,
                                fatal: !0,
                                reason: a.message
                            }))
                        }, a.prototype.destroy = function () {
                            var a = this.decryptor;
                            a && (a.destroy(), this.decryptor = void 0)
                        }, a
                    }();
                    b.a = q
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    var e = "//vm.gtimg.cn/tencentvideo/txp/js/jquery.form.min.js", f = "txp-p2p-report-form",
                        g = "txp-p2p-report-input", h = function () {
                            function a() {
                                d(this, a), this.$ = this.__find$();
                            }

                            return a.prototype.post = function (a, b, c, d) {
                                var f = "POST";
                                void 0 !== c && null !== c || (c = !1);
                                var g = this;
                                this.$().ajaxForm ? g.__doSend(a, b, f, c, d) : this.__loadScript({
                                    url: e,
                                    onsuccess: function () {
                                        g.__doSend(a, b, f, c, d)
                                    }
                                })
                            }, a.prototype.get = function (a, b) {
                                var c = this.__getUrl(a, b), d = new Image;
                                c = encodeURI(c), d.src = c
                            }, a.prototype.__doSendDirect = function (a, b, c, d) {
                                var e = f + "_" + c.toUpperCase();
                                if (null == document.getElementById(e)) {
                                    var h = '<form id="%s" encoding="application/x-www-form-urlencoded" onclick="return false;">  ';
                                    h += "</form>", h = this.__formatArgs(h, e), $(document.body).append(h)
                                }
                                var i = $("#" + e), j = "application/x-www-form-urlencoded";
                                d && (j = "multipart/form-data"), i.attr("enctype", j);
                                var k = a;
                                i.attr("action", k), i.attr("method", c);
                                var l = document.getElementById(e);
                                if (l && (l.innerText = ""), "POST" == c.toUpperCase()) {
                                    var m = $('<input type="hidden" id="' + g + '" name="content"  value="" />');
                                    i.append(m);
                                    var n = $("#" + g);
                                    n.val(b)
                                } else {
                                    var o = this.__getInputText(b, g);
                                    i.append(o)
                                }
                                var p = !0;
                                d && (p = !1), i.ajaxForm({type: c, iframe: p, resetForm: !0, clearForm: !0}), i.submit()
                            }, a.prototype.__getInputText = function (a) {
                                var b = "";
                                if (a instanceof Object) for (var c in a) {
                                    var d = "";
                                    d = "number" == typeof a[c] ? this.__formatArgs('<input type="hidden" name="%s"  value=%d />', c, a[c]) : this.__formatArgs('<input type="hidden" name="%s"  value="%s" />', c, a[c]), b += d
                                }
                                return b
                            }, a.prototype.__getUrl = function (a, b) {
                                var c = a.indexOf("?") != -1, d = "";
                                if (b instanceof Object) for (var e in b) c ? d += "&" : (d += "?", c = !0), d += e.toString(), d += "=", void 0 !== b[e] && (d += b[e]); else "string" == typeof b && b.length >= 1 && (d = "&" == b.charAt(0) ? c ? b : "?" + b.substr(1, b.length - 1) : "?" == b.charAt(0) ? c ? "&" + b.substr(1, b.length - 1) : b : c ? "&" + b : "?" + b);
                                return a + d
                            }, a.prototype.__doSend = function (a, b, d, e, f) {
                                var g = this;
                                if (1 == f) {
                                    var h = c(49), i = new h;
                                    i.addFile("log.txt", b, "tx h5 log");
                                    var j = i.toBuffer(), k = j.toString("base64");
                                    g.__doSendDirect(a, k, d, e)
                                } else g.__doSendDirect(a, b, d, e)
                            }, a.prototype.__find$ = function () {
                                var a;
                                return a = "function" == typeof window.Zepto ? window.Zepto : "function" == typeof window.jQuery ? window.jQuery : "function" == typeof window.jq ? window.jq : null
                            }, a.prototype.__getOriginURL = function (a) {
                                return "string" != typeof a ? a : a.replace(/\?.+/g, "")
                            }, a.prototype.__loadScript = function (a) {
                                a = a || {}, a.onsuccess = a.onsuccess || function () {
                                };
                                var b = document.createElement("script"), c = document.getElementsByTagName("head")[0],
                                    d = /^(?:loaded|complete|undefined)$/;
                                if (a.url) {
                                    var e = this.__getOriginURL(a.url), f = a.onsuccess;
                                    b.async = "async", b.src = e, b.charset = "utf-8", b.onload = b.onerror = b.onreadystatechange = function () {
                                        d.test(b.readyState) && (b.onload = b.onerror = b.onreadystatechange = null, b = null, f(!0))
                                    }, b.onerror = function () {
                                        b.onload = b.onerror = b.onreadystatechange = null, b = null, f(!1)
                                    }, c.appendChild(b)
                                }
                            }, a.prototype.__formatArgs = function () {
                                var a = arguments;
                                if (0 == a.length) return "";
                                for (var b = /%[sdj%]/g, c = 1, d = a.length, e = a[0], f = String(e).replace(b, function (b) {
                                    if ("%%" === b) return "%";
                                    if (c >= d) return b;
                                    switch (b) {
                                        case"%s":
                                            return String(a[c++]);
                                        case"%d":
                                            return Number(a[c++]);
                                        case"%j":
                                            try {
                                                return JSON.stringify(a[c++])
                                            } catch (e) {
                                                return "[Circular]"
                                            }
                                        default:
                                            return b
                                    }
                                }), g = a[c]; c < d; g = a[++c]) f += " " + g;
                                return f
                            }, a.prototype.destroy = function () {
                            }, a
                        }();
                    b.a = h
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        var b = a.length;
                        if (b % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
                        var c = a.indexOf("=");
                        c === -1 && (c = b);
                        var d = c === b ? 0 : 4 - c % 4;
                        return [c, d]
                    }

                    function e(a) {
                        var b = d(a), c = b[0], e = b[1];
                        return 3 * (c + e) / 4 - e
                    }

                    function f(a, b, c) {
                        return 3 * (b + c) / 4 - c
                    }

                    function g(a) {
                        var b, c, e = d(a), g = e[0], h = e[1], i = new m(f(a, g, h)), j = 0, k = h > 0 ? g - 4 : g;
                        for (c = 0; c < k; c += 4) b = l[a.charCodeAt(c)] << 18 | l[a.charCodeAt(c + 1)] << 12 | l[a.charCodeAt(c + 2)] << 6 | l[a.charCodeAt(c + 3)], i[j++] = b >> 16 & 255, i[j++] = b >> 8 & 255, i[j++] = 255 & b;
                        return 2 === h && (b = l[a.charCodeAt(c)] << 2 | l[a.charCodeAt(c + 1)] >> 4, i[j++] = 255 & b), 1 === h && (b = l[a.charCodeAt(c)] << 10 | l[a.charCodeAt(c + 1)] << 4 | l[a.charCodeAt(c + 2)] >> 2, i[j++] = b >> 8 & 255, i[j++] = 255 & b), i
                    }

                    function h(a) {
                        return k[a >> 18 & 63] + k[a >> 12 & 63] + k[a >> 6 & 63] + k[63 & a]
                    }

                    function i(a, b, c) {
                        for (var d, e = [], f = b; f < c; f += 3) d = (a[f] << 16 & 16711680) + (a[f + 1] << 8 & 65280) + (255 & a[f + 2]), e.push(h(d));
                        return e.join("")
                    }

                    function j(a) {
                        for (var b, c = a.length, d = c % 3, e = [], f = 16383, g = 0, h = c - d; g < h; g += f) e.push(i(a, g, g + f > h ? h : g + f));
                        return 1 === d ? (b = a[c - 1], e.push(k[b >> 2] + k[b << 4 & 63] + "==")) : 2 === d && (b = (a[c - 2] << 8) + a[c - 1], e.push(k[b >> 10] + k[b >> 4 & 63] + k[b << 2 & 63] + "=")), e.join("")
                    }

                    b.byteLength = e, b.toByteArray = g, b.fromByteArray = j;
                    for (var k = [], l = [], m = "undefined" != typeof Uint8Array ? Uint8Array : Array, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0, p = n.length; o < p; ++o) k[o] = n[o], l[n.charCodeAt(o)] = o;
                    l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63
                }, function (a, b) {
                    b.read = function (a, b, c, d, e) {
                        var f, g, h = 8 * e - d - 1, i = (1 << h) - 1, j = i >> 1, k = -7, l = c ? e - 1 : 0,
                            m = c ? -1 : 1, n = a[b + l];
                        for (l += m, f = n & (1 << -k) - 1, n >>= -k, k += h; k > 0; f = 256 * f + a[b + l], l += m, k -= 8) ;
                        for (g = f & (1 << -k) - 1, f >>= -k, k += d; k > 0; g = 256 * g + a[b + l], l += m, k -= 8) ;
                        if (0 === f) f = 1 - j; else {
                            if (f === i) return g ? NaN : (n ? -1 : 1) * (1 / 0);
                            g += Math.pow(2, d), f -= j
                        }
                        return (n ? -1 : 1) * g * Math.pow(2, f - d)
                    }, b.write = function (a, b, c, d, e, f) {
                        var g, h, i, j = 8 * f - e - 1, k = (1 << j) - 1, l = k >> 1,
                            m = 23 === e ? Math.pow(2, -24) - Math.pow(2, -77) : 0, n = d ? 0 : f - 1, o = d ? 1 : -1,
                            p = b < 0 || 0 === b && 1 / b < 0 ? 1 : 0;
                        for (b = Math.abs(b), isNaN(b) || b === 1 / 0 ? (h = isNaN(b) ? 1 : 0, g = k) : (g = Math.floor(Math.log(b) / Math.LN2), b * (i = Math.pow(2, -g)) < 1 && (g--, i *= 2), b += g + l >= 1 ? m / i : m * Math.pow(2, 1 - l), b * i >= 2 && (g++, i /= 2), g + l >= k ? (h = 0, g = k) : g + l >= 1 ? (h = (b * i - 1) * Math.pow(2, e), g += l) : (h = b * Math.pow(2, l - 1) * Math.pow(2, e), g = 0)); e >= 8; a[c + n] = 255 & h, n += o, h /= 256, e -= 8) ;
                        for (g = g << e | h, j += e; j > 0; a[c + n] = 255 & g, n += o, g /= 256, j -= 8) ;
                        a[c + n - o] |= 128 * p
                    }
                }, function (a, b, c) {
                    (function (b) {
                        var d = c(14), e = c(34), f = d.Constants, g = c(54);
                        a.exports = function (a) {
                            function c() {
                                return a && b.isBuffer(a) ? (n.loadDataHeaderFromBinary(a), a.slice(n.realDataOffset, n.realDataOffset + n.compressedSize)) : new b(0)
                            }

                            function h(a) {
                                return !(n.flags & !1 && d.crc32(a) != n.crc)
                            }

                            function i(a, e, f) {
                                if ("undefined" == typeof e && "string" == typeof a && (f = a, a = void 0), q) return a && e && e(new b(0), d.Errors.DIRECTORY_CONTENT_ERROR), new b(0);
                                var i = c();
                                if (0 == i.length) return a && e && e(i, d.Errors.NO_DATA), i;
                                var j = new b(n.size);
                                switch (j.fill(0), n.method) {
                                    case d.Constants.STORED:
                                        return i.copy(j), h(j) ? (a && e && e(j), j) : (a && e && e(j, d.Errors.BAD_CRC), d.Errors.BAD_CRC);
                                    case d.Constants.DEFLATED:
                                        var k = new g.Inflater(i);
                                        if (!a) return k.inflate(j), !h(j), j;
                                        k.inflateAsync(function (a) {
                                            a.copy(j, 0), h(j) ? e && e(j) : e && e(j, d.Errors.BAD_CRC)
                                        });
                                        break;
                                    default:
                                        return a && e && e(new b(0), d.Errors.UNKNOWN_METHOD), d.Errors.UNKNOWN_METHOD
                                }
                            }

                            function j(e, f) {
                                if ((!r || !r.length) && b.isBuffer(a)) return e && f && f(c()), c();
                                if (r.length && !q) {
                                    var h;
                                    switch (n.method) {
                                        case d.Constants.STORED:
                                            return n.compressedSize = n.size, h = new b(r.length), r.copy(h), e && f && f(h), h;
                                        default:
                                        case d.Constants.DEFLATED:
                                            var i = new g.Deflater(r);
                                            if (!e) {
                                                var j = i.deflate();
                                                return n.compressedSize = j.length, j
                                            }
                                            i.deflateAsync(function (a) {
                                                h = new b(a.length), n.compressedSize = a.length, a.copy(h), f && f(h)
                                            }), i = null
                                    }
                                } else {
                                    if (!e || !f) return new b(0);
                                    f(new b(0))
                                }
                            }

                            function k(a, b) {
                                return (a.readUInt32LE(b + 4) << 4) + a.readUInt32LE(b)
                            }

                            function l(a) {
                                for (var b, c, d, e = 0; e < a.length;) b = a.readUInt16LE(e), e += 2, c = a.readUInt16LE(e), e += 2, d = a.slice(e, e + c), e += c, f.ID_ZIP64 === b && m(d)
                            }

                            function m(a) {
                                var b, c, d, e;
                                a.length >= f.EF_ZIP64_SCOMP && (b = k(a, f.EF_ZIP64_SUNCOMP), n.size === f.EF_ZIP64_OR_32 && (n.size = b)), a.length >= f.EF_ZIP64_RHO && (c = k(a, f.EF_ZIP64_SCOMP), n.compressedSize === f.EF_ZIP64_OR_32 && (n.compressedSize = c)), a.length >= f.EF_ZIP64_DSN && (d = k(a, f.EF_ZIP64_RHO), n.offset === f.EF_ZIP64_OR_32 && (n.offset = d)), a.length >= f.EF_ZIP64_DSN + 4 && (e = a.readUInt32LE(f.EF_ZIP64_DSN), n.diskNumStart === f.EF_ZIP64_OR_16 && (n.diskNumStart = e))
                            }

                            var n = new e.EntryHeader, o = new b(0), p = new b(0), q = !1, r = null, s = new b(0);
                            return {
                                get entryName() {
                                    return o.toString()
                                }, get rawEntryName() {
                                    return o
                                }, set entryName(a) {
                                    o = d.toBuffer(a);
                                    var b = o[o.length - 1];
                                    q = 47 == b || 92 == b, n.fileNameLength = o.length
                                }, get extra() {
                                    return s
                                }, set extra(a) {
                                    s = a, n.extraLength = a.length, l(a)
                                }, get comment() {
                                    return p.toString()
                                }, set comment(a) {
                                    p = d.toBuffer(a), n.commentLength = p.length
                                }, get name() {
                                    var a = o.toString();
                                    return q ? a.substr(a.length - 1).split("/").pop() : a.split("/").pop()
                                }, get isDirectory() {
                                    return q
                                }, getCompressedData: function () {
                                    return j(!1, null)
                                }, getCompressedDataAsync: function (a) {
                                    j(!0, a)
                                }, setData: function (a) {
                                    r = d.toBuffer(a), !q && r.length ? (n.size = r.length, n.method = d.Constants.DEFLATED, n.crc = d.crc32(a)) : n.method = d.Constants.STORED
                                }, getData: function (a) {
                                    return i(!1, null, a)
                                }, getDataAsync: function (a, b) {
                                    i(!0, a, b)
                                }, set attr(a) {
                                    n.attr = a
                                }, get attr() {
                                    return n.attr
                                }, set header(a) {
                                    n.loadFromBinary(a)
                                }, get header() {
                                    return n
                                }, packHeader: function () {
                                    var a = n.entryHeaderToBinary();
                                    return o.copy(a, d.Constants.CENHDR), n.extraLength && s.copy(a, d.Constants.CENHDR + o.length), n.commentLength && p.copy(a, d.Constants.CENHDR + o.length + n.extraLength, p.length), a
                                }, toString: function () {
                                    return '{\n\t"entryName" : "' + o.toString() + '",\n\t"name" : "' + o.toString().split("/").pop() + '",\n\t"comment" : "' + p.toString() + '",\n\t"isDirectory" : ' + q + ',\n\t"header" : ' + n.toString().replace(/\t/gm, "\t\t") + ',\n\t"compressedData" : <' + (a && a.length + " bytes buffer" || "null") + '>\n\t"data" : <' + (r && r.length + " bytes buffer" || "null") + ">\n}"
                                }
                            }
                        }
                    }).call(b, c(6).Buffer)
                }, function (a, b) {
                    a.exports = {
                        LOCHDR: 30,
                        LOCSIG: 67324752,
                        LOCVER: 4,
                        LOCFLG: 6,
                        LOCHOW: 8,
                        LOCTIM: 10,
                        LOCCRC: 14,
                        LOCSIZ: 18,
                        LOCLEN: 22,
                        LOCNAM: 26,
                        LOCEXT: 28,
                        EXTSIG: 134695760,
                        EXTHDR: 16,
                        EXTCRC: 4,
                        EXTSIZ: 8,
                        EXTLEN: 12,
                        CENHDR: 46,
                        CENSIG: 33639248,
                        CENVEM: 4,
                        CENVER: 6,
                        CENFLG: 8,
                        CENHOW: 10,
                        CENTIM: 12,
                        CENCRC: 16,
                        CENSIZ: 20,
                        CENLEN: 24,
                        CENNAM: 28,
                        CENEXT: 30,
                        CENCOM: 32,
                        CENDSK: 34,
                        CENATT: 36,
                        CENATX: 38,
                        CENOFF: 42,
                        ENDHDR: 22,
                        ENDSIG: 101010256,
                        ENDSUB: 8,
                        ENDTOT: 10,
                        ENDSIZ: 12,
                        ENDOFF: 16,
                        ENDCOM: 20,
                        STORED: 0,
                        SHRUNK: 1,
                        REDUCED1: 2,
                        REDUCED2: 3,
                        REDUCED3: 4,
                        REDUCED4: 5,
                        IMPLODED: 6,
                        DEFLATED: 8,
                        ENHANCED_DEFLATED: 9,
                        PKWARE: 10,
                        BZIP2: 12,
                        LZMA: 14,
                        IBM_TERSE: 18,
                        IBM_LZ77: 19,
                        FLG_ENC: 0,
                        FLG_COMP1: 1,
                        FLG_COMP2: 2,
                        FLG_DESC: 4,
                        FLG_ENH: 8,
                        FLG_STR: 16,
                        FLG_LNG: 1024,
                        FLG_MSK: 4096,
                        FILE: 0,
                        BUFFER: 1,
                        NONE: 2,
                        EF_ID: 0,
                        EF_SIZE: 2,
                        ID_ZIP64: 1,
                        ID_AVINFO: 7,
                        ID_PFS: 8,
                        ID_OS2: 9,
                        ID_NTFS: 10,
                        ID_OPENVMS: 12,
                        ID_UNIX: 13,
                        ID_FORK: 14,
                        ID_PATCH: 15,
                        ID_X509_PKCS7: 20,
                        ID_X509_CERTID_F: 21,
                        ID_X509_CERTID_C: 22,
                        ID_STRONGENC: 23,
                        ID_RECORD_MGT: 24,
                        ID_X509_PKCS7_RL: 25,
                        ID_IBM1: 101,
                        ID_IBM2: 102,
                        ID_POSZIP: 18064,
                        EF_ZIP64_OR_32: 4294967295,
                        EF_ZIP64_OR_16: 65535,
                        EF_ZIP64_SUNCOMP: 0,
                        EF_ZIP64_SCOMP: 8,
                        EF_ZIP64_RHO: 16,
                        EF_ZIP64_DSN: 24
                    }
                }, function (a, b) {
                    a.exports = {
                        INVALID_LOC: "Invalid LOC header (bad signature)",
                        INVALID_CEN: "Invalid CEN header (bad signature)",
                        INVALID_END: "Invalid END header (bad signature)",
                        NO_DATA: "Nothing to decompress",
                        BAD_CRC: "CRC32 checksum failed",
                        FILE_IN_THE_WAY: "There is a file in the way: %s",
                        UNKNOWN_METHOD: "Invalid/unsupported compression method",
                        AVAIL_DATA: "inflate::Available inflate data did not terminate",
                        INVALID_DISTANCE: "inflate::Invalid literal/length or distance code in fixed or dynamic block",
                        TO_MANY_CODES: "inflate::Dynamic block code description: too many length or distance codes",
                        INVALID_REPEAT_LEN: "inflate::Dynamic block code description: repeat more than specified lengths",
                        INVALID_REPEAT_FIRST: "inflate::Dynamic block code description: repeat lengths with no first length",
                        INCOMPLETE_CODES: "inflate::Dynamic block code description: code lengths codes incomplete",
                        INVALID_DYN_DISTANCE: "inflate::Dynamic block code description: invalid distance code lengths",
                        INVALID_CODES_LEN: "inflate::Dynamic block code description: invalid literal/length code lengths",
                        INVALID_STORE_BLOCK: "inflate::Stored block length did not match one's complement",
                        INVALID_BLOCK_TYPE: "inflate::Invalid block type (type == 3)",
                        CANT_EXTRACT_FILE: "Could not extract the file",
                        CANT_OVERRIDE: "Target file already exists",
                        NO_ZIP: "No zip file was loaded",
                        NO_ENTRY: "Entry doesn't exist",
                        DIRECTORY_CONTENT_ERROR: "A directory cannot have content",
                        FILE_NOT_FOUND: "File not found: %s",
                        NOT_IMPLEMENTED: "Not implemented",
                        INVALID_FILENAME: "Invalid filename",
                        INVALID_FORMAT: "Invalid or unsupported zip format. No END header found"
                    }
                }, function (a, b, c) {
                    b.EntryHeader = c(52), b.MainHeader = c(53)
                }, function (a, b, c) {
                    "use strict";
                    (function (a) {
                        function d(a, b, c) {
                            function d() {
                                for (var b; null !== (b = a.read());) g.push(b), h += b.length;
                                a.once("readable", d)
                            }

                            function e(b) {
                                a.removeListener("end", f), a.removeListener("readable", d), c(b)
                            }

                            function f() {
                                var b, d = null;
                                h >= v ? d = new RangeError(w) : b = q.concat(g, h), g = [], a.close(), c(d, b)
                            }

                            var g = [], h = 0;
                            a.on("error", e), a.on("end", f), a.end(b), d()
                        }

                        function e(a, b) {
                            if ("string" == typeof b && (b = q.from(b)), !q.isBuffer(b)) throw new TypeError("Not a string or buffer");
                            var c = a._finishFlushFlag;
                            return a._processChunk(b, c)
                        }

                        function f(a) {
                            return this instanceof f ? void n.call(this, a, s.DEFLATE) : new f(a)
                        }

                        function g(a) {
                            return this instanceof g ? void n.call(this, a, s.INFLATE) : new g(a)
                        }

                        function h(a) {
                            return this instanceof h ? void n.call(this, a, s.GZIP) : new h(a)
                        }

                        function i(a) {
                            return this instanceof i ? void n.call(this, a, s.GUNZIP) : new i(a)
                        }

                        function j(a) {
                            return this instanceof j ? void n.call(this, a, s.DEFLATERAW) : new j(a)
                        }

                        function k(a) {
                            return this instanceof k ? void n.call(this, a, s.INFLATERAW) : new k(a)
                        }

                        function l(a) {
                            return this instanceof l ? void n.call(this, a, s.UNZIP) : new l(a)
                        }

                        function m(a) {
                            return a === s.Z_NO_FLUSH || a === s.Z_PARTIAL_FLUSH || a === s.Z_SYNC_FLUSH || a === s.Z_FULL_FLUSH || a === s.Z_FINISH || a === s.Z_BLOCK
                        }

                        function n(a, c) {
                            var d = this;
                            if (this._opts = a = a || {}, this._chunkSize = a.chunkSize || b.Z_DEFAULT_CHUNK, r.call(this, a), a.flush && !m(a.flush)) throw new Error("Invalid flush flag: " + a.flush);
                            if (a.finishFlush && !m(a.finishFlush)) throw new Error("Invalid flush flag: " + a.finishFlush);
                            if (this._flushFlag = a.flush || s.Z_NO_FLUSH, this._finishFlushFlag = "undefined" != typeof a.finishFlush ? a.finishFlush : s.Z_FINISH, a.chunkSize && (a.chunkSize < b.Z_MIN_CHUNK || a.chunkSize > b.Z_MAX_CHUNK)) throw new Error("Invalid chunk size: " + a.chunkSize);
                            if (a.windowBits && (a.windowBits < b.Z_MIN_WINDOWBITS || a.windowBits > b.Z_MAX_WINDOWBITS)) throw new Error("Invalid windowBits: " + a.windowBits);
                            if (a.level && (a.level < b.Z_MIN_LEVEL || a.level > b.Z_MAX_LEVEL)) throw new Error("Invalid compression level: " + a.level);
                            if (a.memLevel && (a.memLevel < b.Z_MIN_MEMLEVEL || a.memLevel > b.Z_MAX_MEMLEVEL)) throw new Error("Invalid memLevel: " + a.memLevel);
                            if (a.strategy && a.strategy != b.Z_FILTERED && a.strategy != b.Z_HUFFMAN_ONLY && a.strategy != b.Z_RLE && a.strategy != b.Z_FIXED && a.strategy != b.Z_DEFAULT_STRATEGY) throw new Error("Invalid strategy: " + a.strategy);
                            if (a.dictionary && !q.isBuffer(a.dictionary)) throw new Error("Invalid dictionary: it should be a Buffer instance");
                            this._handle = new s.Zlib(c);
                            var e = this;
                            this._hadError = !1, this._handle.onerror = function (a, c) {
                                o(e), e._hadError = !0;
                                var d = new Error(a);
                                d.errno = c, d.code = b.codes[c], e.emit("error", d)
                            };
                            var f = b.Z_DEFAULT_COMPRESSION;
                            "number" == typeof a.level && (f = a.level);
                            var g = b.Z_DEFAULT_STRATEGY;
                            "number" == typeof a.strategy && (g = a.strategy), this._handle.init(a.windowBits || b.Z_DEFAULT_WINDOWBITS, f, a.memLevel || b.Z_DEFAULT_MEMLEVEL, g, a.dictionary), this._buffer = q.allocUnsafe(this._chunkSize), this._offset = 0, this._level = f, this._strategy = g, this.once("end", this.close), Object.defineProperty(this, "_closed", {
                                get: function () {
                                    return !d._handle
                                }, configurable: !0, enumerable: !0
                            })
                        }

                        function o(b, c) {
                            c && a.nextTick(c), b._handle && (b._handle.close(), b._handle = null)
                        }

                        function p(a) {
                            a.emit("close")
                        }

                        var q = c(6).Buffer, r = c(56).Transform, s = c(68), t = c(42), u = c(41).ok,
                            v = c(6).kMaxLength,
                            w = "Cannot create final Buffer. It would be larger than 0x" + v.toString(16) + " bytes";
                        s.Z_MIN_WINDOWBITS = 8, s.Z_MAX_WINDOWBITS = 15, s.Z_DEFAULT_WINDOWBITS = 15, s.Z_MIN_CHUNK = 64, s.Z_MAX_CHUNK = 1 / 0, s.Z_DEFAULT_CHUNK = 16384, s.Z_MIN_MEMLEVEL = 1, s.Z_MAX_MEMLEVEL = 9, s.Z_DEFAULT_MEMLEVEL = 8, s.Z_MIN_LEVEL = -1, s.Z_MAX_LEVEL = 9, s.Z_DEFAULT_LEVEL = s.Z_DEFAULT_COMPRESSION;
                        for (var x = Object.keys(s), y = 0; y < x.length; y++) {
                            var z = x[y];
                            z.match(/^Z/) && Object.defineProperty(b, z, {enumerable: !0, value: s[z], writable: !1})
                        }
                        for (var A = {
                            Z_OK: s.Z_OK,
                            Z_STREAM_END: s.Z_STREAM_END,
                            Z_NEED_DICT: s.Z_NEED_DICT,
                            Z_ERRNO: s.Z_ERRNO,
                            Z_STREAM_ERROR: s.Z_STREAM_ERROR,
                            Z_DATA_ERROR: s.Z_DATA_ERROR,
                            Z_MEM_ERROR: s.Z_MEM_ERROR,
                            Z_BUF_ERROR: s.Z_BUF_ERROR,
                            Z_VERSION_ERROR: s.Z_VERSION_ERROR
                        }, B = Object.keys(A), C = 0; C < B.length; C++) {
                            var D = B[C];
                            A[A[D]] = D
                        }
                        Object.defineProperty(b, "codes", {
                            enumerable: !0,
                            value: Object.freeze(A),
                            writable: !1
                        }), b.Deflate = f, b.Inflate = g, b.Gzip = h, b.Gunzip = i, b.DeflateRaw = j, b.InflateRaw = k, b.Unzip = l, b.createDeflate = function (a) {
                            return new f(a)
                        }, b.createInflate = function (a) {
                            return new g(a)
                        }, b.createDeflateRaw = function (a) {
                            return new j(a)
                        }, b.createInflateRaw = function (a) {
                            return new k(a)
                        }, b.createGzip = function (a) {
                            return new h(a)
                        }, b.createGunzip = function (a) {
                            return new i(a)
                        }, b.createUnzip = function (a) {
                            return new l(a)
                        }, b.deflate = function (a, b, c) {
                            return "function" == typeof b && (c = b, b = {}), d(new f(b), a, c)
                        }, b.deflateSync = function (a, b) {
                            return e(new f(b), a)
                        }, b.gzip = function (a, b, c) {
                            return "function" == typeof b && (c = b, b = {}), d(new h(b), a, c)
                        }, b.gzipSync = function (a, b) {
                            return e(new h(b), a)
                        }, b.deflateRaw = function (a, b, c) {
                            return "function" == typeof b && (c = b, b = {}), d(new j(b), a, c)
                        }, b.deflateRawSync = function (a, b) {
                            return e(new j(b), a)
                        }, b.unzip = function (a, b, c) {
                            return "function" == typeof b && (c = b, b = {}), d(new l(b), a, c)
                        }, b.unzipSync = function (a, b) {
                            return e(new l(b), a)
                        }, b.inflate = function (a, b, c) {
                            return "function" == typeof b && (c = b, b = {}), d(new g(b), a, c)
                        }, b.inflateSync = function (a, b) {
                            return e(new g(b), a)
                        }, b.gunzip = function (a, b, c) {
                            return "function" == typeof b && (c = b, b = {}), d(new i(b), a, c)
                        }, b.gunzipSync = function (a, b) {
                            return e(new i(b), a)
                        }, b.inflateRaw = function (a, b, c) {
                            return "function" == typeof b && (c = b, b = {}), d(new k(b), a, c)
                        }, b.inflateRawSync = function (a, b) {
                            return e(new k(b), a)
                        }, t.inherits(n, r), n.prototype.params = function (c, d, e) {
                            if (c < b.Z_MIN_LEVEL || c > b.Z_MAX_LEVEL) throw new RangeError("Invalid compression level: " + c);
                            if (d != b.Z_FILTERED && d != b.Z_HUFFMAN_ONLY && d != b.Z_RLE && d != b.Z_FIXED && d != b.Z_DEFAULT_STRATEGY) throw new TypeError("Invalid strategy: " + d);
                            if (this._level !== c || this._strategy !== d) {
                                var f = this;
                                this.flush(s.Z_SYNC_FLUSH, function () {
                                    u(f._handle, "zlib binding closed"), f._handle.params(c, d), f._hadError || (f._level = c, f._strategy = d, e && e())
                                })
                            } else a.nextTick(e)
                        }, n.prototype.reset = function () {
                            return u(this._handle, "zlib binding closed"), this._handle.reset()
                        }, n.prototype._flush = function (a) {
                            this._transform(q.alloc(0), "", a)
                        }, n.prototype.flush = function (b, c) {
                            var d = this, e = this._writableState;
                            ("function" == typeof b || void 0 === b && !c) && (c = b, b = s.Z_FULL_FLUSH), e.ended ? c && a.nextTick(c) : e.ending ? c && this.once("end", c) : e.needDrain ? c && this.once("drain", function () {
                                return d.flush(b, c)
                            }) : (this._flushFlag = b, this.write(q.alloc(0), "", c))
                        }, n.prototype.close = function (b) {
                            o(this, b), a.nextTick(p, this)
                        }, n.prototype._transform = function (a, b, c) {
                            var d, e = this._writableState, f = e.ending || e.ended,
                                g = f && (!a || e.length === a.length);
                            return null === a || q.isBuffer(a) ? this._handle ? (g ? d = this._finishFlushFlag : (d = this._flushFlag, a.length >= e.length && (this._flushFlag = this._opts.flush || s.Z_NO_FLUSH)), void this._processChunk(a, d, c)) : c(new Error("zlib binding closed")) : c(new Error("invalid input"))
                        }, n.prototype._processChunk = function (a, b, c) {
                            function d(j, m) {
                                if (this && (this.buffer = null, this.callback = null), !h._hadError) {
                                    var n = f - m;
                                    if (u(n >= 0, "have should not go down"), n > 0) {
                                        var o = h._buffer.slice(h._offset, h._offset + n);
                                        h._offset += n, i ? h.push(o) : (k.push(o), l += o.length)
                                    }
                                    if ((0 === m || h._offset >= h._chunkSize) && (f = h._chunkSize, h._offset = 0, h._buffer = q.allocUnsafe(h._chunkSize)), 0 === m) {
                                        if (g += e - j, e = j, !i) return !0;
                                        var p = h._handle.write(b, a, g, e, h._buffer, h._offset, h._chunkSize);
                                        return p.callback = d, void (p.buffer = a)
                                    }
                                    return !!i && void c()
                                }
                            }

                            var e = a && a.length, f = this._chunkSize - this._offset, g = 0, h = this,
                                i = "function" == typeof c;
                            if (!i) {
                                var j, k = [], l = 0;
                                this.on("error", function (a) {
                                    j = a
                                }), u(this._handle, "zlib binding closed");
                                do var m = this._handle.writeSync(b, a, g, e, this._buffer, this._offset, f); while (!this._hadError && d(m[0], m[1]));
                                if (this._hadError) throw j;
                                if (l >= v) throw o(this), new RangeError(w);
                                var n = q.concat(k, l);
                                return o(this), n
                            }
                            u(this._handle, "zlib binding closed");
                            var p = this._handle.write(b, a, g, e, this._buffer, this._offset, f);
                            p.buffer = a, p.callback = d
                        }, t.inherits(f, n), t.inherits(g, n), t.inherits(h, n), t.inherits(i, n), t.inherits(j, n), t.inherits(k, n), t.inherits(l, n)
                    }).call(b, c(8))
                }, function (a, b, c) {
                    "use strict";
                    (function (b, d) {
                        function e(a) {
                            return L.from(a)
                        }

                        function f(a) {
                            return L.isBuffer(a) || a instanceof M
                        }

                        function g(a, b, c) {
                            return "function" == typeof a.prependListener ? a.prependListener(b, c) : void (a._events && a._events[b] ? I(a._events[b]) ? a._events[b].unshift(c) : a._events[b] = [c, a._events[b]] : a.on(b, c))
                        }

                        function h(a, b) {
                            H = H || c(9), a = a || {};
                            var d = b instanceof H;
                            this.objectMode = !!a.objectMode, d && (this.objectMode = this.objectMode || !!a.readableObjectMode);
                            var e = a.highWaterMark, f = a.readableHighWaterMark, g = this.objectMode ? 16 : 16384;
                            e || 0 === e ? this.highWaterMark = e : d && (f || 0 === f) ? this.highWaterMark = f : this.highWaterMark = g, this.highWaterMark = Math.floor(this.highWaterMark), this.buffer = new R, this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.destroyed = !1, this.defaultEncoding = a.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, a.encoding && (Q || (Q = c(39).StringDecoder), this.decoder = new Q(a.encoding), this.encoding = a.encoding)
                        }

                        function i(a) {
                            return H = H || c(9), this instanceof i ? (this._readableState = new h(a, this), this.readable = !0, a && ("function" == typeof a.read && (this._read = a.read), "function" == typeof a.destroy && (this._destroy = a.destroy)), void K.call(this)) : new i(a)
                        }

                        function j(a, b, c, d, f) {
                            var g = a._readableState;
                            if (null === b) g.reading = !1, p(a, g); else {
                                var h;
                                f || (h = l(g, b)), h ? a.emit("error", h) : g.objectMode || b && b.length > 0 ? ("string" == typeof b || g.objectMode || Object.getPrototypeOf(b) === L.prototype || (b = e(b)), d ? g.endEmitted ? a.emit("error", new Error("stream.unshift() after end event")) : k(a, g, b, !0) : g.ended ? a.emit("error", new Error("stream.push() after EOF")) : (g.reading = !1, g.decoder && !c ? (b = g.decoder.write(b), g.objectMode || 0 !== b.length ? k(a, g, b, !1) : s(a, g)) : k(a, g, b, !1))) : d || (g.reading = !1)
                            }
                            return m(g)
                        }

                        function k(a, b, c, d) {
                            b.flowing && 0 === b.length && !b.sync ? (a.emit("data", c), a.read(0)) : (b.length += b.objectMode ? 1 : c.length, d ? b.buffer.unshift(c) : b.buffer.push(c), b.needReadable && q(a)), s(a, b)
                        }

                        function l(a, b) {
                            var c;
                            return f(b) || "string" == typeof b || void 0 === b || a.objectMode || (c = new TypeError("Invalid non-string/buffer chunk")), c
                        }

                        function m(a) {
                            return !a.ended && (a.needReadable || a.length < a.highWaterMark || 0 === a.length)
                        }

                        function n(a) {
                            return a >= U ? a = U : (a--, a |= a >>> 1, a |= a >>> 2, a |= a >>> 4, a |= a >>> 8, a |= a >>> 16, a++), a
                        }

                        function o(a, b) {
                            return a <= 0 || 0 === b.length && b.ended ? 0 : b.objectMode ? 1 : a !== a ? b.flowing && b.length ? b.buffer.head.data.length : b.length : (a > b.highWaterMark && (b.highWaterMark = n(a)), a <= b.length ? a : b.ended ? b.length : (b.needReadable = !0, 0))
                        }

                        function p(a, b) {
                            if (!b.ended) {
                                if (b.decoder) {
                                    var c = b.decoder.end();
                                    c && c.length && (b.buffer.push(c), b.length += b.objectMode ? 1 : c.length)
                                }
                                b.ended = !0, q(a)
                            }
                        }

                        function q(a) {
                            var b = a._readableState;
                            b.needReadable = !1, b.emittedReadable || (P("emitReadable", b.flowing), b.emittedReadable = !0, b.sync ? G.nextTick(r, a) : r(a))
                        }

                        function r(a) {
                            P("emit readable"), a.emit("readable"), y(a)
                        }

                        function s(a, b) {
                            b.readingMore || (b.readingMore = !0, G.nextTick(t, a, b))
                        }

                        function t(a, b) {
                            for (var c = b.length; !b.reading && !b.flowing && !b.ended && b.length < b.highWaterMark && (P("maybeReadMore read 0"), a.read(0), c !== b.length);) c = b.length;
                            b.readingMore = !1
                        }

                        function u(a) {
                            return function () {
                                var b = a._readableState;
                                P("pipeOnDrain", b.awaitDrain), b.awaitDrain && b.awaitDrain--, 0 === b.awaitDrain && J(a, "data") && (b.flowing = !0, y(a))
                            }
                        }

                        function v(a) {
                            P("readable nexttick read 0"), a.read(0)
                        }

                        function w(a, b) {
                            b.resumeScheduled || (b.resumeScheduled = !0, G.nextTick(x, a, b))
                        }

                        function x(a, b) {
                            b.reading || (P("resume read 0"), a.read(0)), b.resumeScheduled = !1, b.awaitDrain = 0, a.emit("resume"), y(a), b.flowing && !b.reading && a.read(0)
                        }

                        function y(a) {
                            var b = a._readableState;
                            for (P("flow", b.flowing); b.flowing && null !== a.read();) ;
                        }

                        function z(a, b) {
                            if (0 === b.length) return null;
                            var c;
                            return b.objectMode ? c = b.buffer.shift() : !a || a >= b.length ? (c = b.decoder ? b.buffer.join("") : 1 === b.buffer.length ? b.buffer.head.data : b.buffer.concat(b.length), b.buffer.clear()) : c = A(a, b.buffer, b.decoder), c
                        }

                        function A(a, b, c) {
                            var d;
                            return a < b.head.data.length ? (d = b.head.data.slice(0, a), b.head.data = b.head.data.slice(a)) : d = a === b.head.data.length ? b.shift() : c ? B(a, b) : C(a, b), d
                        }

                        function B(a, b) {
                            var c = b.head, d = 1, e = c.data;
                            for (a -= e.length; c = c.next;) {
                                var f = c.data, g = a > f.length ? f.length : a;
                                if (e += g === f.length ? f : f.slice(0, a), a -= g, 0 === a) {
                                    g === f.length ? (++d, c.next ? b.head = c.next : b.head = b.tail = null) : (b.head = c, c.data = f.slice(g));
                                    break
                                }
                                ++d
                            }
                            return b.length -= d, e
                        }

                        function C(a, b) {
                            var c = L.allocUnsafe(a), d = b.head, e = 1;
                            for (d.data.copy(c), a -= d.data.length; d = d.next;) {
                                var f = d.data, g = a > f.length ? f.length : a;
                                if (f.copy(c, c.length - a, 0, g), a -= g, 0 === a) {
                                    g === f.length ? (++e, d.next ? b.head = d.next : b.head = b.tail = null) : (b.head = d, d.data = f.slice(g));
                                    break
                                }
                                ++e
                            }
                            return b.length -= e, c
                        }

                        function D(a) {
                            var b = a._readableState;
                            if (b.length > 0) throw new Error('"endReadable()" called on non-empty stream');
                            b.endEmitted || (b.ended = !0, G.nextTick(E, b, a))
                        }

                        function E(a, b) {
                            a.endEmitted || 0 !== a.length || (a.endEmitted = !0, b.readable = !1, b.emit("end"))
                        }

                        function F(a, b) {
                            for (var c = 0, d = a.length; c < d; c++) if (a[c] === b) return c;
                            return -1
                        }

                        var G = c(17);
                        a.exports = i;
                        var H, I = c(22);
                        i.ReadableState = h;
                        var J = (c(10).EventEmitter, function (a, b) {
                            return a.listeners(b).length
                        }), K = c(37), L = c(18).Buffer, M = b.Uint8Array || function () {
                        }, N = Object.create(c(15));
                        N.inherits = c(11);
                        var O = c(57), P = void 0;
                        P = O && O.debuglog ? O.debuglog("stream") : function () {
                        };
                        var Q, R = c(58), S = c(38);
                        N.inherits(i, K);
                        var T = ["error", "close", "destroy", "pause", "resume"];
                        Object.defineProperty(i.prototype, "destroyed", {
                            get: function () {
                                return void 0 !== this._readableState && this._readableState.destroyed
                            }, set: function (a) {
                                this._readableState && (this._readableState.destroyed = a)
                            }
                        }), i.prototype.destroy = S.destroy, i.prototype._undestroy = S.undestroy, i.prototype._destroy = function (a, b) {
                            this.push(null), b(a)
                        }, i.prototype.push = function (a, b) {
                            var c, d = this._readableState;
                            return d.objectMode ? c = !0 : "string" == typeof a && (b = b || d.defaultEncoding, b !== d.encoding && (a = L.from(a, b), b = ""), c = !0), j(this, a, b, !1, c)
                        }, i.prototype.unshift = function (a) {
                            return j(this, a, null, !0, !1)
                        }, i.prototype.isPaused = function () {
                            return this._readableState.flowing === !1
                        }, i.prototype.setEncoding = function (a) {
                            return Q || (Q = c(39).StringDecoder), this._readableState.decoder = new Q(a), this._readableState.encoding = a, this
                        };
                        var U = 8388608;
                        i.prototype.read = function (a) {
                            P("read", a), a = parseInt(a, 10);
                            var b = this._readableState, c = a;
                            if (0 !== a && (b.emittedReadable = !1), 0 === a && b.needReadable && (b.length >= b.highWaterMark || b.ended)) return P("read: emitReadable", b.length, b.ended), 0 === b.length && b.ended ? D(this) : q(this), null;
                            if (a = o(a, b), 0 === a && b.ended) return 0 === b.length && D(this), null;
                            var d = b.needReadable;
                            P("need readable", d), (0 === b.length || b.length - a < b.highWaterMark) && (d = !0, P("length less than watermark", d)), b.ended || b.reading ? (d = !1, P("reading or ended", d)) : d && (P("do read"), b.reading = !0, b.sync = !0, 0 === b.length && (b.needReadable = !0), this._read(b.highWaterMark), b.sync = !1, b.reading || (a = o(c, b)));
                            var e;
                            return e = a > 0 ? z(a, b) : null, null === e ? (b.needReadable = !0, a = 0) : b.length -= a, 0 === b.length && (b.ended || (b.needReadable = !0), c !== a && b.ended && D(this)), null !== e && this.emit("data", e), e
                        }, i.prototype._read = function (a) {
                            this.emit("error", new Error("_read() is not implemented"))
                        }, i.prototype.pipe = function (a, b) {
                            function c(a, b) {
                                P("onunpipe"), a === m && b && b.hasUnpiped === !1 && (b.hasUnpiped = !0, f())
                            }

                            function e() {
                                P("onend"), a.end()
                            }

                            function f() {
                                P("cleanup"), a.removeListener("close", j), a.removeListener("finish", k), a.removeListener("drain", q), a.removeListener("error", i), a.removeListener("unpipe", c), m.removeListener("end", e), m.removeListener("end", l), m.removeListener("data", h), r = !0, !n.awaitDrain || a._writableState && !a._writableState.needDrain || q()
                            }

                            function h(b) {
                                P("ondata"), s = !1;
                                var c = a.write(b);
                                !1 !== c || s || ((1 === n.pipesCount && n.pipes === a || n.pipesCount > 1 && F(n.pipes, a) !== -1) && !r && (P("false write response, pause", m._readableState.awaitDrain), m._readableState.awaitDrain++, s = !0), m.pause())
                            }

                            function i(b) {
                                P("onerror", b), l(), a.removeListener("error", i), 0 === J(a, "error") && a.emit("error", b)
                            }

                            function j() {
                                a.removeListener("finish", k), l()
                            }

                            function k() {
                                P("onfinish"), a.removeListener("close", j), l()
                            }

                            function l() {
                                P("unpipe"), m.unpipe(a)
                            }

                            var m = this, n = this._readableState;
                            switch (n.pipesCount) {
                                case 0:
                                    n.pipes = a;
                                    break;
                                case 1:
                                    n.pipes = [n.pipes, a];
                                    break;
                                default:
                                    n.pipes.push(a)
                            }
                            n.pipesCount += 1, P("pipe count=%d opts=%j", n.pipesCount, b);
                            var o = (!b || b.end !== !1) && a !== d.stdout && a !== d.stderr, p = o ? e : l;
                            n.endEmitted ? G.nextTick(p) : m.once("end", p), a.on("unpipe", c);
                            var q = u(m);
                            a.on("drain", q);
                            var r = !1, s = !1;
                            return m.on("data", h), g(a, "error", i), a.once("close", j), a.once("finish", k), a.emit("pipe", m), n.flowing || (P("pipe resume"), m.resume()), a
                        }, i.prototype.unpipe = function (a) {
                            var b = this._readableState, c = {hasUnpiped: !1};
                            if (0 === b.pipesCount) return this;
                            if (1 === b.pipesCount) return a && a !== b.pipes ? this : (a || (a = b.pipes), b.pipes = null, b.pipesCount = 0, b.flowing = !1, a && a.emit("unpipe", this, c), this);
                            if (!a) {
                                var d = b.pipes, e = b.pipesCount;
                                b.pipes = null, b.pipesCount = 0, b.flowing = !1;
                                for (var f = 0; f < e; f++) d[f].emit("unpipe", this, c);
                                return this
                            }
                            var g = F(b.pipes, a);
                            return g === -1 ? this : (b.pipes.splice(g, 1), b.pipesCount -= 1, 1 === b.pipesCount && (b.pipes = b.pipes[0]), a.emit("unpipe", this, c), this)
                        }, i.prototype.on = function (a, b) {
                            var c = K.prototype.on.call(this, a, b);
                            if ("data" === a) this._readableState.flowing !== !1 && this.resume(); else if ("readable" === a) {
                                var d = this._readableState;
                                d.endEmitted || d.readableListening || (d.readableListening = d.needReadable = !0, d.emittedReadable = !1, d.reading ? d.length && q(this) : G.nextTick(v, this))
                            }
                            return c
                        }, i.prototype.addListener = i.prototype.on, i.prototype.resume = function () {
                            var a = this._readableState;
                            return a.flowing || (P("resume"), a.flowing = !0, w(this, a)), this
                        }, i.prototype.pause = function () {
                            return P("call pause flowing=%j", this._readableState.flowing), !1 !== this._readableState.flowing && (P("pause"), this._readableState.flowing = !1, this.emit("pause")), this
                        }, i.prototype.wrap = function (a) {
                            var b = this, c = this._readableState, d = !1;
                            a.on("end", function () {
                                if (P("wrapped end"), c.decoder && !c.ended) {
                                    var a = c.decoder.end();
                                    a && a.length && b.push(a)
                                }
                                b.push(null)
                            }), a.on("data", function (e) {
                                if (P("wrapped data"), c.decoder && (e = c.decoder.write(e)), (!c.objectMode || null !== e && void 0 !== e) && (c.objectMode || e && e.length)) {
                                    var f = b.push(e);
                                    f || (d = !0, a.pause())
                                }
                            });
                            for (var e in a) void 0 === this[e] && "function" == typeof a[e] && (this[e] = function (b) {
                                return function () {
                                    return a[b].apply(a, arguments)
                                }
                            }(e));
                            for (var f = 0; f < T.length; f++) a.on(T[f], this.emit.bind(this, T[f]));
                            return this._read = function (b) {
                                P("wrapped _read", b), d && (d = !1, a.resume())
                            }, this
                        }, Object.defineProperty(i.prototype, "readableHighWaterMark", {
                            enumerable: !1,
                            get: function () {
                                return this._readableState.highWaterMark
                            }
                        }), i._fromList = z
                    }).call(b, c(7), c(8))
                }, function (a, b, c) {
                    a.exports = c(10).EventEmitter
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        var c = this, d = this._readableState && this._readableState.destroyed,
                            e = this._writableState && this._writableState.destroyed;
                        return d || e ? (b ? b(a) : !a || this._writableState && this._writableState.errorEmitted || g.nextTick(f, this, a), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(a || null, function (a) {
                            !b && a ? (g.nextTick(f, c, a), c._writableState && (c._writableState.errorEmitted = !0)) : b && b(a)
                        }), this)
                    }

                    function e() {
                        this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1)
                    }

                    function f(a, b) {
                        a.emit("error", b)
                    }

                    var g = c(17);
                    a.exports = {destroy: d, undestroy: e}
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        if (!a) return "utf8";
                        for (var b; ;) switch (a) {
                            case"utf8":
                            case"utf-8":
                                return "utf8";
                            case"ucs2":
                            case"ucs-2":
                            case"utf16le":
                            case"utf-16le":
                                return "utf16le";
                            case"latin1":
                            case"binary":
                                return "latin1";
                            case"base64":
                            case"ascii":
                            case"hex":
                                return a;
                            default:
                                if (b) return;
                                a = ("" + a).toLowerCase(), b = !0
                        }
                    }

                    function e(a) {
                        var b = d(a);
                        if ("string" != typeof b && (s.isEncoding === t || !t(a))) throw new Error("Unknown encoding: " + a);
                        return b || a
                    }

                    function f(a) {
                        this.encoding = e(a);
                        var b;
                        switch (this.encoding) {
                            case"utf16le":
                                this.text = m, this.end = n, b = 4;
                                break;
                            case"utf8":
                                this.fillLast = j, b = 4;
                                break;
                            case"base64":
                                this.text = o, this.end = p, b = 3;
                                break;
                            default:
                                return this.write = q, void (this.end = r)
                        }
                        this.lastNeed = 0, this.lastTotal = 0, this.lastChar = s.allocUnsafe(b)
                    }

                    function g(a) {
                        return a <= 127 ? 0 : a >> 5 === 6 ? 2 : a >> 4 === 14 ? 3 : a >> 3 === 30 ? 4 : a >> 6 === 2 ? -1 : -2
                    }

                    function h(a, b, c) {
                        var d = b.length - 1;
                        if (d < c) return 0;
                        var e = g(b[d]);
                        return e >= 0 ? (e > 0 && (a.lastNeed = e - 1), e) : --d < c || e === -2 ? 0 : (e = g(b[d]), e >= 0 ? (e > 0 && (a.lastNeed = e - 2), e) : --d < c || e === -2 ? 0 : (e = g(b[d]), e >= 0 ? (e > 0 && (2 === e ? e = 0 : a.lastNeed = e - 3), e) : 0))
                    }

                    function i(a, b, c) {
                        if (128 !== (192 & b[0])) return a.lastNeed = 0, "\ufffd";
                        if (a.lastNeed > 1 && b.length > 1) {
                            if (128 !== (192 & b[1])) return a.lastNeed = 1, "\ufffd";
                            if (a.lastNeed > 2 && b.length > 2 && 128 !== (192 & b[2])) return a.lastNeed = 2, "\ufffd"
                        }
                    }

                    function j(a) {
                        var b = this.lastTotal - this.lastNeed, c = i(this, a, b);
                        return void 0 !== c ? c : this.lastNeed <= a.length ? (a.copy(this.lastChar, b, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (a.copy(this.lastChar, b, 0, a.length), void (this.lastNeed -= a.length))
                    }

                    function k(a, b) {
                        var c = h(this, a, b);
                        if (!this.lastNeed) return a.toString("utf8", b);
                        this.lastTotal = c;
                        var d = a.length - (c - this.lastNeed);
                        return a.copy(this.lastChar, 0, d), a.toString("utf8", b, d)
                    }

                    function l(a) {
                        var b = a && a.length ? this.write(a) : "";
                        return this.lastNeed ? b + "\ufffd" : b
                    }

                    function m(a, b) {
                        if ((a.length - b) % 2 === 0) {
                            var c = a.toString("utf16le", b);
                            if (c) {
                                var d = c.charCodeAt(c.length - 1);
                                if (d >= 55296 && d <= 56319) return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = a[a.length - 2], this.lastChar[1] = a[a.length - 1], c.slice(0, -1)
                            }
                            return c
                        }
                        return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = a[a.length - 1], a.toString("utf16le", b, a.length - 1)
                    }

                    function n(a) {
                        var b = a && a.length ? this.write(a) : "";
                        if (this.lastNeed) {
                            var c = this.lastTotal - this.lastNeed;
                            return b + this.lastChar.toString("utf16le", 0, c)
                        }
                        return b
                    }

                    function o(a, b) {
                        var c = (a.length - b) % 3;
                        return 0 === c ? a.toString("base64", b) : (this.lastNeed = 3 - c, this.lastTotal = 3, 1 === c ? this.lastChar[0] = a[a.length - 1] : (this.lastChar[0] = a[a.length - 2], this.lastChar[1] = a[a.length - 1]), a.toString("base64", b, a.length - c))
                    }

                    function p(a) {
                        var b = a && a.length ? this.write(a) : "";
                        return this.lastNeed ? b + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : b
                    }

                    function q(a) {
                        return a.toString(this.encoding)
                    }

                    function r(a) {
                        return a && a.length ? this.write(a) : ""
                    }

                    var s = c(18).Buffer, t = s.isEncoding || function (a) {
                        switch (a = "" + a, a && a.toLowerCase()) {
                            case"hex":
                            case"utf8":
                            case"utf-8":
                            case"ascii":
                            case"binary":
                            case"base64":
                            case"ucs2":
                            case"ucs-2":
                            case"utf16le":
                            case"utf-16le":
                            case"raw":
                                return !0;
                            default:
                                return !1
                        }
                    };
                    b.StringDecoder = f, f.prototype.write = function (a) {
                        if (0 === a.length) return "";
                        var b, c;
                        if (this.lastNeed) {
                            if (b = this.fillLast(a), void 0 === b) return "";
                            c = this.lastNeed, this.lastNeed = 0
                        } else c = 0;
                        return c < a.length ? b ? b + this.text(a, c) : this.text(a, c) : b || ""
                    }, f.prototype.end = l, f.prototype.text = k, f.prototype.fillLast = function (a) {
                        return this.lastNeed <= a.length ? (a.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal)) : (a.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, a.length), void (this.lastNeed -= a.length))
                    }
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        var c = this._transformState;
                        c.transforming = !1;
                        var d = c.writecb;
                        if (!d) return this.emit("error", new Error("write callback called multiple times"));
                        c.writechunk = null, c.writecb = null, null != b && this.push(b), d(a);
                        var e = this._readableState;
                        e.reading = !1, (e.needReadable || e.length < e.highWaterMark) && this._read(e.highWaterMark)
                    }

                    function e(a) {
                        return this instanceof e ? (h.call(this, a), this._transformState = {
                            afterTransform: d.bind(this),
                            needTransform: !1,
                            transforming: !1,
                            writecb: null,
                            writechunk: null,
                            writeencoding: null
                        }, this._readableState.needReadable = !0, this._readableState.sync = !1, a && ("function" == typeof a.transform && (this._transform = a.transform), "function" == typeof a.flush && (this._flush = a.flush)), void this.on("prefinish", f)) : new e(a)
                    }

                    function f() {
                        var a = this;
                        "function" == typeof this._flush ? this._flush(function (b, c) {
                            g(a, b, c)
                        }) : g(this, null, null)
                    }

                    function g(a, b, c) {
                        if (b) return a.emit("error", b);
                        if (null != c && a.push(c), a._writableState.length) throw new Error("Calling transform done when ws.length != 0");
                        if (a._transformState.transforming) throw new Error("Calling transform done when still transforming");
                        return a.push(null)
                    }

                    a.exports = e;
                    var h = c(9), i = Object.create(c(15));
                    i.inherits = c(11), i.inherits(e, h), e.prototype.push = function (a, b) {
                        return this._transformState.needTransform = !1, h.prototype.push.call(this, a, b)
                    }, e.prototype._transform = function (a, b, c) {
                        throw new Error("_transform() is not implemented")
                    }, e.prototype._write = function (a, b, c) {
                        var d = this._transformState;
                        if (d.writecb = c, d.writechunk = a, d.writeencoding = b, !d.transforming) {
                            var e = this._readableState;
                            (d.needTransform || e.needReadable || e.length < e.highWaterMark) && this._read(e.highWaterMark)
                        }
                    }, e.prototype._read = function (a) {
                        var b = this._transformState;
                        null !== b.writechunk && b.writecb && !b.transforming ? (b.transforming = !0, this._transform(b.writechunk, b.writeencoding, b.afterTransform)) : b.needTransform = !0
                    }, e.prototype._destroy = function (a, b) {
                        var c = this;
                        h.prototype._destroy.call(this, a, function (a) {
                            b(a), c.emit("close")
                        })
                    }
                }, function (a, b, c) {
                    "use strict";
                    (function (b) {
                        function d(a, b) {
                            if (a === b) return 0;
                            for (var c = a.length, d = b.length, e = 0, f = Math.min(c, d); e < f; ++e) if (a[e] !== b[e]) {
                                c = a[e], d = b[e];
                                break
                            }
                            return c < d ? -1 : d < c ? 1 : 0
                        }

                        function e(a) {
                            return b.Buffer && "function" == typeof b.Buffer.isBuffer ? b.Buffer.isBuffer(a) : !(null == a || !a._isBuffer)
                        }

                        function f(a) {
                            return Object.prototype.toString.call(a)
                        }

                        function g(a) {
                            return !e(a) && ("function" == typeof b.ArrayBuffer && ("function" == typeof ArrayBuffer.isView ? ArrayBuffer.isView(a) : !!a && (a instanceof DataView || !!(a.buffer && a.buffer instanceof ArrayBuffer))))
                        }

                        function h(a) {
                            if (w.isFunction(a)) {
                                if (z) return a.name;
                                var b = a.toString(), c = b.match(B);
                                return c && c[1]
                            }
                        }

                        function i(a, b) {
                            return "string" == typeof a ? a.length < b ? a : a.slice(0, b) : a
                        }

                        function j(a) {
                            if (z || !w.isFunction(a)) return w.inspect(a);
                            var b = h(a), c = b ? ": " + b : "";
                            return "[Function" + c + "]"
                        }

                        function k(a) {
                            return i(j(a.actual), 128) + " " + a.operator + " " + i(j(a.expected), 128)
                        }

                        function l(a, b, c, d, e) {
                            throw new A.AssertionError({
                                message: c,
                                actual: a,
                                expected: b,
                                operator: d,
                                stackStartFunction: e
                            })
                        }

                        function m(a, b) {
                            a || l(a, !0, b, "==", A.ok)
                        }

                        function n(a, b, c, h) {
                            if (a === b) return !0;
                            if (e(a) && e(b)) return 0 === d(a, b);
                            if (w.isDate(a) && w.isDate(b)) return a.getTime() === b.getTime();
                            if (w.isRegExp(a) && w.isRegExp(b)) return a.source === b.source && a.global === b.global && a.multiline === b.multiline && a.lastIndex === b.lastIndex && a.ignoreCase === b.ignoreCase;
                            if (null !== a && "object" == typeof a || null !== b && "object" == typeof b) {
                                if (g(a) && g(b) && f(a) === f(b) && !(a instanceof Float32Array || a instanceof Float64Array)) return 0 === d(new Uint8Array(a.buffer), new Uint8Array(b.buffer));
                                if (e(a) !== e(b)) return !1;
                                h = h || {actual: [], expected: []};
                                var i = h.actual.indexOf(a);
                                return i !== -1 && i === h.expected.indexOf(b) || (h.actual.push(a), h.expected.push(b), p(a, b, c, h))
                            }
                            return c ? a === b : a == b
                        }

                        function o(a) {
                            return "[object Arguments]" == Object.prototype.toString.call(a)
                        }

                        function p(a, b, c, d) {
                            if (null === a || void 0 === a || null === b || void 0 === b) return !1;
                            if (w.isPrimitive(a) || w.isPrimitive(b)) return a === b;
                            if (c && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return !1;
                            var e = o(a), f = o(b);
                            if (e && !f || !e && f) return !1;
                            if (e) return a = y.call(a), b = y.call(b), n(a, b, c);
                            var g, h, i = C(a), j = C(b);
                            if (i.length !== j.length) return !1;
                            for (i.sort(), j.sort(), h = i.length - 1; h >= 0; h--) if (i[h] !== j[h]) return !1;
                            for (h = i.length - 1; h >= 0; h--) if (g = i[h], !n(a[g], b[g], c, d)) return !1;
                            return !0
                        }

                        function q(a, b, c) {
                            n(a, b, !0) && l(a, b, c, "notDeepStrictEqual", q)
                        }

                        function r(a, b) {
                            if (!a || !b) return !1;
                            if ("[object RegExp]" == Object.prototype.toString.call(b)) return b.test(a);
                            try {
                                if (a instanceof b) return !0
                            } catch (c) {
                            }
                            return !Error.isPrototypeOf(b) && b.call({}, a) === !0
                        }

                        function s(a) {
                            var b;
                            try {
                                a()
                            } catch (c) {
                                b = c
                            }
                            return b
                        }

                        function t(a, b, c, d) {
                            var e;
                            if ("function" != typeof b) throw new TypeError('"block" argument must be a function');
                            "string" == typeof c && (d = c, c = null), e = s(b), d = (c && c.name ? " (" + c.name + ")." : ".") + (d ? " " + d : "."), a && !e && l(e, c, "Missing expected exception" + d);
                            var f = "string" == typeof d, g = !a && w.isError(e), h = !a && e && !c;
                            if ((g && f && r(e, c) || h) && l(e, c, "Got unwanted exception" + d), a && e && c && !r(e, c) || !a && e) throw e
                        }

                        function u(a, b) {
                            a || l(a, !0, b, "==", u)
                        }

                        var v = c(69), w = c(42), x = Object.prototype.hasOwnProperty, y = Array.prototype.slice,
                            z = function () {
                                return "foo" === function () {
                                }.name
                            }(), A = a.exports = m, B = /\s*function\s+([^\(\s]*)\s*/;
                        A.AssertionError = function (a) {
                            this.name = "AssertionError", this.actual = a.actual, this.expected = a.expected, this.operator = a.operator, a.message ? (this.message = a.message, this.generatedMessage = !1) : (this.message = k(this), this.generatedMessage = !0);
                            var b = a.stackStartFunction || l;
                            if (Error.captureStackTrace) Error.captureStackTrace(this, b); else {
                                var c = new Error;
                                if (c.stack) {
                                    var d = c.stack, e = h(b), f = d.indexOf("\n" + e);
                                    if (f >= 0) {
                                        var g = d.indexOf("\n", f + 1);
                                        d = d.substring(g + 1)
                                    }
                                    this.stack = d
                                }
                            }
                        }, w.inherits(A.AssertionError, Error), A.fail = l, A.ok = m, A.equal = function (a, b, c) {
                            a != b && l(a, b, c, "==", A.equal)
                        }, A.notEqual = function (a, b, c) {
                            a == b && l(a, b, c, "!=", A.notEqual)
                        }, A.deepEqual = function (a, b, c) {
                            n(a, b, !1) || l(a, b, c, "deepEqual", A.deepEqual)
                        }, A.deepStrictEqual = function (a, b, c) {
                            n(a, b, !0) || l(a, b, c, "deepStrictEqual", A.deepStrictEqual)
                        }, A.notDeepEqual = function (a, b, c) {
                            n(a, b, !1) && l(a, b, c, "notDeepEqual", A.notDeepEqual)
                        }, A.notDeepStrictEqual = q, A.strictEqual = function (a, b, c) {
                            a !== b && l(a, b, c, "===", A.strictEqual)
                        }, A.notStrictEqual = function (a, b, c) {
                            a === b && l(a, b, c, "!==", A.notStrictEqual)
                        }, A["throws"] = function (a, b, c) {
                            t(!0, a, b, c)
                        }, A.doesNotThrow = function (a, b, c) {
                            t(!1, a, b, c)
                        }, A.ifError = function (a) {
                            if (a) throw a
                        }, A.strict = v(u, A, {
                            equal: A.strictEqual,
                            deepEqual: A.deepStrictEqual,
                            notEqual: A.notStrictEqual,
                            notDeepEqual: A.notDeepStrictEqual
                        }), A.strict.strict = A.strict;
                        var C = Object.keys || function (a) {
                            var b = [];
                            for (var c in a) x.call(a, c) && b.push(c);
                            return b
                        }
                    }).call(b, c(7))
                }, function (a, b, c) {
                    (function (a) {
                        function d(a, c) {
                            var d = {seen: [], stylize: f};
                            return arguments.length >= 3 && (d.depth = arguments[2]), arguments.length >= 4 && (d.colors = arguments[3]), o(c) ? d.showHidden = c : c && b._extend(d, c), u(d.showHidden) && (d.showHidden = !1), u(d.depth) && (d.depth = 2), u(d.colors) && (d.colors = !1), u(d.customInspect) && (d.customInspect = !0), d.colors && (d.stylize = e), h(d, a, d.depth)
                        }

                        function e(a, b) {
                            var c = d.styles[b];
                            return c ? "\x1b[" + d.colors[c][0] + "m" + a + "\x1b[" + d.colors[c][1] + "m" : a
                        }

                        function f(a, b) {
                            return a
                        }

                        function g(a) {
                            var b = {};
                            return a.forEach(function (a, c) {
                                b[a] = !0
                            }), b
                        }

                        function h(a, c, d) {
                            if (a.customInspect && c && z(c.inspect) && c.inspect !== b.inspect && (!c.constructor || c.constructor.prototype !== c)) {
                                var e = c.inspect(d, a);
                                return s(e) || (e = h(a, e, d)), e
                            }
                            var f = i(a, c);
                            if (f) return f;
                            var o = Object.keys(c), p = g(o);
                            if (a.showHidden && (o = Object.getOwnPropertyNames(c)), y(c) && (o.indexOf("message") >= 0 || o.indexOf("description") >= 0)) return j(c);
                            if (0 === o.length) {
                                if (z(c)) {
                                    var q = c.name ? ": " + c.name : "";
                                    return a.stylize("[Function" + q + "]", "special")
                                }
                                if (v(c)) return a.stylize(RegExp.prototype.toString.call(c), "regexp");
                                if (x(c)) return a.stylize(Date.prototype.toString.call(c), "date");
                                if (y(c)) return j(c)
                            }
                            var r = "", t = !1, u = ["{", "}"];
                            if (n(c) && (t = !0, u = ["[", "]"]), z(c)) {
                                var w = c.name ? ": " + c.name : "";
                                r = " [Function" + w + "]"
                            }
                            if (v(c) && (r = " " + RegExp.prototype.toString.call(c)), x(c) && (r = " " + Date.prototype.toUTCString.call(c)), y(c) && (r = " " + j(c)), 0 === o.length && (!t || 0 == c.length)) return u[0] + r + u[1];
                            if (d < 0) return v(c) ? a.stylize(RegExp.prototype.toString.call(c), "regexp") : a.stylize("[Object]", "special");
                            a.seen.push(c);
                            var A;
                            return A = t ? k(a, c, d, p, o) : o.map(function (b) {
                                return l(a, c, d, p, b, t)
                            }), a.seen.pop(), m(A, r, u)
                        }

                        function i(a, b) {
                            if (u(b)) return a.stylize("undefined", "undefined");
                            if (s(b)) {
                                var c = "'" + JSON.stringify(b).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                                return a.stylize(c, "string")
                            }
                            return r(b) ? a.stylize("" + b, "number") : o(b) ? a.stylize("" + b, "boolean") : p(b) ? a.stylize("null", "null") : void 0
                        }

                        function j(a) {
                            return "[" + Error.prototype.toString.call(a) + "]"
                        }

                        function k(a, b, c, d, e) {
                            for (var f = [], g = 0, h = b.length; g < h; ++g) C(b, String(g)) ? f.push(l(a, b, c, d, String(g), !0)) : f.push("");
                            return e.forEach(function (e) {
                                e.match(/^\d+$/) || f.push(l(a, b, c, d, e, !0))
                            }), f
                        }

                        function l(a, b, c, d, e, f) {
                            var g, i, j;
                            if (j = Object.getOwnPropertyDescriptor(b, e) || {value: b[e]}, j.get ? i = j.set ? a.stylize("[Getter/Setter]", "special") : a.stylize("[Getter]", "special") : j.set && (i = a.stylize("[Setter]", "special")), C(d, e) || (g = "[" + e + "]"), i || (a.seen.indexOf(j.value) < 0 ? (i = p(c) ? h(a, j.value, null) : h(a, j.value, c - 1), i.indexOf("\n") > -1 && (i = f ? i.split("\n").map(function (a) {
                                return "  " + a
                            }).join("\n").substr(2) : "\n" + i.split("\n").map(function (a) {
                                return "   " + a
                            }).join("\n"))) : i = a.stylize("[Circular]", "special")), u(g)) {
                                if (f && e.match(/^\d+$/)) return i;
                                g = JSON.stringify("" + e), g.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (g = g.substr(1, g.length - 2), g = a.stylize(g, "name")) : (g = g.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), g = a.stylize(g, "string"))
                            }
                            return g + ": " + i
                        }

                        function m(a, b, c) {
                            var d = 0, e = a.reduce(function (a, b) {
                                return d++, b.indexOf("\n") >= 0 && d++, a + b.replace(/\u001b\[\d\d?m/g, "").length + 1
                            }, 0);
                            return e > 60 ? c[0] + ("" === b ? "" : b + "\n ") + " " + a.join(",\n  ") + " " + c[1] : c[0] + b + " " + a.join(", ") + " " + c[1]
                        }

                        function n(a) {
                            return Array.isArray(a)
                        }

                        function o(a) {
                            return "boolean" == typeof a
                        }

                        function p(a) {
                            return null === a
                        }

                        function q(a) {
                            return null == a
                        }

                        function r(a) {
                            return "number" == typeof a
                        }

                        function s(a) {
                            return "string" == typeof a
                        }

                        function t(a) {
                            return "symbol" == typeof a
                        }

                        function u(a) {
                            return void 0 === a
                        }

                        function v(a) {
                            return w(a) && "[object RegExp]" === B(a)
                        }

                        function w(a) {
                            return "object" == typeof a && null !== a
                        }

                        function x(a) {
                            return w(a) && "[object Date]" === B(a)
                        }

                        function y(a) {
                            return w(a) && ("[object Error]" === B(a) || a instanceof Error)
                        }

                        function z(a) {
                            return "function" == typeof a
                        }

                        function A(a) {
                            return null === a || "boolean" == typeof a || "number" == typeof a || "string" == typeof a || "symbol" == typeof a || "undefined" == typeof a
                        }

                        function B(a) {
                            return Object.prototype.toString.call(a)
                        }

                        function C(a, b) {
                            return Object.prototype.hasOwnProperty.call(a, b)
                        }

                        function D(a, b) {
                            if (!a) {
                                var c = new Error("Promise was rejected with a falsy value");
                                c.reason = a, a = c
                            }
                            return b(a)
                        }

                        function E(b) {
                            function c() {
                                for (var c = [], d = 0; d < arguments.length; d++) c.push(arguments[d]);
                                var e = c.pop();
                                if ("function" != typeof e) throw new TypeError("The last argument must be of type Function");
                                var f = this, g = function () {
                                    return e.apply(f, arguments)
                                };
                                b.apply(this, c).then(function (b) {
                                    a.nextTick(g, null, b)
                                }, function (b) {
                                    a.nextTick(D, b, g)
                                })
                            }

                            if ("function" != typeof b) throw new TypeError('The "original" argument must be of type Function');
                            return Object.setPrototypeOf(c, Object.getPrototypeOf(b)), Object.defineProperties(c, F(b)), c
                        }

                        var F = Object.getOwnPropertyDescriptors || function (a) {
                            for (var b = Object.keys(a), c = {}, d = 0; d < b.length; d++) c[b[d]] = Object.getOwnPropertyDescriptor(a, b[d]);
                            return c
                        }, G = /%[sdj%]/g;
                        b.format = function (a) {
                            if (!s(a)) {
                                for (var b = [], c = 0; c < arguments.length; c++) b.push(d(arguments[c]));
                                return b.join(" ")
                            }
                            for (var c = 1, e = arguments, f = e.length, g = String(a).replace(G, function (a) {
                                if ("%%" === a) return "%";
                                if (c >= f) return a;
                                switch (a) {
                                    case"%s":
                                        return String(e[c++]);
                                    case"%d":
                                        return Number(e[c++]);
                                    case"%j":
                                        try {
                                            return JSON.stringify(e[c++])
                                        } catch (b) {
                                            return "[Circular]"
                                        }
                                    default:
                                        return a
                                }
                            }), h = e[c]; c < f; h = e[++c]) g += p(h) || !w(h) ? " " + h : " " + d(h);
                            return g
                        }, b.deprecate = function (c, d) {
                            function e() {
                                if (!f) {
                                    if (a.throwDeprecation) throw new Error(d);
                                    a.traceDeprecation, f = !0
                                }
                                return c.apply(this, arguments)
                            }

                            if ("undefined" != typeof a && a.noDeprecation === !0) return c;
                            if ("undefined" == typeof a) return function () {
                                return b.deprecate(c, d).apply(this, arguments)
                            };
                            var f = !1;
                            return e
                        };
                        var H, I = {};
                        b.debuglog = function (c) {
                            if (u(H) && (H = a.env.NODE_DEBUG || ""), c = c.toUpperCase(), !I[c]) if (new RegExp("\\b" + c + "\\b", "i").test(H)) {
                                a.pid;
                                I[c] = function () {
                                    b.format.apply(b, arguments)
                                }
                            } else I[c] = function () {
                            };
                            return I[c]
                        }, b.inspect = d, d.colors = {
                            bold: [1, 22],
                            italic: [3, 23],
                            underline: [4, 24],
                            inverse: [7, 27],
                            white: [37, 39],
                            grey: [90, 39],
                            black: [30, 39],
                            blue: [34, 39],
                            cyan: [36, 39],
                            green: [32, 39],
                            magenta: [35, 39],
                            red: [31, 39],
                            yellow: [33, 39]
                        }, d.styles = {
                            special: "cyan",
                            number: "yellow",
                            "boolean": "yellow",
                            undefined: "grey",
                            "null": "bold",
                            string: "green",
                            date: "magenta",
                            regexp: "red"
                        }, b.isArray = n, b.isBoolean = o, b.isNull = p, b.isNullOrUndefined = q, b.isNumber = r, b.isString = s, b.isSymbol = t, b.isUndefined = u, b.isRegExp = v, b.isObject = w, b.isDate = x, b.isError = y, b.isFunction = z, b.isPrimitive = A, b.isBuffer = c(70);
                        b.log = function () {
                        }, b.inherits = c(71), b._extend = function (a, b) {
                            if (!b || !w(b)) return a;
                            for (var c = Object.keys(b), d = c.length; d--;) a[c[d]] = b[c[d]];
                            return a
                        };
                        var J = "undefined" != typeof Symbol ? Symbol("util.promisify.custom") : void 0;
                        b.promisify = function (a) {
                            function b() {
                                for (var b, c, d = new Promise(function (a, d) {
                                    b = a, c = d
                                }), e = [], f = 0; f < arguments.length; f++) e.push(arguments[f]);
                                e.push(function (a, d) {
                                    a ? c(a) : b(d)
                                });
                                try {
                                    a.apply(this, e)
                                } catch (g) {
                                    c(g)
                                }
                                return d
                            }

                            if ("function" != typeof a) throw new TypeError('The "original" argument must be of type Function');
                            if (J && a[J]) {
                                var b = a[J];
                                if ("function" != typeof b) throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                                return Object.defineProperty(b, J, {
                                    value: b,
                                    enumerable: !1,
                                    writable: !1,
                                    configurable: !0
                                }), b
                            }
                            return Object.setPrototypeOf(b, Object.getPrototypeOf(a)), J && Object.defineProperty(b, J, {
                                value: b,
                                enumerable: !1,
                                writable: !1,
                                configurable: !0
                            }), Object.defineProperties(b, F(a))
                        }, b.promisify.custom = J, b.callbackify = E
                    }).call(b, c(8))
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b, c, d) {
                        for (var e = 65535 & a | 0, f = a >>> 16 & 65535 | 0, g = 0; 0 !== c;) {
                            g = c > 2e3 ? 2e3 : c, c -= g;
                            do e = e + b[d++] | 0, f = f + e | 0; while (--g);
                            e %= 65521, f %= 65521
                        }
                        return e | f << 16 | 0
                    }

                    a.exports = d
                }, function (a, b, c) {
                    "use strict";

                    function d() {
                        for (var a, b = [], c = 0; c < 256; c++) {
                            a = c;
                            for (var d = 0; d < 8; d++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                            b[c] = a
                        }
                        return b
                    }

                    function e(a, b, c, d) {
                        var e = f, g = d + c;
                        a ^= -1;
                        for (var h = d; h < g; h++) a = a >>> 8 ^ e[255 & (a ^ b[h])];
                        return a ^ -1
                    }

                    var f = d();
                    a.exports = e
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    var e = c(0), f = c(3), g = Math.pow(2, 32) - 1, h = function () {
                        function a(b, c) {
                            d(this, a), this.observer = b, this.remuxer = c
                        }

                        return a.prototype.resetTimeStamp = function (a) {
                            this.initPTS = a
                        }, a.prototype.resetInitSegment = function (b, c, d, e) {
                            if (b && b.byteLength) {
                                var g = this.initData = a.parseInitSegment(b);
                                null == c && (c = "mp4a.40.5"), null == d && (d = "avc1.42e01e");
                                var h = {};
                                g.audio && g.video ? h.audiovideo = {
                                    container: "video/mp4",
                                    codec: c + "," + d,
                                    initSegment: e ? b : null
                                } : (g.audio && (h.audio = {
                                    container: "audio/mp4",
                                    codec: c,
                                    initSegment: e ? b : null
                                }), g.video && (h.video = {
                                    container: "video/mp4",
                                    codec: d,
                                    initSegment: e ? b : null
                                })), this.observer.trigger(f.a.FRAG_PARSING_INIT_SEGMENT, {tracks: h})
                            } else c && (this.audioCodec = c), d && (this.videoCodec = d)
                        }, a.probe = function (b) {
                            return a.findBox({data: b, start: 0, end: Math.min(b.length, 16384)}, ["moof"]).length > 0
                        }, a.bin2str = function (a) {
                            return String.fromCharCode.apply(null, a)
                        }, a.readUint16 = function (a, b) {
                            a.data && (b += a.start, a = a.data);
                            var c = a[b] << 8 | a[b + 1];
                            return c < 0 ? 65536 + c : c
                        }, a.readUint32 = function (a, b) {
                            a.data && (b += a.start, a = a.data);
                            var c = a[b] << 24 | a[b + 1] << 16 | a[b + 2] << 8 | a[b + 3];
                            return c < 0 ? 4294967296 + c : c
                        }, a.writeUint32 = function (a, b, c) {
                            a.data && (b += a.start, a = a.data), a[b] = c >> 24, a[b + 1] = c >> 16 & 255, a[b + 2] = c >> 8 & 255, a[b + 3] = 255 & c
                        }, a.findBox = function (b, c) {
                            var d = [], e = void 0, f = void 0, g = void 0, h = void 0, i = void 0, j = void 0,
                                k = void 0;
                            if (b.data ? (j = b.start, h = b.end, b = b.data) : (j = 0, h = b.byteLength), !c.length) return null;
                            for (e = j; e < h;) f = a.readUint32(b, e), g = a.bin2str(b.subarray(e + 4, e + 8)), k = f > 1 ? e + f : h, g === c[0] && (1 === c.length ? d.push({
                                data: b,
                                start: e + 8,
                                end: k
                            }) : (i = a.findBox({
                                data: b,
                                start: e + 8,
                                end: k
                            }, c.slice(1)), i.length && (d = d.concat(i)))), e = k;
                            return d
                        }, a.parseSegmentIndex = function (b) {
                            var c = a.findBox(b, ["moov"])[0], d = c ? c.end : null, e = 0, f = a.findBox(b, ["sidx"]),
                                g = void 0;
                            if (!f || !f[0]) return null;
                            g = [], f = f[0];
                            var h = f.data[0];
                            e = 0 === h ? 8 : 16;
                            var i = a.readUint32(f, e);
                            e += 4;
                            var j = 0, k = 0;
                            e += 0 === h ? 8 : 16, e += 2;
                            var l = f.end + k, m = a.readUint16(f, e);
                            e += 2;
                            for (var n = 0; n < m; n++) {
                                var o = e, p = a.readUint32(f, o);
                                o += 4;
                                var q = 2147483647 & p, r = (2147483648 & p) >>> 31;
                                if (1 === r) return;
                                var s = a.readUint32(f, o);
                                o += 4, g.push({
                                    referenceSize: q,
                                    subsegmentDuration: s,
                                    info: {duration: s / i, start: l, end: l + q - 1}
                                }), l += q, o += 4, e = o
                            }
                            return {
                                earliestPresentationTime: j,
                                timescale: i,
                                version: h,
                                referencesCount: m,
                                references: g,
                                moovEndOffset: d
                            }
                        }, a.parseInitSegment = function (b) {
                            var c = [], d = a.findBox(b, ["moov", "trak"]);
                            return d.forEach(function (b) {
                                var d = a.findBox(b, ["tkhd"])[0];
                                if (d) {
                                    var f = d.data[d.start], g = 0 === f ? 12 : 20, h = a.readUint32(d, g),
                                        i = a.findBox(b, ["mdia", "mdhd"])[0];
                                    if (i) {
                                        f = i.data[i.start], g = 0 === f ? 12 : 20;
                                        var j = a.readUint32(i, g), k = a.findBox(b, ["mdia", "hdlr"])[0];
                                        if (k) {
                                            var l = a.bin2str(k.data.subarray(k.start + 8, k.start + 12)),
                                                m = {soun: "audio", vide: "video"}[l];
                                            if (m) {
                                                var n = a.findBox(b, ["mdia", "minf", "stbl", "stsd"]);
                                                if (n.length) {
                                                    n = n[0];
                                                    var o = a.bin2str(n.data.subarray(n.start + 12, n.start + 16));
                                                    e.b.log("MP4Demuxer:" + m + ":" + o + " found")
                                                }
                                                c[h] = {timescale: j, type: m}, c[m] = {timescale: j, id: h}
                                            }
                                        }
                                    }
                                }
                            }), c
                        }, a.getStartDTS = function (b, c) {
                            var d = void 0, e = void 0, f = void 0;
                            return d = a.findBox(c, ["moof", "traf"]), e = [].concat.apply([], d.map(function (c) {
                                return a.findBox(c, ["tfhd"]).map(function (d) {
                                    var e = void 0, f = void 0, g = void 0;
                                    return e = a.readUint32(d, 4), f = b[e].timescale || 9e4, g = a.findBox(c, ["tfdt"]).map(function (b) {
                                        var c = void 0, d = void 0;
                                        return c = b.data[b.start], d = a.readUint32(b, 4), 1 === c && (d *= Math.pow(2, 32), d += a.readUint32(b, 8)), d
                                    })[0], g / f
                                })
                            })), f = Math.min.apply(null, e), isFinite(f) ? f : 0
                        }, a.offsetStartDTS = function (b, c, d) {
                            a.findBox(c, ["moof", "traf"]).map(function (c) {
                                return a.findBox(c, ["tfhd"]).map(function (e) {
                                    var f = a.readUint32(e, 4), h = b[f].timescale || 9e4;
                                    a.findBox(c, ["tfdt"]).map(function (b) {
                                        var c = b.data[b.start], e = a.readUint32(b, 4);
                                        if (0 === c) e - d * h >= 0 && a.writeUint32(b, 4, e - d * h); else if (e *= Math.pow(2, 32), e += a.readUint32(b, 8), e -= d * h, e >= 0) {
                                            e = Math.max(e, 0);
                                            var f = Math.floor(e / (g + 1)), i = Math.floor(e % (g + 1));
                                            a.writeUint32(b, 4, f), a.writeUint32(b, 8, i)
                                        }
                                    })
                                })
                            })
                        }, a.prototype.append = function (b, c, d, e) {
                            var g = this.initData;
                            g || (this.resetInitSegment(b, this.audioCodec, this.videoCodec, !1), g = this.initData);
                            var h = void 0, i = this.initPTS;
                            if (void 0 === i) {
                                var j = a.getStartDTS(g, b);
                                this.initPTS = i = j - c, this.observer.trigger(f.a.INIT_PTS_FOUND, {initPTS: i})
                            }
                            a.offsetStartDTS(g, b, i), h = a.getStartDTS(g, b), this.remuxer.remux(g.audio, g.video, null, null, h, d, e, b)
                        }, a.prototype.destroy = function () {
                        }, a
                    }();
                    b.a = h
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b, c, d) {
                        var e = void 0, f = void 0, g = void 0, h = void 0, i = void 0,
                            j = navigator.userAgent.toLowerCase(), k = d,
                            l = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                        return e = ((192 & b[c + 2]) >>> 6) + 1, f = (60 & b[c + 2]) >>> 2, f > l.length - 1 ? void a.trigger(Event.ERROR, {
                            type: z.b.MEDIA_ERROR,
                            details: z.a.FRAG_PARSING_ERROR,
                            fatal: !0,
                            reason: "invalid ADTS sampling index:" + f
                        }) : (h = (1 & b[c + 2]) << 2, h |= (192 & b[c + 3]) >>> 6, B.b.log("manifest codec:" + d + ",ADTS data:type:" + e + ",sampleingIndex:" + f + "[" + l[f] + "Hz],channelConfig:" + h), /firefox/i.test(j) ? f >= 6 ? (e = 5, i = new Array(4), g = f - 3) : (e = 2, i = new Array(2), g = f) : j.indexOf("android") !== -1 ? (e = 2, i = new Array(2), g = f) : (e = 5, i = new Array(4), d && (d.indexOf("mp4a.40.29") !== -1 || d.indexOf("mp4a.40.5") !== -1) || !d && f >= 6 ? g = f - 3 : ((d && d.indexOf("mp4a.40.2") !== -1 && (f >= 6 && 1 === h || /vivaldi/i.test(j)) || !d && 1 === h) && (e = 2, i = new Array(2)), g = f)), i[0] = e << 3, i[0] |= (14 & f) >> 1, i[1] |= (1 & f) << 7, i[1] |= h << 3, 5 === e && (i[1] |= (14 & g) >> 1, i[2] = (1 & g) << 7, i[2] |= 8, i[3] = 0), {
                            config: i,
                            samplerate: l[f],
                            channelCount: h,
                            codec: "mp4a.40." + e,
                            manifestCodec: k
                        })
                    }

                    function e(a, b) {
                        return 255 === a[b] && 240 === (246 & a[b + 1])
                    }

                    function f(a, b) {
                        return 1 & a[b + 1] ? 7 : 9
                    }

                    function g(a, b) {
                        return (3 & a[b + 3]) << 11 | a[b + 4] << 3 | (224 & a[b + 5]) >>> 5
                    }

                    function h(a, b) {
                        return !!(b + 1 < a.length && e(a, b))
                    }

                    function i(a, b) {
                        if (b + 1 < a.length && e(a, b)) {
                            var c = f(a, b), d = c;
                            b + 5 < a.length && (d = g(a, b));
                            var h = b + d;
                            if (h === a.length || h + 1 < a.length && e(a, h)) return !0
                        }
                        return !1
                    }

                    function j(a, b, c, e, f) {
                        if (!a.samplerate) {
                            var g = d(b, c, e, f);
                            a.config = g.config, a.samplerate = g.samplerate, a.channelCount = g.channelCount, a.codec = g.codec, a.manifestCodec = g.manifestCodec, B.b.log("parsed codec:" + a.codec + ",rate:" + g.samplerate + ",nb channel:" + g.channelCount)
                        }
                    }

                    function k(a) {
                        return 9216e4 / a
                    }

                    function l(a, b, c, d, e) {
                        var h = void 0, i = void 0, j = void 0, k = a.length;
                        if (h = f(a, b), i = g(a, b), i -= h, i > 0 && b + h + i <= k) return j = c + d * e, {
                            headerLength: h,
                            frameLength: i,
                            stamp: j
                        }
                    }

                    function m(a, b, c, d, e) {
                        var f = k(a.samplerate), g = l(b, c, d, e, f);
                        if (g) {
                            var h = g.stamp, i = g.headerLength, j = g.frameLength,
                                m = {unit: b.subarray(c + i, c + i + j), pts: h, dts: h};
                            return a.samples.push(m), a.len += j, {sample: m, length: j + i}
                        }
                    }

                    function n(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function o(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function p(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function q(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function r(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function s(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function t(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function u(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function v(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function w(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function x(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    var y = c(3), z = c(2), A = c(27), B = c(0), C = c(20), D = function () {
                        function a(b, c, d) {
                            n(this, a), this.observer = b, this.config = d, this.remuxer = c
                        }

                        return a.prototype.resetInitSegment = function (a, b, c, d) {
                            this._audioTrack = {
                                container: "audio/adts",
                                type: "audio",
                                id: 0,
                                sequenceNumber: 0,
                                isAAC: !0,
                                samples: [],
                                len: 0,
                                manifestCodec: b,
                                duration: d,
                                inputTimeScale: 9e4
                            }
                        }, a.prototype.resetTimeStamp = function () {
                        }, a.probe = function (a) {
                            if (!a) return !1;
                            for (var b = C.a.getID3Data(a, 0) || [], c = b.length, d = a.length; c < d; c++) if (i(a, c)) return B.b.log("ADTS sync word found !"), !0;
                            return !1
                        }, a.prototype.append = function (a, b, c, d) {
                            for (var e = this._audioTrack, f = C.a.getID3Data(a, 0) || [], g = C.a.getTimeStamp(f), i = g ? 90 * g : 9e4 * b, k = 0, l = i, n = a.length, o = f.length, p = [{
                                pts: l,
                                dts: l,
                                data: f
                            }]; o < n - 1;) if (h(a, o) && o + 5 < n) {
                                j(e, this.observer, a, o, e.manifestCodec);
                                var q = m(e, a, o, i, k);
                                if (!q) {
                                    B.b.log("Unable to parse AAC frame");
                                    break
                                }
                                o += q.length, l = q.sample.pts, k++
                            } else C.a.isHeader(a, o) ? (f = C.a.getID3Data(a, o), p.push({
                                pts: l,
                                dts: l,
                                data: f
                            }), o += f.length) : o++;
                            this.remuxer.remux(e, {samples: []}, {
                                samples: p,
                                inputTimeScale: 9e4
                            }, {samples: []}, b, c, d)
                        }, a.prototype.destroy = function () {
                        }, a
                    }(), E = D, F = c(45), G = {
                        BitratesMap: [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
                        SamplingRateMap: [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3],
                        SamplesCoefficients: [[0, 72, 144, 12], [0, 0, 0, 0], [0, 72, 144, 12], [0, 144, 144, 12]],
                        BytesInSlot: [0, 1, 1, 4],
                        appendFrame: function (a, b, c, d, e) {
                            if (!(c + 24 > b.length)) {
                                var f = this.parseHeader(b, c);
                                if (f && c + f.frameLength <= b.length) {
                                    var g = 9e4 * f.samplesPerFrame / f.sampleRate, h = d + e * g,
                                        i = {unit: b.subarray(c, c + f.frameLength), pts: h, dts: h};
                                    return a.config = [], a.channelCount = f.channelCount, a.samplerate = f.sampleRate, a.samples.push(i), a.len += f.frameLength, {
                                        sample: i,
                                        length: f.frameLength
                                    }
                                }
                            }
                        },
                        parseHeader: function (a, b) {
                            var c = a[b + 1] >> 3 & 3, d = a[b + 1] >> 1 & 3, e = a[b + 2] >> 4 & 15,
                                f = a[b + 2] >> 2 & 3, g = a[b + 2] >> 1 & 1;
                            if (1 !== c && 0 !== e && 15 !== e && 3 !== f) {
                                var h = 3 === c ? 3 - d : 3 === d ? 3 : 4, i = 1e3 * G.BitratesMap[14 * h + e - 1],
                                    j = 3 === c ? 0 : 2 === c ? 1 : 2, k = G.SamplingRateMap[3 * j + f],
                                    l = a[b + 3] >> 6 === 3 ? 1 : 2, m = G.SamplesCoefficients[c][d],
                                    n = G.BytesInSlot[d], o = 8 * m * n, p = parseInt(m * i / k + g, 10) * n;
                                return {sampleRate: k, channelCount: l, frameLength: p, samplesPerFrame: o}
                            }
                        },
                        isHeaderPattern: function (a, b) {
                            return 255 === a[b] && 224 === (224 & a[b + 1]) && 0 !== (6 & a[b + 1])
                        },
                        isHeader: function (a, b) {
                            return !!(b + 1 < a.length && this.isHeaderPattern(a, b))
                        },
                        probe: function (a, b) {
                            if (b + 1 < a.length && this.isHeaderPattern(a, b)) {
                                var c = 4, d = this.parseHeader(a, b), e = c;
                                d && d.frameLength && (e = d.frameLength);
                                var f = b + e;
                                if (f === a.length || f + 1 < a.length && this.isHeaderPattern(a, f)) return !0
                            }
                            return !1
                        }
                    }, H = G, I = function () {
                        function a(b) {
                            o(this, a), this.data = b, this.bytesAvailable = b.byteLength, this.word = 0, this.bitsAvailable = 0
                        }

                        return a.prototype.loadWord = function () {
                            var a = this.data, b = this.bytesAvailable, c = a.byteLength - b, d = new Uint8Array(4),
                                e = Math.min(4, b);
                            if (0 === e) throw new Error("no bytes available");
                            d.set(a.subarray(c, c + e)), this.word = new DataView(d.buffer).getUint32(0), this.bitsAvailable = 8 * e, this.bytesAvailable -= e
                        }, a.prototype.skipBits = function (a) {
                            var b = void 0;
                            this.bitsAvailable > a ? (this.word <<= a, this.bitsAvailable -= a) : (a -= this.bitsAvailable, b = a >> 3, a -= b >> 3, this.bytesAvailable -= b, this.loadWord(), this.word <<= a, this.bitsAvailable -= a)
                        }, a.prototype.readBits = function (a) {
                            var b = Math.min(this.bitsAvailable, a), c = this.word >>> 32 - b;
                            return a > 32 && B.b.error("Cannot read more than 32 bits at a time"), this.bitsAvailable -= b, this.bitsAvailable > 0 ? this.word <<= b : this.bytesAvailable > 0 && this.loadWord(), b = a - b, b > 0 && this.bitsAvailable ? c << b | this.readBits(b) : c
                        }, a.prototype.skipLZ = function () {
                            var a = void 0;
                            for (a = 0; a < this.bitsAvailable; ++a) if (0 !== (this.word & 2147483648 >>> a)) return this.word <<= a, this.bitsAvailable -= a, a;
                            return this.loadWord(), a + this.skipLZ()
                        }, a.prototype.skipUEG = function () {
                            this.skipBits(1 + this.skipLZ())
                        }, a.prototype.skipEG = function () {
                            this.skipBits(1 + this.skipLZ())
                        }, a.prototype.readUEG = function () {
                            var a = this.skipLZ();
                            return this.readBits(a + 1) - 1
                        }, a.prototype.readEG = function () {
                            var a = this.readUEG();
                            return 1 & a ? 1 + a >>> 1 : -1 * (a >>> 1)
                        }, a.prototype.readBoolean = function () {
                            return 1 === this.readBits(1)
                        }, a.prototype.readUByte = function () {
                            return this.readBits(8)
                        }, a.prototype.readUShort = function () {
                            return this.readBits(16)
                        }, a.prototype.readUInt = function () {
                            return this.readBits(32)
                        }, a.prototype.skipScalingList = function (a) {
                            var b = 8, c = 8, d = void 0, e = void 0;
                            for (d = 0; d < a; d++) 0 !== c && (e = this.readEG(), c = (b + e + 256) % 256), b = 0 === c ? b : c
                        }, a.prototype.readSPS = function () {
                            var a = 0, b = 0, c = 0, d = 0, e = void 0, f = void 0, g = void 0, h = void 0, i = void 0,
                                j = void 0, k = void 0, l = void 0, m = void 0, n = this.readUByte.bind(this),
                                o = this.readBits.bind(this), p = this.readUEG.bind(this),
                                q = this.readBoolean.bind(this), r = this.skipBits.bind(this),
                                s = this.skipEG.bind(this), t = this.skipUEG.bind(this),
                                u = this.skipScalingList.bind(this);
                            if (n(), e = n(), f = o(5), r(3), g = n(), t(), 100 === e || 110 === e || 122 === e || 244 === e || 44 === e || 83 === e || 86 === e || 118 === e || 128 === e) {
                                var v = p();
                                if (3 === v && r(1), t(), t(), r(1), q()) for (l = 3 !== v ? 8 : 12, m = 0; m < l; m++) q() && u(m < 6 ? 16 : 64)
                            }
                            t();
                            var w = p();
                            if (0 === w) p(); else if (1 === w) for (r(1), s(), s(), h = p(), m = 0; m < h; m++) s();
                            t(), r(1), i = p(), j = p(), k = o(1), 0 === k && r(1), r(1), q() && (a = p(), b = p(), c = p(), d = p());
                            var x = [1, 1];
                            if (q() && q()) {
                                var y = n();
                                switch (y) {
                                    case 1:
                                        x = [1, 1];
                                        break;
                                    case 2:
                                        x = [12, 11];
                                        break;
                                    case 3:
                                        x = [10, 11];
                                        break;
                                    case 4:
                                        x = [16, 11];
                                        break;
                                    case 5:
                                        x = [40, 33];
                                        break;
                                    case 6:
                                        x = [24, 11];
                                        break;
                                    case 7:
                                        x = [20, 11];
                                        break;
                                    case 8:
                                        x = [32, 11];
                                        break;
                                    case 9:
                                        x = [80, 33];
                                        break;
                                    case 10:
                                        x = [18, 11];
                                        break;
                                    case 11:
                                        x = [15, 11];
                                        break;
                                    case 12:
                                        x = [64, 33];
                                        break;
                                    case 13:
                                        x = [160, 99];
                                        break;
                                    case 14:
                                        x = [4, 3];
                                        break;
                                    case 15:
                                        x = [3, 2];
                                        break;
                                    case 16:
                                        x = [2, 1];
                                        break;
                                    case 255:
                                        x = [n() << 8 | n(), n() << 8 | n()]
                                }
                            }
                            return {
                                width: Math.ceil(16 * (i + 1) - 2 * a - 2 * b),
                                height: (2 - k) * (j + 1) * 16 - (k ? 2 : 4) * (c + d),
                                pixelRatio: x
                            }
                        }, a.prototype.readSliceType = function () {
                            return this.readUByte(), this.readUEG(), this.readUEG()
                        }, a
                    }(), J = I, K = function () {
                        function a(b, c, d, e) {
                            p(this, a), this.decryptdata = d, this.discardEPB = e, this.decrypter = new A.a(b, c, {removePKCS7Padding: !1})
                        }

                        return a.prototype.decryptBuffer = function (a, b) {
                            this.decrypter.decrypt(a, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, b)
                        }, a.prototype.decryptAacSample = function (a, b, c, d) {
                            var e = a[b].unit, f = e.subarray(16, e.length - e.length % 16),
                                g = f.buffer.slice(f.byteOffset, f.byteOffset + f.length), h = this;
                            this.decryptBuffer(g, function (f) {
                                f = new Uint8Array(f), e.set(f, 16), d || h.decryptAacSamples(a, b + 1, c)
                            })
                        }, a.prototype.decryptAacSamples = function (a, b, c) {
                            for (; ; b++) {
                                if (b >= a.length) return void c();
                                if (!(a[b].unit.length < 32)) {
                                    var d = this.decrypter.isSync();
                                    if (this.decryptAacSample(a, b, c, d), !d) return
                                }
                            }
                        }, a.prototype.getAvcEncryptedData = function (a) {
                            for (var b = 16 * Math.floor((a.length - 48) / 160) + 16, c = new Int8Array(b), d = 0, e = 32; e <= a.length - 16; e += 160, d += 16) c.set(a.subarray(e, e + 16), d);
                            return c
                        }, a.prototype.getAvcDecryptedUnit = function (a, b) {
                            b = new Uint8Array(b);
                            for (var c = 0, d = 32; d <= a.length - 16; d += 160, c += 16) a.set(b.subarray(c, c + 16), d);
                            return a
                        }, a.prototype.decryptAvcSample = function (a, b, c, d, e, f) {
                            var g = this.discardEPB(e.data), h = this.getAvcEncryptedData(g), i = this;
                            this.decryptBuffer(h.buffer, function (h) {
                                e.data = i.getAvcDecryptedUnit(g, h), f || i.decryptAvcSamples(a, b, c + 1, d)
                            })
                        }, a.prototype.decryptAvcSamples = function (a, b, c, d) {
                            for (; ; b++, c = 0) {
                                if (b >= a.length) return void d();
                                for (var e = a[b].units; !(c >= e.length); c++) {
                                    var f = e[c];
                                    if (!(f.length <= 48 || 1 !== f.type && 5 !== f.type)) {
                                        var g = this.decrypter.isSync();
                                        if (this.decryptAvcSample(a, b, c, d, f, g), !g) return
                                    }
                                }
                            }
                        }, a
                    }(), L = K, M = c(21), N = 10, O = function () {
                        function a() {
                            q(this, a), this.tsFramesArray = []
                        }

                        return a.prototype.getFrame = function (a, b) {
                            for (var c = null, d = 0; d < this.tsFramesArray.length; d++) if (this.tsFramesArray[d].keyid == a) {
                                c = this.tsFramesArray[d];
                                break
                            }
                            return null == c && (c = new P(a), this.tsFramesArray.length >= N && this.tsFramesArray.shift(), this.tsFramesArray.push(c)), c.getFrame(b)
                        }, a
                    }(), P = function () {
                        function a(b) {
                            q(this, a), this.keyid = b, this.frames = new Map
                        }

                        return a.prototype.getFrame = function (a) {
                            var b = this.frames.get(a);
                            return b || (b = new Q(a), this.frames.set(a, b)), b
                        }, a
                    }(), Q = function ha(a) {
                        q(this, ha), this.sn = a, this.audioStartPts = -1, this.audioEndPts = -1, this.nextAudioPts = -1, this.videoStartPts = -1, this.videoEndPts = -1, this.nextAvcDts = -1, this.audioStartPtsSample = -1, this.audioEndPtsSample = -1
                    }, R = O, S = {video: 1, audio: 2, id3: 3, text: 4}, T = function () {
                        function a(b, c, d, e) {
                            r(this, a), this.observer = b, this.config = d, this.typeSupported = e, this.remuxer = c, this.sampleAes = null, this.findKeyFrameTimes = 0, this.lastEndPts = 0, this.videoPtsCache = new R, this.avcMinSampleCount = -1, this.bFirstRemux = !0, this.method = M.a.CUT_BY_IDR, this.remuxer && this.remuxer.setTSDemuxer && this.remuxer.setTSDemuxer(this)
                        }

                        return a.prototype.getNextAudioPts = function (a, b) {
                            var c = b - 1;
                            if (!(c < 0)) {
                                var d = this.videoPtsCache.getFrame(a, c);
                                return d.nextAudioPts != -1 ? d.nextAudioPts : void 0
                            }
                        }, a.prototype.getNextAvcDts = function (a, b) {
                            var c = b - 1;
                            if (!(c < 0)) {
                                var d = this.videoPtsCache.getFrame(a, c);
                                return d.nextAvcDts != -1 ? d.nextAvcDts : void 0
                            }
                        }, a.prototype.getFrame = function (a, b) {
                            return this.videoPtsCache.getFrame(a, b)
                        }, a.prototype.setCutMethod = function (a, b) {
                            null != a && void 0 != a && (this.method = a, this.method == M.a.CUT_BY_SAMPLE && void 0 != b && null != b && (this.avcMinSampleCount = b))
                        }, a.prototype.setAVCMinSampleCount = function (a) {
                            this.avcMinSampleCount = a
                        }, a.prototype.setDecryptData = function (a) {
                            null != a && null != a.key && "SAMPLE-AES" === a.method ? this.sampleAes = new L(this.observer, this.config, a, this.discardEPB) : this.sampleAes = null
                        }, a.probe = function (b) {
                            var c = a._syncOffset(b);
                            return !(c < 0) && (c && B.b.warn("MPEG2-TS detected but first sync word found @ offset " + c + ", junk ahead ?"), !0)
                        }, a._syncOffset = function (a) {
                            for (var b = Math.min(1e3, a.length - 564), c = 0; c < b;) {
                                if (71 === a[c] && 71 === a[c + 188] && 71 === a[c + 376]) return c;
                                c++
                            }
                            return -1
                        }, a.createTrack = function (a, b) {
                            return {
                                container: "video" === a || "audio" === a ? "video/mp2t" : void 0,
                                type: a,
                                id: S[a],
                                pid: -1,
                                inputTimeScale: 9e4,
                                sequenceNumber: 0,
                                samples: [],
                                len: 0,
                                dropped: "video" === a ? 0 : void 0,
                                isAAC: "audio" === a || void 0,
                                duration: "audio" === a ? b : void 0
                            }
                        }, a.prototype.resetInitSegment = function (b, c, d, e) {
                            this.pmtParsed = !1, this._pmtId = -1, this._avcTrack = a.createTrack("video", e), this._audioTrack = a.createTrack("audio", e), this._id3Track = a.createTrack("id3", e), this._txtTrack = a.createTrack("text", e), this.aacOverFlow = null, this.aacLastPTS = null, this.avcSample = null, this.audioCodec = c, this.videoCodec = d, this._duration = e, this.idraacLastPts = null
                        }, a.prototype.getLastPts = function () {
                            return this.lastEndPts
                        }, a.prototype.printData = function (a, b, c, d) {
                            for (var e = new Uint8Array(a), f = "tsdemuxer(" + d + "):", g = Math.min(c + b, e.byteLength), h = b; h < g; h++) f += "0x0" + e[h].toString(16).toUpperCase() + " ";
                            B.b.log(f)
                        }, a.prototype.resetTimeStamp = function () {
                        }, a.prototype.append = function (a, b, c, d, e) {
                            var f = e.bFirstPart, g = e.bEndPart, h = e.fileOffset;
                            1 == f && (this.pmtParsed = !1, this._pmtId = -1, this._avcTrack.samples = [], this._avcTrack.len = 0, this._audioTrack.samples = [], this._audioTrack.len = 0, this._id3Track.len = 0, this._id3Track.samples = [], this._txtTrack.len = 0, this._txtTrack.samples = [], this.avcSample = null, this._avcTrack.pesData = null, this._audioTrack.pesData = null, this._id3Track.pesData = null, this.findKeyFrameTimes = 0, 0 == h && (this._avcTrack.pid = -1, this._audioTrack.pid = -1, this._id3Track.pid = -1, this._txtTrack.pid = -1), c || (this.aacOverFlow = null, this.aacLastPTS = null, this.idraacLastPts = null));
                            var i, j, k, l, m, n, o = e.canDemuxLength, p = !1;
                            this.contiguous = c;
                            var q = this.pmtParsed, r = this._avcTrack, s = this._audioTrack, t = this._id3Track,
                                u = r.pid, v = s.pid, w = t.pid, x = this._pmtId, y = r.pesData, A = s.pesData,
                                C = t.pesData, D = this._parsePAT, E = this._parsePMT, F = this._parsePES,
                                G = this._parseAVCPES.bind(this), H = this._parseAACPES.bind(this),
                                I = this._parseMPEGPES.bind(this), J = this._parseID3PES.bind(this), K = !1, L = !1,
                                N = !1;
                            do {
                                var O = h;
                                for (o -= o % 188, i = O; i < o + O; i += 188) {
                                    if (71 !== a[i]) return B.b.error(z.c.PARSING_ERROR, "jy data error start:" + i), e.error = M.b.DATA_ERROR, e.errorObj.pos = i, -1;
                                    if (j = !!(64 & a[i + 1]), k = ((31 & a[i + 1]) << 8) + a[i + 2], l = (48 & a[i + 3]) >> 4, l > 1) {
                                        if (m = i + 5 + a[i + 4], m === i + 188) continue
                                    } else m = i + 4;
                                    switch (k) {
                                        case u:
                                            if (j && (y && (n = F(y)) && void 0 !== n.pts && G(n, !1, e.bPassUntilIDR), y = {
                                                data: [],
                                                size: 0
                                            }), e.bPassUntilIDR && this.findKeyFrameTimes >= 1 && (e.bPassUntilIDR = !1), this.method == M.a.CUT_BY_IDR) {
                                                if (2 == this.findKeyFrameTimes) {
                                                    K = !0;
                                                    break
                                                }
                                            } else if (this.method == M.a.CUT_BY_SAMPLE && this.avcMinSampleCount != -1 && r.samples.length >= this.avcMinSampleCount) {
                                                L = !0;
                                                break
                                            }
                                            y && (y.data.push(a.subarray(m, i + 188)), y.size += i + 188 - m);
                                            break;
                                        case v:
                                            if (j) {
                                                if (A && (n = F(A)) && void 0 !== n.pts) if (s.isAAC) {
                                                    var P = H(n, e.bPassUntilIDR);
                                                    if (P === !1) return -2
                                                } else I(n);
                                                A = {data: [], size: 0}
                                            }
                                            A && (A.data.push(a.subarray(m, i + 188)), A.size += i + 188 - m);
                                            break;
                                        case w:
                                            j && (C && (n = F(C)) && void 0 !== n.pts && J(n), C = {
                                                data: [],
                                                size: 0
                                            }), C && (C.data.push(a.subarray(m, i + 188)), C.size += i + 188 - m);
                                            break;
                                        case 0:
                                            j && (m += a[m] + 1), x = this._pmtId = D(a, m);
                                            break;
                                        case x:
                                            j && (m += a[m] + 1);
                                            var Q = E(a, m, this.typeSupported.mpeg === !0 || this.typeSupported.mp3 === !0, null != this.sampleAes);
                                            if (u = Q.avc, u > 0 && (r.pid = u), v = Q.audio, v > 0 && (s.pid = v, s.isAAC = Q.isAAC), w = Q.id3, w > 0 && (t.pid = w), p && !q) return B.b.log("start:" + i + " unknownPIDs:" + p + " avcId:" + u + ",audioId:" + v + " sn:" + e.sn + " pmtId:" + x + " bFirstPart:" + f), B.b.log("reparse from beginning"), p = !1, e.error = M.b.DATA_ERROR, e.errorObj.pos = i - 188, -1;
                                            q = this.pmtParsed = !0;
                                            break;
                                        case 17:
                                        case 8191:
                                            break;
                                        default:
                                            p = !0
                                    }
                                    if (this.method == M.a.CUT_BY_IDR && K) break;
                                    if (L) break
                                }
                                var R = !1;
                                if (this.method == M.a.CUT_BY_IDR ? g && 1 == this.findKeyFrameTimes && (R = !0) : this.method == M.a.CUT_BY_SAMPLE ? !L && g && (R = !0) : this.method == M.a.CUT_BY_TS && g && (R = !0), R && y && (n = F(y)) && void 0 !== n.pts ? (G(n, !0, e.bPassUntilIDR), r.pesData = null) : r.pesData = y, R && A && (n = F(A)) && void 0 !== n.pts ? (s.isAAC ? H(n, e.bPassUntilIDR) : I(n), s.pesData = null) : (A && A.size, s.pesData = A), C && (n = F(C)) && void 0 !== n.pts ? (J(n), t.pesData = null) : t.pesData = C, this.method == M.a.CUT_BY_IDR) {
                                    if (!K && !g) break;
                                    this.findKeyFrameTimes--
                                } else if (this.method == M.a.CUT_BY_SAMPLE) {
                                    if (!L && !g) break
                                } else if (this.method == M.a.CUT_BY_TS && !g) break;
                                var S = c;
                                if (this.method == M.a.CUT_BY_IDR && (S = e.idrRemuxContinous), this.bFirstRemux && !g) {
                                    if (!s.samples || 0 == s.samples.length) return i;
                                    this.bFirstRemux = !1
                                }
                                null == this.sampleAes ? this.remuxer.remux(s, r, t, this._txtTrack, b, S, d, R, e) : this.decryptAndRemux(s, r, t, this._txtTrack, b, S, d, R, e), e.remux = !0, N = !0, this.idraacLastPts = this.aacLastPTS
                            } while (!1);
                            return i
                        }, a.prototype.decryptAndRemux = function (a, b, c, d, e, f, g, h) {
                            if (a.samples && a.isAAC) {
                                var i = this;
                                this.sampleAes.decryptAacSamples(a.samples, 0, function () {
                                    i.decryptAndRemuxAvc(a, b, c, d, e, f, g)
                                })
                            } else this.decryptAndRemuxAvc(a, b, c, d, e, f, g)
                        }, a.prototype.decryptAndRemuxAvc = function (a, b, c, d, e, f, g) {
                            if (b.samples) {
                                var h = this;
                                this.sampleAes.decryptAvcSamples(b.samples, 0, 0, function () {
                                    h.remuxer.remux(a, b, c, d, e, f, g)
                                })
                            } else this.remuxer.remux(a, b, c, d, e, f, g)
                        }, a.prototype.destroy = function () {
                            this._initPTS = this._initDTS = void 0, this._duration = 0
                        }, a.prototype._parsePAT = function (a, b) {
                            return (31 & a[b + 10]) << 8 | a[b + 11]
                        }, a.prototype._parsePMT = function (a, b, c, d) {
                            var e = void 0, f = void 0, g = void 0, h = void 0,
                                i = {audio: -1, avc: -1, id3: -1, isAAC: !0};
                            for (e = (15 & a[b + 1]) << 8 | a[b + 2], f = b + 3 + e - 4, g = (15 & a[b + 10]) << 8 | a[b + 11], b += 12 + g; b < f;) {
                                switch (h = (31 & a[b + 1]) << 8 | a[b + 2], a[b]) {
                                    case 207:
                                        if (!d) {
                                            B.b.log("unkown stream type:" + a[b]);
                                            break
                                        }
                                    case 15:
                                        i.audio === -1 && (i.audio = h);
                                        break;
                                    case 21:
                                        i.id3 === -1 && (i.id3 = h);
                                        break;
                                    case 219:
                                        if (!d) {
                                            B.b.log("unkown stream type:" + a[b]);
                                            break
                                        }
                                    case 27:
                                        i.avc === -1 && (i.avc = h);
                                        break;
                                    case 3:
                                    case 4:
                                        c ? i.audio === -1 && (i.audio = h, i.isAAC = !1) : B.b.log("MPEG audio found, not supported in this browser for now");
                                        break;
                                    case 36:
                                        B.b.warn("HEVC stream type found, not supported for now");
                                        break;
                                    default:
                                        B.b.log("unkown stream type:" + a[b])
                                }
                                b += ((15 & a[b + 3]) << 8 | a[b + 4]) + 5
                            }
                            return i
                        }, a.prototype._parsePES = function (a) {
                            var b = 0, c = void 0, d = void 0, e = void 0, f = void 0, g = void 0, h = void 0,
                                i = void 0, j = void 0, k = void 0, l = a.data;
                            if (!a || 0 === a.size) return null;
                            for (; l[0].length < 19 && l.length > 1;) {
                                var m = new Uint8Array(l[0].length + l[1].length);
                                m.set(l[0]), m.set(l[1], l[0].length), l[0] = m, l.splice(1, 1)
                            }
                            if (c = l[0], e = (c[0] << 16) + (c[1] << 8) + c[2], 1 === e) {
                                if (f = (c[4] << 8) + c[5], f && f > a.size - 6) return null;
                                d = c[7], 192 & d && (i = 536870912 * (14 & c[9]) + 4194304 * (255 & c[10]) + 16384 * (254 & c[11]) + 128 * (255 & c[12]) + (254 & c[13]) / 2, i > 4294967295 && (i -= 8589934592), 64 & d ? (j = 536870912 * (14 & c[14]) + 4194304 * (255 & c[15]) + 16384 * (254 & c[16]) + 128 * (255 & c[17]) + (254 & c[18]) / 2, j > 4294967295 && (j -= 8589934592), i - j > 54e5 && (B.b.warn(Math.round((i - j) / 9e4) + "s delta between PTS and DTS, align them"), i = j)) : j = i), g = c[8], k = g + 9, a.size -= k, h = new Uint8Array(a.size);
                                for (var n = 0, o = l.length; n < o; n++) {
                                    c = l[n];
                                    var p = c.byteLength;
                                    if (k) {
                                        if (k > p) {
                                            k -= p;
                                            continue
                                        }
                                        c = c.subarray(k), p -= k, k = 0
                                    }
                                    h.set(c, b), b += p
                                }
                                return f && (f -= g + 3), {data: h, pts: i, dts: j, len: f}
                            }
                            return null
                        }, a.prototype.pushAccesUnit = function (a, b) {
                            if (a.units.length && a.frame) {
                                var c = b.samples, d = c.length;
                                !this.config.forceKeyFrameOnDiscontinuity || a.key === !0 || b.sps && (d || this.contiguous) ? (a.id = d, c.push(a)) : (b.dropped++, B.b.log("jy drop pushAccesUnit forceKey:" + this.config.forceKeyFrameOnDiscontinuity + " key:" + a.key + " sps:" + b.sps + " nbSamples:" + d + " contiguous:" + this.contiguous + " "))
                            }
                            a.debug.length && B.b.log(a.pts + "/" + a.dts + ":" + a.debug)
                        }, a.prototype._parseAVCPES = function (a, b, c) {
                            var d = this, e = this._avcTrack, f = this._parseAVCNALu(a.data), g = !1, h = void 0,
                                i = this.avcSample, j = void 0, k = !1, l = void 0, m = this.pushAccesUnit.bind(this),
                                n = function (a, b, c, d) {
                                    return {key: a, pts: b, dts: c, units: [], debug: d}
                                };
                            a.data = null, i && f.length && !e.audFound && (m(i, e), i = this.avcSample = n(!1, a.pts, a.dts, "")), f.forEach(function (b) {
                                switch (b.type) {
                                    case 1:
                                        if (c) {
                                            j = !1;
                                            break
                                        }
                                        j = !0, i || (i = d.avcSample = n(!0, a.pts, a.dts, "")), g && (i.debug += "NDR "), i.frame = !0;
                                        var f = b.data;
                                        if (k && f.length > 4) {
                                            var o = new J(f).readSliceType();
                                            2 !== o && 4 !== o && 7 !== o && 9 !== o || (i.key = !0)
                                        }
                                        break;
                                    case 5:
                                        c && (c = !1), d.findKeyFrameTimes++, j = !0, i || (i = d.avcSample = n(!0, a.pts, a.dts, "")), g && (i.debug += "IDR "), i.key = !0, i.frame = !0;
                                        break;
                                    case 6:
                                        j = !0, g && i && (i.debug += "SEI "), h = new J(d.discardEPB(b.data)), h.readUByte();
                                        for (var p = 0, q = 0, r = !1, s = 0; !r && h.bytesAvailable > 1;) {
                                            p = 0;
                                            do s = h.readUByte(), p += s; while (255 === s);
                                            q = 0;
                                            do s = h.readUByte(), q += s; while (255 === s);
                                            if (4 === p && 0 !== h.bytesAvailable) {
                                                r = !0;
                                                var t = h.readUByte();
                                                if (181 === t) {
                                                    var u = h.readUShort();
                                                    if (49 === u) {
                                                        var v = h.readUInt();
                                                        if (1195456820 === v) {
                                                            var w = h.readUByte();
                                                            if (3 === w) {
                                                                var x = h.readUByte(), y = h.readUByte(), z = 31 & x,
                                                                    A = [x, y];
                                                                for (l = 0; l < z; l++) A.push(h.readUByte()), A.push(h.readUByte()), A.push(h.readUByte());
                                                                d._insertSampleInOrder(d._txtTrack.samples, {
                                                                    type: 3,
                                                                    pts: a.pts,
                                                                    bytes: A
                                                                })
                                                            }
                                                        }
                                                    }
                                                }
                                            } else if (q < h.bytesAvailable) for (l = 0; l < q; l++) h.readUByte()
                                        }
                                        break;
                                    case 7:
                                        if (j = !0, k = !0, g && i && (i.debug += "SPS "), !e.sps) {
                                            h = new J(b.data);
                                            var B = h.readSPS();
                                            e.width = B.width, e.height = B.height, e.pixelRatio = B.pixelRatio, e.sps = [b.data], e.duration = d._duration;
                                            var C = b.data.subarray(1, 4), D = "avc1.";
                                            for (l = 0; l < 3; l++) {
                                                var E = C[l].toString(16);
                                                E.length < 2 && (E = "0" + E), D += E
                                            }
                                            e.codec = D
                                        }
                                        break;
                                    case 8:
                                        j = !0, g && i && (i.debug += "PPS "), e.pps || (e.pps = [b.data]);
                                        break;
                                    case 9:
                                        j = !1, e.audFound = !0, i && m(i, e), i = d.avcSample = n(!1, a.pts, a.dts, g ? "AUD " : "");
                                        break;
                                    case 12:
                                        j = !1;
                                        break;
                                    default:
                                        j = !1, i && (i.debug += "unknown NAL " + b.type + " ")
                                }
                                if (i && j) {
                                    var F = i.units;
                                    F.push(b)
                                }
                            }), b && i && (m(i, e), this.avcSample = null)
                        }, a.prototype._insertSampleInOrder = function (a, b) {
                            var c = a.length;
                            if (c > 0) {
                                if (b.pts >= a[c - 1].pts) a.push(b); else for (var d = c - 1; d >= 0; d--) if (b.pts < a[d].pts) {
                                    a.splice(d, 0, b);
                                    break
                                }
                            } else a.push(b)
                        }, a.prototype._getLastNalUnit = function () {
                            var a = this.avcSample, b = void 0;
                            if (!a || 0 === a.units.length) {
                                var c = this._avcTrack, d = c.samples;
                                a = d[d.length - 1]
                            }
                            if (a) {
                                var e = a.units;
                                b = e[e.length - 1]
                            }
                            return b
                        }, a.prototype._parseAVCNALu = function (a) {
                            var b = 0, c = a.byteLength, d = void 0, e = void 0, f = this._avcTrack,
                                g = f.naluState || 0, h = g, i = [], j = void 0, k = void 0, l = -1, m = void 0;
                            for (g === -1 && (l = 0, m = 31 & a[0], g = 0, b = 1); b < c;) if (d = a[b++], g) if (1 !== g) if (d) if (1 === d) {
                                if (l >= 0) j = {data: a.subarray(l, b - g - 1), type: m}, i.push(j); else {
                                    var n = this._getLastNalUnit();
                                    if (n && (h && b <= 4 - h && n.state && (n.data = n.data.subarray(0, n.data.byteLength - h)), e = b - g - 1, e > 0)) {
                                        var o = new Uint8Array(n.data.byteLength + e);
                                        o.set(n.data, 0), o.set(a.subarray(0, e), n.data.byteLength), n.data = o
                                    }
                                }
                                b < c ? (k = 31 & a[b], l = b, m = k, g = 0) : g = -1
                            } else g = 0; else g = 3; else g = d ? 0 : 2; else g = d ? 0 : 1;
                            if (l >= 0 && g >= 0 && (j = {
                                data: a.subarray(l, c),
                                type: m,
                                state: g
                            }, i.push(j)), 0 === i.length) {
                                var p = this._getLastNalUnit();
                                if (p) {
                                    var q = new Uint8Array(p.data.byteLength + a.byteLength);
                                    q.set(p.data, 0), q.set(a, p.data.byteLength), p.data = q
                                }
                            }
                            return f.naluState = g, i
                        }, a.prototype.discardEPB = function (a) {
                            for (var b = a.byteLength, c = [], d = 1, e = void 0, f = void 0; d < b - 2;) 0 === a[d] && 0 === a[d + 1] && 3 === a[d + 2] ? (c.push(d + 2), d += 2) : d++;
                            if (0 === c.length) return a;
                            e = b - c.length, f = new Uint8Array(e);
                            var g = 0;
                            for (d = 0; d < e; g++, d++) g === c[0] && (g++, c.shift()), f[d] = a[g];
                            return f
                        }, a.prototype._parseAACPES = function (a, b) {
                            if (!b) {
                                var c = this._audioTrack, d = a.data, e = a.pts, f = 0, g = this.aacOverFlow,
                                    i = this.aacLastPTS, l = void 0, n = void 0, o = void 0, p = void 0, q = void 0;
                                if (g) {
                                    var r = new Uint8Array(g.byteLength + d.byteLength);
                                    r.set(g, 0), r.set(d, g.byteLength), d = r
                                }
                                for (o = f, q = d.length; o < q - 1 && !h(d, o); o++) ;
                                if (o) {
                                    var s = void 0, t = void 0;
                                    if (o < q - 1 ? (s = "AAC PES did not start with ADTS header,offset:" + o, t = !1) : (s = "no ADTS header found in AAC PES", t = !0), B.b.warn("parsing error:" + s), this.observer.trigger(y.a.ERROR, {
                                        type: z.b.MEDIA_ERROR,
                                        details: z.a.FRAG_PARSING_ERROR,
                                        fatal: t,
                                        reason: s
                                    }), t) return
                                }
                                if (j(c, this.observer, d, o, this.audioCodec), n = 0, l = k(c.samplerate), g && i) {
                                    var u = i + l;
                                    Math.abs(u - e) > 1 && (B.b.log("AAC: align PTS for overlapping frames by " + Math.round((u - e) / 90)), e = u)
                                }
                                if (this.method == M.a.CUT_BY_IDR && this.idraacLastPts) {
                                    var v = this.idraacLastPts + l;
                                    if (v - e >= l - 10) return B.b.log("audio dts [should:" + v + ",cur:" + e + "] not in seq"), !1
                                }
                                for (; o < q;) if (h(d, o) && o + 5 < q) {
                                    var w = m(c, d, o, e, n);
                                    if (!w) break;
                                    o += w.length, p = w.sample.pts, n++
                                } else o++;
                                g = o < q ? d.subarray(o, q) : null, this.aacOverFlow = g, this.aacLastPTS = p
                            }
                        }, a.prototype._parseMPEGPES = function (a) {
                            for (var b = a.data, c = b.length, d = 0, e = 0, f = a.pts; e < c;) if (H.isHeader(b, e)) {
                                var g = H.appendFrame(this._audioTrack, b, e, f, d);
                                if (!g) break;
                                e += g.length, d++
                            } else e++
                        }, a.prototype._parseID3PES = function (a) {
                            this._id3Track.samples.push(a)
                        }, a
                    }(), U = T, V = function () {
                        function a(b, c, d) {
                            s(this, a), this.observer = b, this.config = d, this.remuxer = c
                        }

                        return a.prototype.resetInitSegment = function (a, b, c, d) {
                            this._audioTrack = {
                                container: "audio/mpeg",
                                type: "audio",
                                id: -1,
                                sequenceNumber: 0,
                                isAAC: !1,
                                samples: [],
                                len: 0,
                                manifestCodec: b,
                                duration: d,
                                inputTimeScale: 9e4
                            }
                        }, a.prototype.resetTimeStamp = function () {
                        }, a.probe = function (a) {
                            var b = void 0, c = void 0, d = C.a.getID3Data(a, 0);
                            if (d && void 0 !== C.a.getTimeStamp(d)) for (b = d.length, c = Math.min(a.length - 1, b + 100); b < c; b++) if (H.probe(a, b)) return B.b.log("MPEG Audio sync word found !"), !0;
                            return !1
                        }, a.prototype.append = function (a, b, c, d) {
                            for (var e = C.a.getID3Data(a, 0), f = C.a.getTimeStamp(e), g = f ? 90 * f : 9e4 * b, h = e.length, i = a.length, j = 0, k = 0, l = this._audioTrack, m = [{
                                pts: g,
                                dts: g,
                                data: e
                            }]; h < i;) if (H.isHeader(a, h)) {
                                var n = H.appendFrame(l, a, h, g, j);
                                if (!n) break;
                                h += n.length, k = n.sample.pts, j++
                            } else C.a.isHeader(a, h) ? (e = C.a.getID3Data(a, h), m.push({
                                pts: k,
                                dts: k,
                                data: e
                            }), h += e.length) : h++;
                            this.remuxer.remux(l, {samples: []}, {
                                samples: m,
                                inputTimeScale: 9e4
                            }, {samples: []}, b, c, d)
                        }, a.prototype.destroy = function () {
                        }, a
                    }(), W = V, X = function () {
                        function a() {
                            t(this, a)
                        }

                        return a.getSilentFrame = function (a, b) {
                            switch (a) {
                                case"mp4a.40.2":
                                    if (1 === b) return new Uint8Array([0, 200, 0, 128, 35, 128]);
                                    if (2 === b) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                                    if (3 === b) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                                    if (4 === b) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                                    if (5 === b) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                                    if (6 === b) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                                    break;
                                default:
                                    if (1 === b) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                    if (2 === b) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                    if (3 === b) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                            }
                            return null
                        }, a
                    }(), Y = X, Z = Math.pow(2, 32) - 1, $ = function () {
                        function a() {
                            u(this, a)
                        }

                        return a.init = function () {
                            a.types = {
                                avc1: [],
                                avcC: [],
                                btrt: [],
                                dinf: [],
                                dref: [],
                                esds: [],
                                ftyp: [],
                                hdlr: [],
                                mdat: [],
                                mdhd: [],
                                mdia: [],
                                mfhd: [],
                                minf: [],
                                moof: [],
                                moov: [],
                                mp4a: [],
                                ".mp3": [],
                                mvex: [],
                                mvhd: [],
                                pasp: [],
                                sdtp: [],
                                stbl: [],
                                stco: [],
                                stsc: [],
                                stsd: [],
                                stsz: [],
                                stts: [],
                                tfdt: [],
                                tfhd: [],
                                traf: [],
                                trak: [],
                                trun: [],
                                trex: [],
                                tkhd: [],
                                vmhd: [],
                                smhd: []
                            };
                            var b = void 0;
                            for (b in a.types) a.types.hasOwnProperty(b) && (a.types[b] = [b.charCodeAt(0), b.charCodeAt(1), b.charCodeAt(2), b.charCodeAt(3)]);
                            var c = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                                d = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                            a.HDLR_TYPES = {video: c, audio: d};
                            var e = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                                f = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                            a.STTS = a.STSC = a.STCO = f, a.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), a.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]), a.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]), a.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                            var g = new Uint8Array([105, 115, 111, 109]), h = new Uint8Array([97, 118, 99, 49]),
                                i = new Uint8Array([0, 0, 0, 1]);
                            a.FTYP = a.box(a.types.ftyp, g, i, g, h), a.DINF = a.box(a.types.dinf, a.box(a.types.dref, e))
                        }, a.box = function (a) {
                            for (var b = Array.prototype.slice.call(arguments, 1), c = 8, d = b.length, e = d, f = void 0; d--;) c += b[d].byteLength;
                            for (f = new Uint8Array(c), f[0] = c >> 24 & 255, f[1] = c >> 16 & 255, f[2] = c >> 8 & 255, f[3] = 255 & c, f.set(a, 4), d = 0, c = 8; d < e; d++) f.set(b[d], c), c += b[d].byteLength;
                            return f
                        }, a.hdlr = function (b) {
                            return a.box(a.types.hdlr, a.HDLR_TYPES[b])
                        }, a.mdat = function (b) {
                            return a.box(a.types.mdat, b)
                        }, a.mdhd = function (b, c) {
                            c *= b;
                            var d = Math.floor(c / (Z + 1)), e = Math.floor(c % (Z + 1));
                            return a.box(a.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, b >> 24 & 255, b >> 16 & 255, b >> 8 & 255, 255 & b, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e, 85, 196, 0, 0]))
                        }, a.mdia = function (b) {
                            return a.box(a.types.mdia, a.mdhd(b.timescale, b.duration), a.hdlr(b.type), a.minf(b))
                        }, a.mfhd = function (b) {
                            return a.box(a.types.mfhd, new Uint8Array([0, 0, 0, 0, b >> 24, b >> 16 & 255, b >> 8 & 255, 255 & b]))
                        }, a.minf = function (b) {
                            return "audio" === b.type ? a.box(a.types.minf, a.box(a.types.smhd, a.SMHD), a.DINF, a.stbl(b)) : a.box(a.types.minf, a.box(a.types.vmhd, a.VMHD), a.DINF, a.stbl(b))
                        }, a.moof = function (b, c, d) {
                            return a.box(a.types.moof, a.mfhd(b), a.traf(d, c))
                        }, a.moov = function (b) {
                            for (var c = b.length, d = []; c--;) d[c] = a.trak(b[c]);
                            return a.box.apply(null, [a.types.moov, a.mvhd(b[0].timescale, b[0].duration)].concat(d).concat(a.mvex(b)))
                        }, a.mvex = function (b) {
                            for (var c = b.length, d = []; c--;) d[c] = a.trex(b[c]);
                            return a.box.apply(null, [a.types.mvex].concat(d))
                        }, a.mvhd = function (b, c) {
                            c *= b;
                            var d = Math.floor(c / (Z + 1)), e = Math.floor(c % (Z + 1)),
                                f = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, b >> 24 & 255, b >> 16 & 255, b >> 8 & 255, 255 & b, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                            return a.box(a.types.mvhd, f)
                        }, a.sdtp = function (b) {
                            var c = b.samples || [], d = new Uint8Array(4 + c.length), e = void 0, f = void 0;
                            for (f = 0; f < c.length; f++) e = c[f].flags, d[f + 4] = e.dependsOn << 4 | e.isDependedOn << 2 | e.hasRedundancy;
                            return a.box(a.types.sdtp, d)
                        }, a.stbl = function (b) {
                            return a.box(a.types.stbl, a.stsd(b), a.box(a.types.stts, a.STTS), a.box(a.types.stsc, a.STSC), a.box(a.types.stsz, a.STSZ), a.box(a.types.stco, a.STCO))
                        }, a.avc1 = function (b) {
                            var c = [], d = [], e = void 0, f = void 0, g = void 0;
                            for (e = 0; e < b.sps.length; e++) f = b.sps[e], g = f.byteLength, c.push(g >>> 8 & 255), c.push(255 & g), c = c.concat(Array.prototype.slice.call(f));
                            for (e = 0; e < b.pps.length; e++) f = b.pps[e], g = f.byteLength, d.push(g >>> 8 & 255), d.push(255 & g), d = d.concat(Array.prototype.slice.call(f));
                            var h = a.box(a.types.avcC, new Uint8Array([1, c[3], c[4], c[5], 255, 224 | b.sps.length].concat(c).concat([b.pps.length]).concat(d))),
                                i = b.width, j = b.height, k = b.pixelRatio[0], l = b.pixelRatio[1];
                            return a.box(a.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i >> 8 & 255, 255 & i, j >> 8 & 255, 255 & j, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), h, a.box(a.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), a.box(a.types.pasp, new Uint8Array([k >> 24, k >> 16 & 255, k >> 8 & 255, 255 & k, l >> 24, l >> 16 & 255, l >> 8 & 255, 255 & l])))
                        }, a.esds = function (a) {
                            var b = a.config.length;
                            return new Uint8Array([0, 0, 0, 0, 3, 23 + b, 0, 1, 0, 4, 15 + b, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([b]).concat(a.config).concat([6, 1, 2]))
                        }, a.mp4a = function (b) {
                            var c = b.samplerate;
                            return a.box(a.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, b.channelCount, 0, 16, 0, 0, 0, 0, c >> 8 & 255, 255 & c, 0, 0]), a.box(a.types.esds, a.esds(b)))
                        }, a.mp3 = function (b) {
                            var c = b.samplerate;
                            return a.box(a.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, b.channelCount, 0, 16, 0, 0, 0, 0, c >> 8 & 255, 255 & c, 0, 0]))
                        }, a.stsd = function (b) {
                            return "audio" === b.type ? b.isAAC || "mp3" !== b.codec ? a.box(a.types.stsd, a.STSD, a.mp4a(b)) : a.box(a.types.stsd, a.STSD, a.mp3(b)) : a.box(a.types.stsd, a.STSD, a.avc1(b))
                        }, a.tkhd = function (b) {
                            var c = b.id, d = b.duration * b.timescale, e = b.width, f = b.height,
                                g = Math.floor(d / (Z + 1)), h = Math.floor(d % (Z + 1));
                            return a.box(a.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, c >> 24 & 255, c >> 16 & 255, c >> 8 & 255, 255 & c, 0, 0, 0, 0, g >> 24, g >> 16 & 255, g >> 8 & 255, 255 & g, h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, e >> 8 & 255, 255 & e, 0, 0, f >> 8 & 255, 255 & f, 0, 0]))
                        }, a.traf = function (b, c) {
                            var d = a.sdtp(b), e = b.id, f = Math.floor(c / (Z + 1)), g = Math.floor(c % (Z + 1));
                            return a.box(a.types.traf, a.box(a.types.tfhd, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e])), a.box(a.types.tfdt, new Uint8Array([1, 0, 0, 0, f >> 24, f >> 16 & 255, f >> 8 & 255, 255 & f, g >> 24, g >> 16 & 255, g >> 8 & 255, 255 & g])), a.trun(b, d.length + 16 + 20 + 8 + 16 + 8 + 8), d)
                        }, a.trak = function (b) {
                            return b.duration = b.duration || 4294967295, a.box(a.types.trak, a.tkhd(b), a.mdia(b))
                        }, a.trex = function (b) {
                            var c = b.id;
                            return a.box(a.types.trex, new Uint8Array([0, 0, 0, 0, c >> 24, c >> 16 & 255, c >> 8 & 255, 255 & c, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                        }, a.trun = function (b, c) {
                            var d = b.samples || [], e = d.length, f = 12 + 16 * e, g = new Uint8Array(f), h = void 0,
                                i = void 0, j = void 0, k = void 0, l = void 0, m = void 0;
                            for (c += 8 + f, g.set([0, 0, 15, 1, e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c], 0), h = 0; h < e; h++) i = d[h], j = i.duration, k = i.size, l = i.flags, m = i.cts, g.set([j >>> 24 & 255, j >>> 16 & 255, j >>> 8 & 255, 255 & j, k >>> 24 & 255, k >>> 16 & 255, k >>> 8 & 255, 255 & k, l.isLeading << 2 | l.dependsOn, l.isDependedOn << 6 | l.hasRedundancy << 4 | l.paddingValue << 1 | l.isNonSync, 61440 & l.degradPrio, 15 & l.degradPrio, m >>> 24 & 255, m >>> 16 & 255, m >>> 8 & 255, 255 & m], 12 + 16 * h);
                            return a.box(a.types.trun, g)
                        }, a.initSegment = function (b) {
                            a.types || a.init();
                            var c = a.moov(b), d = void 0;
                            return d = new Uint8Array(a.FTYP.byteLength + c.byteLength), d.set(a.FTYP), d.set(c, a.FTYP.byteLength), d
                        }, a
                    }(), _ = $, aa = (c(5), c(4)), ba = 1e4, ca = function () {
                        function a(b, c, d, e) {
                            v(this, a), this.observer = b, this.config = c, this.typeSupported = d;
                            var f = navigator.userAgent;
                            this.isSafari = e && e.indexOf("Apple") > -1 && f && !f.match("CriOS"), this.ISGenerated = !1, this.tsdemuxer = null
                        }

                        return a.prototype.destroy = function () {
                        }, a.prototype.setTSDemuxer = function (a) {
                            this.tsdemuxer = a
                        }, a.prototype.resetTimeStamp = function (a) {
                            this._initPTS = this._initDTS = a
                        }, a.prototype.resetInitSegment = function () {
                            this.ISGenerated = !1
                        }, a.prototype.remux = function (a, b, c, d, e, f, g, h, i) {
                            if (this.ISGenerated || this.generateIS(a, b, e), this.ISGenerated) {
                                var j = a.samples.length, k = b.samples.length, l = e, m = e;
                                if (j && k) {
                                    var n = (a.samples[0].dts - b.samples[0].dts) / b.inputTimeScale;
                                    l += Math.max(0, n), m += Math.max(0, -n)
                                }
                                if (j) {
                                    a.timescale || (B.b.warn("regenerate InitSegment as audio detected"), this.generateIS(a, b, e));
                                    var o = this.remuxAudio(a, l, f, g, h, i);
                                    if (k) {
                                        var p = void 0;
                                        o && (p = o.endPTS - o.startPTS), b.timescale || (B.b.warn("regenerate InitSegment as video detected"), this.generateIS(a, b, e)), this.remuxVideo(b, m, f, p, g, h, i)
                                    }
                                } else if (k) {
                                    var q = this.remuxVideo(b, m, f, 0, g, h, i);
                                    q && a.codec
                                }
                            }
                            c.samples.length && this.remuxID3(c, e), d.samples.length && this.remuxText(d, e), h && this.observer.trigger(y.a.FRAG_PARSED)
                        }, a.prototype.generateIS = function (a, b, c) {
                            var d = this.observer, e = a.samples, f = b.samples, g = this.typeSupported,
                                h = "audio/mp4", i = {}, j = {tracks: i}, k = void 0 === this._initPTS, l = void 0,
                                m = void 0;
                            if (k && (l = m = 1 / 0), a.config && e.length && (a.timescale = a.samplerate, B.b.log("audio sampling rate : " + a.samplerate), a.isAAC || (g.mpeg ? (h = "audio/mpeg", a.codec = "") : g.mp3 && (a.codec = "mp3")), i.audio = {
                                container: h,
                                codec: a.codec,
                                initSegment: !a.isAAC && g.mpeg ? new Uint8Array : _.initSegment([a]),
                                metadata: {channelCount: a.channelCount}
                            }, k && (l = m = e[0].pts - a.inputTimeScale * c)), b.sps && b.pps && f.length) {
                                var n = b.inputTimeScale;
                                b.timescale = n, i.video = {
                                    container: "video/mp4",
                                    codec: b.codec,
                                    initSegment: _.initSegment([b]),
                                    metadata: {width: b.width, height: b.height}
                                }, k && (l = Math.min(l, f[0].pts - n * c), m = Math.min(m, f[0].dts - n * c), this.observer.trigger(y.a.INIT_PTS_FOUND, {initPTS: l}))
                            }
                            Object.keys(i).length ? (d.trigger(y.a.FRAG_PARSING_INIT_SEGMENT, j), this.ISGenerated = !0, k && (this._initPTS = l, this._initDTS = m)) : d.trigger(y.a.ERROR, {
                                type: z.b.MEDIA_ERROR,
                                details: z.a.FRAG_PARSING_ERROR,
                                fatal: !1,
                                reason: "no audio/video samples found"
                            })
                        }, a.prototype.remuxVideo = function (a, b, c, d, e, f, g) {
                            var h, i = 8, j = a.timescale, k = void 0, l = void 0, m = void 0, n = void 0, o = void 0,
                                p = void 0, q = void 0, r = void 0, s = a.samples, t = [], u = s.length,
                                v = this._PTSNormalize, w = this._initDTS, x = g.nextAvcDts;
                            if (void 0 == x) {
                                var A = this.tsdemuxer.getNextAvcDts(g.keyid, g.sn);
                                void 0 != A && (x = A)
                            }
                            var C = this.isSafari;
                            if (0 !== u) {
                                if (C && (c |= s.length && x && (e && Math.abs(b - x / j) < .1 || Math.abs(s[0].pts - x - w) < j / 5)), s.forEach(function (a) {
                                    a.pts = v(a.pts - w, x), a.dts = v(a.dts - w, x)
                                }), s.length > 0 && void 0 != x && !isNaN(x)) {
                                    var D = x - s[0].dts;
                                    s.forEach(function (a) {
                                        a.pts += D, a.dts += D
                                    })
                                }
                                void 0 == x && (x = b * j), s.sort(function (a, b) {
                                    var c = a.dts - b.dts, d = a.pts - b.pts;
                                    return c || d || a.id - b.id
                                });
                                var E = s.reduce(function (a, b) {
                                    return Math.max(Math.min(a, b.pts - b.dts), -18e3)
                                }, 0);
                                if (E < 0) {
                                    B.b.warn("PTS < DTS detected in video samples, shifting DTS by " + Math.round(E / 90) + " ms to overcome this issue");
                                    for (var F = 0; F < s.length; F++) s[F].dts += E
                                }
                                var G = s[0];
                                o = Math.max(G.dts, 0), n = Math.max(G.pts, 0);
                                var H = Math.round((o - x) / 90);
                                c && H && (H > 1 ? B.b.log("AVC:" + H + " ms hole between fragments detected,filling it") : H < -1 && B.b.log("AVC:" + -H + " ms overlapping between fragments detected"), o = x, s[0].dts = o, n = Math.max(n - H, x), s[0].pts = n, B.b.log("Video/PTS/DTS adjusted: " + Math.round(n / 90) + "/" + Math.round(o / 90) + ",delta:" + H + " ms")), p = o, G = s[s.length - 1], r = Math.max(G.dts, 0), q = Math.max(G.pts, 0, r), C && (k = Math.round((r - o) / (s.length - 1)));
                                for (var I = 0, J = 0, K = 0; K < u; K++) {
                                    for (var L = s[K], M = L.units, N = M.length, O = 0, P = 0; P < N; P++) O += M[P].data.length;
                                    J += O, I += N, L.length = O, C ? L.dts = o + K * k : L.dts = Math.max(L.dts, o), L.pts = Math.max(L.pts, L.dts)
                                }
                                var Q = J + 4 * I + 8;
                                try {
                                    l = new Uint8Array(Q)
                                } catch (R) {
                                    return void this.observer.trigger(y.a.ERROR, {
                                        type: z.b.MUX_ERROR,
                                        details: z.a.REMUX_ALLOC_ERROR,
                                        fatal: !1,
                                        bytes: Q,
                                        reason: "fail allocating video mdat " + Q
                                    })
                                }
                                var S = new DataView(l.buffer);
                                S.setUint32(0, Q), l.set(_.types.mdat, 4);
                                for (var T = 0; T < u; T++) {
                                    for (var U = s[T], V = U.units, W = 0, X = void 0, Y = 0, Z = V.length; Y < Z; Y++) {
                                        var $ = V[Y], aa = $.data, ba = $.data.byteLength;
                                        S.setUint32(i, ba), i += 4, l.set(aa, i), i += ba, W += 4 + ba
                                    }
                                    if (C) X = Math.max(0, k * Math.round((U.pts - U.dts) / k)); else {
                                        if (T < u - 1) k = s[T + 1].dts - U.dts; else {
                                            var ca = this.config, da = U.dts - s[T > 0 ? T - 1 : T].dts;
                                            if (ca.stretchShortVideoTrack) {
                                                var ea = ca.maxBufferHole, fa = Math.floor(ea * j),
                                                    ga = (d ? n + d * j : this.nextAudioPts) - U.pts;
                                                ga > fa ? (k = ga - da, k < 0 && (k = da), B.b.log("It is approximately " + ga / 90 + " ms to the next segment; using duration " + k / 90 + " ms for the last video frame.")) : k = da
                                            } else k = da
                                        }
                                        X = Math.round(U.pts - U.dts)
                                    }
                                    t.push({
                                        size: W,
                                        duration: k,
                                        cts: X,
                                        flags: {
                                            isLeading: 0,
                                            isDependedOn: 0,
                                            hasRedundancy: 0,
                                            degradPrio: 0,
                                            dependsOn: U.key ? 2 : 1,
                                            isNonSync: U.key ? 0 : 1
                                        }
                                    })
                                }
                                this.nextAvcDts = r + k;
                                var ha = a.dropped;
                                if (a.len = 0, a.nbNalu = 0, a.dropped = 0, t.length && navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
                                    t[0].flags
                                }
                                a.samples = t, m = _.moof(a.sequenceNumber++, o, a), a.samples = [];
                                var ia = (h = {
                                    data1: m,
                                    data2: l,
                                    startPTS: n / j,
                                    endPTS: (q + k) / j,
                                    startDTS: o / j,
                                    endDTS: this.nextAvcDts / j,
                                    type: "video",
                                    hasAudio: !1,
                                    hasVideo: !0,
                                    nb: t.length,
                                    dropped: ha
                                }, h.dropped = ha, h.isEnd = f, h.sn = g.sn, h);
                                g.endPtsVideo = Math.max(g.endPtsVideo, ia.endPTS), g.nextAvcDts = this.nextAvcDts;
                                var ja = this.tsdemuxer.getFrame(g.keyid, g.sn);
                                return ja.videoStartPts == -1 ? ja.videoStartPts = ia.startPTS : ja.videoStartPts = Math.min(ja.videoStartPts, ia.startPTS), f && (ja.videoEndPts == -1 && (ja.videoEndPts = ia.endPTS), ja.nextAvcDts == -1 && (ja.nextAvcDts = this.nextAvcDts)), this.observer.trigger(y.a.FRAG_PARSING_DATA, ia), ia
                            }
                        }, a.prototype.checkInjectSilentFrame = function (a, b, c, d, e, f) {
                            var g = this.tsdemuxer.getFrame(a, b + 1);
                            if (g.audioStartPtsSample != -1) {
                                var h = null;
                                if (!(c.length <= 0) && (h = c[c.length - 1], null != h)) {
                                    var i = g.audioStartPtsSample - h.pts - d, j = Math.round(i / d);
                                    if (!(j <= 0)) {
                                        B.b.warn("Injecting1 " + j + " audio frame  due to " + Math.round(1e3 * i / e) + " ms gap.");
                                        for (var k = 0; k < j; k++) {
                                            var l = h.pts + d * (k + 1),
                                                m = Y.getSilentFrame(f.manifestCodec || f.codec, f.channelCount);
                                            m || (B.b.log("Unable to get silent frame for given audio codec; duplicating last frame instead."), m = h.unit.subarray(0, h.unit.length)), f.len += m.length, c.push({
                                                unit: m,
                                                pts: l,
                                                dts: l
                                            })
                                        }
                                    }
                                }
                            }
                        }, a.prototype.checkShouldDropFrame = function (a, b, c) {
                            if (void 0 !== a && null !== a && null !== c && void 0 !== c) {
                                for (var d = 0, e = 0; e < c.length && a - c[e].pts >= b - 10; e++) d++;
                                d > 0 && B.b.log("Drop frame num " + d);
                                for (var e = 0; e < d; e++) c.shift()
                            }
                        }, a.prototype.remuxAudio = function (a, b, c, d, e, f) {
                            var g = a.inputTimeScale, h = a.timescale, i = g / h, j = a.isAAC ? 1024 : 1152, k = j * i,
                                l = this._PTSNormalize, m = this._initDTS, n = !a.isAAC && this.typeSupported.mpeg,
                                o = void 0, p = void 0, q = void 0, r = void 0, s = void 0, t = void 0, u = void 0,
                                v = a.samples, w = [], x = !0, A = f.nextAudioPts;
                            if (void 0 == A) {
                                var C = this.tsdemuxer.getNextAudioPts(f.keyid, f.sn);
                                void 0 != C && (A = C)
                            }
                            if (c |= v.length && A && (d && Math.abs(b - A / g) < .1 || Math.abs(v[0].pts - A - m) < 20 * k), v.forEach(function (a) {
                                a.pts = a.dts = l(a.pts - m, b * g)
                            }), v.length > 0 && void 0 != A && !isNaN(A)) {
                                var D = A - v[0].pts;
                                (Math.abs(D) < k || Math.abs(D) > .5 * g) && v.forEach(function (a) {
                                    a.pts = a.dts = D + a.pts
                                })
                            }
                            if (void 0 == A && (A = b * g, x = !1), v = v.filter(function (a) {
                                return a.pts >= 0
                            }), 0 !== v.length) {
                                if (c || (A = d ? b * g : v[0].pts), x && aa.a.OpenDropFrameBetweenTs && this.checkShouldDropFrame(A, k, v), a.isAAC) for (var E = this.config.maxAudioFramesDrift, F = 0, G = A; F < v.length;) {
                                    var H, I = v[F], J = I.pts;
                                    H = J - G;
                                    var K = Math.abs(1e3 * H / g);
                                    if (H <= -E * k) B.b.warn("Dropping 1 audio frame @ " + (G / g).toFixed(3) + "s due to " + Math.round(K) + " ms overlap."), v.splice(F, 1), a.len -= I.unit.length; else if (H >= E * k && K < ba && G) {
                                        var L = Math.round(H / k);
                                        B.b.warn("Injecting " + L + " audio frame @ " + (G / g).toFixed(3) + "s due to " + Math.round(1e3 * H / g) + " ms gap.");
                                        for (var M = 0; M < L; M++) {
                                            var N = Math.max(G, 0);
                                            q = Y.getSilentFrame(a.manifestCodec || a.codec, a.channelCount), q || (B.b.log("Unable to get silent frame for given audio codec; duplicating last frame instead."), q = I.unit.subarray()), v.splice(F, 0, {
                                                unit: q,
                                                pts: N,
                                                dts: N
                                            }), a.len += q.length, G += k, F++
                                        }
                                        I.pts = I.dts = G, G += k, F++
                                    } else Math.abs(H) > .1 * k, I.pts = I.dts = G, G += k, F++
                                }
                                e && this.checkInjectSilentFrame(f.keyid, f.sn, v, k, g, a);
                                for (var O = 0, P = v.length; O < P; O++) {
                                    var Q = v[O], R = Q.unit, S = Q.pts;
                                    if (void 0 !== u) p.duration = Math.round((S - u) / i); else {
                                        var T = Math.round(1e3 * (S - A) / g), U = 0;
                                        if (c && a.isAAC && T) {
                                            if (T > 0 && T < ba) U = Math.round((S - A) / k), B.b.log(T + " ms hole between AAC samples detected,filling it"),
                                            U > 0 && (q || (q = R.subarray(0, R.length)), a.len += U * q.length); else if (T < -100) {
                                                B.b.log("drop overlapping AAC sample, expected/parsed/delta:" + (A / g).toFixed(3) + "s/" + (S / g).toFixed(3) + "s/" + -T + "ms"), a.len -= R.byteLength;
                                                continue
                                            }
                                            S = A
                                        }
                                        if (t = S, !(a.len > 0)) return;
                                        var V = n ? a.len : a.len + 8;
                                        o = n ? 0 : 8;
                                        try {
                                            r = new Uint8Array(V)
                                        } catch (W) {
                                            return void this.observer.trigger(y.a.ERROR, {
                                                type: z.b.MUX_ERROR,
                                                details: z.a.REMUX_ALLOC_ERROR,
                                                fatal: !1,
                                                bytes: V,
                                                reason: "fail allocating audio mdat " + V
                                            })
                                        }
                                        if (!n) {
                                            var X = new DataView(r.buffer);
                                            X.setUint32(0, V), r.set(_.types.mdat, 4)
                                        }
                                        for (var Z = 0; Z < U; Z++) q || (B.b.log("Unable to get silent frame for given audio codec; duplicating this frame instead."), q = R.subarray(0, R.length)), r.set(q, o), o += q.byteLength, p = {
                                            size: q.byteLength,
                                            cts: 0,
                                            duration: 1024,
                                            flags: {
                                                isLeading: 0,
                                                isDependedOn: 0,
                                                hasRedundancy: 0,
                                                degradPrio: 0,
                                                dependsOn: 1
                                            }
                                        }, w.push(p)
                                    }
                                    r.set(R, o);
                                    var $ = R.byteLength;
                                    o += $, p = {
                                        size: $,
                                        cts: 0,
                                        duration: 0,
                                        flags: {
                                            isLeading: 0,
                                            isDependedOn: 0,
                                            hasRedundancy: 0,
                                            degradPrio: 0,
                                            dependsOn: 1
                                        }
                                    }, w.push(p), u = S
                                }
                                var ca = 0, da = w.length;
                                if (da >= 2 && (ca = w[da - 2].duration, p.duration = ca), da) {
                                    this.nextAudioPts = A = u + i * ca, a.len = 0, a.samples = w, s = n ? new Uint8Array : _.moof(a.sequenceNumber++, t / i, a), a.samples = [];
                                    var ea = t / g, fa = Math.abs(A - aa.a.AudioFrameInternalDelta) / g, ga = {
                                        data1: s,
                                        data2: r,
                                        startPTS: ea,
                                        endPTS: fa,
                                        startDTS: ea,
                                        endDTS: fa,
                                        type: "audio",
                                        hasAudio: !0,
                                        hasVideo: !1,
                                        nb: da,
                                        isEnd: e,
                                        sn: f.sn
                                    };
                                    f.nextAudioPts = this.nextAudioPts;
                                    var ha = this.tsdemuxer.getFrame(f.keyid, f.sn);
                                    return ha.audioStartPts == -1 ? (ha.audioStartPts = ga.startPTS, ha.audioStartPtsSample = t) : (ha.audioStartPts = Math.min(ha.audioStartPts, ga.startPTS), ha.audioStartPtsSample = Math.min(ha.audioStartPtsSample, t)), e && (ha.audioEndPts == -1 && (ha.audioEndPts = ga.endPTS), ha.nextAudioPts == -1 && (ha.nextAudioPts = this.nextAudioPts), ha.audioEndPtsSample == -1 && v.length > 0 && (ha.audioEndPtsSample = v[v.length - 1].pts)), f.endPtsAudio = Math.max(f.endPtsAudio, ga.endPTS), this.observer.trigger(y.a.FRAG_PARSING_DATA, ga), ga
                                }
                                return null
                            }
                        }, a.prototype.remuxEmptyAudio = function (a, b, c, d, e, f, g) {
                            var h = a.inputTimeScale, i = a.samplerate ? a.samplerate : h, j = h / i,
                                k = this.nextAudioPts, l = (void 0 !== k ? k : d.startDTS * h) + this._initDTS,
                                m = d.endDTS * h + this._initDTS, n = 1024, o = j * n, p = Math.ceil((m - l) / o),
                                q = Y.getSilentFrame(a.manifestCodec || a.codec, a.channelCount);
                            if (B.b.warn("remux empty Audio"), !q) return void B.b.trace("Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!");
                            for (var r = [], s = 0; s < p; s++) {
                                var t = l + s * o;
                                r.push({unit: q, pts: t, dts: t}), a.len += q.length
                            }
                            a.samples = r, this.remuxAudio(a, b, c, e, f, g)
                        }, a.prototype.remuxID3 = function (a, b) {
                            var c = a.samples.length, d = void 0, e = a.inputTimeScale, f = this._initPTS,
                                g = this._initDTS;
                            if (c) {
                                for (var h = 0; h < c; h++) d = a.samples[h], d.pts = (d.pts - f) / e, d.dts = (d.dts - g) / e;
                                this.observer.trigger(y.a.FRAG_PARSING_METADATA, {samples: a.samples})
                            }
                            a.samples = [], b = b
                        }, a.prototype.remuxText = function (a, b) {
                            a.samples.sort(function (a, b) {
                                return a.pts - b.pts
                            });
                            var c = a.samples.length, d = void 0, e = a.inputTimeScale, f = this._initPTS;
                            if (c) {
                                for (var g = 0; g < c; g++) d = a.samples[g], d.pts = (d.pts - f) / e;
                                this.observer.trigger(y.a.FRAG_PARSING_USERDATA, {samples: a.samples})
                            }
                            a.samples = [], b = b
                        }, a.prototype._PTSNormalize = function (a, b) {
                            var c = void 0;
                            if (void 0 === b) return a;
                            for (c = b < a ? -8589934592 : 8589934592; Math.abs(a - b) > 4294967296;) a += c;
                            return a
                        }, a
                    }(), da = ca, ea = function () {
                        function a(b) {
                            w(this, a), this.observer = b
                        }

                        return a.prototype.destroy = function () {
                        }, a.prototype.resetTimeStamp = function () {
                        }, a.prototype.resetInitSegment = function () {
                        }, a.prototype.remux = function (a, b, c, d, e, f, g, h) {
                            var i = this.observer, j = "";
                            a && (j += "audio"), b && (j += "video"), i.trigger(y.a.FRAG_PARSING_DATA, {
                                data1: h,
                                startPTS: e,
                                startDTS: e,
                                type: j,
                                hasAudio: !!a,
                                hasVideo: !!b,
                                nb: 1,
                                dropped: 0
                            }), i.trigger(y.a.FRAG_PARSED)
                        }, a
                    }(), fa = ea, ga = function () {
                        function a(b, c, d, e, f) {
                            x(this, a), this.observer = b, this.typeSupported = c, this.config = d, this.vendor = e, this.method = null, this.methodvalue = null, this.parent = f
                        }

                        return a.prototype.destroy = function () {
                            var a = this.demuxer;
                            a && (a.destroy(), this.demuxer = null)
                        }, a.prototype.setCutMethod = function (a, b) {
                            this.method = a, this.methodvalue = b, this.demuxer && this.demuxer.setCutMethod && this.demuxer.setCutMethod(this.method, this.methodvalue)
                        }, a.prototype.getLastPts = function () {
                            return null != this.demuxer && this.demuxer.getLastPts ? this.demuxer.getLastPts() : 0
                        }, a.prototype.push = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
                            if (!(m.canDemuxLength > 0 && null != b && null != b.key && "AES-128" === b.method)) return this.pushDecrypted(new Uint8Array(a), b, new Uint8Array(c), d, e, f, g, h, i, j, k, l, m);
                            var n = this.decrypter;
                            null == n && (n = this.decrypter = new A.a(this.observer, this.config));
                            var o = this, p = void 0;
                            try {
                                p = performance.now()
                            } catch (q) {
                                p = Date.now()
                            }
                            n.decrypt(a, b.key.buffer, b.iv.buffer, function (a) {
                                var n = void 0;
                                try {
                                    n = performance.now()
                                } catch (q) {
                                    n = Date.now()
                                }
                                o.observer.trigger(y.a.FRAG_DECRYPTED, {
                                    stats: {
                                        tstart: p,
                                        tdecrypt: n
                                    }
                                }), o.pushDecrypted(a, b, new Uint8Array(c), d, e, f, g, h, i, j, k, l, m)
                            })
                        }, a.prototype.pushDecrypted = function (a, b, c, d, e, f, g, h, i, j, k, l, m) {
                            var n = this.demuxer;
                            if (!n || g && !this.probe(a)) {
                                for (var o = this.observer, p = this.typeSupported, q = this.config, r = [{
                                    demux: F.a,
                                    remux: fa
                                }, {demux: U, remux: da}, {demux: E, remux: da}, {
                                    demux: W,
                                    remux: da
                                }], s = 0, t = r.length; s < t; s++) {
                                    var u = r[s], v = u.demux.probe;
                                    if (v(a)) {
                                        if (0 == s && !m.mapTag) continue;
                                        var w = this.remuxer = new u.remux(o, q, p, this.vendor);
                                        n = new u.demux(o, w, q, p), this.probe = v;
                                        break
                                    }
                                }
                                if (!n) return B.b.error(z.c.PARSING_ERROR, "no demux matching with content found"), o.trigger(y.a.ERROR, {
                                    type: z.b.MEDIA_ERROR,
                                    details: z.a.FRAG_PARSING_ERROR,
                                    fatal: !0,
                                    reason: "no demux matching with content found"
                                }), m.error = M.b.DATA_ERROR, -1;
                                this.demuxer = n, this.demuxer && this.demuxer.setCutMethod && this.demuxer.setCutMethod(this.method, this.methodvalue)
                            }
                            var x = this.remuxer;
                            return n && n.isInit && (n.isInit() || (g = !0)), (g || h) && (n.resetInitSegment(c, d, e, j), x.resetInitSegment()), g && (n.resetTimeStamp(l), x.resetTimeStamp(l)), "function" == typeof n.setDecryptData && n.setDecryptData(b), n.append(a, f, i, k, m)
                        }, a.prototype.postMsg = function (a) {
                            this.parent && this.parent.onWorkerMessage(a)
                        }, a
                    }();
                    b.a = ga
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function e(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    var f = c(0), g = c(26), h = c(21), i = c(2), j = 16384, k = 819200, l = 188, m = 1048576,
                        n = function () {
                            function a(b, c, e) {
                                d(this, a), this.tsArray = e, this.bDemuxUntilFullTs = b, this.resetTsData(c)
                            }

                            return a.prototype.resetTsData = function (a) {
                                this.level = -1, this.sn = -1, this.filelen = 0, this.data = a, null != a ? this.datalen = a.byteLength : this.datalen = 0, this.dataOffset = 0, this.decryptdata = null, this.initSegment = null, this.audioCodec = null, this.videoCodec = null, this.timeOffset = 0, this.discontinuity = 0, this.trackSwitch = 0, this.contiguous = !1, this.duration = 0, this.accurateTimeOffset = !1, this.defaultInitPTS = 0, this.isFileEnd = !1, this.bFirstLoad = !0, this.bFirstPart = !0, this.bCanDemux = !1, this.bDemuxFinish = !1, this.bPassUntilIDR = !1, this.readFileOffset = 0, this.idrRemuxContiguous = !1, this.nextAudioPts = void 0, this.nextAvcDts = void 0, this.endPtsAudio = -1, this.endPtsVideo = -1
                            }, a.prototype.setIDRRemuxContiguous = function (a) {
                                this.idrRemuxContiguous = a
                            }, a.prototype.setPassUntilIDR = function (a) {
                                this.bPassUntilIDR = a
                            }, a.prototype.fillData = function (a, b) {
                                if (null != a && void 0 != a && 0 != a.byteLength) {
                                    if (b != this.dataOffset) return void f.b.warn("jy data not continus!!!!!!!!!!!!!!!!!!!!!!!!!!!");
                                    if (this.datalen < a.byteLength + b) {
                                        var c = Math.ceil((a.byteLength + b) / k),
                                            d = Math.ceil(this.datalen / k) + (this.datalen % k == 0 ? 1 : 0);
                                        this.datalen = Math.max(c, d) * k;
                                        var e = new Uint8Array(this.datalen);
                                        null != this.data && 0 != this.dataOffset && e.set(this.data), this.tsArray && this.tsArray.updateDataBuffer(e), this.data = e
                                    }
                                    var g = a;
                                    a instanceof ArrayBuffer ? g = new Uint8Array(a) : a instanceof Uint8Array || f.b.error(i.c.PARSING_ERROR, "demux unknown data type"), this.data.set(g, this.dataOffset), this.dataOffset += g.byteLength
                                }
                            }, a.prototype.loadData = function (a) {
                                if (this.bFirstLoad === !0) {
                                    if (this.seeked = a.seeked, this.keyid = a.keyid, this.decryptdata = a.decryptdata, this.initSegment = a.initSegment, this.audioCodec = a.audioCodec, this.videoCodec = a.videoCodec, this.timeOffset = a.timeOffset, this.discontinuity = a.discontinuity, this.trackSwitch = a.trackSwitch, this.contiguous = a.contiguous, this.duration = a.duration, this.defaultInitPTS = a.defaultInitPTS, this.sn = a.sn, this.level = a.level, this.bFirstLoad = !1, this.filelen = a.filelen, 0 != a.offset) return !1;
                                    0 == a.offset ? this.bPassUntilIDR = !1 : this.bPassUntilIDR = !0, this.readFileOffset = a.offset
                                }
                                return this.isFileEnd = a.isFileEnd, this.fillData(a.data, a.offset), this.bCanDemux === !1 && (this.dataOffset >= j && !this.bDemuxUntilFullTs || this.isFileEnd) && (this.bCanDemux = !0, this.bFirstPart = !0), !0
                            }, a.prototype.canDemux = function () {
                                return this.bCanDemux
                            }, a.prototype.getData = function () {
                                if (!this.canDemux()) return null;
                                if (this.dataOffset - this.readFileOffset <= l && !this.isFileEnd) return null;
                                var a = !0, b = Math.min(m, this.dataOffset - this.readFileOffset);
                                this.readFileOffset + b < this.dataOffset && (a = !1);
                                var c = this.bFirstPart;
                                return a = a ? this.isEndPart() : a, {
                                    data: this.data,
                                    bFirstPart: c,
                                    bEndPart: a,
                                    canDemuxLength: b,
                                    readOffset: this.readFileOffset
                                }
                            }, a.prototype.setDataOffset = function (a) {
                                return this.dataOffset < a ? void f.b.error(i.c.PARSING_ERROR, "setDataOffset error !") : (this.readFileOffset = a, this.dataOffset == this.readFileOffset && this.isFileEnd && (this.data = null, this.datalen = 0, this.bDemuxFinish = !0), this.bFirstPart = !1, this.contiguous = !0, this.trackSwitch = !1, void (this.discontinuity = !1))
                            }, a.prototype.canContinueDemux = function () {
                                return this.dataOffset >= l
                            }, a.prototype.setTimeOffset = function (a) {
                                this.timeOffset = a
                            }, a.prototype.isEndPart = function () {
                                return this.isFileEnd
                            }, a.prototype.isDemuxFinish = function () {
                                return this.bDemuxFinish
                            }, a.prototype.setContinous = function (a) {
                                this.contiguous = a
                            }, a.prototype.printData = function (a, b) {
                                for (var c = "demux(" + this.sn + "):", d = Math.min(b + a, this.data.byteLength), e = a; e < d; e++) c += "0x0" + this.data[e].toString(16).toUpperCase() + " ";
                                f.b.log(c)
                            }, a
                        }(), o = function () {
                            function a(b) {
                                d(this, a), this.bDemuxUntilFullTs = b, this.dataBuffer = null, this.tsDataArray = new Array, this.lastSn = -1
                            }

                            return a.prototype.setDemuxUntilFullTs = function (a) {
                                this.bDemuxUntilFullTs = a
                            }, a.prototype.destroy = function () {
                                this.clearAll(), this.dataBuffer = null
                            }, a.prototype.updateDataBuffer = function (a) {
                                this.dataBuffer = a
                            }, a.prototype.removeTSData = function (a) {
                                if (null != a && void 0 != a) for (var b = 0; b < this.tsDataArray.length; b++) if (this.tsDataArray[b].level == a.level && this.tsDataArray[b].sn == a.sn) {
                                    this.tsDataArray.splice(b, 1);
                                    break
                                }
                            }, a.prototype.eraseSeekSameTs = function (a) {
                                if (0 === a.offset) {
                                    if (!a.data) return !1;
                                    if (a.data && 0 == a.data.byteLength) return !1;
                                    for (var b = -1, c = 0; c < this.tsDataArray.length; c++) if (this.tsDataArray[c].sn == a.sn && this.tsDataArray[c].level == a.level) {
                                        b = c;
                                        break
                                    }
                                    if (b != -1) return this.removeTSData(this.tsDataArray[b]), !0
                                }
                                return !1
                            }, a.prototype.loadData = function (a) {
                                for (var b = null, c = !1, d = 0; d < this.tsDataArray.length; d++) this.tsDataArray[d].sn == a.sn && this.tsDataArray[d].level == a.level && (b = this.tsDataArray[d], b.loadData(a), c = !0);
                                if (0 == c) {
                                    this.lastSn != -1 && this.lastSn + 1 == a.sn ? a.seeked = !1 : (a.seeked = !0, this.clearAll()), a.contiguous = !1, a.accurateTimeOffset = !1;
                                    var e = new n(this.bDemuxUntilFullTs, this.dataBuffer, this);
                                    e.setIDRRemuxContiguous(a.contiguous), e.loadData(a) && (this.tsDataArray.push(e), b = e)
                                }
                                return b
                            }, a.prototype.getTsData = function () {
                                return this.tsDataArray.length >= 1 ? this.tsDataArray[0] : null
                            }, a.prototype.clearAll = function () {
                                0 != this.tsDataArray.length && (this.tsDataArray = null, this.tsDataArray = new Array)
                            }, a.prototype.setFinishedSn = function (a) {
                                this.lastSn = a
                            }, a
                        }(), p = o, q = c(3), r = c(4), s = 30, t = 25, u = h.a.CUT_BY_IDR, v = function () {
                            function a(b) {
                                if (e(this, a), this.demuxSpan = 0, this.demuxLength = 0, this.worker = b, this.tsDataArray = new p(u == h.a.CUT_BY_TS), this.stoped = !1, this.demuxTick = null, this.curKeyid = null, b) try {
                                    Object(f.a)(new g.a), f.b.setdata("threadobj", this), f.b.setdata("supportPostLog", !0), f.b.setdata("supportMem", !1), f.b.setdata("supportConsole", !1)
                                } catch (c) {
                                    f.b.warn("demuxerWorker: unable to enable logs")
                                }
                            }

                            return a.prototype.__append2TsDemux = function (b) {
                                void 0 == a.tsDemuxKeyIdArray && (a.tsDemuxKeyIdArray = []), a.tsDemuxKeyIdArray.length >= 10 && a.tsDemuxKeyIdArray.shift();
                                for (var c = !1, d = 0; d < a.tsDemuxKeyIdArray.length; d++) if (a.tsDemuxKeyIdArray[d] == b) {
                                    c = !0;
                                    break
                                }
                                0 == c && a.tsDemuxKeyIdArray.push(b)
                            }, a.prototype.setCutByTs = function (a) {
                                this.__append2TsDemux(a), this.tsDataArray.setDemuxUntilFullTs(!0), this.demuxer && this.demuxer.setCutMethod && this.demuxer.setCutMethod(h.a.CUT_BY_TS, t)
                            }, a.prototype.destroy = function () {
                                this.stoped = !0, this.demuxTick && (clearInterval(this.demuxTick), this.demuxTick = null), this.tsDataArray && this.tsDataArray.destroy()
                            }, a.prototype.setDemuxer = function (a) {
                                this.demuxer = a, this.demuxer && this.demuxer.setCutMethod && this.demuxer.setCutMethod(u, t)
                            }, a.prototype.checkKeyidInUseTsDemux = function (b) {
                                if (null == this.curKeyid || this.curKeyid != b) {
                                    this.curKeyid = b;
                                    var c = !1;
                                    if (a.tsDemuxKeyIdArray) {
                                        for (var d = 0; d < a.tsDemuxKeyIdArray.length; d++) if (a.tsDemuxKeyIdArray[d] == b) {
                                            c = !0;
                                            break
                                        }
                                        c ? this.demuxer && this.demuxer.setCutMethod && (this.tsDataArray.setDemuxUntilFullTs(!0), this.demuxer.setCutMethod(h.a.CUT_BY_TS, t)) : this.demuxer && this.demuxer.setCutMethod && (this.tsDataArray.setDemuxUntilFullTs(!1), this.demuxer.setCutMethod(h.a.CUT_BY_IDR, t))
                                    }
                                }
                            }, a.prototype.loadData = function (a) {
                                a.trackSwitch && this.tsDataArray.clearAll(), this.tsDataArray.eraseSeekSameTs(a) && r.a.openDemuxLog && f.b.log("demux erase same seek pos ts"), this.checkKeyidInUseTsDemux(a.keyid), this.tsDataArray.loadData(a)
                            }, a.prototype.clearData = function (a) {
                                r.a.openDemuxLog && f.b.log("jy recv clear,type:" + a.type)
                            }, a.prototype.openDemuxerTimer = function () {
                                var a = this;
                                this.demuxTick = setInterval(function () {
                                    a.demuxData()
                                }, s)
                            }, a.prototype.postMessage = function (a) {
                                this.worker ? this.worker.postMessage(a) : this.demuxer && this.demuxer.postMsg && this.demuxer.postMsg({data: a})
                            }, a.prototype.demuxData = function () {
                                do {
                                    if (this.stoped) return;
                                    var a = this.tsDataArray.getTsData();
                                    if (null === a) break;
                                    var b = a.getData();
                                    if (null === b) break;
                                    var c = performance.now(), d = a.contiguous;
                                    r.a.openDemuxLog && f.b.log("demux part:finalpart:(" + b.bEndPart + "),firstPart:(" + b.bFirstPart + "),sn:" + a.sn + ",level:" + a.level + ",timeOffset:" + a.timeOffset + ", readOffset:" + a.readFileOffset + ",bPassUntilIDR:" + a.bPassUntilIDR + " continus:" + a.contiguous + " start...");
                                    var e = {
                                        bFirstPart: b.bFirstPart,
                                        bEndPart: b.bEndPart,
                                        fileOffset: b.readOffset,
                                        canDemuxLength: b.canDemuxLength,
                                        bPassUntilIDR: a.bPassUntilIDR,
                                        error: h.b.NO_ERROR,
                                        errorObj: {},
                                        sn: a.sn,
                                        remux: !1,
                                        nextAudioPts: a.nextAudioPts,
                                        nextAvcDts: a.nextAvcDts,
                                        endPtsAudio: a.endPtsAudio,
                                        endPtsVideo: a.endPtsVideo,
                                        idrRemuxContinous: a.idrRemuxContiguous,
                                        seeked: a.seeked,
                                        keyid: a.keyid
                                    }, g = 0;
                                    try {
                                        g = this.demuxer.push(b.data, a.decryptdata, a.initSegment, a.audioCodec, a.videoCodec, a.timeOffset, a.discontinuity, a.trackSwitch, a.contiguous, a.duration, a.accurateTimeOffset, a.defaultInitPTS, e)
                                    } catch (j) {
                                        f.b.error(i.c.PARSING_ERROR, "demux error:" + j.stack)
                                    }
                                    if (g == -1) {
                                        if (e.error == h.b.DATA_ERROR) {
                                            var k = {
                                                pos: e.errorObj.pos + a.readFileOffset,
                                                sn: a.sn,
                                                level: a.level,
                                                keyid: a.keyid,
                                                name: "demux_" + a.sn + "_" + a.readFileOffset + "_" + e.errorObj.pos + "_" + a.dataOffset
                                            };
                                            a.printData(e.errorObj.pos + a.readFileOffset, 32), f.b.error(i.c.PARSING_ERROR, "demux data error happen,remote ts(level:" + a.level + ",sn:" + a.sn + "," + k.pos + ")"), this.tsDataArray.removeTSData(a), this.postMessage({
                                                event: q.a.DATA_ERROR,
                                                data: k
                                            })
                                        }
                                        break
                                    }
                                    if (g == -2) {
                                        this.setCutByTs(a.keyid);
                                        var k = {sn: a.sn, level: a.level, keyid: a.keyid};
                                        f.b.error(i.c.PARSING_ERROR, "demux data error happen,remote ts(level:" + a.level + " sn:" + a.sn + " keyid:" + a.keyid + ") dts not in sequence)"), this.tsDataArray.removeTSData(a), this.postMessage({
                                            event: q.a.AUDIO_NOT_IN_SEQUENCE,
                                            data: k
                                        });
                                        break
                                    }
                                    if (a.remux && (a.idrRemuxContiguous = a.remux, a.seeked = !1), a.setPassUntilIDR(e.bPassUntilIDR), a.setDataOffset(g), a.nextAudioPts = e.nextAudioPts, a.nextAvcDts = e.nextAvcDts, a.endPtsVideo = e.endPtsVideo, a.endPtsAudio = e.endPtsAudio, a.endPtsVideo != -1 && a.endPtsAudio != -1) {
                                        var l = Math.min(a.endPtsVideo, a.endPtsAudio);
                                        a.setTimeOffset(l)
                                    }
                                    a.isDemuxFinish() && (this.tsDataArray.setFinishedSn(a.sn), this.tsDataArray.removeTSData(a));
                                    var m = g - e.fileOffset, n = performance.now() - c;
                                    this.demuxLength += m, this.demuxSpan += n;
                                    var o = 1e3 * this.demuxLength / this.demuxSpan, p = 1e3 * m / n;
                                    r.a.openDemuxLog && f.b.log("demux part: speed:[" + p + "B/s," + o + "B/s] cost_span:[" + n + "ms," + this.demuxSpan + "ms] length:[" + m + "B," + this.demuxLength + "B] finalpart:(" + b.bEndPart + "),firstPart(" + b.bFirstPart + "),sn:" + a.sn + " ,demuxLength:" + m + ",readOffset:" + a.readFileOffset + ",dataleave:" + (a.dataOffset - a.readFileOffset) + ",timeOffset:" + a.timeOffset + ",demuxContinous:" + d + ",nextContnous:" + a.contiguous + ",bPassUntilIDR:" + a.bPassUntilIDR + ",isTsEnd:" + a.bDemuxFinish + " next(a:" + a.nextAudioPts + " v:" + a.nextAvcDts + ") ...ok")
                                } while (!1)
                            }, a
                        }();
                    b.a = v
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function e(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function f(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function g(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function h(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function i(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function j(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function k(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function l(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function m(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function n(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function o(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function p(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function q(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function r(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function s(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function t(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function u(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function v(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function w(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function x(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function y(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function z(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function A(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function B(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function C(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function D(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function E(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function F(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function G(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function H(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function I(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function J(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function K(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function L(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function M(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function N(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function O(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function P(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Q(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function R(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function S(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function T(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function U(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function V(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function W(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function X(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Y(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Z(a, b) {
                        var c = ue[b];
                        return !!c && c[a.slice(0, 4)] === !0
                    }

                    function _(a, b) {
                        return MediaSource.isTypeSupported((b || "video") + '/mp4;codecs="' + a + '"')
                    }

                    function aa(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ba(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ca(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function da(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function ea(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function fa(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ga(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function ha(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function ia(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ja(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function ka(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function la(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ma(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function na(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function oa(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function pa() {
                        if ("undefined" != typeof window) return window.MediaSource || window.WebKitMediaSource
                    }

                    function qa(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ra(a, b, c) {
                        var d = a[b], e = a[c], f = e.startPTS;
                        isNaN(f) ? c > b ? e.start = d.start + d.duration : e.start = Math.max(d.start - e.duration, 0) : c > b ? (d.duration = f - d.start, d.duration < 0 && cc.b.warn("negative duration computed for frag " + d.sn + ",level " + d.level + ", there should be some duration drift between playlist and fragment!")) : (e.duration = d.start - f, e.duration < 0 && cc.b.warn("negative duration computed for frag " + e.sn + ",level " + e.level + ", there should be some duration drift between playlist and fragment!"))
                    }

                    function sa(a, b, c, d, e, f) {
                        var g = c;
                        if (!isNaN(b.startPTS)) {
                            var h = Math.abs(b.startPTS - c);
                            isNaN(b.deltaPTS) ? b.deltaPTS = h : b.deltaPTS = Math.max(h, b.deltaPTS), g = Math.max(c, b.startPTS), c = Math.min(c, b.startPTS), d = Math.max(d, b.endPTS), e = Math.min(e, b.startDTS), f = Math.max(f, b.endDTS)
                        }
                        var i = c - b.start;
                        b.startPTS = c, b.maxStartPTS = g, b.endPTS = d, b.startDTS = e, b.endDTS = f;
                        var j = b.sn;
                        if (!a || j < a.startSN || j > a.endSN) return 0;
                        var k = void 0, l = void 0, m = void 0;
                        for (k = j - a.startSN, l = a.fragments, l[k] = b, m = k; m > 0; m--) ra(l, m, m - 1);
                        for (m = k; m < l.length - 1; m++) ra(l, m, m + 1);
                        return a.PTSKnown = !0, i
                    }

                    function ta(a, b) {
                        var c = Math.max(a.startSN, b.startSN) - b.startSN, d = Math.min(a.endSN, b.endSN) - b.startSN,
                            e = b.startSN - a.startSN, f = a.fragments, g = b.fragments, h = 0, i = void 0;
                        if (b.initSegment && a.initSegment && (b.initSegment = a.initSegment), d < c) return void (b.PTSKnown = !1);
                        for (var j = c; j <= d; j++) {
                            var k = f[e + j], l = g[j];
                            l && k && (h = k.cc - l.cc, isNaN(k.startPTS) || (l.start = l.startPTS = k.startPTS, l.endPTS = k.endPTS, l.duration = k.duration, l.backtracked = k.backtracked, l.dropped = k.dropped, i = l))
                        }
                        if (h) for (cc.b.log("discontinuity sliding from playlist, take drift into account"), j = 0; j < g.length; j++) g[j].cc += h;
                        if (i) sa(b, i, i.startPTS, i.endPTS, i.startDTS, i.endDTS); else if (e >= 0 && e < f.length) {
                            var m = f[e].start;
                            for (j = 0; j < g.length; j++) g[j].start += m
                        }
                        b.PTSKnown = a.PTSKnown
                    }

                    function ua(a, b) {
                        for (var c = null, d = 0; d < a.length; d += 1) {
                            var e = a[d];
                            if (e && e.cc === b) {
                                c = e;
                                break
                            }
                        }
                        return c
                    }

                    function va(a, b) {
                        return Pe.search(a, function (a) {
                            return a.cc < b ? 1 : a.cc > b ? -1 : 0
                        })
                    }

                    function wa(a, b, c) {
                        var d = !1;
                        return b && b.details && c && (c.endCC > c.startCC || a && a.cc < c.startCC) && (d = !0), d
                    }

                    function xa(a, b) {
                        var c = a.fragments, d = b.fragments;
                        if (!d.length || !c.length) return void cc.b.log("No fragments to align");
                        var e = ua(c, d[0].cc);
                        return !e || e && !e.startPTS ? void cc.b.log("No frag in previous level to align on") : e
                    }

                    function ya(a, b) {
                        b.fragments.forEach(function (b) {
                            if (b) {
                                var c = b.start + a;
                                b.start = b.startPTS = c, b.endPTS = c + b.duration
                            }
                        }), b.PTSKnown = !0
                    }

                    function za(a, b, c) {
                        if (wa(a, b, c)) {
                            var d = xa(b.details, c);
                            d && (cc.b.log("Adjusting PTS using last level due to CC increase within current level"), ya(d.start, c))
                        }
                        if (c.PTSKnown === !1 && b && b.details && b.details.fragments && b.details.fragments.length) {
                            var e = b.details.programDateTime, f = c.programDateTime,
                                g = (f - e) / 1e3 + b.details.fragments[0].start;
                            isNaN(g) || (cc.b.log("adjusting PTS using programDateTime delta, sliding:" + g.toFixed(3)), ya(g, c))
                        }
                    }

                    function Aa(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Ba(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Ca(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Da() {
                        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, c = arguments[2],
                            d = 0;
                        if (c.programDateTime) {
                            var e = Date.parse(c.programDateTime);
                            isNaN(e) || (d = 1e3 * b + e - 1e3 * a)
                        }
                        return d
                    }

                    function Ea(a) {
                        var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                        if (!Array.isArray(a) || !a.length || null === b) return null;
                        var c = a[0];
                        if (b < c.pdt) return null;
                        var d = a[a.length - 1];
                        if (b >= d.endPdt) return null;
                        for (var e = 0; e < a.length; ++e) {
                            var f = a[e];
                            if (b < f.endPdt) return f
                        }
                        return null
                    }

                    function Fa(a, b) {
                        var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                            d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
                            e = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0, f = void 0,
                            g = a ? b[a.sn - b[0].sn + 1] : null;
                        return c < d && (c > d - e && (e = 0), f = g && !Ga(c, e, g) ? g : Pe.search(b, Ga.bind(null, c, e))), f
                    }

                    function Ga() {
                        var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, c = arguments[2],
                            d = Math.min(b, c.duration + (c.deltaPTS ? c.deltaPTS : 0));
                        return c.start + c.duration - d <= a ? 1 : c.start - d > a && c.start ? -1 : 0
                    }

                    function Ha(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Ia(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Ja(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Ka(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function La(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Ma(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Na(a, b) {
                        var c = null;
                        try {
                            c = new window.Event("addtrack")
                        } catch (d) {
                            c = document.createEvent("Event"), c.initEvent("addtrack", !1, !1)
                        }
                        c.track = a, b.dispatchEvent(c)
                    }

                    function Oa(a) {
                        if (a && a.cues) for (; a.cues.length > 0;) a.removeCue(a.cues[0])
                    }

                    function Pa(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Qa(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Ra(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Sa() {
                        var a = pa(), b = window.SourceBuffer || window.WebKitSourceBuffer,
                            c = a && "function" == typeof a.isTypeSupported && a.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
                            d = !b || b.prototype && "function" == typeof b.prototype.appendBuffer && "function" == typeof b.prototype.remove;
                        return !!c && !!d
                    }

                    function Ta(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Ua(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Va(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Wa(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Xa(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Ya(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Za(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function $a(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function _a(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ab(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function bb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function cb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function db(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function eb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function fb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function gb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function hb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function ib(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function jb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function kb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function lb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function mb() {
                        this.window = window, this.state = "INITIAL", this.buffer = "", this.decoder = new Qf, this.regionList = []
                    }

                    function nb(a) {
                        function b(a, b, c, d) {
                            return 3600 * (0 | a) + 60 * (0 | b) + (0 | c) + (0 | d) / 1e3
                        }

                        var c = a.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
                        return c ? c[3] ? b(c[1], c[2], c[3].replace(":", ""), c[4]) : c[1] > 59 ? b(c[1], c[2], 0, c[4]) : b(0, c[1], c[2], c[4]) : null
                    }

                    function ob() {
                        this.values = Object.create(null)
                    }

                    function pb(a, b, c, d) {
                        var e = d ? a.split(d) : [a];
                        for (var f in e) if ("string" == typeof e[f]) {
                            var g = e[f].split(c);
                            if (2 === g.length) {
                                var h = g[0], i = g[1];
                                b(h, i)
                            }
                        }
                    }

                    function qb(a, b, c) {
                        function d() {
                            var b = nb(a);
                            if (null === b) throw new Error("Malformed timestamp: " + g);
                            return a = a.replace(/^[^\sa-zA-Z-]+/, ""), b
                        }

                        function e(a, b) {
                            var d = new ob;
                            pb(a, function (a, b) {
                                switch (a) {
                                    case"region":
                                        for (var e = c.length - 1; e >= 0; e--) if (c[e].id === b) {
                                            d.set(a, c[e].region);
                                            break
                                        }
                                        break;
                                    case"vertical":
                                        d.alt(a, b, ["rl", "lr"]);
                                        break;
                                    case"line":
                                        var f = b.split(","), g = f[0];
                                        d.integer(a, g), d.percent(a, g) && d.set("snapToLines", !1), d.alt(a, g, ["auto"]), 2 === f.length && d.alt("lineAlign", f[1], ["start", Sf, "end"]);
                                        break;
                                    case"position":
                                        f = b.split(","), d.percent(a, f[0]), 2 === f.length && d.alt("positionAlign", f[1], ["start", Sf, "end", "line-left", "line-right", "auto"]);
                                        break;
                                    case"size":
                                        d.percent(a, b);
                                        break;
                                    case"align":
                                        d.alt(a, b, ["start", Sf, "end", "left", "right"])
                                }
                            }, /:/, /\s/), b.region = d.get("region", null), b.vertical = d.get("vertical", "");
                            var e = d.get("line", "auto");
                            "auto" === e && Rf.line === -1 && (e = -1), b.line = e, b.lineAlign = d.get("lineAlign", "start"), b.snapToLines = d.get("snapToLines", !0), b.size = d.get("size", 100), b.align = d.get("align", Sf);
                            var f = d.get("position", "auto");
                            "auto" === f && 50 === Rf.position && (f = "start" === b.align || "left" === b.align ? 0 : "end" === b.align || "right" === b.align ? 100 : 50), b.position = f
                        }

                        function f() {
                            a = a.replace(/^\s+/, "")
                        }

                        var g = a;
                        if (f(), b.startTime = d(), f(), "-->" !== a.substr(0, 3)) throw new Error("Malformed time stamp (time stamps must be separated by '-->'): " + g);
                        a = a.substr(3), f(), b.endTime = d(), f(), e(a, b)
                    }

                    function rb(a) {
                        return a.replace(/<br(?: \/)?>/gi, "\n")
                    }

                    function sb(a, b, c, d) {
                        for (var e = void 0, f = void 0, g = void 0, h = void 0, i = void 0, j = window.VTTCue || window.TextTrackCue, k = 0; k < d.rows.length; k++) if (e = d.rows[k], g = !0, h = 0, i = "", !e.isEmpty()) {
                            for (var l = 0; l < e.chars.length; l++) e.chars[l].uchar.match(/\s/) && g ? h++ : (i += e.chars[l].uchar, g = !1);
                            e.cueStartTime = b, b === c && (c += 1e-4), f = new j(b, c, rb(i.trim())), h >= 16 ? h-- : h++, navigator.userAgent.match(/Firefox\//) ? f.line = k + 1 : f.line = k > 7 ? k - 2 : k + 1, f.align = "left", f.position = Math.max(0, Math.min(100, 100 * (h / 32) + (navigator.userAgent.match(/Firefox\//) ? 50 : 0))), a.addCue(f)
                        }
                    }

                    function tb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function ub(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function vb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function wb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function xb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function yb(a, b) {
                        return a && a.label === b.name && !(a.textTrack1 || a.textTrack2)
                    }

                    function zb(a, b, c, d) {
                        return Math.min(b, d) - Math.max(a, c)
                    }

                    function Ab(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Bb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Cb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Db(a) {
                        for (var b = [], c = 0; c < a.length; c++) "subtitles" === a[c].kind && b.push(a[c]);
                        return b
                    }

                    function Eb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Fb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Gb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Hb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Ib(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Jb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Kb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Lb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Mb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Nb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Ob(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Pb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Qb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Rb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Sb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Tb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Ub(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Vb(a, b) {
                        if (!a) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                        return !b || "object" != typeof b && "function" != typeof b ? a : b
                    }

                    function Wb(a, b) {
                        if ("function" != typeof b && null !== b) throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                        a.prototype = Object.create(b && b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                    }

                    function Xb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function Yb(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    Object.defineProperty(b, "__esModule", {value: !0});
                    var Zb = {};
                    c.d(Zb, "newCue", function () {
                        return sb
                    });
                    var $b = c(13), _b = c.n($b), ac = c(2), bc = c(3), cc = c(0),
                        dc = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) {
                            return typeof a
                        } : function (a) {
                            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                        }, ec = new Set(["hlsEventGeneric", "hlsHandlerDestroying", "hlsHandlerDestroyed"]),
                        fc = function () {
                            function a(b) {
                                d(this, a), this.hls = b, this.onEvent = this.onEvent.bind(this);
                                for (var c = arguments.length, e = Array(c > 1 ? c - 1 : 0), f = 1; f < c; f++) e[f - 1] = arguments[f];
                                this.handledEvents = e, this.useGenericHandler = !0, this.registerListeners()
                            }

                            return a.prototype.destroy = function () {
                                this.onHandlerDestroying(), this.unregisterListeners(), this.onHandlerDestroyed()
                            }, a.prototype.onHandlerDestroying = function () {
                            }, a.prototype.onHandlerDestroyed = function () {
                            }, a.prototype.isEventHandler = function () {
                                return "object" === dc(this.handledEvents) && this.handledEvents.length && "function" == typeof this.onEvent
                            }, a.prototype.registerListeners = function () {
                                this.isEventHandler() && this.handledEvents.forEach(function (a) {
                                    if (ec.has(a)) throw new Error("Forbidden event-name: " + a);
                                    this.hls.on(a, this.onEvent)
                                }, this)
                            }, a.prototype.unregisterListeners = function () {
                                this.isEventHandler() && this.handledEvents.forEach(function (a) {
                                    this.hls.off(a, this.onEvent)
                                }, this)
                            }, a.prototype.onEvent = function (a, b) {
                                this.onEventGeneric(a, b)
                            }, a.prototype.onEventGeneric = function (a, b) {
                                var c = function (a, b) {
                                    var c = "on" + a.replace("hls", "");
                                    if ("function" != typeof this[c]) throw new Error("Event " + a + " has no generic handler in this " + this.constructor.name + " class (tried " + c + ")");
                                    return this[c].bind(this, b)
                                };
                                try {
                                    c.call(this, a, b).call()
                                } catch (d) {
                                    cc.b.error("An internal error happened while handling event " + a + '. Error message: "' + d.message + '". Here is a stacktrace:', d), this.hls.trigger(bc.a.ERROR, {
                                        type: ac.b.OTHER_ERROR,
                                        details: ac.a.INTERNAL_EXCEPTION,
                                        fatal: !1,
                                        event: a,
                                        err: d
                                    })
                                }
                            }, a
                        }(), gc = fc, hc = c(1), ic = c(28), jc = {
                            eErrno_M3U8DownloadError: 18004,
                            eErrno_M3U8ParseError: 18005,
                            eErrno_M3U8RecvTimeout: 18007,
                            eErrno_M3U8XhrOnError: 18008,
                            eErrno_TSConnectTimeOut: 19004,
                            eErrno_TSRevDataTimeout: 19005,
                            eErrno_TSUnhandled: 19006,
                            eErrno_TSHTTP301Redirect: 19701,
                            eErrno_TSHTTP302Redirect: 19702,
                            eErrno_TSHTTP403Forbidden: 19803,
                            eErrno_TSHTTP404NotFound: 19804,
                            eErrno_XhrTSConnectTimeOut: 19054,
                            eErrno_XhrTSRevDataTimeout: 19055,
                            eErrno_XhrTSUnhandled: 19056,
                            eErrno_XhrTSHTTP301Redirect: 19751,
                            eErrno_XhrTSHTTP302Redirect: 19752,
                            eErrno_XhrTSHTTP403Forbidden: 19853,
                            eErrno_XhrTSHTTP404NotFound: 19854,
                            eErrno_TSFetchCatchError: 19204,
                            eErrno_TSXhrOnError: 19254,
                            eErrno_PSLoginSuccess: 22505,
                            eErrno_PSLoginTimeout: 22506,
                            eErrno_PSQuerySeedFailed: 22509,
                            eErrno_PSLoginFail: 22512,
                            eErrno_PSLogout: 22513,
                            eErrno_PSHeartBeatTimeout: 22514,
                            eErrno_PSQuerySeedTimeout: 22515,
                            eErrno_PSHeartBeatError: 22516,
                            eErrno_CSRecvSuccess: 23001,
                            eErrno_CSSocketConnectTimeout: 23002,
                            eErrno_CSSvrRetError: 23006,
                            eErrno_CSUnknownError: 23008,
                            eErrno_CSNoContext: 23009,
                            eErrno_SwitchUrlSuc: 25001,
                            eErrno_SwitchUrlFailed: 25002,
                            eErrno_WebSocketonConnect: 26001,
                            eErrno_WebSocketonError: 26002,
                            eErrno_TPTHlsError: 27001,
                            eErrno_TPTTimeout: 27002,
                            eErrno_TPTSucceed: 27003,
                            eErrno_SignalRelayError: 28001,
                            eErrno_SignalRelayTimeout: 28002,
                            eErrno_MediaError3: 29001,
                            eErrno_AudioDtsReloopError: 29002
                        }, kc = jc, lc = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), mc = {
                            ReportStep_Period: 0,
                            ReportStep_TaskBuffering: 1,
                            ReportStep_TaskStop: 2,
                            ReportStep_ServerQuality: 3,
                            ReportStep_FlowInterrupt: 4,
                            ReportStep_SecurityError: 8,
                            ReportStep_FetchVSXhr: 100,
                            ReportStep_StopP2P: 101
                        }, nc = {
                            ServerType_SrvCfg: 0,
                            ServerType_PeerServer: 2,
                            ServerType_CDNServer: 6,
                            ServerType_SwitchUrl: 10,
                            ServerType_WebSocket: 15,
                            ServerType_TPTServer: 16,
                            ServerType_SignalServer: 17,
                            ServerType_PlayerError: 18
                        }, oc = "btrace.video.qq.com",
                        pc = ["isCharge", "keyID", "p2pFlag", "http", "p2p", "upload", "httpRepeated", "p2pRepeated", "httpSpeed", "p2pSpeed", "uploadSpeed", "httpSpeedAvg", "p2pSpeedAvg", "uploadSpeedAvg", "bitmapReqCount", "bitmapRspCount", "dataReqCount", "dataRspCount", "qrySeedTimes", "qrySeedOkTimes", "checkSuccTimes", "checkFailTimes", "dataRspFailedCount", "totalCacheSize", "vodMaxCacheSize", "hasSeedTimes", "peerPoolSize", "playerRemainTime", "playableTime", "connectedPeerNum", "connectingPeerNum", "parseDataFailedTimes", "uploadPeerNum", "nat0PunchCount", "nat0PunchOkCount", "nat0PunchElapse", "playTaskDownloadMode", "step", "deviceModel", "nat5PeerNum", "nat4PeerNum", "nat3PeerNum", "nat1PunchElapse", "nat2PunchElapse", "nat3PunchElapse", "nat4PunchElapse", "nat5PunchElapse", "offlineTaskNum", "totalDuration", "vip", "peerChannelNum0", "peerChannelNum1", "peerChannelNum2", "peerChannelNum3", "watchTime", "flowInterrupt", "extInfo", "processMode", "pktLimitCountStaticSpeed", "pktLimitCountDynamicSpeed", "pktLimitCountTimeStamp", "uploadDynamicAvgSpeedKB"],
                        qc = ["step", "tryTimes", "url", "svrType", "svrIP", "svrPort", "errCode", "svrRetCode", "connectElapse", "firstRecvElapse", "totalRecvElapse", "keyID", "deviceModel"],
                        rc = function () {
                            function a() {
                                e(this, a), this.m_ReportCount = 0
                            }

                            return a.getInstance = function () {
                                return this.instance || (this.instance = new a), this.instance
                            }, a.prototype.reportSvrQuality = function (a, b, c, d, e, f, g, h, i) {
                                var j = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : "",
                                    k = arguments.length > 10 && void 0 !== arguments[10] ? arguments[10] : mc.ReportStep_ServerQuality,
                                    l = arguments.length > 11 && void 0 !== arguments[11] ? arguments[11] : "";
                                this.oneTimeReport(l, {
                                    step: k,
                                    tryTimes: a,
                                    svrType: b,
                                    url: j,
                                    svrIP: c,
                                    svrPort: d,
                                    errCode: e,
                                    svrRetCode: f,
                                    connectElapse: parseInt(g),
                                    firstRecvElapse: h,
                                    totalRecvElapse: i
                                })
                            }, a.prototype.oneTimeReport = function (a, b) {
                                arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "";
                                b && (a.length > 0 && (b.keyID = a), this.reportBossSys(b))
                            }, a.prototype.reportBossSys = function (a) {
                                a.keyID = this.keyIDForReport, a.deviceModel = this.browserVer;
                                var b = a.step === mc.ReportStep_ServerQuality ? hc.a.BossIDServerQuality : hc.a.BossIDPlayQuality,
                                    c = a.step === mc.ReportStep_ServerQuality ? hc.a.BossPwdServerQuality : hc.a.BossPwdPlayQuality;
                                this.m_ReportCount++;
                                var d = "//" + oc + "/kvcollect", e = {};
                                e.BossId = b, e.Pwd = c, e.osVer = hc.a.osVer, e.serial = this.m_ReportCount, e.platform = hc.a.platform, e.appVer = hc.a.playerVer.replace("TencentPlayerV", ""), e.p2pVer = hc.a.P2PVersion, e.guid = hc.a.guid, e.qq = hc.a.qq, e.wx = hc.a.wx, e.clientTime = parseInt(Date.now() / 1e3), e.taskType = 0, mc.ReportStep_ServerQuality == a.step ? this.setSvrRptObjValue(e, a) : this.setBossObjValue(e, a), this.dataForServer(d, e)
                            }, a.prototype.dataForServer = function (a, b) {
                                var c = new ic.a;
                                c.get(a, b)
                            }, a.prototype.setSvrRptObjValue = function (a, b) {
                                for (var c = qc, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator](); ;) {
                                    var f;
                                    if (d) {
                                        if (e >= c.length) break;
                                        f = c[e++]
                                    } else {
                                        if (e = c.next(), e.done) break;
                                        f = e.value
                                    }
                                    var g = f;
                                    if (!0 === b.hasOwnProperty(g)) {
                                        var h = b[g];
                                        "boolean" == typeof h ? h = h ? 1 : 0 : "number" == typeof h && (h = parseInt(h)), a[g] = h
                                    } else a[g] = ""
                                }
                            }, a.prototype.setBossObjValue = function (a, b) {
                                for (var c = pc, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator](); ;) {
                                    var f;
                                    if (d) {
                                        if (e >= c.length) break;
                                        f = c[e++]
                                    } else {
                                        if (e = c.next(), e.done) break;
                                        f = e.value
                                    }
                                    var g = f;
                                    if (!0 === b.hasOwnProperty(g)) {
                                        var h = b[g];
                                        "boolean" == typeof h ? h = h ? 1 : 0 : "number" == typeof h && (h = parseInt(h)), a[g] = h
                                    } else a[g] = ""
                                }
                            }, a.prototype.reportAudioDtsError = function (a, b) {
                                this.reportSvrQuality(0, nc.ServerType_PlayerError, 0, b, kc.eErrno_AudioDtsReloopError, 0, 0, 0, 0, "", mc.ReportStep_ServerQuality, a)
                            }, a.prototype.reportStopP2P = function (a) {
                                var b = {watchTime: a.stopP2PTime - this.openP2PTime, step: mc.ReportStep_StopP2P};
                                this.reportBossSys(b)
                            }, lc(a, [{
                                key: "keyIDForReport", get: function () {
                                    return this._keyIDForReport
                                }, set: function (a) {
                                    this._keyIDForReport = a
                                }
                            }, {
                                key: "openP2PTime", set: function (a) {
                                    this._openP2PTime = a
                                }, get: function () {
                                    return this._openP2PTime
                                }
                            }, {
                                key: "browserVer", set: function (a) {
                                    this._browserVer = a
                                }, get: function () {
                                    return this._browserVer
                                }
                            }]), a
                        }(), sc = rc, tc = c(4), uc = function oh() {
                            f(this, oh), this.m_HttpRepeat = 0, this.m_P2PRepeat = 0, this.m_CheckSuccTimes = 0, this.m_CheckFailTimes = 0, this.m_ParseFailTimes = 0, this.m_DataRspFailedCount = 0, this.m_HttpLoad = 0, this.m_HttpSpeedAvg = 0, this.m_P2PLoad = 0, this.m_P2PSpeedAvg = 0, this.m_P2PUpload = 0, this.m_UploadSpeedAvg = 0, this.m_BitmapReqCount = 0, this.m_BitmapRspCount = 0, this.m_P2PDataReqCount = 0, this.m_P2PDataRspCount = 0, this.m_QrySeedTimes = 0, this.m_QrySeedOkTimes = 0, this.m_HasSeedTimes = 0, this.m_P2PDownloadBytesAdPreLoad = 0, this.m_AdPreLoadSpan = 0, this.m_ConnectedNumAdPreLoad = 0, this.m_ConnectingNumAdPreLoad = 0, this.m_AdPreLoadNum = 0, this.m_PlayTime = 0, this.m_PauseTime = 0
                        }, vc = uc, wc = function () {
                            function a() {
                                g(this, a), this.m_LastHttpRepeatBytes = 0, this.m_LastP2PRepeatBytes = 0, this.m_LastCheckSuccTimes = 0, this.m_LastCheckFailTimes = 0, this.m_LastParseFailTimes = 0, this.m_LastDataRspFailedCount = 0, this.m_LastCDNDownloadBytes = 0, this.m_LastP2PDownloadBytes = 0, this.m_LastReportP2PUpload = 0, this.m_LastBitmapReqCount = 0, this.m_LastBitmapRspCount = 0, this.m_LastP2PDataReqCount = 0, this.m_LastP2PDataRspCount = 0, this.m_LastP2PUploadBytes = 0, this.m_LastQrySeedTimes = 0, this.m_LastQrySeedOkTimes = 0, this.m_LastHasSeedTimes = 0, this.m_LastRTCDNDownloadBytes = 0, this.m_LastRTP2PDownloadBytes = 0, this.m_LastRTP2PuploadBytes = 0, this.m_LastP2PDownloadBytesAdPreLoad = 0, this.m_LastAdPreLoadSpan = 0, this.m_LastConnectedNumAdPreLoad = 0, this.m_LastConnectingNumAdPreLoad = 0, this.m_LastAdPreLoadNum = 0, this.m_LastPlayTime = 0, this.m_LastPauseTime = 0
                            }

                            return a.prototype.updateTraffic = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w) {
                                var x = new vc;
                                return x.m_HttpRepeat = d - this.m_LastHttpRepeatBytes, this.m_LastHttpRepeatBytes = d, x.m_P2PRepeat = e - this.m_LastP2PRepeatBytes, this.m_LastP2PRepeatBytes = e, x.m_CheckSuccTimes = m - this.m_LastCheckSuccTimes, this.m_LastCheckSuccTimes = m, x.m_CheckFailTimes = n - this.m_LastCheckFailTimes, this.m_LastCheckFailTimes = n, x.m_DataRspFailedCount = o - this.m_LastDataRspFailedCount, this.m_LastDataRspFailedCount = o, x.m_HttpLoad = a - this.m_LastCDNDownloadBytes, x.m_HttpSpeedAvg = Number(x.m_HttpLoad / tc.a.ReportInterval), this.m_LastCDNDownloadBytes = a, x.m_P2PLoad = b - this.m_LastP2PDownloadBytes, x.m_P2PSpeedAvg = Number(x.m_P2PLoad / tc.a.ReportInterval), this.m_LastP2PDownloadBytes = b, x.m_P2PUpload = c - this.m_LastP2PUploadBytes, x.m_UploadSpeedAvg = Number(x.m_P2PUpload / tc.a.ReportInterval), this.m_LastP2PUploadBytes = c, x.m_BitmapReqCount = f - this.m_LastBitmapReqCount, this.m_LastBitmapReqCount = f, x.m_BitmapRspCount = g - this.m_LastBitmapRspCount, this.m_LastBitmapRspCount = g, x.m_P2PDataReqCount = h - this.m_LastP2PDataReqCount, this.m_LastP2PDataReqCount = h, x.m_P2PDataRspCount = i - this.m_LastP2PDataRspCount, this.m_LastP2PDataRspCount = i, x.m_QrySeedTimes = j - this.m_LastQrySeedTimes, this.m_LastQrySeedTimes = j, x.m_QrySeedOkTimes = k - this.m_LastQrySeedOkTimes, this.m_LastQrySeedOkTimes = k, x.m_HasSeedTimes = l - this.m_LastHasSeedTimes, this.m_LastHasSeedTimes = l, x.m_ParseFailTimes = p - this.m_LastParseFailTimes, this.m_LastParseFailTimes = p, x.m_P2PDownloadBytesAdPreLoad = q - this.m_LastP2PDownloadBytesAdPreLoad, this.m_LastP2PDownloadBytesAdPreLoad = q, x.m_AdPreLoadSpan = r - this.m_LastAdPreLoadSpan, this.m_LastAdPreLoadSpan = r, x.m_ConnectedNumAdPreLoad = s - this.m_LastConnectedNumAdPreLoad, this.m_LastConnectedNumAdPreLoad = s, x.m_ConnectingNumAdPreLoad = t - this.m_LastConnectingNumAdPreLoad, this.m_LastConnectingNumAdPreLoad = t, x.m_AdPreLoadNum = u - this.m_LastAdPreLoadNum, this.m_LastAdPreLoadNum = u, x.m_PlayTime = v - this.m_LastPlayTime, this.m_LastPlayTime = v, x.m_PauseTime = w - this.m_LastPauseTime, this.m_LastPauseTime = w, x
                            }, a.prototype.updateTrafficForRealTimeSpeed = function (a, b, c) {
                                var d = {};
                                return d.http = a - this.m_LastRTCDNDownloadBytes, this.m_LastRTCDNDownloadBytes = a, d.p2p = b - this.m_LastRTP2PDownloadBytes, this.m_LastRTP2PDownloadBytes = b, d.p2pUpload = c - this.m_LastRTP2PuploadBytes, this.m_LastRTP2PuploadBytes = c, d
                            }, a
                        }(), xc = wc, yc = {
                            UnKnown: {code: 0, reason: "UnKnown"},
                            Refuse: {code: 1, reason: "Remote peer refuse to Connect"},
                            Timeout: {code: 2, reason: "Remote peer no response"},
                            ConnectTimeout: {code: 3, reason: "Connect Remote peer Timeout"},
                            PeerNoInServer: {code: 4, reason: "Server can't found this peer's uin"},
                            QosLow: {code: 5, reason: "Qos Low"},
                            NoDataExchange: {code: 6, reason: "No data exchange"},
                            Exit: {code: 7, reason: "Client exit"},
                            KeyIdNotExsit: {code: 8, reason: "Remote Keyid not exsit"},
                            DstUinIsWrong: {code: 9, reason: "Dst uin is wrong"},
                            RemoteNotInQueue: {code: 10, reason: "Remote is not in queue"},
                            BusyInEmergencyTime: {code: 12, reason: "Remote is busy in emergency time"},
                            ConnectFailed: {code: 13, reason: "Can't connect remote peer"}
                        }, zc = {Down: 1, Up: 2}, Ac = function () {
                            function a() {
                                h(this, a)
                            }

                            return a.getReasonStr = function (a) {
                                for (var b in yc) if (yc[b].code == a) return yc[b].reason;
                                return "no found this code"
                            }, a
                        }(), Bc = Ac, Cc = function ph() {
                            i(this, ph), this.blockID = void 0, this.bitmap = null, this.isP2PChoose = null, this.check = 0, this.blockSize = 0
                        }, Dc = Cc, Ec = function qh() {
                            j(this, qh), this.tsIndex = -1, this.blockID = -1, this.pieceArray = []
                        }, Fc = Ec, Gc = 100, Hc = function () {
                            function a() {
                                k(this, a)
                            }

                            return a.makeCRCTable = function () {
                                for (var a = void 0, b = [], c = 0; c < 256; c++) {
                                    a = c;
                                    for (var d = 0; d < 8; d++) a = 1 & a ? 3988292384 ^ a >>> 1 : a >>> 1;
                                    b[c] = a
                                }
                                return b
                            }, a.getChecksum = function (a) {
                                for (var b = window.crcTable || (window.crcTable = this.makeCRCTable()), c = -1, d = new Uint8Array(a), e = d.byteLength, f = e >= hc.a.PIECE_SIZE ? Gc : 1, g = 0; g < e; g += f) c = b[255 & (c ^ d[g])] ^ c >>> 8;
                                return (4294967295 ^ c) >>> 0
                            }, a
                        }(), Ic = Hc, Jc = c(5), Kc = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), Lc = {Normal: 0, VideoIn: 1, AdInsert: 2}, Mc = function () {
                            function a(b) {
                                l(this, a), this._initTsCache(b)
                            }

                            return a.prototype._initTsCache = function (a) {
                                this.m_Seqnum = a.sn, this.m_Start = a.start, this.m_Duration = a.duration, this.m_Url = a.url, this.m_CacheSize = 0, this.m_FileSize = a.fileSize, this.m_BlockSum = 0, this.m_IsSizeFromCDN = !1, this.m_HaveAssignBlock = !1, this.m_Blocks = [], this.m_Buffer = null, this.m_hasAllocBuffer = !1, this.m_Bitmap = null, this.m_AllowP2P = !0, this.type = void 0 == a.tsType ? Lc.Normal : a.tsType, this.fileName = Jc.a.getFileNameFromUrl(a.url)
                            }, a.prototype.setUrl = function (a) {
                                this.m_Url = a
                            }, a.prototype.setFilesize = function (a) {
                                0 === this.m_FileSize ? this.m_FileSize = a : this.m_FileSize !== a && (this.release(), this.m_FileSize = a)
                            }, a.prototype.checkFileSize = function (a) {
                                0 != a && this.m_FileSize !== a && (cc.b.info("checkfilesize ts " + this.m_Seqnum + " go cdn"), this.m_AllowP2P = !1)
                            }, a.prototype.setDuration = function (a) {
                                this.m_Duration = a
                            }, a.prototype.getDuration = function () {
                                return this.m_Duration
                            }, a.prototype.getTsBitmap = function () {
                                return this.m_Bitmap
                            }, a.prototype.printData = function (a, b) {
                                for (var c = new Uint8Array(this.m_Buffer), d = "cache(" + this.m_Seqnum + "):", e = Math.min(b + a, c.byteLength), f = a; f < e; f++) d += "0x0" + c[f].toString(16).toUpperCase() + " ";
                                cc.b.log(d)
                            }, a.prototype._assignBlock = function (a) {
                                if (0 == a) return void cc.b.warn("TsCache assign block. fileSize is 0 !");
                                if (this.m_HaveAssignBlock !== !0) {
                                    this.m_BlockSum = parseInt(a / hc.a.BLOCK_SIZE), a % hc.a.BLOCK_SIZE > 0 && (this.m_BlockSum += 1), this.m_LastBlockSize = a % hc.a.BLOCK_SIZE == 0 ? hc.a.BLOCK_SIZE : a % hc.a.BLOCK_SIZE;
                                    var b = parseInt((this.m_BlockSum + 7) / 8);
                                    this.m_Bitmap = new ArrayBuffer(b);
                                    for (var c = this.m_BlockSum; c < 8 * this.m_Bitmap.byteLength; c++) this._setBit(this.m_Bitmap, c);
                                    cc.b.info("TsCache : _assignBlock : m_Seqnum = " + this.m_Seqnum + ", blockSum = " + this.m_BlockSum + ", fileSize = " + a + ", lastBlockSize = " + this.m_LastBlockSize);
                                    for (var d = null, e = 0; e < this.m_BlockSum; e++) d = new Dc, d.blockID = e, d.bitmap = new Uint8Array(hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE), d.isP2PChoose = new Uint8Array(hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE), d.check = 0, d.blockSize = hc.a.BLOCK_SIZE, e === this.m_BlockSum - 1 && (this._setLastBlockBitmap(d), a % hc.a.BLOCK_SIZE > 0 && (d.blockSize = a % hc.a.BLOCK_SIZE)), this.m_Blocks.push(d);
                                    this.m_HaveAssignBlock = !0
                                }
                            }, a.prototype.releaseData = function () {
                                cc.b.info("releaseData m_Seqnum:" + this.m_Seqnum + " m_CacheSize:" + this.m_CacheSize + " m_BlockSum:" + this.m_BlockSum), this.m_CacheSize = 0;
                                for (var a = 0; a < this.m_Blocks.length; a++) {
                                    var b = this.m_Blocks[a];
                                    delete b.bitmap, delete b.isP2PChoose, b.bitmap = null, b.isP2PChoose = null, this.m_Blocks[a] = null
                                }
                                delete this.m_Blocks, this.m_Blocks = [], delete this.m_Bitmap, this.m_Bitmap = null, delete this.m_Buffer, this.m_Buffer = null, this.m_hasAllocBuffer = !1, this.m_HaveAssignBlock = !1, this._assignBlock(this.m_FileSize)
                            }, a.prototype.hasAllocBuffer = function () {
                                return this.m_hasAllocBuffer === !0
                            }, a.prototype.release = function () {
                                if (this.m_HaveAssignBlock === !0) {
                                    this.m_CacheSize = 0;
                                    for (var a = 0; a < this.m_Blocks.length; a++) {
                                        var b = this.m_Blocks[a];
                                        delete b.bitmap, delete b.isP2PChoose, b.bitmap = null, b.isP2PChoose = null, this.m_Blocks[a] = null
                                    }
                                    delete this.m_Blocks, this.m_Blocks = [], this.m_BlockSum = 0, this.m_LastBlockSize = 0, this.m_IsSizeFromCDN = !1, delete this.m_Bitmap, this.m_Bitmap = null, this.m_hasAllocBuffer = !1, this.m_HaveAssignBlock = !1, this.m_FileSize = 0
                                }
                                delete this.m_Buffer, this.m_Buffer = null
                            }, a.prototype._isBitSet = function (a, b) {
                                var c = new Uint8Array(a);
                                return !!(c[b >> 3] << b % 8 & 128)
                            }, a.prototype._setBit = function (a, b) {
                                var c = new Uint8Array(a);
                                c[b >> 3] |= 128 >> b % 8
                            }, a.prototype._isSetUint8Bitmap = function (a, b) {
                                return a[b]
                            }, a.prototype._unSetBit = function (a, b) {
                                var c = new Uint8Array(a);
                                c[b >> 3] &= ~(128 >> b % 8)
                            }, a.prototype.readBlockData = function (a) {
                                var b = this._blockWithID(a);
                                if (null === b) return null;
                                var c = a * hc.a.BLOCK_SIZE;
                                if (a === this.m_Blocks.length - 1) {
                                    var d = this.m_FileSize % hc.a.BLOCK_SIZE;
                                    if (this._isBitSet(this.m_Bitmap, a)) {
                                        var e = this._ReadBytes(c, d);
                                        return e
                                    }
                                } else if (this._isBitSet(this.m_Bitmap, a)) {
                                    var f = this._ReadBytes(c, hc.a.BLOCK_SIZE);
                                    return f
                                }
                                return null
                            }, a.prototype.readBlocksData = function (a, b) {
                                if (a >= this.m_Blocks.length) return null;
                                for (var c = 0, d = a * hc.a.BLOCK_SIZE, e = 0, f = !1, g = a; g < a + b && (g < this.m_Blocks.length && this.isBlockFull(g)); g++) {
                                    c++;
                                    var h = this.m_Blocks[g];
                                    e += h.blockSize, g == this.m_Blocks.length - 1 && (f = !0)
                                }
                                if (0 == e) return null;
                                var i = this._ReadBytes(d, e);
                                return {
                                    buff: i,
                                    readBlockNum: c,
                                    readOffset: d,
                                    tsLen: this.fileSize,
                                    readFinish: f,
                                    totalBlockCount: this.m_Blocks.length
                                }
                            }, a.prototype.readPieceData = function (a, b) {
                                var c = this._blockWithID(a);
                                if (null === c || null === c.bitmap || !this._isSetUint8Bitmap(c.bitmap, b)) return null;
                                var d = hc.a.BLOCK_SIZE * a + hc.a.PIECE_SIZE * b, e = hc.a.PIECE_SIZE;
                                d + hc.a.PIECE_SIZE > this.m_FileSize && (e = this.m_FileSize - d);
                                var f = this._ReadBytes(d, e);
                                return f
                            }, a.prototype.readTsData = function () {
                                if (this.isFinish()) {
                                    var a = this._ReadBytes(0, this.m_FileSize);
                                    return a
                                }
                                return null
                            }, a.prototype.writeStream = function (a, b, c) {
                                null !== this.m_Blocks && 0 !== this.m_Blocks.length || this._assignBlock(this.m_FileSize), null === this.m_Buffer && this.m_FileSize > 0 && (this.m_Buffer = new ArrayBuffer(this.m_FileSize), this.m_hasAllocBuffer = !0);
                                for (var d = this._blockIndexWithPos(a), e = a % hc.a.BLOCK_SIZE, f = 0, g = b.byteLength, h = Math.min(g, hc.a.BLOCK_SIZE - e); g > 0;) {
                                    if (d >= this.m_Blocks.length) return;
                                    var i = a + f;
                                    this._isBitSet(this.m_Bitmap, d) === !1 ? this._WriteBytes(i, b, f, h) : (cc.b.info("writeStream m_Seqnum:" + this.m_Seqnum + " data repeat position " + i + ", data.length " + b.byteLength + ", blockIndex " + d + " offset " + f + ", writeLen " + h), c ? ie.getInstance().m_P2PRepeatBytes += h : ie.getInstance().m_HttpRepeatByte += h), f += h, g -= h;
                                    var j = parseInt(i / hc.a.PIECE_SIZE),
                                        k = parseInt((h + i % hc.a.PIECE_SIZE) / hc.a.PIECE_SIZE),
                                        l = this.m_Blocks[d].blockID;
                                    l * hc.a.BLOCK_SIZE + i % hc.a.BLOCK_SIZE + h >= this.m_FileSize - 1 ? ((i + h) % hc.a.PIECE_SIZE !== 0 && (k += 1), this._WriteBitmap(l, j, k, !0)) : this._WriteBitmap(l, j, k, !1), h = Math.min(hc.a.BLOCK_SIZE, g), d++
                                }
                            }, a.prototype._ReadBytes = function (a, b) {
                                if (null !== this.m_Buffer && a >= 0 && a + b <= this.m_Buffer.byteLength) {
                                    var c = null;
                                    return this.m_Buffer.slice ? c = this.m_Buffer.slice(a, a + b) : sliceBuff = new Uint8Array(Array.prototype.slice.call(this.m_Buffer, a, a + b)), c
                                }
                            }, a.prototype._WriteBytes = function (a, b, c, d) {
                                if (null !== this.m_Buffer) {
                                    var e = new Uint8Array(this.m_Buffer), f = new Uint8Array(b), g = f.subarray(c, c + d);
                                    g.byteLength + a > e.byteLength && cc.b.info("TsCache : _WriteBytes writeDataView.byteLength[" + g.byteLength + "] + postion[" + a + "] > writeDataView.byteLength[" + g.byteLength + "]"), e.set(g, a)
                                }
                            }, a.prototype._WriteBitmap = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                                    e = this._blockWithID(a);
                                if (null !== e) {
                                    for (var f = e.bitmap, g = hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE, h = b - a * g, i = h + c, j = h; j < g && j < i; j++) this._isSetUint8Bitmap(f, j) || (e.bitmap[j] = 1, d && j === i - 1 ? this.m_CacheSize += this.m_FileSize % hc.a.PIECE_SIZE : this.m_CacheSize += hc.a.PIECE_SIZE);
                                    for (var k = 0; k < f.length && 1 === f[k]; k++) ;
                                    if (k >= f.length && (this._setBit(this.m_Bitmap, a), 0 !== e.check)) {
                                        var l = this.calChecksum(a);
                                        e.check !== l ? (this.resetBlockData(a), ie.getInstance().m_CheckFailTimes++, cc.b.info("check failed !! m_Seqnum " + this.m_Seqnum + " blockID " + a)) : ie.getInstance().m_CheckSuccTimes++
                                    }
                                }
                            }, a.prototype._blockIndexWithPos = function (a) {
                                return parseInt(a / hc.a.BLOCK_SIZE)
                            }, a.prototype._blockWithID = function (a) {
                                return a >= 0 && a < this.m_Blocks.length ? this.m_Blocks[a] : null
                            }, a.prototype.isFinish = function () {
                                if (0 === this.m_BlockSum || null === this.m_Bitmap) return !1;
                                for (var a = new Uint8Array(this.m_Bitmap), b = 0; b < this.m_Bitmap.byteLength; b++) {
                                    var c = a[b];
                                    if (255 !== c) return !1
                                }
                                return !0
                            }, a.prototype.isBlockFull = function (a) {
                                return !!(a > -1 && this.m_Blocks && a < this.m_Blocks.length && this._isBitSet(this.m_Bitmap, a))
                            }, a.prototype.getUnfinishPieceInfo = function (a) {
                                this.m_HaveAssignBlock || this._assignBlock(this.m_FileSize);
                                for (var b = 0; b < this.m_BlockSum; b++) if (!this._isBitSet(this.m_Bitmap, b)) {
                                    var c = this.getUnfinishedPieceInfo(b);
                                    void 0 != c && c.pieceArray.length > 0 && a.push(c)
                                }
                            }, a.prototype.getUnfinishedPieceInfo = function (a) {
                                var b = this.m_Blocks[a];
                                if (void 0 !== b) {
                                    var c = new Fc, d = hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE;
                                    c.tsIndex = this.m_Seqnum, c.blockID = a;
                                    for (var e = 0; e < d; e++) this._isSetUint8Bitmap(b.bitmap, e) || this._isSetUint8Bitmap(b.isP2PChoose, e) || c.pieceArray.push(e);
                                    return c
                                }
                            }, a.prototype.setPieceP2PChoosed = function (a, b, c, d) {
                                if (a < this.m_BlockSum && a > -1) {
                                    var e = this.m_Blocks[a];
                                    if (void 0 === e) return;
                                    for (var f = hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE, g = Math.min(b + c, f), h = b; h < g; h++) d === !0 ? e.isP2PChoose[h] = 1 : e.isP2PChoose[h] = 0
                                }
                            }, a.prototype.getChecksum = function (a) {
                                if (a < this.m_BlockSum && a > -1) {
                                    var b = this.m_Blocks[a];
                                    return void 0 === b ? 0 : b.check
                                }
                                return 0
                            }, a.prototype.calChecksum = function (a) {
                                if (a < this.m_BlockSum && a > -1 && this._isBitSet(this.m_Bitmap, a)) {
                                    var b = this.m_Blocks[a];
                                    if (void 0 === b) return 0;
                                    var c = this.readBlockData(a);
                                    if (null === c) return 0;
                                    var d = Ic.getChecksum(c);
                                    return d
                                }
                                return 0
                            }, a.prototype.setChecksum = function (a, b) {
                                if (a < this.m_BlockSum && a > -1) {
                                    var c = this.m_Blocks[a];
                                    if (void 0 === c) return;
                                    c.check = b
                                }
                            }, a.prototype.resetBlockData = function (a) {
                                if (a < this.m_BlockSum && a > -1 && this._isBitSet(this.m_Bitmap, a)) {
                                    var b = this.m_Blocks[a];
                                    if (void 0 === b) return;
                                    this._unSetBit(this.m_Bitmap, a), b.bitmap = new Uint8Array(hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE), b.isP2PChoose = new Uint8Array(hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE), b.check = 0, a === this.m_BlockSum - 1 && this._setLastBlockBitmap(b), cc.b.info("reset block data blockID:" + a)
                                }
                            }, a.prototype._setLastBlockBitmap = function (a) {
                                if (this.m_FileSize % hc.a.BLOCK_SIZE !== 0) {
                                    var b = parseInt(this.m_LastBlockSize / hc.a.PIECE_SIZE);
                                    this.m_LastBlockSize % hc.a.PIECE_SIZE > 0 && b++;
                                    for (var c = b; c < hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE; c++) a.bitmap[c] = 1
                                }
                            }, a.prototype.getBlockCount = function () {
                                return this.m_Blocks.length
                            }, a.prototype.getCacheSize = function () {
                                return this.m_CacheSize
                            }, a.prototype.calcMD5 = function () {
                                return Jc.a.GetMd5(this.m_Buffer)
                            }, a.prototype.getFirstRange = function (a) {
                                if (this.m_HaveAssignBlock !== !1) {
                                    for (var b = void 0, c = void 0, d = hc.a.BLOCK_SIZE / hc.a.PIECE_SIZE, e = this.getFirstUnfinishedBlock(), f = this.m_Blocks[e], g = 0; g < d; g++) if (!this._isSetUint8Bitmap(f.bitmap, g)) {
                                        b = e * hc.a.BLOCK_SIZE + g * hc.a.PIECE_SIZE;
                                        break
                                    }
                                    for (var h = this.getEndUnfinishedBlock(), i = this.m_Blocks[h], j = d - 1; j >= 0; j--) if (!this._isSetUint8Bitmap(i.bitmap, j)) {
                                        c = h * hc.a.BLOCK_SIZE + (j + 1) * hc.a.PIECE_SIZE, c = c > this.fileSize - 1 ? this.fileSize - 1 : c;
                                        break
                                    }
                                    void 0 !== b && 0 !== b && (a.rangeStart = b, a.rangeEnd = this.fileSize - 1), void 0 !== c && (a.rangeEnd = c), 0 === a.rangeStart && a.rangeEnd === this.fileSize - 1 && (a.rangeEnd = -1)
                                }
                            }, a.prototype.getFirstUnfinishedBlock = function () {
                                for (var a = 0; a < this.m_BlockSum && this._isBitSet(this.m_Bitmap, a); a++) ;
                                return a
                            }, a.prototype.getEndUnfinishedBlock = function () {
                                for (var a = this.m_BlockSum - 1; a >= 0 && this._isBitSet(this.m_Bitmap, a); a--) ;
                                return a
                            }, a.prototype.getContinousBlocks = function (a, b) {
                                for (var c = 0, d = a; d < a + b && this.isBlockFull(d); d++) c++;
                                return c
                            }, a.prototype.isAllowP2P = function () {
                                return this.m_AllowP2P
                            }, a.prototype.setAllowP2P = function (a) {
                                this.m_AllowP2P = a
                            }, Kc(a, [{
                                key: "Stats", get: function () {
                                    return this.m_Stats
                                }, set: function (a) {
                                    this.m_Stats = a
                                }
                            }, {
                                key: "fileSize", get: function () {
                                    return this.m_FileSize
                                }
                            }, {
                                key: "duration", get: function () {
                                    return this.m_Duration
                                }
                            }]), a
                        }(), Nc = Mc, Oc = function () {
                            function a(b, c) {
                                m(this, a), this.m_KeyID = c, this.m_ArrTsCache = [], this.m_FinishSeqID = -1, this.m_CodeRate = 0, this._initMediaFile(b), this.m_FileIDArray = [], this.m_TsNumArray = []
                            }

                            return a.prototype._initMediaFile = function (a) {
                                var b = performance.now();
                                if (a) {
                                    var c = a.details.fragments;
                                    this.m_FirstSeqnum = c[0].sn, this.m_LastSeqnum = this.m_FirstSeqnum + c.length - 1;
                                    for (var d = 0; d < c.length; d++) {
                                        var e = new Nc(c[d]);
                                        this.m_ArrTsCache.push(e)
                                    }
                                }
                                this.isVideoIn = !1, this.isAdInsert = !1, this.constructMapFromIndexToP2PSeq(), this.constructMapFromP2PSeqToIndex(), cc.b.info("MediaFile : _initMediaFile : \u8017\u65f6 " + (performance.now() - b) + "ms")
                            }, a.prototype.getLastSeq = function () {
                                return this.m_LastSeqnum
                            }, a.prototype.getTsBitmap = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b], d = void 0;
                                    switch (c.type) {
                                        case Lc.VideoIn:
                                            d = null;
                                            break;
                                        case Lc.AdInsert:
                                            d = void 0;
                                            break;
                                        case Lc.Normal:
                                        default:
                                            d = c.getTsBitmap()
                                    }
                                    return d
                                }
                            }, a.prototype.updateTsInfoBylevel = function (a) {
                                var b = a.details.fragments;
                                this.m_FirstSeqnum = b[0].sn, this.m_LastSeqnum = this.m_FirstSeqnum + b.length - 1;
                                for (var c = this.m_ArrTsCache.length, d = b.length, e = 0; e < c && e < d; e++) this.m_ArrTsCache[e].setUrl(b[e].url), this.m_ArrTsCache[e].setFilesize(b[e].fileSize), this.m_ArrTsCache[e].setDuration(b[e].duration)
                            }, a.prototype.writeData = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                                    e = a - this.m_FirstSeqnum;
                                if (e >= 0 && e < this.m_ArrTsCache.length) {
                                    var f = this.m_ArrTsCache[e];
                                    f.writeStream(b, c, d)
                                }
                                d ? (hc.a.isAdPreLoading && (ie.getInstance().m_P2PDownloadBytesAdPreLoad += c.byteLength), ie.getInstance().m_P2PDownloadBytes += c.byteLength) : ie.getInstance().m_CDNDownloadBytes += c.byteLength
                            }, a.prototype.readBlockData = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                if (c >= 0 && c < this.m_ArrTsCache.length) {
                                    var d = this.m_ArrTsCache[c], e = d.readBlockData(b);
                                    return e
                                }
                                return null
                            }, a.prototype.readBlocksData = function (a, b, c) {
                                var d = a - this.m_FirstSeqnum;
                                if (d >= 0 && d < this.m_ArrTsCache.length) {
                                    var e = this.m_ArrTsCache[d], f = e.readBlocksData(b, c);
                                    return f
                                }
                                return null
                            }, a.prototype.readPieceData = function (a, b, c) {
                                var d = a - this.m_FirstSeqnum;
                                if (d >= 0 && d < this.m_ArrTsCache.length) {
                                    var e = this.m_ArrTsCache[d], f = e.readPieceData(b, c);
                                    return f
                                }
                                return null
                            }, a.prototype.isBlockFull = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                if (c >= 0 && c < this.m_ArrTsCache.length) {
                                    var d = this.m_ArrTsCache[c];
                                    return d.isBlockFull(b)
                                }
                                return !1
                            }, a.prototype.readTsData = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b], d = c.readTsData();
                                    return d
                                }
                                return null
                            }, a.prototype.isTsFinishBySeq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b];
                                    return c.isFinish()
                                }
                                return !1
                            }, a.prototype.getTsDurationBySeq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                return b >= 0 && b < this.m_ArrTsCache.length ? this.m_ArrTsCache[b].getDuration() : 0
                            }, a.prototype.getUnloadTsSeq = function (a) {
                                for (var b = a - this.m_FirstSeqnum, c = b; b >= 0 && c < this.m_ArrTsCache.length; c++) if (!this.m_ArrTsCache[c].isFinish()) return c + this.m_FirstSeqnum;
                                return -1
                            }, a.prototype.getUrlBySeq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b];
                                    return c.m_Url
                                }
                            }, a.prototype.getStatsByseq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b];
                                    return c.Stats
                                }
                                return null
                            }, a.prototype.setStatsBySeq = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                if (c >= 0 && c < this.m_ArrTsCache.length) {
                                    var d = this.m_ArrTsCache[c];
                                    d.Stats = b
                                }
                            }, a.prototype.getBitrate = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b];
                                    if (c.duration > 0) return parseInt(c.fileSize / c.duration)
                                }
                                return 0
                            }, a.prototype.setTsSizeBySeq = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                c >= 0 && c < this.m_ArrTsCache.length && this.m_ArrTsCache[c].setFilesize(b)
                            }, a.prototype.getTsSizeBySeq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b];
                                    return c.fileSize
                                }
                                return 0
                            }, a.prototype.getBlockCountByTSSeq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b], d = c.getBlockCount();
                                    return d
                                }
                            }, a.prototype.getTotalCacheSize = function () {
                                for (var a = this.m_ArrTsCache.length, b = 0, c = 0; c < a; c++) this.m_ArrTsCache[c].hasAllocBuffer(c) && (b += this.m_ArrTsCache[c].getCacheSize());
                                return b
                            }, a.prototype.hasAllocBuffer = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) return this.m_ArrTsCache[b].hasAllocBuffer()
                            }, a.prototype.getCacheSizeByTsIndex = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) return this.m_ArrTsCache[b].getCacheSize()
                            }, a.prototype.deleteTsByIndex = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                b >= 0 && b < this.m_ArrTsCache.length && this.m_ArrTsCache[b].releaseData()
                            }, a.prototype.releaseCompletely = function () {
                                for (var a = this.m_ArrTsCache.length, b = 0; b < a; b++) this.m_ArrTsCache[b].release(), this.m_ArrTsCache[b] = null;
                                this.m_ArrTsCache.length = 0, this.m_FileIDArray.length = 0, this.m_TsNumArray.length = 0
                            }, a.prototype.getTsSum = function () {
                                return this.m_ArrTsCache.length
                            }, a.prototype.hasTorrent = function () {
                                return 0 !== this.m_FileIDArray.length && 0 !== this.m_TsNumArray.length
                            }, a.prototype.setFileID = function (a, b) {
                                this.m_FileIDArray = a;
                                for (var c = 0, d = 0; d < b.length; d++) c += b[d], this.m_TsNumArray.push(c)
                            }, a.prototype.getFileIDByP2PSeq = function (a) {
                                if (a >= 0) for (var b = 0; b < this.m_TsNumArray.length; b++) if (a < this.m_TsNumArray[b] && b < this.m_FileIDArray.length) return this.m_FileIDArray[b];
                                return ""
                            }, a.prototype.getReportFileIds = function (a) {
                                var b = new Array;
                                do {
                                    if (0 == this.m_FileIDArray.length) break;
                                    if (this.m_FileIDArray.length !== this.m_TsNumArray.length) break;
                                    for (var c = 0, d = 0; d < this.m_FileIDArray.length; d++) this.__canFileidReport(d, c) && b.push(this.m_FileIDArray[d]), c = this.m_TsNumArray[d]
                                } while (!1);
                                a.add = b
                            }, a.prototype.__canFileidReport = function (a, b) {
                                if (a >= this.m_TsNumArray.length) return !1;
                                for (var c = this.m_TsNumArray[a], d = b; d < c; d++) {
                                    var e = !1, f = this.__getTsCache(d);
                                    if (f && f.type === Lc.Normal) for (var g = f.getBlockCount(), h = 0; h < g; h++) if (f.isBlockFull(h)) {
                                        e = !0;
                                        break
                                    }
                                    if (e) return !0
                                }
                                return !1
                            }, a.prototype.printTsData = function (a, b, c) {
                                var d = a - this.m_FirstSeqnum;
                                if (d >= 0 && d < this.m_ArrTsCache.length) {
                                    var e = this.m_ArrTsCache[d];
                                    e.printData(b, c)
                                }
                            }, a.prototype.__getTsCache = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b];
                                    return c
                                }
                                return null
                            }, a.prototype.constructDownloadPieceInfo = function (a, b) {
                                for (var c = this.getUnfinishedTsForP2P(a, b), d = [], e = c.length, f = 0; f < e; f++) c[f].getUnfinishPieceInfo(d);
                                return d
                            }, a.prototype.getUnfinishedTsForP2P = function (a, b) {
                                for (var c = this.m_ArrTsCache.length, d = [], e = a; e < c && !(d.length >= b); e++) {
                                    var f = this.m_ArrTsCache[e];
                                    f.isAllowP2P() ? f.type != Lc.VideoIn && f.type != Lc.AdInsert && (this.m_ArrTsCache[e].isFinish() || d.push(this.m_ArrTsCache[e])) : cc.b.info("checkfilesize ts:" + this.m_ArrTsCache[e].m_Seqnum + " not go p2p")
                                }
                                return d
                            }, a.prototype.setPieceP2PChoosed = function (a, b, c, d, e) {
                                var f = a - this.m_FirstSeqnum;
                                f >= 0 && f < this.m_ArrTsCache.length && this.m_ArrTsCache[f].setPieceP2PChoosed(b, c, d, e)
                            }, a.prototype.getChecksum = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                return c >= 0 && c < this.m_ArrTsCache.length ? this.m_ArrTsCache[c].getChecksum(b) : 0
                            }, a.prototype.calChecksum = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                return c >= 0 && c < this.m_ArrTsCache.length ? this.m_ArrTsCache[c].calChecksum(b) : 0
                            }, a.prototype.setChecksum = function (a, b, c) {
                                var d = a - this.m_FirstSeqnum;
                                d >= 0 && d < this.m_ArrTsCache.length && this.m_ArrTsCache[d].setChecksum(b, c)
                            }, a.prototype.setAllowP2P = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                c >= 0 && c < this.m_ArrTsCache.length && this.m_ArrTsCache[c].setAllowP2P(b)
                            }, a.prototype.getAllowP2P = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                return b >= 0 && b < this.m_ArrTsCache.length && this.m_ArrTsCache[b].isAllowP2P()
                            }, a.prototype.resetBlockData = function (a, b) {
                                var c = a - this.m_FirstSeqnum;
                                c >= 0 && c < this.m_ArrTsCache.length && this.m_ArrTsCache[c].resetBlockData(b)
                            }, a.prototype.getFileSizeBySeq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                if (b >= 0 && b < this.m_ArrTsCache.length) {
                                    var c = this.m_ArrTsCache[b], d = void 0;
                                    switch (c.type) {
                                        case Lc.VideoIn:
                                            d = 0;
                                            break;
                                        case Lc.AdInsert:
                                            d = void 0;
                                            break;
                                        case Lc.Normal:
                                        default:
                                            d = c.m_FileSize
                                    }
                                    return d
                                }
                                return 0
                            }, a.prototype.checkFSBySeq = function (a, b) {
                                var c = b - this.m_FirstSeqnum;
                                c >= 0 && c < this.m_ArrTsCache.length && this.m_ArrTsCache[c].checkFileSize(a)
                            }, a.prototype.updateUrlByDetails = function (a) {
                                for (var b = a.fragments, c = b.length, d = 0; d < this.m_ArrTsCache.length && d < c; d++) this.m_ArrTsCache[d].setUrl(b[d].url)
                            }, a.prototype.getTsMD5Str = function (a) {
                                for (var b = "curTime:" + a + "\n", c = Jc.a.GetWantCalcTs(this.m_ArrTsCache, a), d = 0; d < c.length; d++) {
                                    var e = c[d];
                                    b += "keyid:" + this.m_KeyID + " sn:" + this.m_ArrTsCache[e].m_Seqnum, b += "\n"
                                }
                                return b
                            }, a.prototype.getTsArray = function (a) {
                                return Jc.a.GetWantCalcTs(this.m_ArrTsCache, a)
                            }, a.prototype.calcMD5 = function (a) {
                                return this.m_ArrTsCache[a].calcMD5()
                            }, a.prototype.releaseTsBySeq = function (a) {
                                var b = a - this.m_FirstSeqnum;
                                b >= 0 && b < this.m_ArrTsCache.length && this.m_ArrTsCache[b].release()
                            }, a.prototype.setFileSizeBySeqAndDetails = function (a, b) {
                                var c = b.fragments, d = a - this.m_FirstSeqnum;
                                d >= 0 && d < this.m_ArrTsCache.length && this.m_ArrTsCache[d].setFilesize(c[d].fileSize)
                            }, a.prototype.getFirstRangeByTsSeq = function (a) {
                                var b = a.sn, c = b - this.m_FirstSeqnum;
                                c >= 0 && c < this.m_ArrTsCache.length && this.m_ArrTsCache[c].getFirstRange(a)
                            }, a.prototype.getContinousBlocks = function (a, b, c) {
                                var d = a - this.m_FirstSeqnum;
                                if (d >= 0 && d < this.m_ArrTsCache.length) {
                                    var e = this.m_ArrTsCache[d];
                                    return e.getContinousBlocks(b, c)
                                }
                                return 0
                            }, a.prototype.constructMapFromIndexToP2PSeq = function () {
                                this.mapFromIndexToP2PSeq = [];
                                for (var a = 0, b = 0, c = this.m_ArrTsCache.length; b < c; b++) switch (this.m_ArrTsCache[b].type) {
                                    case Lc.VideoIn:
                                        this.mapFromIndexToP2PSeq.push(-(a + 1)), a++, this.isVideoIn = !0;
                                        break;
                                    case Lc.AdInsert:
                                        this.mapFromIndexToP2PSeq.push("ad"), this.isAdInsert = !0;
                                        break;
                                    case Lc.Normal:
                                    default:
                                        this.mapFromIndexToP2PSeq.push(a), a++
                                }
                                cc.b.log("mapFromIndexToP2PSeq:" + this.mapFromIndexToP2PSeq)
                            }, a.prototype.constructMapFromP2PSeqToIndex = function () {
                                this.mapFromP2PSeqToIndex = {};
                                for (var a = 0, b = this.mapFromIndexToP2PSeq.length; a < b; a++) {
                                    var c = this.mapFromIndexToP2PSeq[a];
                                    isNaN(c) || (c >= 0 ? this.mapFromP2PSeqToIndex[c] = a : this.mapFromP2PSeqToIndex[-(c + 1)] = a)
                                }
                                cc.b.log("mapFromP2PSeqToIndex:" + JSON.stringify(this.mapFromP2PSeqToIndex))
                            }, a.prototype.getUnloadTSP2PSeq = function (a) {
                                for (var b = a - this.m_FirstSeqnum, c = b; b >= 0 && c < this.m_ArrTsCache.length; c++) if (this.mapFromIndexToP2PSeq[c] >= 0 && !this.m_ArrTsCache[c].isFinish()) return this.mapFromIndexToP2PSeq[c];
                                return -1
                            }, a.prototype.isSameVideoInTS = function (a) {
                                if (a && a.details && a.details.fragments) {
                                    var b = a.details.fragments, c = b.length;
                                    if (c != this.m_ArrTsCache.length) return !1;
                                    for (var d = 0; d < c; d++) if (Jc.a.getFileNameFromUrl(b[d].url) !== this.m_ArrTsCache[d].fileName) return !1;
                                    return !0
                                }
                                return !1
                            }, a
                        }(), Pc = Oc, Qc = {
                            UNCONNECTED: "unconnected",
                            CONNECTING: "connecting",
                            CONNECTED: "connected",
                            STOPED: "stoped"
                        }, Rc = {TPTServer: "tptserver", SignalServer: "signalserver", PeerServer: "peerserver"},
                        Sc = {UNINIT: "unit", RUNNING: "running", STOP: "stop"},
                        Tc = {UNLOGIN: "unlogin", LOGIN: "login", LOGOUT: "logout", LOGERROR: "logerror"},
                        Uc = {UnKnown: "unknown", Start: "start", Ing: "ing", End: "end"}, Vc = function () {
                            function a(b, c, d) {
                                n(this, a), this.sessionDelegate = d, this.connection = null, this.state = Qc.UNCONNECTED, this.ip = b, this.port = c, this.onConnectFinishCallBack = new Array, this.isOnError = !1
                            }

                            return a.prototype.close = function () {
                                this.connection && (this.connection.close(), this.connection = null)
                            }, a.prototype.destroy = function () {
                            }, a.prototype.connect = function (a) {
                                if (this.state == Qc.CONNECTED) return a && a(), !0;
                                if (this.state == Qc.CONNECTING) return this.onConnectFinishCallBack.push(a), !0;
                                var b = this.ip, c = this.port;
                                this.state = Qc.CONNECTING, a && this.onConnectFinishCallBack.push(a);
                                var d = "wss://" + b;
                                return 0 !== c && "" !== c && (d += ":" + c), this.connection = new WebSocket(d), this.connection.onmessage = this.onRecv.bind(this), this.connection.onopen = this.onConnect.bind(this), this.connection.onerror = this.onError.bind(this), this.connection.onclose = this.onClose.bind(this), cc.b.log("connecting server"), this.connectStart = performance.now(), !0
                            }, a.prototype.getState = function () {
                                return this.state
                            }, a.prototype.getIp = function () {
                                return this.ip
                            }, a.prototype.getPort = function () {
                                return this.port
                            }, a.prototype.isStop = function () {
                                return this.state == Qc.STOPED
                            }, a.prototype.stop = function () {
                                return this.state == Qc.STOPED || (null !== this.connection && (this.state != Qc.CONNECTED && this.state != Qc.CONNECTING || this.connection.close(), this.connection = null), this.state = Qc.STOPED, !0)
                            }, a.prototype.unRegister = function () {
                                this.sessionDelegate = null
                            }, a.prototype.__isIp = function (a) {
                                if (void 0 === a || null === a) return !1;
                                var b = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/, c = b.test(a);
                                if (!c) return !1;
                                var d = a.split(".").every(function (a) {
                                    return !(a.length > 1 && "0" === a.charAt(0)) && !(parseInt(a, 10) > 255)
                                });
                                return d
                            }, a.prototype.__isPort = function (a) {
                                return !(void 0 === a || null === a || !isNaN(a) && a > 65536)
                            }, a.prototype.send = function (a) {
                                var b = 0;
                                if (this.state == Qc.UNCONNECTED) {
                                    var c = function () {
                                        d.connection.send(a)
                                    }, d = this;
                                    if (!this.connect(c)) return -1
                                } else {
                                    if (this.state == Qc.STOPED) return 0;
                                    this.state == Qc.CONNECTED && (b = this.connection.send(a))
                                }
                                return b
                            }, a.prototype.onRecv = function (a) {
                                this.sessionDelegate && this.sessionDelegate.onRecv && this.sessionDelegate.onRecv(this, a.data)
                            }, a.prototype.onClose = function (a) {
                                if (a.code && "" != a.code && 1e3 != a.code && this.isOnError) {
                                    var b = {ip: this.ip, port: this.port, retCode: a.code};
                                    ie.getInstance().setLastWebSocketErrorInfo(b), this.isOnError = !1
                                }
                                this.sessionDelegate && this.sessionDelegate.onClose && this.sessionDelegate.onClose(this)
                            }, a.prototype.onConnect = function () {
                                this.state = Qc.CONNECTED, this.sessionDelegate && this.sessionDelegate.onConnect && this.sessionDelegate.onConnect(this);
                                for (var a = 0; a < this.onConnectFinishCallBack.length; a++) {
                                    var b = this.onConnectFinishCallBack[a];
                                    b && b()
                                }
                                this.onConnectFinishCallBack.length > 0 && this.onConnectFinishCallBack.splice(0, this.onConnectFinishCallBack.length);
                                var c = 0;
                                this.connectStart && (c = performance.now() - this.connectStart), sc.getInstance().reportSvrQuality(0, nc.ServerType_WebSocket, this.ip, this.port, kc.eErrno_WebSocketonConnect, 0, c, 0, 0)
                            }, a.prototype.onError = function (a) {
                                this.sessionDelegate && this.sessionDelegate.onError && this.sessionDelegate.onError(this, a), this.isOnError = !0
                            }, a
                        }(), Wc = Vc, Xc = {
                            P2P_SVR_CMD_PS_LOGIN: 59812,
                            P2P_SVR_CMD_PS_LOGOUT: 59813,
                            P2P_SVR_CMD_PS_HEARTBEAT: 59814,
                            P2P_SVR_CMD_PS_REPORT: 59815,
                            P2P_SVR_CMD_PS_QUERYSEED: 59816,
                            P2P_SVR_CMD_PS_SIGNAL_RELAY: 61652,
                            P2P_SVR_CMD_MP4_GET_TPT: 60257,
                            P2P_SVR_CMD_HLS_GET_TPT: 60287
                        }, Yc = {
                            RET_CODE_OK: 0,
                            RET_CODE_ERR_COMMON: 1,
                            RET_CODE_ERR_INTERNAL: 1e4,
                            RET_CODE_ERR_INVALID_PKG: 10001,
                            RET_CODE_ERR_INVALID_CMD: 10002,
                            RET_CODE_ERR_INVALID_SESSION: 10003,
                            RET_CODE_NEED_REPORT_FULL: 10004,
                            RET_CODE_ERR_SVR_BUSY: 10005,
                            RET_CODE_ERR_SVR_FILTER: 10006,
                            RET_NOT_FIND_DSTUIN: 1e3,
                            RET_TPT_NO_P2P: -40004,
                            RET_TPT_REDIS_STORE_NULL: -40005,
                            RET_TPT_FORMAT_INVALID: -40006
                        }, Zc = {offer: "offer", candidate: "candidate", answer: "answer", bye: "bye"}, $c = function () {
                            function a() {
                                o(this, a)
                            }

                            return a.GetCmdString = function (a) {
                                var b = "";
                                switch (a) {
                                    case Xc.P2P_SVR_CMD_PS_LOGIN:
                                        b = "P2P_SVR_CMD_PS_LOGIN";
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_LOGOUT:
                                        b = "P2P_SVR_CMD_PS_LOGOUT";
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_HEARTBEAT:
                                        b = "P2P_SVR_CMD_PS_HEARTBEAT";
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_REPORT:
                                        b = "P2P_SVR_CMD_PS_REPORT";
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_QUERYSEED:
                                        b = "P2P_SVR_CMD_PS_QUERYSEED";
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY:
                                        b = "P2P_SVR_CMD_PS_SIGNAL_RELAY";
                                        break;
                                    case Xc.P2P_SVR_CMD_MP4_GET_TPT:
                                        b = "P2P_SVR_CMD_MP4_GET_TPT";
                                        break;
                                    case Xc.P2P_SVR_CMD_HLS_GET_TPT:
                                        b = "P2P_SVR_CMD_HLS_GET_TPT"
                                }
                                return b
                            }, a.GetRetCode = function (a) {
                                var b = "";
                                switch (a) {
                                    case Yc.RET_CODE_OK:
                                        b = "RET_CODE_OK";
                                        break;
                                    case Yc.RET_CODE_ERR_COMMON:
                                        b = "RET_CODE_ERR_COMMON";
                                        break;
                                    case Yc.RET_CODE_ERR_INTERNAL:
                                        b = "RET_CODE_ERR_INTERNAL";
                                        break;
                                    case Yc.RET_CODE_ERR_INVALID_PKG:
                                        b = "RET_CODE_ERR_INVALID_PKG";
                                        break;
                                    case Yc.RET_CODE_ERR_INVALID_CMD:
                                        b = "RET_CODE_ERR_INVALID_CMD";
                                        break;
                                    case Yc.RET_CODE_ERR_INVALID_SESSION:
                                        b = "RET_CODE_ERR_INVALID_SESSION";
                                        break;
                                    case Yc.RET_CODE_NEED_REPORT_FULL:
                                        b = "RET_CODE_NEED_REPORT_FULL";
                                        break;
                                    case Yc.RET_CODE_ERR_SVR_BUSY:
                                        b = "RET_CODE_ERR_SVR_BUSY";
                                        break;
                                    case Yc.RET_CODE_ERR_SVR_FILTER:
                                        b = "RET_CODE_ERR_SVR_FILTER";
                                        break;
                                    case Yc.RET_NOT_FIND_DSTUIN:
                                        b = "RET_NOT_FIND_DSTUIN";
                                        break;
                                    case Yc.RET_TPT_NO_P2P:
                                        b = "RET_TPT_NO_P2P";
                                        break;
                                    case Yc.RET_TPT_REDIS_STORE_NULL:
                                        b = "RET_TPT_REDIS_STORE_NULL";
                                        break;
                                    case Yc.RET_TPT_FORMAT_INVALID:
                                        b = "RET_TPT_FORMAT_INVALID"
                                }
                                return b
                            }, a.GetSeq = function () {
                                return void 0 == a.seq ? a.seq = 0 : a.seq++, a.seq
                            }, a.GetTask = function (a, b, c, d, e) {
                                return {
                                    obj: a,
                                    func: b,
                                    args: c,
                                    seq: e,
                                    sendTick: Jc.a.GetTick(),
                                    retryCount: 0,
                                    cmd: d,
                                    name: "task"
                                }
                            }, a.SetUin = function (b) {
                                a.uin = b
                            }, a.GetUin = function () {
                                return void 0 === a.uin ? 0 : a.uin
                            }, a.SetUinToken = function (b) {
                                a.uin_token = b
                            }, a.GetUinToken = function () {
                                return void 0 === a.uin_token ? "" : a.uin_token
                            }, a.ReqHeader = function (b) {
                                var c = a.GetUin(), d = a.GetUinToken(), e = hc.a.appid, f = hc.a.playerVer, g = a.GetSeq();
                                return {cmd: b, uin: c, uin_token: d, appid: e, client_ver: f, seq: g}
                            }, a.LoginReq = function (a) {
                                return {header: a}
                            }, a.LogoutReq = function (a) {
                                return {header: a}
                            }, a.HeartReq = function (a, b, c, d, e, f, g) {
                                return {
                                    header: a,
                                    body: {
                                        uploadbandwidth: b,
                                        p2p_uploadspeed: c,
                                        p2p_uploadsize: d,
                                        server_num: e,
                                        max_server_num: f,
                                        file_num: g
                                    }
                                }
                            }, a.ReportReq = function (a, b, c) {
                                return {header: a, body: {add_files: b, delete_files: c}}
                            }, a.QuerySeedReq = function (a, b, c) {
                                return {header: a, body: {fileid: b, seed_num: c}}
                            }, a.ForwardReq = function (a, b, c) {
                                return {header: a, body: {dst_uin: b, msg: c}}
                            }, a.GetTPTReq = function (a, b, c) {
                                return {header: a, body: {busiid: b, resourceid: c}}
                            }, a.CreateOfferReq = function (b, c, d, e) {
                                return {
                                    type: Zc.offer,
                                    offer: b,
                                    stype: e,
                                    dst_uin: c,
                                    keyid: d,
                                    src_uin: a.GetUin(),
                                    ver: hc.a.P2PVersion
                                }
                            }, a.CreateCandidateReq = function (b, c, d, e) {
                                return {
                                    type: Zc.candidate,
                                    stype: e,
                                    candidate: b,
                                    dst_uin: c,
                                    keyid: d,
                                    src_uin: a.GetUin(),
                                    ver: hc.a.P2PVersion
                                }
                            }, a.CreateAnswerReq = function (b, c, d, e) {
                                return {
                                    type: Zc.answer,
                                    stype: e,
                                    answer: b,
                                    dst_uin: c,
                                    keyid: d,
                                    src_uin: a.GetUin(),
                                    ver: hc.a.P2PVersion,
                                    busy: 0
                                }
                            }, a.ByeNotify = function (b, c, d, e) {
                                return {
                                    type: Zc.bye,
                                    stype: d,
                                    reason: e,
                                    dst_uin: b,
                                    keyid: c,
                                    src_uin: a.GetUin(),
                                    ver: hc.a.P2PVersion
                                }
                            }, a
                        }(), _c = $c, ad = c(26), bd = function () {
                            function a() {
                                p(this, a), this.init = !1, this.bOpenP2P = !1, this.hls = void 0
                            }

                            return a.getInstance = function () {
                                return void 0 == a.instance && (a.instance = new a), a.instance
                            }, a.prototype.destroy = function () {
                            }, a.prototype.initModule = function (a) {
                                return this.hls = a, !!this.init || (this.init = !0, Object(cc.a)(new ad.a(tc.a)), void (tc.a.IsStartP2P && this.openP2P()))
                            }, a.prototype.stopP2P = function () {
                                this.bOpenP2P && (cc.b.log("HlsModule stopP2P."), od.getInstance().destroy(), de.getInstance().destroy(), sd.getInstance().stopP2P(), this.hls && (sc.getInstance().reportStopP2P({stopP2PTime: performance.now()}), this.hls.stopP2P()), this.bOpenP2P = !1)
                            }, a.prototype.isOpenP2P = function () {
                                return this.bOpenP2P === !0
                            }, a.prototype.checkP2PSupport = function () {
                                return void 0 === hc.a.isSupportP2P && (Jc.a.isSupportWebRtc() ? hc.a.isSupportP2P = !0 : (hc.a.isSupportP2P = !1, ie.getInstance().setSupportWebRTC(ge.RTC_NOT_SUP))), hc.a.isSupportP2P
                            }, a.prototype.openP2P = function () {
                                this.bOpenP2P || this.checkP2PSupport() && (cc.b.log("HlsModule openP2P."), this.bOpenP2P = !0, od.getInstance().init(), de.getInstance().init(), this.hls && (sc.getInstance().openP2PTime = performance.now(), this.hls.startP2P()))
                            }, a
                        }(), cd = bd, dd = 100,
                        ed = [Xc.P2P_SVR_CMD_PS_LOGIN, Xc.P2P_SVR_CMD_MP4_GET_TPT, Xc.P2P_SVR_CMD_HLS_GET_TPT],
                        fd = function () {
                            function a(b, c) {
                                q(this, a), this.unSendTask = new Array, this.sendTask = new Array, this.forceSendTask = new Array, this.type = b, this.websock = null, this.pause = !0, this.serverManager = c, this.serverState = Sc.UNINIT, this.nextConnectTick = 0, this.connectErrorTime = 0, this.totalConnectErrorTime = 0, this.error = {
                                    code: 0,
                                    description: ""
                                }, this.timerId = null, this.init()
                            }

                            return a.prototype.destroy = function () {
                                this.close()
                            }, a.prototype.getType = function () {
                                return this.type
                            }, a.prototype.isTask = function (a) {
                                if (1 == a.length) {
                                    var b = a[0];
                                    if (b && b instanceof Object && "task" == b.name) return !0
                                }
                                return !1
                            }, a.prototype.close = function () {
                                this.unSendTask = [], this.sendTask = [], this.forceSendTask = [], this.serverState != Sc.STOP && (this.serverState = Sc.STOP, this.timerId && (clearInterval(this.timerId), this.timerId = void 0), this.serverManager && this.websock && (this.serverManager.closeSock(this.websock, this.type), this.websock = null), this.serverManager = null)
                            }, a.prototype.getIp = function () {
                                if (this.websock) return this.websock.getIp()
                            }, a.prototype.getPort = function () {
                                if (this.websock) return this.websock.getPort()
                            }, a.prototype.isSameAddr = function (a, b) {
                                return void 0 != a && void 0 != b && (this.getIp() == a && this.getPort() == b)
                            }, a.prototype.init = function () {
                                if (this.serverState != Sc.RUNNING) {
                                    this.serverState = Sc.RUNNING;
                                    var a = this;
                                    this.timerId = setInterval(function () {
                                        a.update()
                                    }, dd), this.update()
                                }
                            }, a.prototype.setSock = function (a) {
                                this.websock = a
                            }, a.prototype.getSock = function () {
                                return this.websock
                            }, a.prototype.removeSock = function () {
                                var a = this.websock;
                                return this.websock && this.websock.close(), this.websock = null, a
                            }, a.prototype.changeAddr = function (a, b) {
                                this.ip = a, this.port = b, this.websock = od.getInstance().changeAddr(a, b, this)
                            }, a.prototype.getState = function () {
                                return !!this.websock && this.websock.getState()
                            }, a.prototype.connect = function () {
                                return !!this.websock && this.websock.connect()
                            }, a.prototype.setPause = function (a) {
                                this.pause = a
                            }, a.prototype.isPause = function () {
                                return this.pause
                            }, a.prototype.update = function () {
                                do {
                                    if (this.serverState == Sc.STOP) break;
                                    if (!this.websock) break;
                                    if (this.websock.getState() == Qc.UNCONNECTED) (0 == this.nextConnectTick || Jc.a.GetTick() - this.nextConnectTick >= 0) && this.websock.connect(); else {
                                        if (this.websock.getState() == Qc.CONNECTING) break;
                                        if (this.websock.getState() == Qc.CONNECTED) {
                                            if (this.__checkSendPackTimeout(), this.__dealForceSendPack(), this.pause) break;
                                            var a = !0;
                                            this.type == Rc.PeerServer && this.heartBeatFinish === !1 && (a = !1), a && this.__dealUnSendPack()
                                        }
                                    }
                                } while (!1)
                            }, a.prototype.__updateSendTickOfUnSendTask = function (a) {
                                for (var b = 0; b < this.unSendTask.length; b++) {
                                    var c = this.unSendTask[b];
                                    c && (c.sendTick = c.sendTick + a)
                                }
                            }, a.prototype.__changeSendTask2UnSend = function () {
                                this.unSendTask = this.sendTask.concat(this.unSendTask), this.sendTask = null, this.sendTask = new Array
                            }, a.prototype.__removeAllSendTask = function () {
                                this.sendTask = null, this.sendTask = new Array
                            }, a.prototype._taskTimeout = function (a) {
                            }, a.prototype.__checkSendPackTimeout = function () {
                                if (0 != this.sendTask.length) {
                                    var a = new Array;
                                    a = a.concat(this.sendTask);
                                    for (var b = 0; b < a.length; b++) {
                                        var c = a[b], d = Jc.a.GetTick();
                                        if (c.sendTick + 1e3 * tc.a.P2PSendPackTimeout <= d) {
                                            var e = _c.GetCmdString(c.cmd);
                                            cc.b.info("websock sendTask timeout," + e), this.__isRetryCmd(c.cmd) && this.ReSend(c), this._taskTimeout(c), this.sendTask.splice(b, 1)
                                        }
                                    }
                                }
                            }, a.prototype.__dealForceSendPack = function () {
                                var a = new Array;
                                a = a.concat(this.forceSendTask);
                                for (var b = 0; b < a.length; b++) {
                                    var c = a[b];
                                    c.sendTick <= Jc.a.GetTick() && (c.func.call(c.obj, c), this.__removeFromArray(c, this.forceSendTask))
                                }
                            }, a.prototype.__dealUnSendPack = function () {
                                var a = new Array;
                                a = a.concat(this.unSendTask);
                                for (var b = 0; b < a.length; b++) {
                                    var c = a[b];
                                    c.sendTick <= Jc.a.GetTick() && (c.func.call(c.obj, c), this.__removeFromArray(c, this.unSendTask))
                                }
                            }, a.prototype.__removeFromArray = function (a, b) {
                                for (var c = 0; c < b.length; c++) if (b[c] == a) {
                                    b.splice(c, 1);
                                    break
                                }
                            }, a.prototype.send = function (a) {
                                if (!this.websock) return !0;
                                if (this.websock.getState() != Qc.CONNECTED) return !1;
                                var b = this.websock.send(a);
                                return b
                            }, a.prototype.onRecv = function (a) {
                                var b = {dealed: !1, sendObj: null, resObj: null}, c = this.removeSendPack(a);
                                return b.sendObj = c, b.resObj = a, a.body.ret_code && a.body.ret_code !== Yc.RET_CODE_OK && (b.dealed = this.onRecvError(c, a)), b
                            }, a.prototype.onRecvError = function (a, b) {
                                switch (b.body.ret_code) {
                                    case Yc.RET_CODE_ERR_COMMON:
                                    case Yc.RET_CODE_ERR_INVALID_PKG:
                                    case Yc.RET_CODE_ERR_INVALID_CMD:
                                    case Yc.RET_CODE_ERR_SVR_FILTER:
                                    case Yc.RET_CODE_ERR_INTERNAL:
                                    case Yc.RET_CODE_ERR_SVR_BUSY:
                                    case Yc.RET_CODE_ERR_INVALID_SESSION:
                                    case Yc.RET_NOT_FIND_DSTUIN:
                                    case Yc.RET_TPT_NO_P2P:
                                    case Yc.RET_TPT_REDIS_STORE_NULL:
                                    case Yc.RET_TPT_FORMAT_INVALID:
                                        var c = _c.GetRetCode(b.body.ret_code), d = _c.GetCmdString(b.header.cmd);
                                        b.body.ret_code != Yc.RET_NOT_FIND_DSTUIN && cc.b.error(ac.c.P2P_OTHER_ERROR, "recv server error errorCode:" + c + ",errorCmd:" + d), this.onError(a, b);
                                        break;
                                    case Yc.RET_CODE_NEED_REPORT_FULL:
                                        this.ReportFull(a);
                                        break;
                                    default:
                                        return this.onError(a, b), !1
                                }
                                return !0
                            }, a.prototype.Relogin = function () {
                                od.getInstance().Relogin()
                            }, a.prototype.ReSend = function (a, b) {
                                if (void 0 == b && (b = 0), a.sendTick = Jc.a.GetTick() + b, a.retryCount++, a.cmd == Xc.P2P_SVR_CMD_PS_LOGIN) {
                                    if (a.retryCount >= tc.a.P2PLoginRetryTimes) return cc.b.log("websock retry max " + a.cmd + " . not retry [" + a.retryCount + "," + tc.a.P2PLoginRetryTimes + "]"), cd.getInstance().stopP2P(), void cc.b.log("websock close p2p")
                                } else if (a.retryCount >= tc.a.P2PPackRetryTimes) return this.reportTPTErrorOrTimeout(kc.eErrno_TPTTimeout), void cc.b.log("websock retry max " + a.cmd + " . not retry [" + a.retryCount + "," + tc.a.P2PPackRetryTimes + "]");
                                cc.b.log("websock resend " + a.cmd), a.cmd == Xc.P2P_SVR_CMD_PS_LOGIN ? (this.loginState = Tc.UNLOGIN, this.heartBeatFinish = !1, this.forceSendTask.push(a)) : this.unSendTask.push(a)
                            }, a.prototype.ReportFull = function (a) {
                            }, a.prototype.onError = function (a, b) {
                                if (b.body.ret_code == Yc.RET_CODE_ERR_INVALID_SESSION && _c.GetUinToken() == b.header.uin_token && _c.GetUin() == b.header.uin && this.Relogin(), a && a.retryCount < tc.a.P2PPackRetryTimes) {
                                    if (this.__isRetryCmd(a.cmd)) {
                                        if (b.body.ret_code == Yc.RET_TPT_NO_P2P || b.body.ret_code == Yc.RET_TPT_FORMAT_INVALID) return;
                                        this.ReSend(a, tc.a.P2PServerRetryInternal)
                                    }
                                } else a && a.retryCount >= tc.a.P2PPackRetryTimes && this.__isRetryCmd(a.cmd) && b.header.cmd == Xc.P2P_SVR_CMD_HLS_GET_TPT && 0 !== b.body.ret_code && this.reportTPTErrorOrTimeout(kc.eErrno_TPTHlsError, b.body.ret_code)
                            }, a.prototype.__isRetryCmd = function (a) {
                                for (var b = 0; b < ed.length; b++) if (a == ed[b]) return !0;
                                return !1
                            }, a.prototype.removeSendPack = function (a) {
                                for (var b = 0; b < this.sendTask.length; b++) if (a.header.seq == this.sendTask[b].seq) {
                                    var c = this.sendTask[b];
                                    return this.sendTask.splice(b, 1), c
                                }
                                return null
                            }, a.prototype.getServerType = function () {
                                return this.type
                            }, a.prototype.reconnect = function (a) {
                                this.websock && this.websock.stop();
                                var b = this.websock.getIp(), c = this.websock.getPort();
                                if (this.serverManager) {
                                    if (a) {
                                        var d = this.serverManager.changePSAddr(b, c);
                                        b = d.ip, c = d.port, cc.b.info("websock changeaddr connect,[" + b + "," + c + "]")
                                    } else cc.b.info("websock reconnect,[" + b + "," + c + "]");
                                    this.websock = this.serverManager.createSock(b, c, this.type)
                                }
                            }, a.prototype.onClose = function () {
                                cc.b.info("websock onClose,[" + this.websock.getIp() + "," + this.websock.getPort() + "]"), Qc.STOPED != this.serverState && (this.__changeSendTask2UnSend(), this.nextConnectTick = Jc.a.GetTick() + tc.a.P2PServerRetryInternal, this.reconnect(!1))
                            }, a.prototype.onConnectError = function (a) {
                                return this.totalConnectErrorTime++, this.connectErrorTime++, cc.b.error(ac.c.P2P_OTHER_ERROR, "websock connect failed:" + a + " errorTime:[" + this.connectErrorTime + "," + this.totalConnectErrorTime + "]"), this.totalConnectErrorTime >= tc.a.P2PWebSockMaxRetryTimes ? (cd.getInstance().stopP2P(), void cc.b.log("websock can't connect server,close p2p")) : (this.__changeSendTask2UnSend(), void (this.connectErrorTime < tc.a.P2PServerRetryTimes ? (this.nextConnectTick = Jc.a.GetTick() + tc.a.P2PServerRetryInternal, this.reconnect(!1)) : (this.connectErrorTime = 0, this.reconnect(!0), this.reportError())))
                            }, a.prototype.reportError = function () {
                                var a = ie.getInstance().lastWebSocketErrorInfo;
                                a && sc.getInstance().reportSvrQuality(0, nc.ServerType_WebSocket, a.ip, a.port, kc.eErrno_WebSocketonError, a.retCode, 0, 0, 0)
                            }, a.prototype.onConnect = function () {
                                this.totalConnectErrorTime = 0, this.connectErrorTime = 0
                            }, a.prototype.reportTPTErrorOrTimeout = function (b) {
                                var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                                if (a.isReport()) {
                                    var d = ie.getInstance().lastTPTErrorInfo;
                                    d && sc.getInstance().reportSvrQuality(0, nc.ServerType_TPTServer, d.ip, d.port, b, c, 0, 0, 0)
                                }
                            }, a.isReport = function () {
                                var a = parseInt(tc.a.TPTSuccReportRate);
                                (!a || a < 0) && (a = 0), a > 1e3 && (a = 1e3);
                                var b = 1e3 * Math.random();
                                return b < a
                            }, a
                        }(), gd = fd, hd = function (a) {
                            function b(c) {
                                return r(this, b), s(this, a.call(this, Rc.TPTServer, c))
                            }

                            return t(b, a), b.getInstance = function () {
                                return void 0 == b.instance && (b.instance = new b), b.instance
                            }, b.prototype.destroy = function () {
                                this.close()
                            }, b.prototype.close = function () {
                                a.prototype.close.call(this)
                            }, b.prototype.init = function () {
                                a.prototype.init.call(this)
                            }, b.prototype.connect = function () {
                                return !!this.websock && this.websock.connect()
                            }, b.prototype.queryTPT = function (a, b) {
                                var c = null;
                                if (this.isTask(arguments) ? (c = arguments[0], a = c.args[0], b = c.args[1]) : c = _c.GetTask(this, this.queryTPT, arguments, Xc.P2P_SVR_CMD_HLS_GET_TPT), this.getState() != Qc.CONNECTED || this.isPause()) this.unSendTask.push(c); else {
                                    var d = _c.ReqHeader(Xc.P2P_SVR_CMD_HLS_GET_TPT),
                                        e = JSON.stringify(_c.GetTPTReq(d, hc.a.busiid, a));
                                    c.seq = d.seq, this.sendTask.push(c), this.send(e)
                                }
                            }, b.prototype.onRecv = function (b) {
                                var c = a.prototype.onRecv.call(this, b);
                                if (null != c.sendObj && !c.dealed) {
                                    switch (b.header.cmd) {
                                        case Xc.P2P_SVR_CMD_MP4_GET_TPT:
                                            this.onRecvMp4TPT(c.sendObj, c.resObj);
                                            break;
                                        case Xc.P2P_SVR_CMD_HLS_GET_TPT:
                                            this.onRecvHlsTPT(c.sendObj, c.resObj)
                                    }
                                    ie.getInstance().m_isGotTPT = !0
                                }
                            }, b.prototype.onRecvMp4TPT = function (a, b) {
                            }, b.prototype.onRecvHlsTPT = function (a, b) {
                                var c = a.args[1];
                                a.args[0] == b.body.resourceid && (c.onTPTReturn(b.body.ret_code, b.body.fileid_list, b.body.ts_num_list), this.reportTPTSuccRandom())
                            }, b.prototype.onRecvHlsTPTError = function (a, b) {
                                var c = a.args[1];
                                0 !== b.body.ret_code && (c.onTPTError(b.body.ret_code), this.setLastTPTErrorInfo(), ie.getInstance().m_isGotTPT = !1)
                            }, b.prototype._taskTimeout = function (a) {
                                switch (a.cmd) {
                                    case Xc.P2P_SVR_CMD_HLS_GET_TPT:
                                        this.__onRecvTptTimeout()
                                }
                            }, b.prototype.__onRecvTptTimeout = function () {
                                this.setLastTPTErrorInfo(), ie.getInstance().m_isGotTPT = !1
                            }, b.prototype.onConnect = function () {
                            }, b.prototype.onError = function (b, c) {
                                a.prototype.onError.call(this, b, c), c.header.cmd == Xc.P2P_SVR_CMD_HLS_GET_TPT && this.onRecvHlsTPTError(b, c)
                            }, b.prototype.onClose = function () {
                                a.prototype.onClose.call(this)
                            }, b.prototype.getSvrRetCodeFromResObj = function (a) {
                                var b = 0;
                                return a && a.body && a.body.ret_code && (b = a.body.ret_code), b
                            }, b.prototype.reportTPTQuality = function (a) {
                                var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                                sc.getInstance().reportSvrQuality(0, nc.ServerType_TPTServer, this.getIp(), this.getPort(), a, b, 0, 0, 0)
                            }, b.prototype.reportTPTSuccRandom = function () {
                                var a = parseInt(tc.a.TPTSuccReportRate);
                                (!a || a < 0) && (a = 0), a > 1e3 && (a = 1e3);
                                var b = 1e3 * Math.random();
                                b < a && this.reportTPTQuality(kc.eErrno_TPTSucceed, 0)
                            }, b.prototype.setLastTPTErrorInfo = function () {
                                ie.getInstance().setLastTPTErrorInfo({ip: this.getIp(), port: this.getPort()})
                            }, b
                        }(gd), id = hd;
                    window.RTCPeerConnection = window.RTCPeerConnection || window.mozRTCPeerConnection || window.webkitRTCPeerConnection, window.RTCIceCandidate = window.RTCIceCandidate || window.mozRTCIceCandidate || window.webkitRTCIceCandidate, window.RTCSessionDescription = window.RTCSessionDescription || window.mozRTCSessionDescription || window.webkitRTCSessionDescription;
                    var jd = function (a) {
                            function b(c) {
                                return u(this, b), v(this, a.call(this, Rc.SignalServer, c))
                            }

                            return w(b, a), b.prototype.destroy = function () {
                                this.close()
                            }, b.prototype.close = function () {
                                a.prototype.close.call(this)
                            }, b.prototype.init = function () {
                                a.prototype.init.call(this)
                            }, b.prototype.sendBye2Client = function (a, b, c) {
                                cc.b.log("PeerConnection(" + a + ",stype:" + b + ",SignalServer):send bye " + c.reason);
                                var d = _c.ByeNotify(a, _c.GetUin(), b, c.code), e = JSON.stringify(d);
                                this.forwardReq(a, e)
                            }, b.prototype.forwardReq = function (a, b) {
                                var c = null;
                                if (this.isTask(arguments) ? (c = arguments[0], a = c.args[0], b = c.args[1]) : c = _c.GetTask(this, this.forwardReq, arguments, Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY), this.getState() == Qc.CONNECTED) {
                                    var d = _c.ReqHeader(Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY);
                                    b = JSON.stringify(_c.ForwardReq(d, a, b)), b = JSON.stringify(_c.ForwardReq(d, a, b)), c.seq = d.seq, this.sendTask.push(c), this.send(b)
                                } else this.unSendTask.push(c)
                            }, b.prototype.onRecv = function (b) {
                                var c = a.prototype.onRecv.call(this, b);
                                if (!c.dealed) switch (b.header.cmd) {
                                    case Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY:
                                        b.body.msg && this.onRecvForward(c.sendObj, c.resObj)
                                }
                            }, b.prototype.onRecvForward = function (a, b) {
                                de.getInstance().onRecv(a, b)
                            }, b.prototype.onConnect = function () {
                            }, b.prototype.onError = function (b, c) {
                                a.prototype.onError.call(this, b, c), c.header.cmd == Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY && (this.__onRecvSignalRelayError(c), c.body.ret_code == Yc.RET_NOT_FIND_DSTUIN && de.getInstance().onRecv(b, c))
                            }, b.prototype.__onRecvSignalRelayError = function (a) {
                                this.reportSignalQuality(kc.eErrno_SignalRelayError, this.getSvrRetCodeFromResObj(a))
                            }, b.prototype.onClose = function () {
                                a.prototype.onClose.call(this)
                            }, b.prototype._taskTimeout = function (a) {
                                switch (a.cmd) {
                                    case Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY:
                                        this.__onRecvSignalRelayTimeout()
                                }
                            }, b.prototype.__onRecvSignalRelayTimeout = function () {
                                this.reportSignalQuality(kc.eErrno_SignalRelayTimeout)
                            }, b.prototype.getSvrRetCodeFromResObj = function (a) {
                                var b = 0;
                                return a && a.body && a.body.ret_code && (b = a.body.ret_code), b
                            }, b.prototype.reportSignalQuality = function (a) {
                                var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
                                sc.getInstance().reportSvrQuality(0, nc.ServerType_SignalServer, this.getIp(), this.getPort(), a, b, 0, 0, 0)
                            }, b
                        }(gd), kd = jd, ld = function (a) {
                            function b(c) {
                                x(this, b);
                                var d = y(this, a.call(this, Rc.PeerServer, c));
                                return d.loginState = Tc.UNLOGIN, d.heartBeatTick = 0, d.heartBeatFinish = !1, d
                            }

                            return z(b, a), b.prototype.destroy = function () {
                                this.close()
                            }, b.prototype.close = function () {
                                this.logout(), a.prototype.close.call(this), this.loginState = Tc.UNLOGIN, this.heartBeatFinish = !1
                            }, b.prototype.init = function () {
                                a.prototype.init.call(this)
                            }, b.prototype.__isLoginInQueue = function () {
                                for (var a = 0; a < this.forceSendTask.length; a++) {
                                    var b = this.forceSendTask[a];
                                    if (b.cmd == Xc.P2P_SVR_CMD_PS_LOGIN) return !0
                                }
                                return !1
                            }, b.prototype.__isLoginInSending = function () {
                                for (var a = 0; a < this.sendTask.length; a++) {
                                    var b = this.sendTask[a];
                                    if (b.cmd == Xc.P2P_SVR_CMD_PS_LOGIN) return !0
                                }
                                return !1
                            }, b.prototype.login = function () {
                                if (this.loginState != Tc.LOGIN) {
                                    var a = null;
                                    if (this.isTask(arguments)) a = arguments[0]; else {
                                        if (this.loginState != Tc.UNLOGIN) return;
                                        a = _c.GetTask(this, this.login, arguments, Xc.P2P_SVR_CMD_PS_LOGIN)
                                    }
                                    if (this.getState() == Qc.CONNECTED) {
                                        if (this.__isLoginInSending()) return;
                                        var b = _c.ReqHeader(Xc.P2P_SVR_CMD_PS_LOGIN), c = JSON.stringify(_c.LoginReq(b));
                                        a.seq = b.seq, this.sendTask.push(a), this.send(c), this.loginMSGSendStartTime = performance.now()
                                    } else this.__isLoginInQueue() || this.forceSendTask.push(a)
                                }
                            }, b.prototype.isLogin = function () {
                                return this.loginState == Tc.LOGIN && this.getState() == Qc.CONNECTED
                            }, b.prototype.isHeartFinish = function () {
                                return this.heartBeatFinish === !0
                            }, b.prototype.logout = function () {
                                if (this.isLogin()) {
                                    this.loginState = Tc.LOGOUT;
                                    var a = null;
                                    if (a = this.isTask(arguments) ? arguments[0] : _c.GetTask(this, this.logout, arguments, Xc.P2P_SVR_CMD_PS_LOGOUT), this.getState() == Qc.CONNECTED) {
                                        var b = _c.ReqHeader(Xc.P2P_SVR_CMD_PS_LOGOUT), c = JSON.stringify(_c.LogoutReq(b));
                                        a.seq = b.seq, this.sendTask.push(a), this.send(c)
                                    }
                                }
                            }, b.prototype.heartBeat = function (a, b, c, d, e, f) {
                                var g = null;
                                if (this.isTask(arguments) ? (g = arguments[0], a = g.args[0], b = g.args[1], c = g.args[2], d = g.args[3], e = g.args[4], f = g.args[5]) : g = _c.GetTask(this, this.heartBeat, arguments, Xc.P2P_SVR_CMD_PS_HEARTBEAT), this.getState() == Qc.CONNECTED && !this.isPause()) {
                                    var h = _c.ReqHeader(Xc.P2P_SVR_CMD_PS_HEARTBEAT),
                                        i = JSON.stringify(_c.HeartReq(h, a, b, c, d, e, f));
                                    g.seq = h.seq, this.sendTask.push(g), this.send(i)
                                }
                            }, b.prototype.report = function (a, b) {
                                var c = null;
                                if (this.isTask(arguments) ? (c = arguments[0], a = c.args[0], b = c.args[1]) : c = _c.GetTask(this, this.report, arguments, Xc.P2P_SVR_CMD_PS_REPORT), this.getState() == Qc.CONNECTED && !this.isPause() && this.heartBeatFinish) {
                                    var d = _c.ReqHeader(Xc.P2P_SVR_CMD_PS_REPORT),
                                        e = JSON.stringify(_c.ReportReq(d, a, b));
                                    return c.seq = d.seq, this.sendTask.push(c), this.send(e), !0
                                }
                                return !1
                            }, b.prototype.querySeed = function (a, b, c) {
                                var d = null;
                                if (this.isTask(arguments) ? (d = arguments[0], a = d.args[0], b = d.args[1], c = d.args[2]) : d = _c.GetTask(this, this.querySeed, arguments, Xc.P2P_SVR_CMD_PS_QUERYSEED), this.getState() == Qc.CONNECTED && !this.isPause() && this.heartBeatFinish) {
                                    var e = _c.ReqHeader(Xc.P2P_SVR_CMD_PS_QUERYSEED),
                                        f = JSON.stringify(_c.QuerySeedReq(e, a, b));
                                    d.seq = e.seq, this.sendTask.push(d), this.send(f), ie.getInstance().querySeedTimePlus()
                                }
                            }, b.prototype.onRecv = function (b) {
                                var c = a.prototype.onRecv.call(this, b);
                                if (null != c.sendObj && !c.dealed) switch (b.header.cmd) {
                                    case Xc.P2P_SVR_CMD_PS_LOGIN:
                                        this.onRecvLogin(c.sendObj, c.resObj);
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_QUERYSEED:
                                        this.onRecvQuerySeed(c.sendObj, c.resObj);
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_HEARTBEAT:
                                        this.onRecvHeartBeat(c.sendObj, c.resObj);
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_LOGOUT:
                                        this.onRecvLogout(c.sendObj, c.resObj);
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_REPORT:
                                        this.onRecvReport(c.sendObj, c.resObj)
                                }
                            }, b.prototype.update = function () {
                                if (a.prototype.update.call(this), this.loginState == Tc.UNLOGIN) this.login(); else if (this.isLogin()) {
                                    var b = Jc.a.GetTick();
                                    (0 == this.heartBeatTick || b - this.heartBeatTick >= 1e3 * tc.a.HeartbeatInterval) && (this.heartBeatTick = b, this.heartBeat(0, 0, 0, 0, 0, 0))
                                }
                            }, b.prototype.onRecvLogin = function (a, b) {
                                if (0 === b.body.ret_code) {
                                    _c.SetUin(b.body.uin), _c.SetUinToken(b.body.uin_token), this.serverManager.notifyAllSocketPause(!1), this.loginState = Tc.LOGIN, cc.b.log("login ok... " + b.body.uin);
                                    var c = 0;
                                    this.loginMSGSendStartTime && (c = performance.now() - this.loginMSGSendStartTime), ie.getInstance().setPSLogin(!0), this.reportPSQuality(kc.eErrno_PSLoginSuccess, 0, c)
                                }
                            }, b.prototype.onRecvQuerySeed = function (a, b) {
                                ie.getInstance().querySeedSucceedTimePlus();
                                var c = a.args[2];
                                b.body.ret_code !== Yc.RET_CODE_OK ? (c.onQueryCompleteCall(b.body.ret_code), this.reportPSQuality(kc.eErrno_PSQuerySeedFailed, this.getSvrRetCodeFromResObj(b))) : (c.onQueryCompleteCall(b.body.ret_code, b.body.fileid, b.body.seed_list, b.body.seed_list.length, b.body.total_seed_num), b && b.body && b.body.seed_list && this.getSeedListLenExceptMe(b.body.seed_list) > 0 && ie.getInstance().hasSeedTimePlus())
                            }, b.prototype.getSeedListLenExceptMe = function (a) {
                                for (var b = a.length, c = _c.GetUin(), d = 0; d < b; d++) if (a[d] === c) return b - 1;
                                return b
                            }, b.prototype.onRecvHeartBeat = function (a, b) {
                                this.heartBeatFinish = !0
                            }, b.prototype.onRecvLogout = function (a, b) {
                                this.loginState = Tc.UNLOGIN, this.reportPSQuality(kc.eErrno_PSLogout)
                            }, b.prototype.onRecvReport = function (a, b) {
                            }, b.prototype.onConnect = function () {
                            }, b.prototype.onLoginError = function (a, b) {
                                cc.b.error(ac.c.P2P_PEERSERVER_ERROR, "login error!"), this.loginState = Tc.LOGERROR, ie.getInstance().setPSLogin(!1), this.reportPSQuality(kc.eErrno_PSLoginFail, this.getSvrRetCodeFromResObj(b))
                            }, b.prototype.onError = function (b, c) {
                                a.prototype.onError.call(this, b, c), c.header.cmd == Xc.P2P_SVR_CMD_PS_QUERYSEED ? this.onRecvQuerySeed(b, c) : c.header.cmd == Xc.P2P_SVR_CMD_PS_LOGIN ? this.onLoginError(b, c) : c.header.cmd == Xc.P2P_SVR_CMD_PS_HEARTBEAT && this.__onRecvHeartBeatError(b, c)
                            }, b.prototype._taskTimeout = function (a) {
                                switch (a.cmd) {
                                    case Xc.P2P_SVR_CMD_PS_LOGIN:
                                        this.__onRecvLoginTimeout();
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_HEARTBEAT:
                                        this.__onRecvHeartBeatTimeout();
                                        break;
                                    case Xc.P2P_SVR_CMD_PS_QUERYSEED:
                                        this.__onRecvQuerySeedTimeout()
                                }
                            }, b.prototype.__onRecvLoginTimeout = function () {
                                this.reportPSQuality(kc.eErrno_PSLoginTimeout)
                            }, b.prototype.__onRecvHeartBeatTimeout = function () {
                                this.reportPSQuality(kc.eErrno_PSHeartBeatTimeout)
                            }, b.prototype.__onRecvQuerySeedTimeout = function () {
                                this.reportPSQuality(kc.eErrno_PSQuerySeedTimeout)
                            }, b.prototype.__onRecvHeartBeatError = function (a, b) {
                                this.reportPSQuality(kc.eErrno_PSHeartBeatError)
                            }, b.prototype.reLogin = function () {
                                this.loginState = Tc.UNLOGIN, this.heartBeatFinish = !1, this.login()
                            }, b.prototype.onClose = function () {
                                a.prototype.onClose.call(this), this.loginState = Tc.UNLOGIN, this.heartBeatTick = 0, this.heartBeatFinish = !1
                            }, b.prototype.reportPSQuality = function (a) {
                                var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
                                    c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                                sc.getInstance().reportSvrQuality(0, nc.ServerType_PeerServer, this.getIp(), this.getPort(), a, b, c, 0, 0)
                            }, b.prototype.getSvrRetCodeFromResObj = function (a) {
                                var b = 0;
                                return a && a.body && a.body.ret_code && (b = a.body.ret_code), b
                            }, b
                        }(gd), md = ld, nd = function () {
                            function a() {
                                A(this, a), this.psIndex = 0, this.iceIndex = 0, this.serverManager = new Array, this.messageCache = "", this.state = Sc.UNINIT
                            }

                            return a.getInstance = function () {
                                return void 0 == a.instance && (a.instance = new a), a.instance
                            }, a.prototype.getPSServerAddr = function () {
                                return 0 == tc.a.PSServer.length ? (cc.b.error(ac.c.P2P_OTHER_ERROR, "no ps server!!!!!!!!!!!!!!!"), null) : (this.psIndex >= tc.a.PSServer.length && (this.psIndex = 0), tc.a.PSServer[this.psIndex])
                            }, a.prototype.changePSAddr = function (a, b) {
                                if (void 0 !== a && void 0 !== b) for (var c = 0; c < tc.a.PSServer.length; c++) if (a == tc.a.PSServer[c].ip && b == tc.a.PSServer[c].port) {
                                    this.psIndex = c;
                                    break
                                }
                                return this.psIndex++, this.psIndex = this.psIndex % tc.a.PSServer.length, this.getPSServerAddr()
                            }, a.prototype.getIceServerAddr = function () {
                                return 0 == tc.a.IceServer.length ? (cc.b.error(ac.c.P2P_OTHER_ERROR, "no ice server!!!!!!!!!!!!!!!"), null) : (this.iceIndex >= tc.a.IceServer.length && (this.iceIndex = 0), tc.a.IceServer[this.iceIndex])
                            }, a.prototype.changeIceServer = function () {
                                return this.iceIndex++, this.iceIndex = this.iceIndex % tc.a.IceServer.length, this.getIceServerAddr()
                            }, a.prototype.init = function () {
                                this.state = Sc.RUNNING;
                                var a = this.getPSServerAddr();
                                this.createSignalServer(a.ip, a.port), this.createPeerServer(a.ip, a.port), this.createTPTServer(a.ip, a.port), cc.b.log("ServerInterface init.")
                            }, a.prototype.destroy = function () {
                                cc.b.log("ServerInterface destroy."), this.removeServer(Rc.PeerServer), this.removeServer(Rc.SignalServer), this.removeServer(Rc.TPTServer), this.psIndex = 0, this.iceIndex = 0, this.serverManager = new Array, this.messageCache = "", this.state = Sc.STOP, a.instance = void 0
                            }, a.prototype.logout = function () {
                                var a = this.getPeerServer();
                                a && a.logout()
                            }, a.prototype.__getSock = function (a, b, c) {
                                for (var d = 0; d < this.serverManager.length; d++) {
                                    var e = this.serverManager[d];
                                    if (e.getServerType() != c && e.isSameAddr(a, b)) {
                                        var f = e.getSock();
                                        if (f && !f.isStop()) return f
                                    }
                                }
                                return null
                            }, a.prototype.isLogin = function () {
                                var a = this.getServerByType(Rc.PeerServer);
                                return !!a && a.isLogin()
                            }, a.prototype.isHeartFinish = function () {
                                var a = this.getServerByType(Rc.PeerServer);
                                return !!a && a.isHeartFinish()
                            }, a.prototype.__removeSock = function (a, b, c) {
                                for (var d = 0; d < this.serverManager.length; d++) {
                                    var e = this.serverManager[d];
                                    if (c == e.getType() && e.isSameAddr(a, b)) return e.removeSock()
                                }
                                return null
                            }, a.prototype.getPeerServer = function () {
                                return this.getServerByType(Rc.PeerServer)
                            }, a.prototype.getSignalServer = function () {
                                return this.getServerByType(Rc.SignalServer)
                            }, a.prototype.getTPTServer = function () {
                                return this.getServerByType(Rc.TPTServer)
                            }, a.prototype.createPeerServer = function (a, b) {
                                var c = this.__createServer(a, b, Rc.PeerServer);
                                return c
                            }, a.prototype.createSignalServer = function (a, b) {
                                var c = this.__createServer(a, b, Rc.SignalServer);
                                return c
                            }, a.prototype.createTPTServer = function (a, b) {
                                var c = this.__createServer(a, b, Rc.TPTServer);
                                return c
                            }, a.prototype.changePeerServerAddr = function (a, b) {
                                return this.createPeerServer(a, b)
                            }, a.prototype.changeSignalServerAddr = function (a, b) {
                                return this.createSignalServer(a, b)
                            }, a.prototype.changeTPTServerAddr = function (a, b) {
                                return this.createTPTServer(a, b)
                            }, a.prototype.__createServerByType = function (a) {
                                var b = null;
                                switch (a) {
                                    case Rc.PeerServer:
                                        b = new md(this);
                                        break;
                                    case Rc.SignalServer:
                                        b = new kd(this);
                                        break;
                                    case Rc.TPTServer:
                                        b = new id(this)
                                }
                                b && this.serverManager.push(b)
                            }, a.prototype.__createServer = function (a, b, c) {
                                var d = this.getServerByType(c);
                                if (!d) {
                                    switch (c) {
                                        case Rc.PeerServer:
                                            d = new md(this);
                                            break;
                                        case Rc.SignalServer:
                                            d = new kd(this);
                                            break;
                                        case Rc.TPTServer:
                                            d = new id(this)
                                    }
                                    d && this.serverManager.push(d)
                                }
                                if (!d.isSameAddr(a, b)) {
                                    var e = d.getSock();
                                    if (e) {
                                        for (var f = !1, g = 0; g < this.serverManager.length; g++) if (c != this.serverManager.getType() && this.serverManager[g].isSameAddr(e.getIp(), e.getPort())) {
                                            f = !0;
                                            break
                                        }
                                        f || e.stop()
                                    }
                                    var h = this.createSock(a, b, c);
                                    d.setSock(h)
                                }
                                return d
                            }, a.prototype.createSock = function (a, b, c) {
                                var d = this.__getSock(a, b, c);
                                return d || (d = this.newSock(a, b)), d
                            }, a.prototype.closeSock = function (a, b) {
                                if (a) {
                                    var c = a.getIp(), d = a.getPort();
                                    this.__getSock(c, d, b) || a.close()
                                }
                            }, a.prototype.newSock = function (a, b) {
                                return new Wc(a, b, this)
                            }, a.prototype.send2PeerServer = function (a) {
                                return this.__send(a, Rc.PeerServer)
                            }, a.prototype.send2SignalServer = function (a) {
                                return this.__send(a, Rc.SignalServer)
                            }, a.prototype.send2TPTServer = function (a) {
                                return this.__send(a, Rc.TPTServer)
                            }, a.prototype.__send = function (a, b) {
                                var c = this.getServerByType(b);
                                return c ? c.send(a) : (cc.b.log("server interface not init yet!"), "")
                            }, a.prototype.removeServer = function (a) {
                                for (var b = 0; b < this.serverManager.length; b++) {
                                    var c = this.serverManager[b];
                                    if (c.getType() == a) return c.close(), this.serverManager.splice(b, 1), c
                                }
                                return null
                            }, a.prototype.Relogin = function () {
                                this.notifyAllSocketPause(!0);
                                var a = this.getServerByType(Rc.PeerServer);
                                a && a.reLogin && a.reLogin()
                            }, a.prototype.notifyAllSocketPause = function (a) {
                                for (var b = 0; b < this.serverManager.length; b++) {
                                    var c = this.serverManager[b];
                                    c && c.setPause && c.setPause(a)
                                }
                            }, a.prototype.getServerByType = function (a) {
                                for (var b = 0; b < this.serverManager.length; b++) {
                                    var c = this.serverManager[b];
                                    if (c.getType() == a) return c
                                }
                                return null
                            }, a.prototype.splitJson = function (a) {
                                var b = new Array, c = this.messageCache + a;
                                if (c.length >= 1 && "{" != c.charAt(0)) return null;
                                for (var d = 0, e = 0, f = 0, g = f; g < c.length; g++) if ("{" == c.charAt(g) ? d++ : "}" == c.charAt(g) && e++, d == e && d > 0) {
                                    var h = c.substr(f, g + 1);
                                    f = g + 1, b.push(h), d = 0, e = 0
                                }
                                return f < c.length && (this.messageCache = c.substr(f, c.length - f)), b
                            }, a.prototype.onRecvOnePack = function (a) {
                                try {
                                    var b = Rc.PeerServer, c = JSON.parse(a);
                                    switch (c.header.cmd) {
                                        case Xc.P2P_SVR_CMD_PS_LOGIN:
                                        case Xc.P2P_SVR_CMD_PS_QUERYSEED:
                                        case Xc.P2P_SVR_CMD_PS_HEARTBEAT:
                                        case Xc.P2P_SVR_CMD_PS_LOGOUT:
                                        case Xc.P2P_SVR_CMD_PS_REPORT:
                                            b = Rc.PeerServer;
                                            break;
                                        case Xc.P2P_SVR_CMD_MP4_GET_TPT:
                                        case Xc.P2P_SVR_CMD_HLS_GET_TPT:
                                            b = Rc.TPTServer;
                                            break;
                                        case Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY:
                                            b = Rc.SignalServer;
                                            break;
                                        default:
                                            cc.b.debug("unkonwn recv package")
                                    }
                                    var d = this.getServerByType(b);
                                    d ? d.onRecv(c) : cc.b.error(ac.c.P2P_OTHER_ERROR, "drop recv package")
                                } catch (e) {
                                    cc.b.error(ac.c.P2P_OTHER_ERROR, e.message + " " + e.stack + " recv package not json format")
                                }
                            }, a.prototype.onRecv = function (a, b) {
                                if (this.state != Sc.STOP) {
                                    var c = this.splitJson(b);
                                    if (null == c) return cc.b.error(ac.c.P2P_OTHER_ERROR, "recv package not json format"), void (this.messageCache = "");
                                    for (var d = 0; d < c.length; d++) this.onRecvOnePack(c[d])
                                }
                            }, a.prototype.onClose = function (a) {
                                if (this.state != Sc.STOP) for (var b = 0; b < this.serverManager.length; b++) {
                                    var c = this.serverManager[b];
                                    c && c.getSock() == a && c.onClose()
                                }
                            }, a.prototype.onConnect = function (a) {
                                if (this.state != Sc.STOP) {
                                    cc.b.log("connect server[" + a.getIp() + ":" + a.getPort() + "] suc");
                                    for (var b = 0; b < this.serverManager.length; b++) {
                                        var c = this.serverManager[b];
                                        c && c.getSock() == a && c.onConnect()
                                    }
                                }
                            }, a.prototype.onError = function (a, b) {
                                if (this.state != Sc.STOP) for (var c = 0; c < this.serverManager.length; c++) {
                                    var d = this.serverManager[c];
                                    d && d.getSock() == a && d.onConnectError(b)
                                }
                            }, a
                        }(), od = nd, pd = function () {
                            function a() {
                                B(this, a), this.m_lastReported = []
                            }

                            return a.getInstance = function () {
                                return void 0 == a.instance && (a.instance = new a), a.instance
                            }, a.prototype.destroy = function () {
                                this.m_lastReported = [], a.instance = void 0
                            }, a.prototype.reportDeleteAll = function () {
                                for (var a = 0; a < this.m_lastReported.length; a++) {
                                    var b = this.__newReportObj();
                                    b.obj.del = this.m_lastReported[a].obj.add, this.__report(b, this.m_lastReported[a].keyid)
                                }
                                this.m_lastReported = []
                            }, a.prototype.reportResource2Server = function (a) {
                                for (var b = a.keys(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e, g = a.get(f),
                                        h = tc.a.ForbiddenInsertVideoInAdP2P && (g.isAdInsert || g.isVideoIn);
                                    if (!h && g) {
                                        var i = this.__newReportObj();
                                        g.getReportFileIds(i);
                                        var j = this.__getReportObj(f, this.m_lastReported);
                                        i = this.__getIncreasementReportObj(i, j), this.__report(i, f)
                                    }
                                }
                                for (var k = 0; k < this.m_lastReported.length; k++) {
                                    var l = a.get(this.m_lastReported[k].keyid);
                                    if (!l) {
                                        for (var m = this.__newReportObj(), n = 0; n < this.m_lastReported[k].obj.add.length; n++) m.del.push(this.m_lastReported[k].obj.add[n]);
                                        this.__report(m, this.m_lastReported[k].keyid)
                                    }
                                }
                            }, a.prototype.__add2LastReported = function (a, b) {
                                for (var c = -1, d = null, e = 0; e < this.m_lastReported.length; e++) if (b === this.m_lastReported[e].keyid) {
                                    d = this.m_lastReported[e], c = e;
                                    break
                                }
                                if (d || 0 != a.add.length) if (d) {
                                    a.add.length > 0 && (d.obj.add = d.obj.add.concat(a.add));
                                    var f = a.del, g = d.obj.add;
                                    if (f.length > 0) for (var e = 0; e < f.length; e++) for (var h = 0; h < g.length; h++) if (g[h] == f[e]) {
                                        g.splice(h, 1);
                                        break
                                    }
                                    0 == d.obj.add.length && this.m_lastReported.splice(c, 1)
                                } else {
                                    var i = this.__getReportObjContainer(b, a);
                                    this.m_lastReported.push(i)
                                }
                            }, a.prototype.__report = function (a, b) {
                                if (0 != a.add.length || 0 != a.del.length) {
                                    var c = od.getInstance().getServerByType(Rc.PeerServer);
                                    if (c) {
                                        var d = c.report(a.add, a.del);
                                        1 == d && this.__add2LastReported(a, b)
                                    }
                                }
                            }, a.prototype.__getReportObj = function (a, b) {
                                for (var c = 0; c < b.length; c++) if (b[c].keyid === a) return b[c].obj
                            }, a.prototype.__getReportObjContainer = function (a, b) {
                                return {keyid: a, obj: b}
                            }, a.prototype.__newReportObj = function (a, b) {
                                return void 0 === a && (a = new Array), void 0 === b && (b = new Array), {add: a, del: b}
                            }, a.prototype.__getIncreasementReportObj = function (a, b) {
                                if (void 0 === b || null === b) return a;
                                for (var c = this.__newReportObj(), d = a.add, e = b.add, f = 0; f < d.length; f++) {
                                    for (var g = !1, h = 0; h < e.length; h++) if (e[h] == d[f]) {
                                        g = !0;
                                        break
                                    }
                                    g || c.add.push(d[f])
                                }
                                for (var f = 0; f < e.length; f++) {
                                    for (var g = !1, h = 0; h < d.length; h++) if (d[h] == e[f]) {
                                        g = !0;
                                        break
                                    }
                                    g || c.del.push(e[f])
                                }
                                return c
                            }, a
                        }(), qd = pd, rd = function () {
                            function a() {
                                C(this, a), this.initCacheManager()
                            }

                            return a.getInstance = function () {
                                return this.instance || (this.instance = new a), this.instance
                            }, a.prototype.initCacheManager = function () {
                                this.m_MediaFileMap = new Map, this.m_TotalCacheSize = 0, this.m_CurrentPlayKeyID = "", this.m_CurrentReadSeq = 0, this.m_lastReportTick = 0, this.m_loginReport = !1, this.m_ReleaseMemoryTimer = setInterval(this.onCacheManage.bind(this), 1e3)
                            }, a.prototype.stopP2P = function () {
                                this.m_loginReport = !1, this.m_lastReportTick = 0, qd.getInstance().destroy()
                            }, a.prototype.setCurrentVideoInfo = function (a, b) {
                                this.m_CurrentPlayKeyID = a, this.m_CurrentReadSeq = b
                            }, a.prototype.onCacheManage = function () {
                                this.onCacheCaculate(), this.m_TotalCacheSize > tc.a.MaxCacheSize && this.onReleaseMemory(), 0 == this.m_loginReport && od.getInstance().isLogin() && od.getInstance().isHeartFinish() ? (this.reportResource2Server(), this.m_loginReport = !0) : this.reportResource2Server()
                            }, a.prototype.onReleaseMemory = function () {
                                for (var a = this.m_MediaFileMap.keys(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d;
                                    this.m_CurrentPlayKeyID != e && this.releaseNotPlayingCache(e)
                                }
                                this.releasePlayingCache(this.m_CurrentPlayKeyID), this.reportResource2Server(!0)
                            }, a.prototype.releaseNotPlayingCache = function (a) {
                                var b = this.m_MediaFileMap.get(a), c = b.getTsSum(), d = b.getTotalCacheSize();
                                if (d <= 0) b.releaseCompletely(), this.m_MediaFileMap["delete"](a), de.getInstance().releaseContainer(a), cc.b.info("release mediafile Completely key:" + a); else for (var e = tc.a.MaxCacheSize * (1 - tc.a.FastReleaseRatio / 100), f = 0; f < c; f++) {
                                    var g = b.getCacheSizeByTsIndex(f);
                                    if (0 != g && (ie.getInstance().m_TotalCacheSize = this.m_TotalCacheSize -= g, b.deleteTsByIndex(f)), this.m_TotalCacheSize < e) break
                                }
                            }, a.prototype.releasePlayingCache = function (a) {
                                this.releaseCacheFromBegin(a)
                            }, a.prototype.releaseCacheFromBegin = function (a) {
                                for (var b = this.m_MediaFileMap.get(a), c = b.getTsSum(), d = 0; d < c; d++) {
                                    if (d < this.m_CurrentReadSeq && b.hasAllocBuffer(d)) {
                                        var e = b.getCacheSizeByTsIndex(d);
                                        0 != e && (ie.getInstance().m_TotalCacheSize = this.m_TotalCacheSize -= e, b.deleteTsByIndex(d))
                                    }
                                    if (this.m_TotalCacheSize < tc.a.MaxCacheSize) break
                                }
                            }, a.prototype.releaseCacheFromEnd = function (a) {
                                var b = this.m_MediaFileMap.get(a), c = b.getTsSum();
                                if (this.m_TotalCacheSize >= tc.a.MaxCacheSize) for (var d = c - 1; d > this.m_CurrentReadSeq; d--) {
                                    if (b.hasAllocBuffer(d)) {
                                        var e = b.getCacheSizeByTsIndex(d);
                                        0 != e && (ie.getInstance().m_TotalCacheSize = this.m_TotalCacheSize -= e, b.deleteTsByIndex(d))
                                    }
                                    if (this.m_TotalCacheSize < tc.a.MaxCacheSize) break
                                }
                            }, a.prototype.onCacheCaculate = function () {
                                ie.getInstance().m_TotalCacheSize = this.m_TotalCacheSize = 0;
                                for (var a = this.m_MediaFileMap.keys(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d, f = this.m_MediaFileMap.get(e);
                                    ie.getInstance().m_TotalCacheSize = this.m_TotalCacheSize += f.getTotalCacheSize()
                                }
                            }, a.prototype.createMediaFile = function (a, b) {
                                ie.getInstance().isVideoInTSDiff = !1;
                                var c = this.m_MediaFileMap.get(b);
                                return void 0 !== c && c.isSameVideoInTS(a) ? (c = this.m_MediaFileMap.get(b), c.updateTsInfoBylevel(a)) : (void 0 !== c && (c.releaseCompletely(), ie.getInstance().isVideoInTSDiff = !0, cc.b.info("CacheManger: mediaFile exist, but videoin ts diff, release and create a new one")), cc.b.info("CacheManager : createMediaFile : keyID = " + b), c = new Pc(a, b), this.m_MediaFileMap.set(b, c)), c
                            }, a.prototype.isOverMemory = function () {
                                return this.m_TotalCacheSize > tc.a.MaxCacheSize * (1 + tc.a.P2PDownloadMemoryRatio / 100)
                            }, a.prototype.isHTTPOverMemory = function () {
                                return this.m_TotalCacheSize > tc.a.MaxCacheSize
                            }, a.prototype.reportResource2Server = function (a) {
                                if (tc.a.IsStartP2P) {
                                    var b = Jc.a.GetTick();
                                    (0 == this.m_lastReportTick || b - this.m_lastReportTick >= 1e3 * tc.a.ReportInterval || a === !0) && (qd.getInstance().reportResource2Server(this.m_MediaFileMap), this.m_lastReportTick = b)
                                }
                            }, a.prototype.getMedia = function (a) {
                                return this.m_MediaFileMap.has(a) ? this.m_MediaFileMap.get(a) : null
                            }, a.prototype.getTsBitmaps = function (a, b, c) {
                                var d = this.getMedia(a);
                                if (null === d) return [];
                                for (var e = d.mapFromP2PSeqToIndex[b], f = [], g = 0, h = d.getLastSeq(); g < c && e <= h;) {
                                    var i = d.getTsBitmap(e);
                                    void 0 !== i && (f.push(i), g++), e++
                                }
                                return f
                            }, a.prototype.getFileSizes = function (a, b, c) {
                                var d = this.getMedia(a);
                                if (null === d) return [];
                                for (var e = d.mapFromP2PSeqToIndex[b], f = [], g = 0, h = d.getLastSeq(); g < c && e <= h;) {
                                    var i = d.getFileSizeBySeq(e);
                                    void 0 !== i && (f.push(i), g++), e++
                                }
                                return f
                            }, a.prototype.checkFileSize = function (a, b, c, d) {
                                var e = this.getMedia(d);
                                if (null !== e) for (var f = e.mapFromP2PSeqToIndex[a], g = void 0 == e.mapFromP2PSeqToIndex[a + b - 1] ? e.getLastSeq() : e.mapFromP2PSeqToIndex[a + b - 1], h = e.mapFromIndexToP2PSeq[f]; f <= g && h - a < c.length;) !isNaN(h) && h >= 0 ? e.checkFSBySeq(c[h - a], f) : cc.b.log("videoin do not checkfilesize, seq: " + h + ", index:" + f), f++, h = e.mapFromIndexToP2PSeq[f]
                            }, a.prototype.readPieceData = function (a, b, c, d) {
                                var e = this.getMedia(a);
                                return null === e ? null : e.readPieceData(b, c, d)
                            }, a.prototype.writePieceData = function (a, b, c, d, e) {
                                var f = (arguments.length > 5 && void 0 !== arguments[5] && arguments[5], this.getMedia(a));
                                if (null !== f) {
                                    var g = c * hc.a.BLOCK_SIZE + d * hc.a.PIECE_SIZE;
                                    f.writeData(b, g, e, !0)
                                }
                            }, a.prototype.setPieceP2PChoosed = function (a, b, c, d, e, f) {
                                var g = this.getMedia(a);
                                null !== g && g.setPieceP2PChoosed(b, c, d, e, f)
                            }, a.prototype.getChecksum = function (a, b, c) {
                                var d = this.getMedia(a);
                                return null === d ? 0 : d.getChecksum(b, c)
                            }, a.prototype.calChecksum = function (a, b, c) {
                                var d = this.getMedia(a);
                                return null === d ? 0 : d.calChecksum(b, c)
                            }, a.prototype.setChecksum = function (a, b, c, d) {
                                var e = this.getMedia(a);
                                null !== e && e.setChecksum(b, c, d)
                            }, a.prototype.setAllowP2P = function (a, b, c) {
                                var d = this.getMedia(a);
                                null !== d && d.setAllowP2P(b, c)
                            }, a.prototype.getAllowP2P = function (a, b) {
                                var c = this.getMedia(a);
                                return null !== c && c.getAllowP2P(b)
                            }, a.prototype.resetBlockData = function (a, b, c) {
                                var d = this.getMedia(a);
                                null !== d && d.resetBlockData(b, c)
                            }, a.prototype.getPlayableTime = function (a, b) {
                                var c = b, d = this.getMedia(a);
                                if (!d) return 0;
                                for (var e = d.getLastSeq(), f = 0; c <= e && d.isTsFinishBySeq(c);) f += d.getTsDurationBySeq(c), c++;
                                return f
                            }, a.prototype.destroy = function () {
                                this.m_ReleaseMemoryTimer && (clearInterval(this.m_ReleaseMemoryTimer), this.m_ReleaseMemoryTimer = void 0), this.m_MediaFileMap && (this.m_MediaFileMap.clear(), this.m_MediaFileMap = null)
                            }, a
                        }(), sd = rd, td = function rh(a, b, c, d) {
                            D(this, rh), this.tsNo = a, this.blockNo = b, this.pieceNo = c, this.dTimeStamp = d
                        }, ud = td, vd = {PIECE_COMPLETE: 1, PIECE_TIMEOUT: 2, PIECE_HTTP_CHOOSE: 3, Piece_ELIMINAte: 4},
                        wd = {Window_Slow: 0, Window_Fast: 1}, xd = {min: 500, max: 3e3}, yd = function () {
                            function a() {
                                E(this, a), this.m_CurWindowSize = tc.a.MinPeerWindowSize, this.m_DownloadingMap = new Map, this.m_Mode = wd.Window_Slow, this.m_Qos = tc.a.MinPeerQos, this.m_Succeed = 0, this.m_Failed = 0, this.m_WindowSizeDelta = 0, this.m_Rto = 1e3, this.m_RecvTimeout = 2 * this.m_Rto, this.m_RtoArray = [{
                                    range: {
                                        min: 0,
                                        max: 199
                                    }, count: 0
                                }, {range: {min: 200, max: 499}, count: 0}, {
                                    range: {min: 500, max: 999},
                                    count: 0
                                }, {range: {min: 1e3, max: 1999}, count: 0}, {
                                    range: {min: 2e3, max: 2999},
                                    count: 0
                                }, {range: {min: 3e3, max: 4999}, count: 0}, {range: {min: 5e3, max: 5e5}, count: 0}]
                            }

                            return a.prototype.__getRtoArrayIndex = function (a) {
                                var b = 0;
                                return a >= 0 && a < 200 ? b = 0 : a >= 200 && a <= 500 ? b = 1 : a >= 500 && a <= 1e3 ? b = 2 : a >= 1e3 && a <= 3e3 ? b = 3 : a >= 3e3 && a <= 5e3 ? b = 4 : a >= 5e3 && (b = 5), b
                            }, a.prototype.__add2RtoArray = function (a) {
                                for (var b = 0; b < this.m_RtoArray.length; b++) {
                                    var c = this.m_RtoArray[b];
                                    c.range.min >= a && c.range.max <= a && c.count++
                                }
                            }, a.prototype.getFreeWindowSize = function () {
                                var a = this.m_CurWindowSize - this.m_DownloadingMap.size;
                                return a >= 0 ? a : 0
                            }, a.prototype.getQos = function () {
                                return this.m_Qos
                            }, a.prototype.getQosLog = function () {
                                return "rto:" + this.m_Rto + " recvTimeout:" + this.m_RecvTimeout + " suc:" + this.m_Succeed + " failed:" + this.m_Failed + " qos:" + this.m_Qos
                            }, a.prototype.__getRtoRange = function () {
                                if (this.m_Succeed <= 30) return xd;
                                for (var a = this.m_RtoArray[0], b = 0, c = 1; c < this.m_RtoArray.length; c++) a < this.m_RtoArray[c].count && (a = this.m_RtoArray[c].count, b = c);
                                return a / this.m_Succeed >= .5 ? this.m_RtoArray[b].range : xd
                            }, a.prototype.calcRto = function (a) {
                                var b = Jc.a.GetTick() - a;
                                this.__add2RtoArray(b), this.m_Rto = (this.m_Rto * this.m_Succeed + b) / (this.m_Succeed + 1);
                                var c = this.__getRtoRange();
                                this.m_Rto > c.max ? this.m_Rto = c.max : this.m_Rto < c.min && (this.m_Rto = c.min), this.m_RecvTimeout = 2 * this.m_Rto
                            }, a.prototype.increaseWindowSize = function () {
                                return hc.a.isAdPreLoading ? void (this.m_CurWindowSize < tc.a.AdPreLoadMaxWindowNum ? ++this.m_CurWindowSize : this.m_CurWindowSize == tc.a.AdPreLoadMaxWindowNum ? (this.m_WindowSizeDelta = 0 - this.m_CurWindowSize, ++this.m_CurWindowSize) : this.m_CurWindowSize > tc.a.AdPreLoadMaxWindowNum && (++this.m_WindowSizeDelta, 0 == this.m_WindowSizeDelta && (++this.m_CurWindowSize, this.m_WindowSizeDelta = 0 - this.m_CurWindowSize))) : void (this.m_Mode == wd.Window_Fast ? ++this.m_CurWindowSize : this.m_CurWindowSize < tc.a.MaxPeerWindowSize ? ++this.m_CurWindowSize : this.m_CurWindowSize == tc.a.MaxPeerWindowSize ? (this.m_WindowSizeDelta = 0 - this.m_CurWindowSize, ++this.m_CurWindowSize) : this.m_CurWindowSize > tc.a.MaxPeerWindowSize && (++this.m_WindowSizeDelta, 0 == this.m_WindowSizeDelta && (++this.m_CurWindowSize, this.m_WindowSizeDelta = 0 - this.m_CurWindowSize)))
                            }, a.prototype.decreaseWindowSize = function () {
                                this.m_CurWindowSize > this.m_DownloadingMap.size && this.m_CurWindowSize > tc.a.MinPeerWindowSize && this.m_CurWindowSize--
                            }, a.prototype.getkey = function (a, b, c) {
                                return a + "_" + b + "_" + c
                            }, a.prototype.addPiece = function (a, b, c, d) {
                                for (var e = Jc.a.GetTick(), f = c + d, g = c; g < f; g++) {
                                    var h = this.getkey(a, b, g);
                                    if (!this.m_DownloadingMap.has(h)) {
                                        var i = new ud(a, b, g, e);
                                        this.m_DownloadingMap.set(h, i)
                                    }
                                }
                            }, a.prototype.delPiece = function (a, b, c, d) {
                                var e = this.getkey(a, b, c), f = this.m_DownloadingMap.get(e);
                                f ? (this.calcQos(d), d == vd.PIECE_COMPLETE ? (this.calcRto(f.dTimeStamp), ie.getInstance().m_ValidDataRspCount++, this.increaseWindowSize()) : d == vd.PIECE_TIMEOUT && (this.decreaseWindowSize(), this.m_Mode = wd.Window_Slow), this.m_DownloadingMap["delete"](e)) : ie.getInstance().m_RedundancyDataCount++
                            }, a.prototype.calcQos = function (a) {
                                a == vd.PIECE_COMPLETE ? this.m_Succeed++ : a == vd.PIECE_TIMEOUT && this.m_Failed++;
                                var b = this.m_Succeed + this.m_Failed;
                                b > 0 && (this.m_Qos = this.m_Succeed / b * 1e4)
                            }, a.prototype.deleteTimeoutPieces = function () {
                                for (var a = Jc.a.GetTick(), b = [], c = this.m_DownloadingMap.keys(), d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator](); ;) {
                                    var f;
                                    if (d) {
                                        if (e >= c.length) break;
                                        f = c[e++]
                                    } else {
                                        if (e = c.next(), e.done) break;
                                        f = e.value
                                    }
                                    var g = f, h = this.m_DownloadingMap.get(g);
                                    a - h.dTimeStamp > 1e3 * tc.a.MaxP2PRecvTimeout && b.push(h)
                                }
                                for (var i = 0; i < b.length; i++) {
                                    var j = b[i];
                                    this.delPiece(j.tsNo, j.blockNo, j.pieceNo, vd.PIECE_TIMEOUT)
                                }
                                return b
                            }, a.prototype.getAllDownloadingPiece = function () {
                                for (var a = [], b = this.m_DownloadingMap.keys(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e, g = this.m_DownloadingMap.get(f);
                                    a.push(g)
                                }
                                return a
                            }, a.prototype.deleteAllDownloadingPiece = function () {
                                for (var a = this.m_DownloadingMap.keys(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d, f = this.m_DownloadingMap.get(e);
                                    this.delPiece(f.tsNo, f.blockNo, f.pieceNo, vd.Piece_ELIMINAte)
                                }
                            }, a
                        }(), zd = yd, Ad = function () {
                            function a() {
                                F(this, a), this.startTsSeq = -1, this.length = 0, this.array_bitmap = []
                            }

                            return a.prototype.setBitmapInfo = function (a, b, c) {
                                if (c.length == b) {
                                    this.startTsSeq = a, this.length = b, this.array_bitmap = [];
                                    for (var d = 0; d < c.length; d++) this.array_bitmap.push(c[d])
                                }
                            }, a.prototype.hasBlockData = function (a, b) {
                                if (a < this.startTsSeq || a >= this.startTsSeq + this.length || null === this.array_bitmap || this.array_bitmap.length <= 0) return !1;
                                var c = a - this.startTsSeq;
                                return this.isBitSet(this.array_bitmap[c], b)
                            }, a.prototype.isBitSet = function (a, b) {
                                if (null == a) return !1;
                                var c = new Uint8Array(a);
                                return !!(c[b >> 3] << b % 8 & 128)
                            }, a
                        }(), Bd = Ad, Cd = function () {
                            function a(b) {
                                G(this, a), this.cur = 0;
                                var d = c(12);
                                this.buf = new d.Buffer(b)
                            }

                            return a.prototype.readUint8 = function () {
                                if (this.cur + 1 <= this.buf.length) {
                                    var a = this.buf.readUInt8(this.cur);
                                    return this.cur += 1, a
                                }
                                return -1
                            }, a.prototype.readUint16 = function () {
                                if (this.cur + 2 <= this.buf.length) {
                                    var a = this.buf.readUInt16BE(this.cur);
                                    return this.cur += 2, a
                                }
                                return -1
                            }, a.prototype.readUint32 = function () {
                                if (this.cur + 4 <= this.buf.length) {
                                    var a = this.buf.readUInt32BE(this.cur);
                                    return this.cur += 4, a
                                }
                                return -1
                            }, a.prototype.readString = function () {
                                var a = this.readUint16();
                                if (a == -1 || this.cur + a > this.buf.length) return "";
                                var b = this.buf.toString("utf8", this.cur, this.cur + a);
                                return this.cur += a, b
                            }, a.prototype.readBytesData = function () {
                                var a = this.readUint16();
                                if (a == -1 || this.cur + a > this.buf.length) return new ArrayBuffer;
                                var b = this.buf.slice(this.cur, this.cur + a);
                                this.cur += a;
                                var c = new ArrayBuffer(a), d = new Uint8Array(c);
                                return d.set(b), c
                            }, a
                        }(), Dd = Cd, Ed = 4096, Fd = 256, Gd = 65536, Hd = 4294967296, Id = function () {
                            function a() {
                                H(this, a), this.cur = 0;
                                var b = c(12);
                                this.buf = new b.Buffer(Ed)
                            }

                            return a.prototype.writeUint8 = function (a) {
                                return a < Fd && this.cur + 1 < Ed && (this.buf.writeUInt8(a, this.cur), this.cur += 1, !0)
                            }, a.prototype.writeUint16 = function (a) {
                                return a < Gd && this.cur + 2 < Ed && (this.buf.writeUInt16BE(a, this.cur), this.cur += 2, !0)
                            }, a.prototype.writeUint32 = function (a) {
                                return a < Hd && this.cur + 4 < Ed && (this.buf.writeUInt32BE(a, this.cur), this.cur += 4, !0)
                            }, a.prototype.writeString = function (a) {
                                var b = a.length;
                                return this.cur + b < Ed && (this.writeUint16(b), this.cur += this.buf.write(a, this.cur), !0)
                            }, a.prototype.writeBytesData = function (a) {
                                var b = a.byteLength;
                                if (this.cur + b < Ed) {
                                    var c = new Uint8Array(a);
                                    return this.writeUint16(b), this.buf.set(c, this.cur), this.cur += b, !0
                                }
                                return !1
                            }, a.prototype.buffer = function () {
                                var a = new ArrayBuffer(this.cur), b = new Uint8Array(a), c = this.buf.slice(0, this.cur);
                                return b.set(c), a
                            }, a
                        }(), Jd = Id, Kd = {
                            P2P_RequestBitmap: 51,
                            P2P_ResponseBitmap: 52,
                            P2P_RequestPieceData: 53,
                            P2P_ResponsePieceData: 54,
                            P2P_ResponseBusy: 59,
                            P2P_ByebyeMsg: 60,
                            P2P_UploadReq: 61,
                            P2P_UploadRes: 62,
                            P2P_DownloadReq: 63,
                            P2P_DownloadRes: 64,
                            P2P_NullPack: 65
                        }, Ld = {
                            BitmapReq_Mask: 1,
                            BitmapResp_Mask: 3,
                            DataReq_Mask: 1,
                            DataResp_Mask: 1,
                            RspBusy_Mask: 1,
                            ByeBye_Mask: 1,
                            UploadReq_Mask: 1,
                            UploadRes_Mask: 1,
                            DownloadReq_Mask: 1,
                            DownloadRes_Mask: 1,
                            NullPack_Mask: 1
                        }, Md = {Have_Bitmap: 1, Not_Have_Bitmap: 2}, Nd = function () {
                            function a() {
                                I(this, a)
                            }

                            return a.getP2PProtocolStr = function (a) {
                                var b = "";
                                switch (a) {
                                    case Kd.P2P_RequestBitmap:
                                        b = "P2P_RequestBitmap";
                                        break;
                                    case Kd.P2P_ResponseBitmap:
                                        b = "P2P_ResponseBitmap";
                                        break;
                                    case Kd.P2P_RequestPieceData:
                                        b = "P2P_RequestPieceData";
                                        break;
                                    case Kd.P2P_ResponsePieceData:
                                        b = "P2P_ResponsePieceData";
                                        break;
                                    case Kd.P2P_ResponseBusy:
                                        b = "P2P_ResponseBusy";
                                        break;
                                    case Kd.P2P_ByebyeMsg:
                                        b = "P2P_ByebyeMsg";
                                        break;
                                    case Kd.P2P_UploadReq:
                                        b = "P2P_UploadReq";
                                        break;
                                    case Kd.P2P_UploadRes:
                                        b = "P2P_UploadRes";
                                        break;
                                    case Kd.P2P_DownloadReq:
                                        b = "P2P_DownloadReq";
                                        break;
                                    case Kd.P2P_DownloadRes:
                                        b = "P2P_DownloadRes"
                                }
                                return b
                            }, a.recvDataUnserialize = function (a) {
                                var b = new Dd(a), c = b.readUint16();
                                switch (c) {
                                    case Kd.P2P_RequestBitmap:
                                        return this.bitmapReqUnserialize(b, c);
                                    case Kd.P2P_ResponseBitmap:
                                        return this.bitmapRespUnserialize(b, c);
                                    case Kd.P2P_RequestPieceData:
                                        return this.dataReqUnserialize(b, c);
                                    case Kd.P2P_ResponsePieceData:
                                        return this.dataRespUnserialize(b, c);
                                    case Kd.P2P_ByebyeMsg:
                                        return this.byebyeReqUnserialize(b, c);
                                    case Kd.P2P_UploadReq:
                                        return this.uploadReqUnserialize(b, c);
                                    case Kd.P2P_UploadRes:
                                        return this.uploadResUnserialize(b, c);
                                    case Kd.P2P_DownloadReq:
                                        return this.downloadReqUnserialize(b, c);
                                    case Kd.P2P_DownloadRes:
                                        return this.downloadResUnserialize(b, c);
                                    case Kd.P2P_NullPack:
                                        return this.nullPackUnserialize(b, c)
                                }
                            }, a.bitmapReq = function (a, b, c, d) {
                                var e = new Jd;
                                return e.writeUint16(Kd.P2P_RequestBitmap), e.writeUint16(Ld.BitmapReq_Mask), e.writeUint16(a), e.writeString(b), e.writeUint16(c), e.writeUint16(d), e.buffer()
                            }, a.bitmapReqUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.keyid = a.readString(), c.start = a.readUint16(), c.length = a.readUint16()), c
                            }, a.bitmapResp = function (a, b, c, d, e, f, g) {
                                var h = new Jd;
                                if (h.writeUint16(Kd.P2P_ResponseBitmap), h.writeUint16(Ld.BitmapResp_Mask), h.writeUint16(a), h.writeString(b), h.writeUint16(c), d != e.length || d != g.length) return new ArrayBuffer;
                                h.writeUint16(d);
                                for (var i = 0; i < d; i++) null === e[i] ? h.writeUint16(Md.Not_Have_Bitmap) : (h.writeUint16(Md.Have_Bitmap), h.writeBytesData(e[i]));
                                h.writeUint8(f);
                                for (var j = 0; j < d; j++) h.writeUint32(g[j]);
                                return h.buffer()
                            }, a.bitmapRespUnserialize = function (a, b) {
                                var c = {cmd: b};
                                if (c.mask = a.readUint16(), c.mask & !0) {
                                    c.seq = a.readUint16(), c.keyid = a.readString(), c.start = a.readUint16(), c.length = a.readUint16(), c.bmArray = [];
                                    for (var d = 0; d < c.length; d++) {
                                        var e = a.readUint16();
                                        e === Md.Not_Have_Bitmap ? c.bmArray.push(null) : c.bmArray.push(a.readBytesData())
                                    }
                                    c.busy = a.readUint8()
                                }
                                if (c.mask & !0) {
                                    c.fArray = [];
                                    for (var f = 0; f < c.length; f++) c.fArray.push(a.readUint32())
                                }
                                return c
                            }, a.dataReq = function (a, b, c, d, e, f) {
                                var g = new Jd;
                                return g.writeUint16(Kd.P2P_RequestPieceData), g.writeUint16(Ld.DataReq_Mask), g.writeUint16(a), g.writeString(b), g.writeUint16(c), g.writeUint16(d), g.writeUint16(e), g.writeUint16(f), g.buffer()
                            }, a.dataReqUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.keyid = a.readString(), c.tsSeq = a.readUint16(), c.blockID = a.readUint16(), c.pieceID = a.readUint16(), c.reqNum = a.readUint16()), c
                            }, a.dataResp = function (a, b, c, d, e, f, g) {
                                var h = new Jd;
                                return h.writeUint16(Kd.P2P_ResponsePieceData), h.writeUint16(Ld.DataResp_Mask), h.writeUint16(a), h.writeString(b), h.writeUint16(c), h.writeUint16(d), h.writeUint16(e), h.writeUint32(f), h.writeBytesData(g), h.buffer()
                            }, a.dataRespUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.keyid = a.readString(), c.tsSeq = a.readUint16(), c.blockID = a.readUint16(), c.pieceID = a.readUint16(), c.check = a.readUint32(), c.data = a.readBytesData()), c
                            }, a.byebyeReq = function (a) {
                                var b = new Jd;
                                return b.writeUint16(Ld.ByeBye_Mask), mask & !0 && b.writeUint16(a), b.buffer()
                            }, a.byebyeReqUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16()), c
                            }, a.prototype.busyReq = function () {
                            }, a.prototype.busyReqUnserialize = function (a) {
                            }, a.uploadReq = function (a, b, c) {
                                var d = new Jd;
                                return d.writeUint16(Kd.P2P_UploadReq), d.writeUint16(Ld.UploadReq_Mask), d.writeUint16(a), d.writeUint32(b), d.writeString(c), d.buffer()
                            }, a.uploadReqUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.uin = a.readString(), c.keyid = a.readUint32()), c
                            }, a.uploadRes = function (a, b, c, d, e) {
                                var f = new Jd;
                                return f.writeUint16(Kd.P2P_UploadRes), f.writeUint16(Ld.UploadRes_Mask), f.writeUint16(a), f.writeUint32(b), f.writeString(c), f.writeUint8(d), f.writeString(e), f.buffer()
                            }, a.uploadResUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.uin = a.readUint32(), c.keyid = a.readString(), c.ok = a.readUint8(), c.reason = a.readString()), c
                            }, a.downloadReq = function (a, b, c) {
                                var d = new Jd;
                                return d.writeUint16(Kd.P2P_DownloadReq), d.writeUint16(Ld.DownloadReq_Mask), d.writeUint16(a), d.writeUint32(b), d.writeString(c), d.buffer()
                            }, a.downloadReqUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.uin = a.readUint32(), c.keyid = a.readString()), c
                            }, a.downloadRes = function (a, b, c, d, e) {
                                var f = new Jd;
                                return f.writeUint16(Kd.P2P_DownloadRes), f.writeUint16(Ld.DownloadRes_Mask), f.writeUint16(a), f.writeUint32(b), f.writeString(c), f.writeUint8(d), f.writeString(e), f.buffer()
                            }, a.downloadResUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.uin = a.readUint32(), c.keyid = a.readString(), c.ok = a.readUint8(), c.reason = a.readString()), c
                            }, a.nullPack = function (a, b, c) {
                                var d = new Jd;
                                return d.writeUint16(Kd.P2P_NullPack), d.writeUint16(Ld.NullPack_Mask), d.writeUint16(a), d.writeString(b), d.writeUint16(c), d.buffer()
                            }, a.nullPackUnserialize = function (a, b) {
                                var c = {cmd: b};
                                return c.mask = a.readUint16(), c.mask & !0 && (c.seq = a.readUint16(), c.keyid = a.readString(), c.reason = a.readUint16()), c
                            }, a
                        }(), Od = Nd, Pd = function () {
                            function a() {
                                J(this, a), this.playKeyid = "", this.peerManager = null, this.multiNetLoader = null
                            }

                            return a.getInstance = function () {
                                return this.instance || (this.instance = new a), this.instance
                            }, a.prototype.setKeyId = function (a) {
                                this.playKeyid = a
                            }, a.prototype.setPeerContainerManager = function (a) {
                                this.peerManager = a
                            }, a.prototype.setMultiNetLoader = function (a) {
                                this.multiNetLoader = a
                            }, a.prototype.canUpload = function (a) {
                                if (this.peerManager) {
                                    if (this.peerManager.getConnectingCountUpload() >= tc.a.MaxUploadConnectingPeerNum) return !1;
                                    if (this.peerManager.getConnectedCountUpload() >= tc.a.MaxUploadConnectedPeerNum) return !1
                                }
                                return !0
                            }, a.prototype.canUploadData = function (a) {
                                return !(!this.multiNetLoader || !this.multiNetLoader.isInUploadTime())
                            }, a
                        }(), Qd = Pd,
                        Rd = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) {
                            return typeof a
                        } : function (a) {
                            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                        }, Sd = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), Td = {
                            Init: "init",
                            CreateOffer: "createoffer",
                            RecvAnswer: "recvanwser",
                            AddIceCandidate: "addicecandidate",
                            Ready: "ready",
                            Close: "close"
                        }, Ud = function () {
                            function a(b, c, d, e, f) {
                                K(this, a), this.seq = Jc.a.GetPeerConnectionSeq(), this.msgSeq = 0, this.keyid = c, this.id = b, this.state = Td.Init;
                                var g = this.__getICEServersConfig(d), h = {iceServers: g};
                                if (this.firstICE = !0, this.punchDownState = Uc.UnKnown, this.punchUpState = Uc.UnKnown, this.peerConnection = this.__createPeerConnect(h), null == this.peerConnection) return cc.b.log(this.getLogHeader() + ":createPeerConnection error,not support p2p"), ie.getInstance().setSupportWebRTC(ge.RTC_CALL_FAIL), void cd.getInstance().stopP2P();
                                var i = Jc.a.GetTick();
                                if (e == zc.Down) {
                                    this.m_LastConnectTime = -1, this.punchDownState = Uc.Start;
                                    var j = 1 == tc.a.DataChannelReliableMode ? {reliable: !0} : {
                                        maxRetransmits: 0,
                                        ordered: !1
                                    };
                                    this.dataChannel = this.peerConnection.createDataChannel(this.id, j), this.__bindDataChannel(this.dataChannel)
                                } else e == zc.Up && (this.punchUpState = Uc.Start, this.dataChannel = null, this.m_LastConnectTime = i);
                                this.sessionType = e, this.bitmapInfo = new Bd, this.slidingWindow = new zd, this.dataChannelCallback = f, this.establishChannelFinish = !1, this.haveUploaded = !1, this.m_ConnectSucTime = -1, this.m_RecvBitmapTickDownload = i, this.m_SendBitmapTickDownload = i, this.m_RecvBitmapTickUpload = i, this.m_DataRecvTickUpload = i, this.m_DataSendTickDownload = i, this.m_DataRecvTickDownload = i, this.m_bReleased = !1, this.m_busy = !1, this.candidateCache = [], this.hasSetRemoteDes = !1, this.needDownload = !1
                            }

                            return a.isSupportWebRtc = function () {
                                var a = {iceServers: []}, b = null;
                                try {
                                    return b = new RTCPeerConnection(a), b.close(), b = null, !0
                                } catch (c) {
                                    return !1
                                }
                                return !0
                            }, a.isPublicAddress = function (a) {
                                if (!a) return !1;
                                for (var b = 0; b < a.length; b++) {
                                    var c = a[b];
                                    if (c && 5 == c.length) {
                                        var d = c[1], e = c[2];
                                        c[3], c[4];
                                        if (10 != d && !(172 == d && e >= 16 && e <= 31 || 192 == d && 168 == e)) return !0
                                    }
                                }
                                return !1
                            }, a.getAddressFromCandidate = function (a) {
                                if (!a) return null;
                                if (0 == a.length) return null;
                                a = a.toString();
                                var b = new RegExp(/(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])/),
                                    c = [];
                                return c.push(a.match(b)), c.push(a.substr(a.search(b) + 7).match(b)), c
                            }, a.prototype.destroy = function () {
                            }, a.prototype.getMsgSeq = function () {
                                return this.msgSeq++, this.msgSeq >= 65536 && (this.msgSeq = 0), this.msgSeq
                            }, a.prototype.getLogHeader = function () {
                                return "webrtc PeerConnection(" + this.seq + ",stype:" + this.sessionType + ",id:" + this.id + ",up_state:" + this.punchUpState + ",down_state:" + this.punchDownState + ")"
                            }, a.prototype.setConnectSucTime = function (a) {
                                this.m_ConnectSucTime = a
                            }, a.prototype.addSessionType = function (a) {
                                this.sessionType |= a
                            }, a.prototype.__isUploadDead = function () {
                                return Jc.a.GetTick() - this.m_RecvBitmapTickUpload >= 1e3 * tc.a.P2PPeerUploadMsgDead
                            }, a.prototype.isDownloadDead = function () {
                                return this.m_SendBitmapTickDownload - this.m_RecvBitmapTickDownload >= 1e3 * tc.a.P2PPeerDownloadMsgDead
                            }, a.prototype.getPeerID = function () {
                                return this.id
                            }, a.prototype.__createPeerConnect = function (a) {
                                var b = null;
                                try {
                                    b = new RTCPeerConnection(a)
                                } catch (c) {
                                    return null
                                }
                                return b.onicecandidate = this.__onIceCandidatePeerConnection.bind(this), b.oniceconnectionstatechange = this.__onIceConnectionStateChangePeerConnection.bind(this), b.ondatachannel = this.__onDataChannelPeerConnection.bind(this), b
                            }, a.prototype.__bindDataChannel = function (a) {
                                a.onerror = this.__onErrorDataChannel.bind(this), a.onmessage = this.__onMessageDataChannel.bind(this), a.onopen = this.__onOpenDataChannel.bind(this), a.onclose = this.__onCloseDataChannel.bind(this)
                            }, a.prototype.__getStype = function () {
                                var a = 0;
                                return this.punchDownState == Uc.Ing && (a |= zc.Down), this.punchUpState == Uc.Ing && (a & zc.Down ? (a |= zc.Up, cc.b.warn("peerConnection is punch in up and down")) : a = zc.Up), a
                            }, a.prototype.__onIceCandidatePeerConnection = function (b) {
                                if (b.candidate) {
                                    var c = this.__getStype(),
                                        d = _c.CreateCandidateReq(b.candidate, this.id, this.keyid, c);
                                    this.sendMsg(this.id, JSON.stringify(d)), a.isPublicAddress(a.getAddressFromCandidate(b.candidate.candidate)) && this.sessionType === zc.Down && this.firstICE && (ie.getInstance().recvICEPublicAddrTimes++, this.firstICE = !1)
                                }
                            }, a.prototype.sendMsg = function (a, b) {
                                var c = od.getInstance().getSignalServer();
                                c && c.forwardReq(a, b)
                            }, a.prototype.__getICEServersConfig = function (a) {
                                var b = new Array;
                                if ("[object Array]" == Object.prototype.toString.call(a)) for (var c = 0; c < a.length; c++) b.push({urls: "stun:" + a[c].ip + ":" + a[c].port});
                                return b
                            }, a.prototype.close = function () {
                            }, a.prototype.update = function () {
                                this.sessionType && this.sessionType & zc.Up || this.sessionType && this.sessionType & zc.Down && this.state == Td.Init && this.__createOffer()
                            }, a.prototype.recvOffer = function (a) {
                                this.addSessionType(zc.Up), this.createAnswer(a)
                            }, a.prototype.onRecv = function (a, b) {
                                switch (b.type) {
                                    case Zc.offer:
                                        this.recvOffer(b.offer);
                                        break;
                                    case Zc.answer:
                                        this.handleAnswer(b);
                                        break;
                                    case Zc.candidate:
                                        this.recvCandidate(b.candidate, b.stype)
                                }
                            }, a.prototype.isReady = function () {
                                if (Td.Ready == this.state) return !0
                            }, a.prototype.handleAnswer = function (a) {
                                a.busy && 1 == a.busy ? (this.release(zc.down), ie.getInstance().recvAnswerButRejectTimes++) : this.recvAnswer(a.answer)
                            }, a.prototype.__createOffer = function () {
                                if (!this.peerConnection) return !1;
                                var a = this, b = Jc.a.GetTick();
                                this.m_LastConnectTime = b, this.peerConnection.createOffer(function (b) {
                                    a.peerConnection.setLocalDescription(new RTCSessionDescription(b), function () {
                                    }, function (b) {
                                        a.punchDownState = Uc.End
                                    }), a.punchDownState = Uc.Ing;
                                    var c = _c.CreateOfferReq(b, a.id, a.keyid, zc.Down);
                                    a.sendMsg(a.id, JSON.stringify(c))
                                }, function (b) {
                                    a.onError(b), cc.b.error(ac.c.P2P_SIGNAL_ERROR, a.getLogHeader() + "  send offer Error: " + b)
                                })
                            }, a.prototype.onError = function (a) {
                                this.punchDownState == Uc.Ing ? (this.punchDownState = Uc.End, this.release(zc.Down)) : this.punchUpState == Uc.Ing && (this.punchyState = Uc.End, this.release(zc.Up))
                            }, a.prototype.createAnswer = function (a) {
                                if (this.peerConnection) {
                                    this.peerConnection.setRemoteDescription(new RTCSessionDescription(a)), this.hasSetRemoteDes = !0;
                                    for (var b = 0; b < this.candidateCache.length; b++) this.recvCandidate(this.candidateCache[b]);
                                    this.candidateCache = [];
                                    var c = 0;
                                    Qd.getInstance().canUpload() || (c = 1);
                                    var d = this;
                                    this.peerConnection.createAnswer(function (a) {
                                        d.peerConnection.setLocalDescription(new RTCSessionDescription(a)), d.punchUpState = Uc.Ing;
                                        var b = _c.CreateAnswerReq(a, d.id, d.keyid, zc.Up);
                                        b.busy = c, d.sendMsg(d.id, JSON.stringify(b)), c && d.release(zc.Up)
                                    }, function (a) {
                                        d.punchUpState = Uc.End, d.onError(a), cc.b.error(ac.c.P2P_SIGNAL_ERROR, d.getLogHeader() + ":  createAnswer error: " + a)
                                    })
                                }
                            }, a.prototype.recvAnswer = function (a) {
                                if (this.state == Td.RecvAnswer, this.peerConnection) {
                                    ie.getInstance().recvAnswerTimes++, this.hasSetRemoteDes = !0, this.peerConnection.setRemoteDescription(new RTCSessionDescription(a));
                                    for (var b = 0; b < this.candidateCache.length; b++) this.recvCandidate(this.candidateCache[b]);
                                    this.candidateCache = []
                                }
                            }, a.prototype.recvCandidate = function (b) {
                                var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : zc.Up,
                                    d = new RTCIceCandidate(b);
                                if (this.peerConnection) if (this.hasSetRemoteDes) try {
                                    this.peerConnection.addIceCandidate(d), c == zc.Up && a.isPublicAddress(a.getAddressFromCandidate(b.candidate)) && ie.getInstance().recvCandidateTimes++
                                } catch (e) {
                                    var f = "undefined" == typeof d ? "undefined" : Rd(d);
                                    cc.b.error(ac.c.P2P_SIGNAL_ERROR, "webrtc recvCandidate error1: [" + e.name + ":" + e.message + "] candidate:" + d + ",type:" + f), ie.getInstance().setSupportWebRTC(ge.RTC_CALL_FAIL), cd.getInstance().stopP2P(), cc.b.log("webrtc stop p2p")
                                } else this.candidateCache.push(b)
                            }, a.prototype.send = function (a) {
                                od.getInstance().send2SignalServer(a)
                            }, a.prototype.__onDataChannelPeerConnection = function (a) {
                                cc.b.log(this.getLogHeader() + ": Channel established.up"), this.punchUpState = Uc.End, this.establishChannelFinish = !0, this.dataChannel = a.channel, this.__bindDataChannel(this.dataChannel), this.dataChannelCallback && this.dataChannelCallback.onPeerConnectedUp && this.dataChannelCallback.onPeerConnectedUp(this), this.m_ConnectSucTime = Jc.a.GetTick(), this.needDownload && this.downloadReq()
                            }, a.prototype.isEstablishChannel = function () {
                                return this.establishChannelFinish
                            }, a.prototype.__onIceConnectionStateChangePeerConnection = function (a) {
                                var b = a.currentTarget.iceConnectionState;
                                if (cc.b.log(this.getLogHeader() + ":  Changing connection state:" + b), "connected" == b) ; else if ("disconnected" == b || "failed" == b) try {
                                    this.release(zc.Up | zc.Down), cc.b.log(this.getLogHeader() + ": Connection closed by")
                                } catch (c) {
                                    cc.b.log(this.getLogHeader() + ": Connection already closed")
                                } else "closed" == b && cc.b.log(this.getLogHeader() + ": Connection closed")
                            }, a.prototype.hasBlockData = function (a, b) {
                                return null !== this.bitmapInfo && this.bitmapInfo.hasBlockData(a, b)
                            }, a.prototype.getFreeWindowSize = function () {
                                return tc.a.UseSlidingWindow ? this.slidingWindow.getFreeWindowSize() : tc.a.MaxPeerWindowSize
                            }, a.prototype.getQos = function () {
                                return this.slidingWindow.getQos()
                            }, a.prototype.deleteTimeoutPieces = function () {
                                for (var a = this.slidingWindow.deleteTimeoutPieces(), b = a.length, c = 0; c < b; c++) {
                                    var d = a[c];
                                    sd.getInstance().setPieceP2PChoosed(this.keyid, d.tsNo, d.blockNo, d.pieceNo, 1, !1)
                                }
                            }, a.prototype.canDownload = function () {
                                return this.slidingWindow.getFreeWindowSize() >= tc.a.MinPeerWindowSize && !this.m_busy
                            }, a.prototype.isNoUpload = function () {
                                return this.haveUploaded === !1
                            }, a.prototype.sendByChannel = function (a) {
                                if (!this.dataChannel) return 0;
                                try {
                                    this.dataChannel.send(a)
                                } catch (b) {
                                }
                            }, a.prototype.__onErrorDataChannel = function (a) {
                                cc.b.log(this.getLogHeader() + ": Error on data channel:" + a)
                            }, a.prototype.__dealMsgData = function (a) {
                                this.sessionType == zc.Down && this.state != Td.Ready && (this.state = Td.Ready);
                                var b = Od.recvDataUnserialize(a);
                                if (b && b.cmd) switch (b.cmd) {
                                    case Kd.P2P_RequestBitmap:
                                        b.keyid && b.start > -1 && b.length > -1 && this.__handleBitmapRequest(b.seq, b.keyid, b.start, b.length);
                                        break;
                                    case Kd.P2P_ResponseBitmap:
                                        b.keyid && b.start > -1 && b.length > -1 && b.bmArray && this.__handleBitmapResponse(b.seq, b.keyid, b.start, b.length, b.bmArray, b.busy, b.fArray);
                                        break;
                                    case Kd.P2P_RequestPieceData:
                                        b.keyid && b.tsSeq > -1 && b.blockID > -1 && b.pieceID > -1 && b.reqNum > -1 && this.__handleDataRequest(b.seq, b.keyid, b.tsSeq, b.blockID, b.pieceID, b.reqNum);
                                        break;
                                    case Kd.P2P_ResponsePieceData:
                                        b.keyid && b.tsSeq > -1 && b.blockID > -1 && b.pieceID > -1 && b.check > -1 && b.data && this.__handleDataResponse(b.seq, b.keyid, b.tsSeq, b.blockID, b.pieceID, b.check, b.data);
                                        break;
                                    case Kd.P2P_DownloadReq:
                                        this.__handleDownloadReq(b.seq, b.uin, b.keyid);
                                        break;
                                    case Kd.P2P_DownloadRes:
                                        this.__handleDownloadRes(b.seq, b.uin, b.keyid, b.ok, b.reason);
                                        break;
                                    case Kd.P2P_ByebyeMsg:
                                        break;
                                    case Kd.P2P_NullPack:
                                        this.__handleNullPack(b.seq, b.keyid, b.reason);
                                        break;
                                    default:
                                        cc.b.log(this.getLogHeader() + ":  recv unknow msg " + b.cmd)
                                }
                            }, a.prototype.__onMessageDataChannel = function (a) {
                                if (a.data instanceof Blob) {
                                    var b = new FileReader, c = this;
                                    b.onload = function (a) {
                                        c.__dealMsgData(a.target.result)
                                    }, b.readAsArrayBuffer(a.data)
                                } else a.data instanceof ArrayBuffer ? this.__dealMsgData(a.data) : cc.b.error(ac.c.P2P_SIGNAL_ERROR, "not support type of event.data")
                            }, a.prototype.__handleUploadReq = function (a, b) {
                            }, a.prototype.__handleUploadRes = function (a, b, c, d) {
                            }, a.prototype.__handleDownloadReq = function (a, b, c) {
                                cc.b.log(this.getLogHeader() + ":__handleDownloadReq"), cc.b.log(this.getLogHeader() + ":  Channel established.up2");
                                var d = !1;
                                Qd.getInstance().canUpload() && (d = !0);
                                var e = 0;
                                d ? (this.punchUpState = Uc.Ing, e = 1) : this.punchUpState = Uc.UnKnown;
                                var f = Od.downloadRes(a, _c.GetUin(), this.keyid, e, "");
                                this.sendByChannel(f), d && (this.addSessionType(zc.Up), this.m_ConnectSucTime = Jc.a.GetTick(), this.dataChannelCallback.onPeerConnectedUp && this.dataChannelCallback.onPeerConnectedUp(this))
                            }, a.prototype.isBusy = function () {
                                return this.m_busy
                            }, a.prototype.isReleased = function () {
                                return this.m_bReleased
                            }, a.prototype.__handleNullPack = function (a, b, c) {
                                cc.b.log(this.getLogHeader() + ":recv null pack. " + Bc.getReasonStr(c)), this.m_busy = !0
                            }, a.prototype.__handleDownloadRes = function (a, b, c, d, e) {
                                cc.b.log(this.getLogHeader() + ":__handleDownloadRes Update m_RecvBitmapTickDownload"), this.dataChannelCallback && (cc.b.log(this.getLogHeader() + ":  Channel established.down2. ok:" + d + " uin:" + b + " keyid:" + c + " reason:" + e), 1 == d ? (this.punchDownState = Uc.End, this.m_ConnectSucTime = Jc.a.GetTick(), this.addSessionType(zc.Down), this.dataChannelCallback.onPeerConnectedDown && this.dataChannelCallback.onPeerConnectedDown(this)) : 0 == d && (this.punchDownState = Uc.UnKnown, this.dataChannelCallback.onPeerDisconnectedDown && this.dataChannelCallback.onPeerDisconnectedDown(this, !0)))
                            }, a.prototype.__handleDataResponse = function (a, b, c, d, e, f, g) {
                                ie.getInstance().m_DataRspCount++;
                                var h = Jc.a.GetTick();
                                this.m_DataRecvTickDownload = h;
                                var i = sd.getInstance(), j = i.getChecksum(b, c, d), k = !1;
                                i.getAllowP2P(b, c) ? 0 === j ? (i.setChecksum(b, c, d, f), k = !0) : j !== f ? (ie.getInstance().m_DataRspFailedCount++, i.resetBlockData(b, c, d), i.setAllowP2P(b, c, !1), k = !1) : k = !0 : k = !1, k && (i.writePieceData(b, c, d, e, g, !0), this.dataChannelCallback.onPeerDataRecv && this.dataChannelCallback.onPeerDataRecv(this.getPeerID(), c, d, e)), this.slidingWindow.delPiece(c, d, e, vd.PIECE_COMPLETE), i.setPieceP2PChoosed(this.keyid, c, d, e, 1, !1)
                            }, a.prototype.__handleDataRequest = function (a, b, c, d, e, f) {
                                if (!Qd.getInstance().canUploadData(b)) {
                                    var g = Od.nullPack(a, b, yc.BusyInEmergencyTime.code);
                                    return void this.sendByChannel(g)
                                }
                                this.m_DataRecvTickUpload = Jc.a.GetTick();
                                for (var h = sd.getInstance(), i = e + f, j = e; j < i; j++) {
                                    var k = h.readPieceData(b, c, d, j), l = h.getChecksum(b, c, d);
                                    if (0 === l && (l = h.calChecksum(b, c, d), h.setChecksum(b, c, d, l)), k && 0 !== l) {
                                        var m = Od.dataResp(a, b, c, d, j, l, k);
                                        ie.getInstance().m_P2PUploadBytes += k.byteLength, this.haveUploaded = !0, this.sendByChannel(m)
                                    }
                                }
                            }, a.prototype.__handleBitmapResponse = function (a, b, c, d, e, f, g) {
                                cc.b.log(this.getLogHeader() + ":__handleBitmapResponse Update seq:" + a + " busy:" + f);
                                var h = Jc.a.GetTick();
                                this.m_RecvBitmapTickDownload = h, this.__updateBitmapInfo(c, d, e), void 0 !== g && this.__checkFileSize(c, d, g, b), this.m_busy = !!f, ie.getInstance().m_BitmapRspCount++
                            }, a.prototype.__updateBitmapInfo = function (a, b, c) {
                                this.bitmapInfo && this.bitmapInfo.setBitmapInfo(a, b, c)
                            }, a.prototype.__checkFileSize = function (a, b, c, d) {
                                sd.getInstance().checkFileSize(a, b, c, d)
                            }, a.prototype.__handleBitmapRequest = function (a, b, c, d) {
                                cc.b.log(this.getLogHeader() + ":__handleBitmapRequest seq:" + a), this.m_RecvBitmapTickUpload = Jc.a.GetTick();
                                var e = sd.getInstance().getTsBitmaps(b, c, d), f = sd.getInstance().getFileSizes(b, c, d),
                                    g = 0;
                                Qd.getInstance().canUploadData(b) || (g = 1);
                                var h = Od.bitmapResp(a, b, c, e.length, e, g, f);
                                this.sendByChannel(h)
                            }, a.prototype.sendBitmapRequest = function (a, b) {
                                ie.getInstance().m_BitmapReqCount++, cc.b.log(this.getLogHeader() + ":sendBitmapRequest(seq:" + a + ") Update. " + this.slidingWindow.getQosLog()), this.m_SendBitmapTickDownload = Jc.a.GetTick();
                                var c = Od.bitmapReq(this.getMsgSeq(), this.keyid, a, b);
                                this.sendByChannel(c)
                            }, a.prototype.sendDataRequest = function (a, b, c, d) {
                                var e = Jc.a.GetTick();
                                this.m_DataSendTickDownload = e, ie.getInstance().m_DataReqCount += d;
                                var f = Od.dataReq(this.getMsgSeq(), this.keyid, a, b, c, d);
                                this.slidingWindow.addPiece(a, b, c, d), this.sendByChannel(f), sd.getInstance().setPieceP2PChoosed(this.keyid, a, b, c, d, !0)
                            }, a.prototype.__onOpenDataChannel = function () {
                                this.punchDownState == Uc.Ing && (cc.b.log(this.getLogHeader() + ":  Channel established.down"), this.punchDownState = Uc.End, this.establishChannelFinish = !0, this.dataChannelCallback && this.dataChannelCallback.onPeerConnectedDown && this.dataChannelCallback.onPeerConnectedDown(this), this.m_ConnectSucTime = Jc.a.GetTick())
                            }, a.prototype.__onCloseDataChannel = function () {
                                cc.b.log(this.getLogHeader() + ":  Channel closed."), this.establishChannelFinish = !1
                            }, a.prototype.isConnectTimeout = function () {
                                var a = Jc.a.GetTick();
                                return this.m_LastConnectTime != -1 && a - this.m_LastConnectTime > 1e3 * tc.a.MaxP2PConnectTimeout
                            }, a.prototype.canBeEliminatedDownload = function (a) {
                                return !this.isFresh() && (this.slidingWindow.getQos() < tc.a.MinPeerQos ? (a.reason = yc.QosLow, !0) : !!this.isDataNoExchangeTimeoutDownload() && (a.reason = yc.NoDataExchange, !0))
                            }, a.prototype.canBeEliminatedUpload = function (a) {
                                return this.__isUploadDead() ? (a.reason = yc.Timeout, !0) : !!this.isDataNoExchangeTimeoutUpload() && (a.reason = yc.NoDataExchange, !0)
                            }, a.prototype.isFresh = function () {
                                var a = Jc.a.GetTick();
                                return this.m_ConnectSucTime != -1 && a - this.m_ConnectSucTime < 1e3 * tc.a.MaxProtectPeerTime
                            }, a.prototype.sendByebyeMsg = function () {
                                var a = Od.byebyeReq(this.getMsgSeq());
                                this.sendByChannel(a)
                            }, a.prototype.releaseUpload = function () {
                                this.punchUploadState = Uc.UnKnown, this.sessionType &= 253
                            }, a.prototype.releaseDownload = function () {
                                this.deleteAllSelectedPieces(), this.punchDownState = Uc.UnKnown, this.sessionType &= 254, this.__clearBitmap()
                            }, a.prototype.release = function (a) {
                                if (cc.b.info(this.getLogHeader() + " : release (stype:" + a + ") "), a & zc.Up && this.releaseUpload(), a & zc.Down && this.releaseDownload(), void 0 == a && (this.releaseUpload(), this.releaseDownload()), 0 == this.sessionType) {
                                    if (this.m_bReleased) return;
                                    this.establishChannelFinish = !1, this.m_bReleased = !0, this.dataChannel && (this.dataChannel.close(), cc.b.log(this.getLogHeader() + " :release DataChannel"), this.dataChannel = null), this.peerConnection && (this.peerConnection.close(), this.peerConnection = null, cc.b.log(this.getLogHeader() + " :release peerConnection"))
                                }
                            }, a.prototype.__clearBitmap = function () {
                                if (null != this.bitmapInfo) {
                                    for (; 0 != this.bitmapInfo.array_bitmap.length;) {
                                        var a = this.bitmapInfo.array_bitmap.pop();
                                        a = void 0
                                    }
                                    this.bitmapInfo = null
                                }
                            }, a.prototype.deleteAllSelectedPieces = function () {
                                var a = this.slidingWindow.getAllDownloadingPiece();
                                this.slidingWindow.deleteAllDownloadingPiece(), cc.b.info("webrtc PeerConnection : deleteAllSelectedPieces : allPiece.length = " + a.length);
                                for (var b = a, c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    sd.getInstance().getMedia(this.keyid).setPieceP2PChoosed(f.tsNo, f.blockNo, f.pieceNo, 1, !1)
                                }
                            }, a.prototype.isDataNoExchangeTimeoutDownload = function () {
                                var a = Jc.a.GetTick();
                                return a - this.m_DataRecvTickDownload > 1e3 * tc.a.MaxP2PRecvDataTimeOut && a - this.m_SendBitmapTickDownload > 1e3 * tc.a.MaxP2PRecvDataTimeOut
                            }, a.prototype.isDataNoExchangeTimeoutUpload = function () {
                                var a = Jc.a.GetTick();
                                return a - this.m_DataRecvTickUpload >= 1e3 * tc.a.MaxP2POfflineSendDataTimeOut
                            }, a.prototype.uploadReq = function () {
                                var a = Od.uploadReq(this.getMsgSeq(), _c.GetUin(), this.keyid);
                                this.sendByChannel(a)
                            }, a.prototype.downloadReq = function () {
                                if (this.isEstablishChannel()) {
                                    cc.b.log(this.getLogHeader() + ":" + _c.GetUin() + " found " + this.id + " ,send downloadReq"), this.punchDownState = Uc.Ing;
                                    var a = Od.downloadReq(this.getMsgSeq(), _c.GetUin(), this.keyid);
                                    this.sendByChannel(a)
                                } else cc.b.log(this.getLogHeader() + ":" + _c.GetUin() + " found " + this.id + " ,add need2download"), this.needDownload = !0
                            }, Sd(a, [{
                                key: "firstICE", set: function (a) {
                                    this._firstICE = a
                                }, get: function () {
                                    return this._firstICE
                                }
                            }]), a
                        }(), Vd = Ud, Wd = function () {
                            function a(b, c, d, e) {
                                L(this, a), this.m_KeyID = b, this.m_PeerContainerListener = c, this.m_IdlePeerPool = [], this.m_ConnectingPeers = [], this.m_ConnectedPeers = [], this.m_SparePeerMap = new Map, this.m_BlackPeerPool = new Map, this.m_PeerPoolTime = new Map, this.stype = d, this.peerContainer = e
                            }

                            return a.prototype.setListener = function (a) {
                                this.m_PeerContainerListener = a
                            }, a.prototype.getLogHead = function () {
                                return "webrtc PeerConnection(stype:" + this.stype + ")"
                            }, a.prototype.getConnectedCount = function () {
                                return this.m_ConnectedPeers.length
                            }, a.prototype.getConnectingCount = function () {
                                return this.m_ConnectingPeers.length
                            }, a.prototype.removeFromConnected = function (a) {
                                if (null != a) for (var b = 0; b < this.m_ConnectedPeers.length; b++) if (this.m_ConnectedPeers[b].getPeerID() == a.getPeerID()) {
                                    this.m_ConnectedPeers.splice(b, 1);
                                    break
                                }
                            }, a.prototype.removeFromConnecting = function (a) {
                                if (null != a) for (var b = 0; b < this.m_ConnectingPeers.length; b++) if (this.m_ConnectingPeers[b].getPeerID() == a.getPeerID()) {
                                    this.m_ConnectingPeers.splice(b, 1);
                                    break
                                }
                            }, a.prototype.removeFromConnectingById = function (a) {
                                for (var b = null, c = 0; c < this.m_ConnectingPeers.length; c++) if (this.m_ConnectingPeers[c].getPeerID() == a) {
                                    b = this.m_ConnectingPeers[c], this.m_ConnectingPeers.splice(c, 1);
                                    break
                                }
                                return b
                            }, a.prototype.changeConnecting2Connected = function (a) {
                                if (a) {
                                    for (var b = 0; b < this.m_ConnectingPeers.length; b++) if (this.m_ConnectingPeers[b].getPeerID() == a.getPeerID()) {
                                        this.m_ConnectingPeers.splice(b, 1);
                                        break
                                    }
                                    this.m_ConnectedPeers.push(a)
                                }
                            }, a.prototype.insertPeer2Connected = function (a) {
                                a && this.m_ConnectedPeers.push(a)
                            }, a.prototype.insertPeersIntoPeerPool = function (a) {
                                for (var b = a.length, c = 0; c < b; c++) this.insertPeerIntoPeerPool(a[c])
                            }, a.prototype.isInSpare = function (a) {
                                var b = this.m_SparePeerMap.get(a);
                                return !!b
                            }, a.prototype.isInBlack = function (a) {
                                var b = this.m_BlackPeerPool.get(a);
                                return !!b
                            }, a.prototype.insertPeerIntoPeerPool = function (a) {
                                if (void 0 !== a && "" !== a && !this.isInBlack(a) && !this.isInSpare(a) && !(this.findConnectingPeer(a) >= 0 || this.findConnectedPeer(a) >= 0 || _c.GetUin() == a)) {
                                    var b = this.findPeerPool(a);
                                    b >= 0 && this.m_IdlePeerPool.splice(b, 1), this.m_PeerPoolTime.set(a, performance.now()), this.m_IdlePeerPool.push(a)
                                }
                            }, a.prototype.cleanBlackPeerMap = function () {
                            }, a.prototype.findPeerPool = function (a) {
                                for (var b = this.m_IdlePeerPool.length, c = 0; c < b; c++) if (this.m_IdlePeerPool[c] === a) return c;
                                return -1
                            }, a.prototype.findConnectingPeer = function (a) {
                                for (var b = this.m_ConnectingPeers.length, c = 0; c < b; c++) if (this.m_ConnectingPeers[c].getPeerID() === a) return c;
                                return -1
                            }, a.prototype.findConnectedPeer = function (a) {
                                for (var b = this.m_ConnectedPeers.length, c = 0; c < b; c++) if (this.m_ConnectedPeers[c].getPeerID() === a) return c;
                                return -1
                            }, a.prototype.getPeerPoolLen = function () {
                                return this.m_IdlePeerPool.length
                            }, a.prototype.getConnectingPeerLen = function () {
                                return this.m_ConnectingPeers.length
                            }, a.prototype.getConnectedPeerLen = function () {
                                return this.m_ConnectedPeers.length
                            }, a.prototype.checkMsgDead = function () {
                            }, a.prototype.createPeerConnection = function (a, b) {
                                var c = {
                                        onPeerConnectedDown: this.onPeerConnectedDown.bind(this),
                                        onPeerConnectedUp: this.onPeerConnectedUp.bind(this),
                                        onPeerDisconnectedDown: this.onPeerDisconnectedDown.bind(this),
                                        onPeerDisconnectedUp: this.onPeerDisconnectedUp.bind(this),
                                        onPeerDataRecv: this.onPeerDataRecv.bind(this)
                                    }, d = od.getInstance().getIceServerAddr(), e = [{ip: d.ip, port: d.port}],
                                    f = new Vd(a, this.m_KeyID, e, b, c);
                                return f.update(), this.m_punchTime = performance.now(), b === zc.Down && ie.getInstance().m_natPunchCount++, f
                            }, a.prototype.onPeerDataRecv = function (a, b, c, d) {
                                this.m_PeerContainerListener && this.m_PeerContainerListener.onPeerDataPingPang && this.m_PeerContainerListener.onPeerDataPingPang(a, b, c, d)
                            }, a.prototype.onPeerConnectedDown = function (a) {
                                this.stype == zc.Down ? (this.changeConnecting2Connected(a), this.m_PeerContainerListener && this.m_PeerContainerListener.onPeerConnectSuccess && (this.m_PeerContainerListener.onPeerConnectSuccess(a.getPeerID()), hc.a.isAdPreLoading && ie.getInstance().m_ConnectedNumAdPreLoad++, ie.getInstance().m_natPunchOKCount++,
                                    ie.getInstance().m_natPunchElapse += performance.now() - this.m_punchTime)) : this.peerContainer && this.peerContainer.insertPeer2ConnectedDown(a), cc.b.info("PeerContainer peerID:" + a.getPeerID() + " connect connect successfully")
                            }, a.prototype.onPeerConnectedUp = function (a) {
                                this.stype == zc.Up ? (this.changeConnecting2Connected(a), this.m_PeerContainerListener && this.m_PeerContainerListener.onPeerConnectSuccess && this.m_PeerContainerListener.onPeerConnectSuccess(a.getPeerID())) : this.peerContainer && this.peerContainer.insertPeer2ConnectedUp(a), cc.b.info("PeerContainer peerID:" + a.getPeerID() + " connect connect successfully")
                            }, a.prototype.onPeerDisconnectedDown = function (a, b) {
                                var c = yc.Exit;
                                b && (c = yc.Refuse), this.stype == zc.Down ? (this.removeFromConnecting(a), this.addPeer2Recycle(a, c)) : this.stype == zc.Up && this.peerContainer && (this.peerContainer.removePeerFromConnectingDown(a), this.peerContainer.addPeer2RecycleDown(a, c))
                            }, a.prototype.onPeerDisconnectedUp = function (a) {
                                this.stype == zc.Up ? this.removeFromConnecting(a) : this.stype == zc.Down && this.peerContainer && this.peerContainer.removePeerFromConnectingUp(a)
                            }, a.prototype.getPeer = function (a) {
                                var b = null;
                                do {
                                    var c = this.findConnectingPeer(a);
                                    if (c == -1) {
                                        if (c = this.findConnectedPeer(a), c == -1) break;
                                        b = this.m_ConnectedPeers[c]
                                    } else b = this.m_ConnectingPeers[c]
                                } while (!1);
                                return b
                            }, a.prototype.getEstablishPeer = function (a) {
                                var b = null;
                                do {
                                    var c = this.findConnectingPeer(a);
                                    if (c == -1) {
                                        if (c = this.findConnectedPeer(a), c == -1) break;
                                        if (b = this.m_ConnectedPeers[c], b && b.isEstablishChannel()) break;
                                        b = null
                                    } else {
                                        if (b = this.m_ConnectingPeers[c], b && b.isEstablishChannel()) break;
                                        b = null
                                    }
                                } while (!1);
                                return b
                            }, a.prototype.cleanBlockPeerMap = function () {
                            }, a.prototype.eliminateConnectingPeer = function (a) {
                            }, a.prototype.eliminateConnectedPeer = function (a) {
                            }, a.prototype.eliminatePeerPool = function () {
                            }, a.prototype.getSpareCount = function () {
                                return this.m_SparePeerMap.size
                            }, a.prototype.getBlackCount = function () {
                                return this.m_BlackPeerPool.size
                            }, a.prototype.release = function () {
                                this.m_IdlePeerPool = [];
                                for (var a = 0; a < this.m_ConnectingPeers.length; a++) this.m_ConnectingPeers[a].release();
                                this.m_ConnectingPeers = [];
                                for (var b = 0; b < this.m_ConnectedPeers.length; b++) this.m_ConnectedPeers[b].release();
                                this.m_ConnectedPeers = [], this.m_PeerPoolTime = new Map, this.m_SparePeerMap = new Map, this.m_BlackPeerPool = new Map, this.m_PeerContainerListener = void 0
                            }, a.prototype.isReasonShouldAddBlack = function (a) {
                            }, a.prototype.isReasonShouldAddSpare = function (a) {
                            }, a.prototype.addPeer2Recycle = function (a, b) {
                            }, a.prototype.onRecvNoFoundDstUin = function (a) {
                                cc.b.log(this.getLogHead() + ":server no found dst_uin.  src_uin:" + msgObj.src_uin + " dst_uin:" + msgObj.dst_uin + " keyid:" + msgObj.keyid);
                                var b = this.removeFromConnectingById(a);
                                b && this.addPeer2Recycle(b, yc.PeerNoInServer)
                            }, a.prototype.onRecvBye = function (a, b) {
                                cc.b.log(this.getLogHead() + ":recv bye. src_uin:" + b.src_uin + " dst_uin:" + b.dst_uin + " reason:" + b.reason + " keyid:" + b.keyid);
                                var c = this.getPeer(b.src_uin);
                                c && this.addPeer2Recycle(c, b.reason)
                            }, a.prototype.__getOppositeSType = function (a) {
                                var b = zc.Up;
                                return a == zc.Down ? b = zc.Up : a == zc.Up && (b = zc.Down), b
                            }, a.prototype.__onRecvUinWrong = function (a, b) {
                                cc.b.log(this.getLogHead() + ":dst_uin is not same as me.  src_uin:" + b.src_uin + " dst_uin:" + b.dst_uin + " keyid:" + b.keyid);
                                var c = this.getPeer(b.src_uin);
                                c && this.addPeer2Recycle(c, yc.DstUinIsWrong);
                                var d = this.__getOppositeSType(b.stype), e = od.getInstance().getSignalServer();
                                e && e.sendBye2Client(b.src_uin, d, yc.DstUinIsWrong)
                            }, a.prototype.onRecv = function (a, b) {
                                var c = !0;
                                do {
                                    if (b.type == Zc.bye) {
                                        this.onRecvBye(a, b);
                                        break
                                    }
                                    if (b.dst_uin != _c.GetUin()) {
                                        this.__onRecvUinWrong(a, b);
                                        break
                                    }
                                    c = !1
                                } while (!1);
                                return c
                            }, a
                        }(), Xd = Wd, Yd = function (a) {
                            function b(c, d, e) {
                                return M(this, b), N(this, a.call(this, c, d, zc.Up, e))
                            }

                            return O(b, a), b.prototype.release = function () {
                                cc.b.log("PeerUpPool release."), a.prototype.release.call(this)
                            }, b.prototype.isValidMsg = function (a) {
                                return a.type == Zc.offer || a.type == Zc.candidate
                            }, b.prototype.onRecv = function (b, c) {
                                if (c) {
                                    var d = a.prototype.onRecv.call(this, b, c);
                                    if (!d && this.isValidMsg(c)) {
                                        var e = this.getPeer(c.src_uin);
                                        e || (this.peerContainer && (e = this.peerContainer.getEstablishPeerFromPeersDown(c.src_uin)), e ? cc.b.log("found peer in down queue!here is wrong logic") : e = this.createPeerConnection(c.src_uin, zc.Up), e && this.m_ConnectingPeers.push(e)), e && e.onRecv(b, c)
                                    }
                                }
                            }, b.prototype.eliminateConnectingPeer = function (a) {
                                if (0 !== this.m_ConnectingPeers.length) {
                                    for (var b = [], c = 0; c < this.m_ConnectingPeers.length; c++) {
                                        var d = this.m_ConnectingPeers[c];
                                        d.isReleased() ? b.push({
                                            peer: d,
                                            reason: yc.ConnectFailed
                                        }) : d.isConnectTimeout() && b.push({peer: d, reason: yc.ConnectTimeout})
                                    }
                                    for (var c = 0; c < b.length; c++) {
                                        var e = b[c];
                                        this.addPeer2Recycle(e.peer, e.reason), this.removeFromConnecting(e.peer)
                                    }
                                }
                            }, b.prototype.eliminateConnectedPeer = function (a) {
                                for (var b = [], c = 0; c < this.m_ConnectedPeers.length; c++) {
                                    var d = this.m_ConnectedPeers[c], e = {reason: yc.UnKnown};
                                    d && (d.isReleased() && b.push({
                                        peer: d,
                                        reason: yc.ConnectFailed
                                    }), d.canBeEliminatedUpload(e) && b.push({peer: d, reason: e.reason}))
                                }
                                for (var c = 0; c < b.length; c++) {
                                    var f = b[0], d = f.peer, g = f.reason;
                                    this.addPeer2Recycle(d, g), this.removeFromConnected(d)
                                }
                            }, b.prototype.addPeer2Recycle = function (a, b) {
                                a && (cc.b.log(this.getLogHead() + " addPeer2Recycle " + a.getPeerID() + " reason:" + b.reason + " stype:" + this.stype + " Connecting:" + this.m_ConnectingPeers.length + " Connected:" + this.m_ConnectedPeers.length + " Spare:" + this.m_SparePeerMap.size + " Black:" + this.m_BlackPeerPool.size), a.release(this.stype), this.isReasonShouldAddBlack(b) ? this.m_BlackPeerPool.set(a.getPeerID(), performance.now()) : this.isReasonShouldAddSpare(b) && this.m_SparePeerMap.set(a.getPeerID(), performance.now()))
                            }, b.prototype.isReasonShouldAddBlack = function (a) {
                                return !0
                            }, b.prototype.isReasonShouldAddSpare = function (a) {
                                return !1
                            }, b.prototype.cleanBlackPeerMap = function () {
                                for (var a = this.m_SparePeerMap.entries(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d, f = e[0];
                                    e[1];
                                    cc.b.log(this.getLogHead() + " :delete peer(" + f + ") from spareMap")
                                }
                                for (var g = this.m_BlackPeerPool.entries(), h = Array.isArray(g), i = 0, g = h ? g : g[Symbol.iterator](); ;) {
                                    var j;
                                    if (h) {
                                        if (i >= g.length) break;
                                        j = g[i++]
                                    } else {
                                        if (i = g.next(), i.done) break;
                                        j = i.value
                                    }
                                    var k = j, f = k[0];
                                    k[1];
                                    cc.b.log(this.getLogHead() + " :delete peer(" + f + ") from blackMap")
                                }
                                this.m_SparePeerMap = new Map, this.m_BlackPeerPool = new Map
                            }, b
                        }(Xd), Zd = Yd, $d = function (a) {
                            function b(c, d, e) {
                                return P(this, b), Q(this, a.call(this, c, d, zc.Down, e))
                            }

                            return R(b, a), b.prototype.connectPeer = function () {
                                for (var a = -1; this.m_IdlePeerPool.length > 0 && !(++a >= tc.a.MaxConnectPeerNumberOneTime);) {
                                    var b = this.m_IdlePeerPool.pop();
                                    this.m_PeerPoolTime["delete"](b);
                                    var c = null;
                                    this.peerContainer && (c = this.peerContainer.getPeerFromPeersUp(b), c && (cc.b.log("webrtc found peer in upload queue." + b + "."), c.downloadReq())), c || (cc.b.log("webrtc not found peer in upload queue." + b), c = this.createPeerConnection(b, zc.Down)), c && (this.m_ConnectingPeers.push(c), hc.a.isAdPreLoading && ie.getInstance().m_ConnectingNumAdPreLoad++)
                                }
                            }, b.prototype.onPeerDataRecv = function (a, b, c, d) {
                                this.m_PeerContainerListener && this.m_PeerContainerListener.onPeerDataPingPang && this.m_PeerContainerListener.onPeerDataPingPang(a, b, c, d)
                            }, b.prototype.exchangeBitmap = function (a, b) {
                                for (var c = this.m_ConnectedPeers.length, d = 0; d < c; d++) this.m_ConnectedPeers[d].sendBitmapRequest(a, b)
                            }, b.prototype.checkP2PTimeoutRequest = function () {
                                for (var a = this.m_ConnectedPeers.length, b = 0; b < a; b++) {
                                    var c = this.m_ConnectedPeers[b];
                                    c.deleteTimeoutPieces()
                                }
                            }, b.prototype.chooseBlockByPeerID = function (a, b) {
                                var c = this.findConnectedPeer(a);
                                if (!(c < 0)) {
                                    var d = this.m_ConnectedPeers[c];
                                    this.chooseBlockWithPeer(d, b)
                                }
                            }, b.prototype.choosePingPangBlockWithPeer = function (a, b, c, d) {
                                var e = this.findConnectedPeer(a);
                                if (!(e < 0)) for (var f = this.m_ConnectedPeers[e], g = b.length, h = 0; h < g && (b[h].tsIndex == c && b[h].blockID == d && b[h].pieceArray.length > 0 && f.hasBlockData(b[h].tsIndex, b[h].blockID) && this.choosePieceToDownload(f, b[h]), f.canDownload()); h++) ;
                            }, b.prototype.chooseBlockWithPeers = function (a) {
                                this.sortPeer();
                                for (var b = 0; b < this.m_ConnectedPeers.length; b++) {
                                    var c = this.m_ConnectedPeers[b];
                                    this.chooseBlockWithPeer(c, a)
                                }
                            }, b.prototype.chooseBlockWithPeer = function (a, b) {
                                for (var c = b.length, d = 0; d < c && (b[d].pieceArray.length > 0 && a.hasBlockData(b[d].tsIndex, b[d].blockID) && this.choosePieceToDownload(a, b[d]), a.canDownload()); d++) ;
                            }, b.prototype.choosePieceToDownload = function (a, b) {
                                for (; ;) {
                                    if (!a.canDownload()) break;
                                    if (0 == b.pieceArray.length) break;
                                    for (var c = b.pieceArray[0], d = a.getFreeWindowSize(), e = 0, f = b.pieceArray.length, g = 0; ; g++) {
                                        if (g == f || c + e != b.pieceArray[g] || d <= 0) {
                                            a.sendDataRequest(b.tsIndex, b.blockID, c, e), b.pieceArray.splice(0, e);
                                            break
                                        }
                                        ++e, --d
                                    }
                                }
                            }, b.prototype.sortPeer = function () {
                                this.m_ConnectedPeers.sort(this.sortPeerByQos)
                            }, b.prototype.sortPeerByQos = function (a, b) {
                                return a.getQos() < b.getQos() ? 1 : a.getQos() == b.getQos() ? 0 : -1
                            }, b.prototype.cleanBlackPeerMap = function () {
                                for (var a = this.m_SparePeerMap.entries(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d, f = e[0], g = e[1], h = performance.now();
                                    h - g > 1e3 * tc.a.PeerSpareTime && (this.m_SparePeerMap["delete"](f), cc.b.log(this.getLogHead() + " :delete peer(" + f + ") from spareMap"))
                                }
                                for (var i = this.m_BlackPeerPool.entries(), j = Array.isArray(i), k = 0, i = j ? i : i[Symbol.iterator](); ;) {
                                    var l;
                                    if (j) {
                                        if (k >= i.length) break;
                                        l = i[k++]
                                    } else {
                                        if (k = i.next(), k.done) break;
                                        l = k.value
                                    }
                                    var m = l, f = m[0], g = m[1], n = performance.now();
                                    n - g > 1e3 * tc.a.PeerBlackTime && (this.m_BlackPeerPool["delete"](f), cc.b.log(this.getLogHead() + " :delete peer(" + f + ") from blackMap"))
                                }
                            }, b.prototype.eliminateConnectingPeer = function (a) {
                                if (0 !== this.m_ConnectingPeers.length) {
                                    for (var b = [], c = 0; c < this.m_ConnectingPeers.length; c++) {
                                        var d = this.m_ConnectingPeers[c];
                                        d.isReleased() && b.push({
                                            peer: d,
                                            reason: yc.ConnectFailed
                                        }), d.isConnectTimeout() && b.push({peer: d, reason: yc.ConnectTimeout})
                                    }
                                    for (var c = 0; c < b.length; c++) {
                                        var e = b[c];
                                        this.addPeer2Recycle(e.peer, e.reason), this.removeFromConnecting(e.peer)
                                    }
                                }
                            }, b.prototype.eliminateConnectedPeer = function (a) {
                                if (a) {
                                    for (var b = [], c = 0; c < this.m_ConnectedPeers.length; c++) {
                                        var d = this.m_ConnectedPeers[c];
                                        d && d.isDownloadDead() ? b.push({
                                            peer: d,
                                            reason: yc.Timeout
                                        }) : d && d.isReleased() && b.push({peer: d, reason: yc.ConnectFailed})
                                    }
                                    if (this.m_ConnectedPeers.length - b.length > tc.a.MinPlayingConnectPeer) {
                                        this.sortPeer();
                                        for (var e = 0; e < this.m_ConnectedPeers.length; e++) {
                                            var f = this.m_ConnectedPeers[e], g = {reason: yc.UnKnown};
                                            if (f && f.canBeEliminatedDownload(g)) {
                                                b.push({peer: f, reason: g.reason});
                                                break
                                            }
                                        }
                                    }
                                    for (var e = 0; e < b.length; e++) {
                                        var h = b[e], i = h.peer, j = h.reason;
                                        this.addPeer2Recycle(i, j), this.removeFromConnected(i), cc.b.info("PeerContainer : eliminateConnectedPeer : keyID: " + this.m_KeyID + ", peerID: " + i.getPeerID())
                                    }
                                } else {
                                    if (0 === this.m_ConnectedPeers.length) return;
                                    for (var k = 0; k < this.m_ConnectedPeers.length; k++) {
                                        var l = this.m_ConnectedPeers[k];
                                        l.release(this.stype)
                                    }
                                    this.m_ConnectedPeers = []
                                }
                            }, b.prototype.eliminatePeerPool = function () {
                                for (var a = [], b = this.m_PeerPoolTime.keys(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e, g = this.m_PeerPoolTime.get(f);
                                    performance.now() - g > 1e3 * tc.a.MaxKeepPeerPoolTime && a.push(f)
                                }
                                for (; a.length > 0;) {
                                    var h = a.pop(), i = this.findPeerPool(h);
                                    i >= 0 && (this.m_IdlePeerPool.splice(i, 1), this.m_PeerPoolTime["delete"](h))
                                }
                            }, b.prototype.release = function () {
                                cc.b.log("PeerDownPool release."), a.prototype.release.call(this)
                            }, b.prototype.deleteNoUploadedPeers = function () {
                                for (var a = this.m_ConnectedPeers.length, b = 0; b < a; b++) {
                                    var c = this.m_ConnectedPeers[b];
                                    c.isNoUpload() && c.release()
                                }
                            }, b.prototype.__onRecvNotInQueue = function (a, b) {
                                cc.b.log(this.getLogHead() + ":src_uin not in queue.  src_uin:" + b.src_uin + " dst_uin:" + b.dst_uin + " keyid:" + b.keyid);
                                var c = this.__getOppositeSType(b.stype), d = od.getInstance().getSignalServer();
                                d && d.sendBye2Client(b.src_uin, c, yc.RemoteNotInQueue)
                            }, b.prototype.onRecv = function (b, c) {
                                if (c) {
                                    var d = a.prototype.onRecv.call(this, b, c);
                                    if (!d) {
                                        var e = this.getPeer(c.src_uin);
                                        return e ? void e.onRecv(b, c) : void this.__onRecvNotInQueue(b, c)
                                    }
                                }
                            }, b.prototype.__isPeerInBackOrSparePool = function (a) {
                                return !!this.m_BlackPeerPool.get(a) || (!!this.m_SparePeerMap.get(a) || void 0)
                            }, b.prototype.addPeer2Recycle = function (a, b) {
                                if (a) if (cc.b.log(this.getLogHead() + " addPeer2Recycle " + a.getPeerID() + " reason:" + b.reason + " stype:" + this.stype + " Connecting:" + this.m_ConnectingPeers.length + " Connected:" + this.m_ConnectedPeers.length + " Spare:" + this.m_SparePeerMap.size + " Black:" + this.m_BlackPeerPool.size), a.release(this.stype), this.isReasonShouldAddBlack(b)) {
                                    if (this.__isPeerInBackOrSparePool(a.getPeerID())) return;
                                    this.m_BlackPeerPool.set(a.getPeerID(), performance.now())
                                } else if (this.isReasonShouldAddSpare(b)) {
                                    if (this.__isPeerInBackOrSparePool(a.getPeerID())) return;
                                    this.m_SparePeerMap.set(a.getPeerID(), performance.now())
                                }
                            }, b.prototype.isReasonShouldAddBlack = function (a) {
                                switch (a.code) {
                                    case yc.Timeout.code:
                                    case yc.PeerNoInServer.code:
                                    case yc.ConnectTimeout.code:
                                    case yc.QosLow.code:
                                    case yc.ConnectFailed.code:
                                        return !0
                                }
                                return !1
                            }, b.prototype.isReasonShouldAddSpare = function (a) {
                                switch (a.code) {
                                    case yc.Exit.code:
                                        return !0
                                }
                                return !1
                            }, b
                        }(Xd), _d = $d, ae = function () {
                            function a(b, c) {
                                S(this, a), this.m_KeyID = b, this.m_PeerUpPool = new Zd(b, c, this), this.m_PeerDownPool = new _d(b, c, this)
                            }

                            return a.prototype.getKeyId = function () {
                                return this.m_KeyID
                            }, a.prototype.setListener = function (a) {
                                this.m_PeerUpPool && this.m_PeerUpPool.setListener(a), this.m_PeerDownPool && this.m_PeerDownPool.setListener(a)
                            }, a.prototype.getUpAndDownPeerNum = function () {
                                for (var a = 0, b = this.getPeerDownPool().m_ConnectedPeers, c = this.getPeerUploadPool().m_ConnectedPeers, d = c, e = Array.isArray(d), f = 0, d = e ? d : d[Symbol.iterator](); ;) {
                                    var g;
                                    if (e) {
                                        if (f >= d.length) break;
                                        g = d[f++]
                                    } else {
                                        if (f = d.next(), f.done) break;
                                        g = f.value
                                    }
                                    var h = g;
                                    b.indexOf(h) != -1 && a++
                                }
                                return a
                            }, a.prototype.cleanBlackPool = function () {
                                this.m_PeerDownPool && this.m_PeerDownPool.cleanBlackPeerMap(), this.m_PeerUpPool && this.m_PeerUpPool.cleanBlackPeerMap()
                            }, a.prototype.getPeerDownPool = function () {
                                return this.m_PeerDownPool
                            }, a.prototype.getPeerUploadPool = function () {
                                return this.m_PeerUpPool
                            }, a.prototype.getSpareCountDownload = function () {
                                return this.m_PeerDownPool ? this.m_PeerDownPool.getSpareCount() : 0
                            }, a.prototype.getBlackCountDownload = function () {
                                return this.m_PeerDownPool ? this.m_PeerDownPool.getBlackCount() : 0
                            }, a.prototype.getSpareCountUpload = function () {
                                return this.m_PeerUpPool ? this.m_PeerUpPool.getSpareCount() : 0
                            }, a.prototype.getBlackCountUpload = function () {
                                return this.m_PeerUpPool ? this.m_PeerUpPool.getBlackCount() : 0
                            }, a.prototype.getConnectingCountDownload = function () {
                                return this.m_PeerDownPool ? this.m_PeerDownPool.getConnectingCount() : 0
                            }, a.prototype.getConnectedCountDownload = function () {
                                return this.m_PeerDownPool ? this.m_PeerDownPool.getConnectedCount() : 0
                            }, a.prototype.getConnectingCountUpload = function () {
                                return this.m_PeerUpPool ? this.m_PeerUpPool.getConnectingCount() : 0
                            }, a.prototype.getConnectedCountUpload = function () {
                                return this.m_PeerUpPool ? this.m_PeerUpPool.getConnectedCount() : 0
                            }, a.prototype.insertPeer2ConnectedUp = function (a) {
                                this.m_PeerUpPool && this.m_PeerUpPool.changeConnecting2Connected(a)
                            }, a.prototype.insertPeer2ConnectedDown = function (a) {
                                this.m_PeerDownPool && this.m_PeerDownPool.changeConnecting2Connected(a)
                            }, a.prototype.removePeerFromConnectingUp = function (a) {
                                this.m_PeerUpPool && this.m_PeerUpPool.removeFromConnecting(a)
                            }, a.prototype.removePeerFromConnectingDown = function (a) {
                                this.m_PeerDownPool && this.m_PeerDownPool.removeFromConnecting(a)
                            }, a.prototype.addPeer2RecycleDown = function (a, b) {
                                this.m_PeerDownPool && this.m_PeerDownPool.addPeer2Recycle(a, b)
                            }, a.prototype.getEstablishPeerFromPeersDown = function (a) {
                                var b = null;
                                return this.m_PeerDownPool && (b = this.m_PeerDownPool.getEstablishPeer(a)), b
                            }, a.prototype.getEstablishPeerFromPeersUp = function (a) {
                                var b = null;
                                return this.m_PeerUpPool && (b = this.m_PeerUpPool.getEstablishPeer(a)), b
                            }, a.prototype.getPeerFromPeersUp = function (a) {
                                var b = null;
                                return this.m_PeerUpPool && (b = this.m_PeerUpPool.getPeer(a)), b
                            }, a.prototype.getPeerFromPeersDown = function (a) {
                                var b = null;
                                return this.m_PeerDownPool && (b = this.m_PeerDownPool.getPeer(a)), b
                            }, a.prototype.onRecv = function (a, b) {
                                return b ? void (b.stype == zc.Down ? this.m_PeerUpPool && this.m_PeerUpPool.onRecv(a, b) : b.stype == zc.Up && this.m_PeerDownPool && this.m_PeerDownPool.onRecv(a, b)) : null
                            }, a.prototype.eliminateConnectingPeer = function (a) {
                                this.m_PeerDownPool && this.m_PeerDownPool.eliminateConnectingPeer(a), this.m_PeerUpPool && this.m_PeerUpPool.eliminateConnectingPeer(a)
                            }, a.prototype.eliminateConnectedPeer = function (a) {
                                this.m_PeerDownPool && this.m_PeerDownPool.eliminateConnectedPeer(a), this.m_PeerUpPool && this.m_PeerUpPool.eliminateConnectedPeer(a)
                            }, a.prototype.release = function () {
                                cc.b.log("PeerContainer release."), this.m_PeerDownPool && this.m_PeerDownPool.release(), this.m_PeerUpPool && this.m_PeerUpPool.release()
                            }, a.prototype.onRecvNoFoundDstUin = function (a) {
                                var b = a.args[0], c = a.args[1], d = null;
                                try {
                                    d = JSON.parse(c)
                                } catch (e) {
                                    return
                                }
                                d.stype == zc.Down ? this.m_PeerDownPool && this.m_PeerDownPool.onRecvNoFoundDstUin(b) : d.stype == zc.Up ? this.m_PeerUpPool && this.m_PeerUpPool.onRecvNoFoundDstUin(b) : (this.m_PeerDownPool && this.m_PeerDownPool.onRecvNoFoundDstUin(b), this.m_PeerUpPool && this.m_PeerUpPool.onRecvNoFoundDstUin(b))
                            }, a
                        }(), be = ae, ce = function () {
                            function a() {
                                T(this, a), this.m_PeerContainerMap = new Map, Qd.getInstance().setPeerContainerManager(this)
                            }

                            return a.getInstance = function () {
                                return this.instance || (this.instance = new a), this.instance
                            }, a.prototype.init = function () {
                                this.m_CurrentPlayKeyID = "", this.m_EliminatePeerTimer = setInterval(this.onEliminatePeer.bind(this), hc.a.SecondTimer), cc.b.log("PeerContainerManager init.")
                            }, a.prototype.getPeerInfoStr = function () {
                                return "Connecting:[" + this.getConnectingCountDownload() + ", " + this.getConnectingCountUpload() + "] Connected:[" + this.getConnectedCountDownload() + "," + this.getConnectedCountUpload() + "] Spare:[" + this.getSpareCountDownload() + "," + this.getSpareCountUpload() + "] Black:[" + this.getBlackCountDownload() + "," + this.getBlackCountUpload() + "]"
                            }, a.prototype.__setCurrentPlayKeyID = function (a) {
                                this.m_CurrentPlayKeyID = a
                            }, a.prototype.destroy = function () {
                                cc.b.log("PeerContainerManager destroy."), Qd.getInstance().setPeerContainerManager(null);
                                for (var a = this.m_PeerContainerMap.values(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d;
                                    e.release()
                                }
                                this.m_PeerContainerMap = new Map, this.m_EliminatePeerTimer && (clearInterval(this.m_EliminatePeerTimer), this.m_EliminatePeerTimer = void 0), this.instance = void 0
                            }, a.prototype.onEliminatePeer = function () {
                                this.onCleanBlackPeerMap(), this.onEliminateConnectingPeer(), this.onEliminateConnectedPeer(), this.onEliminatePeerPool()
                            }, a.prototype.onEliminatePeerPool = function () {
                                for (var a = this.m_PeerContainerMap.values(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d;
                                    e.getPeerDownPool().eliminatePeerPool()
                                }
                            }, a.prototype.onCleanBlackPeerMap = function () {
                                for (var a = this.m_PeerContainerMap.values(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d;
                                    e.cleanBlackPool()
                                }
                            }, a.prototype.onEliminateConnectingPeer = function () {
                                if (0 !== this.m_PeerContainerMap.length) for (var a = this.m_PeerContainerMap.entries(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d, f = e[0], g = e[1];
                                    this.m_CurrentPlayKeyID === f ? g.eliminateConnectingPeer(!0) : g.eliminateConnectingPeer(!1)
                                }
                            }, a.prototype.onEliminateConnectedPeer = function () {
                                if (0 !== this.m_PeerContainerMap.length) for (var a = this.m_PeerContainerMap.entries(), b = Array.isArray(a), c = 0, a = b ? a : a[Symbol.iterator](); ;) {
                                    var d;
                                    if (b) {
                                        if (c >= a.length) break;
                                        d = a[c++]
                                    } else {
                                        if (c = a.next(), c.done) break;
                                        d = c.value
                                    }
                                    var e = d, f = e[0], g = e[1];
                                    this.m_CurrentPlayKeyID === f ? g.eliminateConnectedPeer(!0) : g.eliminateConnectedPeer(!1)
                                }
                            }, a.prototype.releaseContainer = function (a) {
                                if (this.m_PeerContainerMap && this.m_PeerContainerMap.has(a)) {
                                    var b = this.m_PeerContainerMap.get(a);
                                    b.release(), this.m_PeerContainerMap["delete"](a)
                                }
                            }, a.prototype.createPeerContainer = function (a, b) {
                                var c = null;
                                return this.__setCurrentPlayKeyID(a), this.m_PeerContainerMap.has(a) ? (c = this.m_PeerContainerMap.get(a), c.setListener(b)) : (c = new be(a, b), this.m_PeerContainerMap.set(a, c)), c
                            }, a.prototype.getAllConnectingPeerCount = function () {
                                for (var a = this.m_PeerContainerMap.keys(), b = 0, c = a, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator](); ;) {
                                    var f;
                                    if (d) {
                                        if (e >= c.length) break;
                                        f = c[e++]
                                    } else {
                                        if (e = c.next(), e.done) break;
                                        f = e.value
                                    }
                                    var g = f, h = this.m_PeerContainerMap.get(g);
                                    b += h.getPeerDownPool().getConnectingPeerLen()
                                }
                                return b
                            }, a.prototype.getAllConnectedPeerCount = function () {
                                for (var a = this.m_PeerContainerMap.keys(), b = 0, c = a, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator](); ;) {
                                    var f;
                                    if (d) {
                                        if (e >= c.length) break;
                                        f = c[e++]
                                    } else {
                                        if (e = c.next(), e.done) break;
                                        f = e.value
                                    }
                                    var g = f, h = this.m_PeerContainerMap.get(g);
                                    b += h.getPeerDownPool().getConnectedPeerLen()
                                }
                                return b
                            }, a.prototype.onRecvNoContainer = function (a, b) {
                                if (b.type == Zc.bye) {
                                    var c = Bc.getReasonStr(b.reason);
                                    b.stype == zc.Down ? cc.b.log("onRecvNoContainer type:" + b.type + " stype:" + b.stype + "  reason:" + c + " oppsite_action:" + b.stype + " oppsite_uin:" + b.src_uin + " my_uin:" + b.dst_uin + " my_uin1:" + _c.GetUin()) : b.stype == zc.Up && cc.b.log("onRecvNoContainer type:" + b.type + " stype:" + b.stype + " reason:" + c + " oppsite_action:" + b.stype + " oppsite_uin:" + b.src_uin + " my_uin:" + b.dst_uin + " my_uin1:" + _c.GetUin())
                                } else {
                                    var d = 0;
                                    d = b.stype == zc.Down ? zc.Up : zc.Down, cc.b.log("onRecvNoContainer type:" + b.type + " stype:" + b.stype + " oppsite_action:" + b.stype + " oppsite_uin:" + b.src_uin + " my_uin:" + b.dst_uin + " my_uin1:" + _c.GetUin());
                                    var e = od.getInstance().getSignalServer();
                                    e && e.sendBye2Client(b.src_uin, d, yc.KeyIdNotExsit)
                                }
                            }, a.prototype.onRecv = function (a, b) {
                                switch (b.header.cmd) {
                                    case Xc.P2P_SVR_CMD_PS_SIGNAL_RELAY:
                                        if (b.body.msg) {
                                            var c = JSON.parse(b.body.msg);
                                            if (_c.GetUin() == c.dst_uin) {
                                                var d = this.m_PeerContainerMap.get(c.keyid);
                                                d ? d.onRecv(b, c) : this.onRecvNoContainer(b, c)
                                            } else cc.b.warn("not expect pack,uin:" + c.src_uin)
                                        } else if (b.body.ret_code == Yc.RET_NOT_FIND_DSTUIN) try {
                                            var c = JSON.parse(a.args[1]), e = this.m_PeerContainerMap.get(c.keyid);
                                            e && e.onRecvNoFoundDstUin(a)
                                        } catch (f) {
                                        }
                                }
                            }, a.prototype.getSpareCountDownload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getSpareCountDownload()
                                }
                                return a
                            }, a.prototype.getBlackCountDownload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getBlackCountDownload()
                                }
                                return a
                            }, a.prototype.getSpareCountUpload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getSpareCountUpload()
                                }
                                return a
                            }, a.prototype.getBlackCountUpload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getBlackCountUpload()
                                }
                                return a
                            }, a.prototype.getConnectingCountDownload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getConnectingCountDownload()
                                }
                                return a
                            }, a.prototype.getConnectedCountDownload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getConnectedCountDownload()
                                }
                                return a
                            }, a.prototype.getConnectingCountUpload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getConnectingCountUpload()
                                }
                                return a
                            }, a.prototype.getConnectedCountUpload = function () {
                                for (var a = 0, b = this.m_PeerContainerMap.values(), c = Array.isArray(b), d = 0, b = c ? b : b[Symbol.iterator](); ;) {
                                    var e;
                                    if (c) {
                                        if (d >= b.length) break;
                                        e = b[d++]
                                    } else {
                                        if (d = b.next(), d.done) break;
                                        e = d.value
                                    }
                                    var f = e;
                                    a += f.getConnectedCountUpload()
                                }
                                return a
                            }, a.prototype.getPeerNumForReport = function (a) {
                                var b = {
                                    upAndDown: 0,
                                    upAll: 0,
                                    upCur: 0,
                                    downCurIdle: 0,
                                    downCurConnecting: 0,
                                    downCurConnected: 0,
                                    upOther: 0
                                };
                                b.upAll = this.getConnectedCountUpload();
                                for (var c = this.m_PeerContainerMap.values(), d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator](); ;) {
                                    var f;
                                    if (d) {
                                        if (e >= c.length) break;
                                        f = c[e++]
                                    } else {
                                        if (e = c.next(), e.done) break;
                                        f = e.value
                                    }
                                    var g = f;
                                    this.m_CurrentPlayKeyID != g.getKeyId() ? b.upOther += g.getConnectedCountUpload() : (b.upAndDown = g.getUpAndDownPeerNum(), b.downCurConnecting = g.getPeerDownPool().getConnectingCount(), b.downCurConnected = g.getPeerDownPool().getConnectedCount(), b.downCurIdle = g.getPeerDownPool().getPeerPoolLen())
                                }
                                return b.upCur = b.upAll - b.upOther, b
                            }, a
                        }(), de = ce, ee = function () {
                            function a() {
                                U(this, a)
                            }

                            return a.getInstance = function () {
                                return void 0 == a.instance && (a.instance = new a), a.instance
                            }, a.prototype.postLog = function (a) {
                                return !(!cc.b.setdata || !cc.b.postdata) && (cc.b.setdata("errorcode", a), cc.b.postdata(a), !0)
                            }, a
                        }(), fe = ee, ge = {
                            SUCCEED: 0,
                            NOT_USE_P2P: 1,
                            NOT_P2P_Flow: 2,
                            PS_LOGIN_FAIL: 3,
                            PUNCH_FAILED: 4,
                            TPT_NOT_GOT: 5,
                            SEED_NOT_FOUND: 6,
                            WIFI_OFF: 7,
                            VINFO_NOT_P2P: 8,
                            ADV_DRIVE_P2P: 9,
                            RTC_NOT_SUP: 21,
                            RTC_CALL_FAIL: 22,
                            P2P_CLOSE_ONE_VID: 23,
                            P2P_CLOSE_ALWAYS: 24,
                            MACHINEID_DIFF: 25
                        }, he = function () {
                            function a() {
                                V(this, a), this.initDataCollection()
                            }

                            return a.getInstance = function () {
                                return this.instance || (this.instance = new a), this.instance
                            }, a.prototype.destroy = function () {
                                this.m_ReportTimer && (clearInterval(this.m_ReportTimer), this.m_ReportTimer = void 0), this.reportAtLast(), this.m_IsCharge = !1, this.m_KeyID = "", this.m_IsUseP2P = !1
                            }, a.prototype.initDataCollection = function () {
                                this.m_ReportInterval = tc.a.ReportInterval, this.m_IsCharge = !1, this.m_KeyID = "", this.m_IsUseP2P = !0, this.m_CDNDownloadBytes = 0, this.m_P2PDownloadBytes = 0, this.m_P2PUploadBytes = 0, this.m_HttpRepeatByte = 0, this.m_P2PRepeatBytes = 0, this.m_BitmapReqCount = 0, this.m_BitmapRspCount = 0, this.m_DataReqCount = 0, this.m_DataRspCount = 0, this.m_QrySeedTimes = 0, this.m_QrySeedOkTimes = 0, this.m_HasSeedTimes = 0, this.m_CheckSuccTimes = 0, this.m_CheckFailTimes = 0, this.m_DataRspFailedCount = 0, this.m_ParseFailTimes = 0, this.m_AvgSpeedInHttpCheckInterval = 0, this.m_HttpCheckInterval = 0, this.m_LastCheckCDNLoadBytes = 0, this.m_speedArray = [], this.m_LastCheckP2PLoadBytes = 0, this.m_AvgSpeedInP2P = 0, this.m_NewestConnectCDNSpan = 0, this.m_ConnectCDNSpanDelta = 0, this.m_ConnectCDNAvarageSpan = 0, this.m_CDNConnectTotalTime = 0, this.m_CDNConnectFailedTime = 0, this.m_CDNDownloadTime = 0, this.m_CDNDownSpeedDelta = 0, this.m_ValidDataRspCount = 0, this.m_RedundancyDataCount = 0, this.m_TotalCacheSize = 0, this.m_VodMaxCacheSize = tc.a.MaxCacheSize, this.m_PSIsLogin = !1, this.m_isGotTPT = !1, this.m_SupportWebRtc = 0, this.m_playerRemainTime = 0, this.m_playableTime = 0, this.m_m3u8Span = 0, this.m_playspan = 0, this.m_playspanFromOuter = 0, this.m_TrafficStats = new xc, this.m_BitrateLatest = [], this.resetPunchData(), this.m_connectElapseSum = 0, this.m_fristRecvElapseSum = 0, this.m_totalRecvElapseSum = 0, this.m_tsCount = 0, this.lowSpeedAndSwitchUrlTimes = 0, this.totalDuration = 0, this.vip = 0, void 0 === this.m_ReportTimer && (this.m_ReportTimer = setInterval(this.onReportSchedule.bind(this), hc.a.SecondTimer)), this.m_P2PDownloadBytesAdPreLoad = 0, this.m_AdPreLoadSpan = 0, this.m_ConnectedNumAdPreLoad = 0, this.m_ConnectingNumAdPreLoad = 0, this.m_AdPreLoadNum = 0, this.m_PlayTime = 0, this.m_PauseTime = 0, this.m_DfRate = 0, this.m_quic = {
                                    ua: "",
                                    connect_time: "",
                                    down_speed: "",
                                    start_play_cost: "",
                                    is_xhr: "",
                                    ver: "",
                                    stgwpt: "videoh5",
                                    quic: 0,
                                    keyid: "",
                                    flowid: 0,
                                    cookie: "",
                                    length: 0,
                                    tcpinfo: ""
                                }, this.m_hasPostPlaySpan = !1, this.m_isquic = !1, this.m_hasPostQuic = !1, this.m_hasPostIsQuic = !1, this.m_hasSetQuicInfo = !1, this.m_dropFrameCount = 0, this.m_noDropFrameCount = 0, this.isVideoIn = !1, this.isAdInsert = !1, this.isVideoInTSDiff = !1
                            }, a.prototype.resetQuic = function () {
                                this.m_quic = {
                                    ua: "",
                                    connect_time: "",
                                    down_speed: "",
                                    start_play_cost: "",
                                    is_xhr: "",
                                    ver: "",
                                    stgwpt: "videoh5",
                                    quic: 0,
                                    keyid: "",
                                    flowid: 0,
                                    cookie: "",
                                    length: 0,
                                    tcpinfo: ""
                                }
                            }, a.prototype.updateLatestBitrate = function (a) {
                                this.m_BitrateLatest.length >= tc.a.MaxLastBitrateCount && this.m_BitrateLatest.shift(), this.m_BitrateLatest.push(a)
                            }, a.prototype.getAvgBitrate = function () {
                                var a = this.m_BitrateLatest.length;
                                if (0 == a) return 0;
                                for (var b = 0, c = 0; c < a; c++) b += this.m_BitrateLatest[c];
                                return b / a
                            }, a.prototype.getP2PInfoStr = function () {
                                var a = 1 * this.m_realTimeP2P / 1024 / 1024, b = this.m_P2PDownloadBytes / 1024,
                                    c = 100 * this.m_P2PDownloadBytes / (this.m_P2PDownloadBytes + this.m_CDNDownloadBytes),
                                    d = 1 * this.m_realTimeHttp / 1024 / 1024, e = this.m_CDNDownloadBytes / 1024,
                                    f = this.m_P2PUploadBytes / 1024 / 1024, g = 0, h = 0;
                                return 0 != this.m_DataReqCount && (g = 100 * (this.m_DataReqCount - this.m_ValidDataRspCount) / this.m_DataReqCount), 0 != this.m_DataRspCount && (h = this.m_RedundancyDataCount / this.m_DataRspCount), "speed:[" + d.toFixed(2) + "," + a.toFixed(2) + "] downflux:[" + e.toFixed(2) + "," + b.toFixed(2) + "] uploadFlux:" + f.toFixed(2) + " p2pscore:" + c.toFixed(2) + " loss:" + g.toFixed(2) + "% repeat:" + 100 * h + "%"
                            }, a.prototype.onReportSchedule = function () {
                                this.calRealTimeSpeed(), 0 === this.m_ReportInterval-- && (this.m_ReportInterval = tc.a.ReportInterval, this.report()), 0 === this.m_HttpCheckInterval-- && (this.m_HttpCheckInterval = tc.a.HttpCheckInterval, this.calcCheckSpeed())
                            }, a.prototype.calcCheckSpeed = function () {
                                var a = this.m_CDNDownloadBytes - this.m_LastCheckCDNLoadBytes;
                                if (this.m_AvgSpeedInHttpCheckInterval = a / tc.a.HttpCheckInterval, this.m_LastCheckCDNLoadBytes = this.m_CDNDownloadBytes, this.m_speedArray.length >= 12 && this.m_speedArray.splice(0, 1), this.m_speedArray.push(this.m_AvgSpeedInHttpCheckInterval), tc.a.IsStartP2P) {
                                    var b = this.m_P2PDownloadBytes - this.m_LastCheckP2PLoadBytes;
                                    this.m_AvgSpeedInP2P = b / tc.a.HttpCheckInterval, this.m_LastCheckP2PLoadBytes = this.m_P2PDownloadBytes
                                }
                            }, a.prototype.getSpeedArrayStr = function () {
                                for (var a = "speed:", b = 0; b < this.m_speedArray.length; b++) a += this.m_speedArray[b] + " ";
                                return a
                            }, a.prototype.getRealHttpSpeed = function () {
                                return this.m_realTimeHttp
                            }, a.prototype.getRealP2PSpeed = function () {
                                return this.m_realTimeP2P
                            }, a.prototype.report = function () {
                                var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : mc.ReportStep_Period,
                                    b = {};
                                b.keyID = this.m_KeyID, b.isCharge = this.m_IsCharge, b.vip = this.vip;
                                var c = this.m_TrafficStats.updateTraffic(this.m_CDNDownloadBytes, this.m_P2PDownloadBytes, this.m_P2PUploadBytes, this.m_HttpRepeatByte, this.m_P2PRepeatBytes, this.m_BitmapReqCount, this.m_BitmapRspCount, this.m_DataReqCount, this.m_DataRspCount, this.m_QrySeedTimes, this.m_QrySeedOkTimes, this.m_HasSeedTimes, this.m_CheckSuccTimes, this.m_CheckFailTimes, this.m_DataRspFailedCount, this.m_ParseFailTimes, this.m_P2PDownloadBytesAdPreLoad, this.m_AdPreLoadSpan, this.m_ConnectedNumAdPreLoad, this.m_ConnectingNumAdPreLoad, this.m_AdPreLoadNum, this.m_PlayTime, this.m_PauseTime);
                                b.step = a, b.http = c.m_HttpLoad, b.httpSpeedAvg = c.m_HttpSpeedAvg, b.httpRepeated = c.m_HttpRepeat, b.qrySeedTimes = c.m_QrySeedTimes, b.qrySeedOkTimes = c.m_QrySeedOkTimes, b.hasSeedTimes = c.m_HasSeedTimes, b.p2p = c.m_P2PLoad, b.upload = c.m_P2PUpload, b.p2pSpeedAvg = c.m_P2PSpeedAvg, b.uploadSpeedAvg = c.m_UploadSpeedAvg, b.p2pRepeated = c.m_P2PRepeat, b.httpSpeed = this.m_realTimeHttp, b.p2pSpeed = this.m_realTimeP2P, b.uploadSpeed = this.m_realTimeP2PUpload, b.totalCacheSize = parseInt(this.m_TotalCacheSize / 1024 / 1024), b.vodMaxCacheSize = parseInt(this.m_VodMaxCacheSize / 1024 / 1024), b.parseDataFailedTimes = c.m_ParseFailTimes, b.playerRemainTime = this.m_playerRemainTime, b.playableTime = this.m_playableTime, b.dataReqCount = c.m_P2PDataReqCount, b.dataRspCount = c.m_P2PDataRspCount, b.bitmapReqCount = c.m_BitmapReqCount, b.bitmapRspCount = c.m_BitmapRspCount;
                                var d = de.getInstance().getPeerNumForReport();
                                b.peerPoolSize = d.downCurIdle, b.connectedPeerNum = d.downCurConnected, b.connectingPeerNum = d.downCurConnecting, b.uploadPeerNum = d.upOther, b.nat5PeerNum = d.upAndDown,
                                    b.nat4PeerNum = d.upAll, b.nat3PeerNum = d.upCur, this.m_peerPoolSize = d.downCurIdle + d.downCurConnected + d.downCurConnecting, b.p2pFlag = this.getP2PFlag(), b.checkFailTimes = c.m_CheckFailTimes, b.checkSuccTimes = c.m_CheckSuccTimes, b.dataRspFailedCount = c.m_DataRspFailedCount, b.nat0PunchCount = this.m_natPunchCount, b.nat0PunchOkCount = this.m_natPunchOKCount, b.nat0PunchElapse = this.m_natPunchElapse, b.peerChannelNum0 = this.recvAnswerTimes, b.peerChannelNum1 = this.recvICEPublicAddrTimes, b.peerChannelNum2 = this.recvCandidateTimes, b.peerChannelNum3 = this.recvAnswerButRejectTimes, this.resetPunchData();
                                var e = this.getAvgElapse();
                                b.nat1PunchElapse = e.connect, b.nat2PunchElapse = e.first, b.nat3PunchElapse = e.total, b.nat4PunchElapse = this.m_m3u8Span, b.nat5PunchElapse = this.m_playspan;
                                var f = !1;
                                this.m_hasPostPlaySpan ? (b.nat4PunchElapse = void 0, b.nat5PunchElapse = void 0) : (b.nat4PunchElapse = this.m_m3u8Span, b.nat5PunchElapse = this.m_playspan), this.m_hasPostIsQuic ? (f = void 0, b.processMode = 0) : (f = this.m_isquic, b.processMode = f ? 2 : 1), this.m_hasPostPlaySpan = !0, this.m_hasPostIsQuic = !0, this.m_m3u8Span = void 0, this.m_playspan = void 0, b.offlineTaskNum = this.lowSpeedAndSwitchUrlTimes, this.lowSpeedAndSwitchUrlTimes = 0, b.totalDuration = this.totalDuration;
                                var g = c.m_P2PDownloadBytesAdPreLoad, h = c.m_AdPreLoadSpan, i = c.m_ConnectedNumAdPreLoad,
                                    j = c.m_ConnectingNumAdPreLoad, k = c.m_AdPreLoadNum, l = c.m_PlayTime,
                                    m = c.m_PauseTime;
                                b.pktLimitCountStaticSpeed = this.m_dropFrameCount, this.m_dropFrameCount = 0, b.pktLimitCountDynamicSpeed = this.m_noDropFrameCount, this.m_noDropFrameCount = 0, b.pktLimitCountTimeStamp = tc.a.DropFrameSpan, b.uploadDynamicAvgSpeedKB = tc.a.DropFramePercent;
                                var n = {
                                    p2pDownloadBytesAdPreLoad: g,
                                    adPreLoadSpan: h,
                                    connectedNumAdPreLoad: i,
                                    connectingNumAdPreLoad: j,
                                    adPreLoadNum: k,
                                    playTime: l,
                                    pauseTime: m,
                                    isQuic: f
                                };
                                a == mc.ReportStep_TaskStop && (n.IsVideoIn = this.isVideoIn, n.IsADMid = this.isAdInsert, n.IsConsistency = !this.isVideoInTSDiff), b.flowInterrupt = this.m_DfRate, b.extInfo = JSON.stringify(n), sc.getInstance().reportBossSys(b), this.printReportInfo(b), b.http >= tc.a.HttpFluxInvalid && fe.getInstance().postLog(1001)
                            }, a.prototype.printReportInfo = function (a) {
                                cc.b.info("DataCollection : printReportInfo :\n" + ("P2PVersion=" + hc.a.P2PVersion + "\n") + ("osVer=" + hc.a.osVer + "\n") + ("guid=" + hc.a.guid + "\n") + ("broVer=" + hc.a.broVer + "\n") + ("platform=" + hc.a.platform + "\n") + ("qq=" + hc.a.qq + "\n") + ("wx=" + hc.a.wx + "\n") + ("keyID=" + a.keyID + "\n") + ("isCharge=" + a.isCharge + "\n") + ("p2pFlag=" + a.p2pFlag + "\n") + ("http=" + a.http + "\n") + ("httpSpeed=" + a.httpSpeed / 1024 + " KB/s\n") + ("httpSpeedAvg=" + a.httpSpeedAvg / 1024 + " KB/s\n"))
                            }, a.prototype.reportAtLast = function () {
                            }, a.prototype.setKeyID = function (a) {
                                this.m_KeyID = a
                            }, a.prototype.setIsCharge = function (a) {
                                this.m_IsCharge = a
                            }, a.prototype.setIsUseP2P = function (a) {
                                this.m_IsUseP2P = a
                            }, a.prototype.setSupportWebRTC = function (a) {
                                this.m_SupportWebRtc = a
                            }, a.prototype.querySeedTimePlus = function () {
                                this.m_QrySeedTimes++
                            }, a.prototype.querySeedSucceedTimePlus = function () {
                                this.m_QrySeedOkTimes++
                            }, a.prototype.hasSeedTimePlus = function () {
                                this.m_HasSeedTimes++
                            }, a.prototype.getP2PFlag = function () {
                                return 1 == hc.a.stopP2PValue ? ge.P2P_CLOSE_ONE_VID : 2 == hc.a.stopP2PValue ? ge.P2P_CLOSE_ALWAYS : tc.a.IsStartP2P ? this.m_IsUseP2P ? 0 != this.m_SupportWebRtc ? this.m_SupportWebRtc : this.m_PSIsLogin ? this.m_isGotTPT ? this.m_peerPoolSize <= 0 ? ge.SEED_NOT_FOUND : ge.SUCCEED : ge.TPT_NOT_GOT : ge.PS_LOGIN_FAIL : ge.NOT_P2P_Flow : ge.NOT_USE_P2P
                            }, a.prototype.calRealTimeSpeed = function () {
                                var a = this.m_TrafficStats.updateTrafficForRealTimeSpeed(this.m_CDNDownloadBytes, this.m_P2PDownloadBytes, this.m_P2PUploadBytes);
                                this.m_realTimeHttp = a.http, this.m_realTimeP2P = a.p2p, this.m_realTimeP2PUpload = a.p2pUpload
                            }, a.prototype.setPSLogin = function (a) {
                                this.m_PSIsLogin = a
                            }, a.prototype.resetPunchData = function () {
                                this.m_natPunchCount = 0, this.m_natPunchOKCount = 0, this.m_natPunchElapse = 0, this.recvAnswerTimes = 0, this.recvCandidateTimes = 0, this.recvICEPublicAddrTimes = 0, this.recvAnswerButRejectTimes = 0
                            }, a.prototype.addTsElapse = function (a, b, c) {
                                this.m_connectElapseSum += parseFloat(a), this.m_fristRecvElapseSum += parseFloat(b), this.m_totalRecvElapseSum += parseFloat(c), this.m_tsCount++
                            }, a.prototype.getAvgElapse = function () {
                                var a = {
                                    connect: this.m_connectElapseSum / this.m_tsCount,
                                    first: this.m_fristRecvElapseSum / this.m_tsCount,
                                    total: this.m_totalRecvElapseSum / this.m_tsCount
                                };
                                return this.m_connectElapseSum = 0, this.m_fristRecvElapseSum = 0, this.m_totalRecvElapseSum = 0, this.m_tsCount = 0, a
                            }, a.prototype.setTotalDuration = function (a) {
                                this.totalDuration = a
                            }, a.prototype.setLastWebSocketErrorInfo = function (a) {
                                this.lastWebSocketErrorInfo = a
                            }, a.prototype.setLastTPTErrorInfo = function (a) {
                                this.lastTPTErrorInfo = a
                            }, a.prototype.setVip = function (a) {
                                this.vip = a
                            }, a.prototype.setDropFrameRate = function (a) {
                                this.m_DfRate = a
                            }, a.prototype.getDropFrameRate = function () {
                                return this.m_DfRate
                            }, a.prototype.getAvgHttpSpeed = function () {
                                return this.m_AvgSpeedInHttpCheckInterval
                            }, a.prototype.getAvgP2PSpeed = function () {
                                return this.m_AvgSpeedInP2P
                            }, a.prototype.getPeerPoolSize = function () {
                                return this.m_peerPoolSize
                            }, a.prototype.reportQuic1 = function () {
                                this.m_hasSetQuicInfo && 0 == this.m_post2QuicServer && (void 0 == this.m_playspanFromOuter && (this.m_playspanFromOuter = 0), this.m_quic.start_play_cost = parseInt(this.m_playspanFromOuter), sc.getInstance().dataForServer("http://tgwsc.qq.com/video_velocity.html", this.m_quic), this.m_post2QuicServer = !0)
                            }, a.prototype.reportQuic = function (a, b, c, d, e, f, g, h, i, j) {
                                this.m_post2QuicServer || e && "" == a || (e || "" == a) && (this.m_quic.cookie = a, this.m_quic.ua = Jc.a.GetUA(), void 0 == this.m_playspan && (this.m_playspan = 0), void 0 == this.m_playspanFromOuter && (this.m_playspanFromOuter = 0), this.m_quic.start_play_cost = parseInt(this.m_playspanFromOuter), this.m_quic.connect_time = b, this.m_quic.down_speed = c, this.m_quic.is_xhr = d, this.m_quic.ver = hc.a.P2PVersion, this.m_quic.quic = e, this.m_quic.keyid = f, this.m_quic.flowid = hc.a.flowid, this.m_quic.x_server_ip = g.serverIP || "", this.m_quic.x_client_ip = g.clientIP || "", this.m_quic.domain = Jc.a.getDomainFromUrl(g.url) || "", this.m_quic.length = h, this.m_quic.tcpinfo = i, this.m_quic.tscost = parseInt(j), this.m_hasSetQuicInfo = !0, 0 != this.m_quic.start_play_cost && (sc.getInstance().dataForServer("http://tgwsc.qq.com/video_velocity.html", this.m_quic), this.m_post2QuicServer = !0))
                            }, a
                        }(), ie = he, je = c(45), ke = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), le = function () {
                            function a() {
                                W(this, a), this.method = null, this.key = null, this.iv = null, this._uri = null
                            }

                            return ke(a, [{
                                key: "uri", get: function () {
                                    return !this._uri && this.reluri && (this._uri = _b.a.buildAbsoluteURL(this.baseuri, this.reluri, {alwaysNormalize: !0})), this._uri
                                }
                            }]), a
                        }(), me = le, ne = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), oe = function () {
                            function a() {
                                var b;
                                X(this, a), this._url = null, this._byteRange = null, this._decryptdata = null, this.tagList = [], this._elementaryStreams = (b = {}, b[a.ElementaryStreamTypes.AUDIO] = !1, b[a.ElementaryStreamTypes.VIDEO] = !1, b)
                            }

                            return a.prototype.addElementaryStream = function (a) {
                                this._elementaryStreams[a] = !0
                            }, a.prototype.hasElementaryStream = function (a) {
                                return this._elementaryStreams[a] === !0
                            }, a.prototype.createInitializationVector = function (a) {
                                for (var b = new Uint8Array(16), c = 12; c < 16; c++) b[c] = a >> 8 * (15 - c) & 255;
                                return b
                            }, a.prototype.fragmentDecryptdataFromLevelkey = function (a, b) {
                                var c = a;
                                return a && a.method && a.uri && !a.iv && (c = new me, c.method = a.method, c.baseuri = a.baseuri, c.reluri = a.reluri, c.iv = this.createInitializationVector(b)), c
                            }, ne(a, [{
                                key: "url", get: function () {
                                    return !this._url && this.relurl && (this._url = _b.a.buildAbsoluteURL(this.baseurl, this.relurl, {alwaysNormalize: !0})), this._url
                                }, set: function (a) {
                                    this._url = a
                                }
                            }, {
                                key: "programDateTime", get: function () {
                                    return !this._programDateTime && this.rawProgramDateTime && (this._programDateTime = new Date(Date.parse(this.rawProgramDateTime))), this._programDateTime
                                }
                            }, {
                                key: "byteRange", get: function () {
                                    if (!this._byteRange && !this.rawByteRange) return [];
                                    if (this._byteRange) return this._byteRange;
                                    var a = [];
                                    if (this.rawByteRange) {
                                        var b = this.rawByteRange.split("@", 2);
                                        if (1 === b.length) {
                                            var c = this.lastByteRangeEndOffset;
                                            a[0] = c || 0
                                        } else a[0] = parseInt(b[1]);
                                        a[1] = parseInt(b[0]) + a[0], this._byteRange = a
                                    }
                                    return a
                                }
                            }, {
                                key: "byteRangeStartOffset", get: function () {
                                    return this.byteRange[0]
                                }
                            }, {
                                key: "byteRangeEndOffset", get: function () {
                                    return this.byteRange[1]
                                }
                            }, {
                                key: "decryptdata", get: function () {
                                    return this._decryptdata || (this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn)), this._decryptdata
                                }
                            }, {
                                key: "encrypted", get: function () {
                                    return !(!this.decryptdata || null === this.decryptdata.uri || null !== this.decryptdata.key)
                                }
                            }], [{
                                key: "ElementaryStreamTypes", get: function () {
                                    return {AUDIO: "audio", VIDEO: "video"}
                                }
                            }]), a
                        }(), pe = oe, qe = /^(\d+)x(\d+)$/, re = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g, se = function () {
                            function a(b) {
                                Y(this, a), "string" == typeof b && (b = a.parseAttrList(b));
                                for (var c in b) b.hasOwnProperty(c) && (this[c] = b[c])
                            }

                            return a.prototype.decimalInteger = function (a) {
                                var b = parseInt(this[a], 10);
                                return b > Number.MAX_SAFE_INTEGER ? 1 / 0 : b
                            }, a.prototype.hexadecimalInteger = function (a) {
                                if (this[a]) {
                                    var b = (this[a] || "0x").slice(2);
                                    b = (1 & b.length ? "0" : "") + b;
                                    for (var c = new Uint8Array(b.length / 2), d = 0; d < b.length / 2; d++) c[d] = parseInt(b.slice(2 * d, 2 * d + 2), 16);
                                    return c
                                }
                                return null
                            }, a.prototype.hexadecimalIntegerAsNumber = function (a) {
                                var b = parseInt(this[a], 16);
                                return b > Number.MAX_SAFE_INTEGER ? 1 / 0 : b
                            }, a.prototype.decimalFloatingPoint = function (a) {
                                return parseFloat(this[a])
                            }, a.prototype.enumeratedString = function (a) {
                                return this[a]
                            }, a.prototype.decimalResolution = function (a) {
                                var b = qe.exec(this[a]);
                                if (null !== b) return {width: parseInt(b[1], 10), height: parseInt(b[2], 10)}
                            }, a.parseAttrList = function (a) {
                                var b = void 0, c = {};
                                for (re.lastIndex = 0; null !== (b = re.exec(a));) {
                                    var d = b[2], e = '"';
                                    0 === d.indexOf(e) && d.lastIndexOf(e) === d.length - 1 && (d = d.slice(1, -1)), c[b[1]] = d
                                }
                                return c
                            }, a
                        }(), te = se, ue = {
                            audio: {
                                a3ds: !0,
                                "ac-3": !0,
                                "ac-4": !0,
                                alac: !0,
                                alaw: !0,
                                dra1: !0,
                                "dts+": !0,
                                "dts-": !0,
                                dtsc: !0,
                                dtse: !0,
                                dtsh: !0,
                                "ec-3": !0,
                                enca: !0,
                                g719: !0,
                                g726: !0,
                                m4ae: !0,
                                mha1: !0,
                                mha2: !0,
                                mhm1: !0,
                                mhm2: !0,
                                mlpa: !0,
                                mp4a: !0,
                                "raw ": !0,
                                Opus: !0,
                                samr: !0,
                                sawb: !0,
                                sawp: !0,
                                sevc: !0,
                                sqcp: !0,
                                ssmv: !0,
                                twos: !0,
                                ulaw: !0
                            },
                            video: {
                                avc1: !0,
                                avc2: !0,
                                avc3: !0,
                                avc4: !0,
                                avcp: !0,
                                drac: !0,
                                dvav: !0,
                                dvhe: !0,
                                encv: !0,
                                hev1: !0,
                                hvc1: !0,
                                mjp2: !0,
                                mp4v: !0,
                                mvc1: !0,
                                mvc2: !0,
                                mvc3: !0,
                                mvc4: !0,
                                resv: !0,
                                rv60: !0,
                                s263: !0,
                                svc1: !0,
                                svc2: !0,
                                "vc-1": !0,
                                vp08: !0,
                                vp09: !0
                            }
                        }, ve = function () {
                            function a() {
                                aa(this, a)
                            }

                            return a.parseUrl = function (b) {
                                if (!b || 0 == b.length) return null;
                                var c = /^(https|http)?:\/\/([^\/:]+):?(\d+)?(\/.+)+\?(.*)$/, d = {}, e = b.match(c);
                                if (null != e && e.length > 4) {
                                    d.protocol = e[1], d.host = e[2], d.port = void 0 == e[3] ? a.GetDefaultPort(d.protocol) : e[3], d.path = e[4], d.filename = null, d.params = {};
                                    var f = e[5];
                                    if (f) {
                                        f = f.split("&");
                                        for (var g = 0; g < f.length; g++) {
                                            var h = f[g].split("=");
                                            2 == h.length && (d.params[h[0]] = h[1])
                                        }
                                    }
                                }
                                return d
                            }, a.GetDefaultPort = function (a) {
                                switch (a) {
                                    case"http":
                                        return 80;
                                    case"https":
                                        return 443;
                                    default:
                                        return 443
                                }
                            }, a
                        }(), we = ve, xe = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g, ye = /#EXT-X-MEDIA:(.*)/g,
                        ze = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)(\S+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""), "g"),
                        Ae = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)(.*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/,
                        Be = function () {
                            function a() {
                                ba(this, a)
                            }

                            return a.findGroup = function (a, b) {
                                if (!a) return null;
                                for (var c = null, d = 0; d < a.length; d++) {
                                    var e = a[d];
                                    e.id === b && (c = e)
                                }
                                return c
                            }, a.convertAVC1ToAVCOTI = function (a) {
                                var b = void 0, c = a.split(".");
                                return c.length > 2 ? (b = c.shift() + ".", b += parseInt(c.shift()).toString(16), b += ("000" + parseInt(c.shift()).toString(16)).substr(-4)) : b = a, b
                            }, a.resolve = function (a, b) {
                                return _b.a.buildAbsoluteURL(b, a, {alwaysNormalize: !0})
                            }, a.parseMasterPlaylist = function (b, c) {
                                function d(a, b) {
                                    ["video", "audio"].forEach(function (c) {
                                        var d = a.filter(function (a) {
                                            return Z(a, c)
                                        });
                                        if (d.length) {
                                            var e = d.filter(function (a) {
                                                return 0 === a.lastIndexOf("avc1", 0) || 0 === a.lastIndexOf("mp4a", 0)
                                            });
                                            b[c + "Codec"] = e.length > 0 ? e[0] : d[0], a = a.filter(function (a) {
                                                return d.indexOf(a) === -1
                                            })
                                        }
                                    }), b.unknownCodecs = a
                                }

                                var e = [], f = void 0;
                                for (xe.lastIndex = 0; null != (f = xe.exec(b));) {
                                    var g = {}, h = g.attrs = new te(f[1]);
                                    g.url = a.resolve(f[2], c);
                                    var i = h.decimalResolution("RESOLUTION");
                                    i && (g.width = i.width, g.height = i.height), g.bitrate = h.decimalInteger("AVERAGE-BANDWIDTH") || h.decimalInteger("BANDWIDTH"), g.name = h.NAME, d([].concat((h.CODECS || "").split(/[ ,]+/)), g), g.videoCodec && g.videoCodec.indexOf("avc1") !== -1 && (g.videoCodec = a.convertAVC1ToAVCOTI(g.videoCodec)), e.push(g)
                                }
                                return e
                            }, a.parseMasterPlaylistMedia = function (b, c, d) {
                                var e = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [], f = void 0,
                                    g = [], h = 0;
                                for (ye.lastIndex = 0; null !== (f = ye.exec(b));) {
                                    var i = {}, j = new te(f[1]);
                                    if (j.TYPE === d) {
                                        if (i.groupId = j["GROUP-ID"], i.name = j.NAME, i.type = d, i["default"] = "YES" === j.DEFAULT, i.autoselect = "YES" === j.AUTOSELECT, i.forced = "YES" === j.FORCED, j.URI && (i.url = a.resolve(j.URI, c)), i.lang = j.LANGUAGE, i.name || (i.name = i.lang), e.length) {
                                            var k = a.findGroup(e, i.groupId);
                                            i.audioCodec = k ? k.codec : e[0].codec
                                        }
                                        i.id = h++, g.push(i)
                                    }
                                }
                                return g
                            }, a.getUrlValue = function (a, b) {
                                for (var c = 0; c < a.length; c++) {
                                    a[c];
                                    if (void 0 !== a[c] && a[c].indexOf(b + "=") !== -1) return a[c].substring(b.length + 1)
                                }
                                return 0
                            }, a.parseLevelPlaylist = function (b, c, d, e, f) {
                                var g = 0, h = 0, i = {
                                    type: null,
                                    version: null,
                                    url: c,
                                    fragments: [],
                                    live: !0,
                                    startSN: 0,
                                    discontinuityTimeRanges: []
                                }, j = new me, k = 0, l = null, m = new pe, n = void 0, o = void 0;
                                ze.lastIndex = 0;
                                for (var p = !1, q = void 0; null !== (n = ze.exec(b));) {
                                    var r = n[1];
                                    if (r) {
                                        m.duration = parseFloat(r);
                                        var s = (" " + n[2]).slice(1);
                                        m.title = s || null, m.tagList.push(s ? ["INF", r, s] : ["INF", r])
                                    } else if (n[3]) {
                                        if (!isNaN(m.duration)) {
                                            var t = g++;
                                            m.type = e, m.start = h, m.levelkey = j, m.sn = t, m.level = d, m.cc = k, m.urlId = f, m.baseurl = c;
                                            var u = (" " + n[3]).slice(1);
                                            m.relurl = u;
                                            var v = u.split("?");
                                            if (v.length >= 2) {
                                                v = v[1];
                                                var w = v.split("&"), x = parseInt(a.getUrlValue(w, "brs")),
                                                    y = parseInt(a.getUrlValue(w, "bre"));
                                                m.fileSize = y <= x ? 0 : y - x + 1
                                            }
                                            if (i.programDateTime && (l ? m.rawProgramDateTime ? m.pdt = Date.parse(m.rawProgramDateTime) : m.pdt = l.pdt + 1e3 * l.duration : m.pdt = Date.parse(i.programDateTime), m.endPdt = m.pdt + 1e3 * m.duration), p) {
                                                var z = we.parseUrl(u);
                                                if (z && z.params && z.params.segmenttype) switch (parseInt(z.params.segmenttype)) {
                                                    case 0:
                                                        m.tsType = Lc.Normal;
                                                        break;
                                                    case 1:
                                                        m.tsType = Lc.VideoIn;
                                                        break;
                                                    case 2:
                                                    default:
                                                        m.tsType = Lc.AdInsert
                                                }
                                            }
                                            i.fragments.push(m), l = m, h += m.duration, m = new pe
                                        }
                                    } else if (n[4]) {
                                        if (m.rawByteRange = (" " + n[4]).slice(1), l) {
                                            var A = l.byteRangeEndOffset;
                                            A && (m.lastByteRangeEndOffset = A)
                                        }
                                    } else if (n[5]) m.rawProgramDateTime = (" " + n[5]).slice(1), m.tagList.push(["PROGRAM-DATE-TIME", m.rawProgramDateTime]), void 0 === i.programDateTime && (i.programDateTime = new Date(new Date(Date.parse(n[5])) - 1e3 * h)); else {
                                        for (n = n[0].match(Ae), o = 1; o < n.length && void 0 === n[o]; o++) ;
                                        var B = (" " + n[o + 1]).slice(1), C = (" " + n[o + 2]).slice(1);
                                        switch (n[o]) {
                                            case"#":
                                                m.tagList.push(C ? [B, C] : [B]);
                                                break;
                                            case"PLAYLIST-TYPE":
                                                i.type = B.toUpperCase();
                                                break;
                                            case"MEDIA-SEQUENCE":
                                                g = i.startSN = parseInt(B);
                                                break;
                                            case"TARGETDURATION":
                                                i.targetduration = parseFloat(B);
                                                break;
                                            case"VERSION":
                                                i.version = parseInt(B);
                                                break;
                                            case"EXTM3U":
                                                break;
                                            case"ENDLIST":
                                                i.live = !1;
                                                break;
                                            case"DIS":
                                                k++, m.tagList.push(["DIS"]), p ? (p = !1, q && (q.end = h, i.discontinuityTimeRanges.push(q))) : (p = !0, q = {start: h});
                                                break;
                                            case"DISCONTINUITY-SEQ":
                                                k = parseInt(B);
                                                break;
                                            case"KEY":
                                                var D = B, E = new te(D), F = E.enumeratedString("METHOD"), G = E.URI,
                                                    H = E.hexadecimalInteger("IV");
                                                F && (j = new me, G && ["AES-128", "SAMPLE-AES", "SAMPLE-AES-CENC"].indexOf(F) >= 0 && (j.method = F, j.baseuri = c, j.reluri = G, j.key = null, j.iv = H));
                                                break;
                                            case"START":
                                                var I = B, J = new te(I), K = J.decimalFloatingPoint("TIME-OFFSET");
                                                isNaN(K) || (i.startTimeOffset = K);
                                                break;
                                            case"MAP":
                                                var L = new te(B);
                                                m.relurl = L.URI, m.rawByteRange = L.BYTERANGE, m.baseurl = c, m.level = d, m.type = e, m.sn = "initSegment", i.initSegment = m, m = new pe, i.mapTag = !0;
                                                break;
                                            default:
                                                cc.b.warn("line parsed but not handled: " + n)
                                        }
                                    }
                                }
                                return m = l, m && !m.relurl && (i.fragments.pop(), h -= m.duration), i.totalduration = h, i.averagetargetduration = h / i.fragments.length, i.endSN = g - 1, i.startCC = i.fragments[0] ? i.fragments[0].cc : 0, i.endCC = k, !i.initSegment && i.fragments.length && i.fragments.every(function (a) {
                                    return a.relurl.endsWith(".mp4")
                                }) && (cc.b.warn("MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX"), m = new pe, m.relurl = i.fragments[0].relurl, m.baseurl = c, m.level = d, m.type = e, m.sn = "initSegment", i.initSegment = m, i.needSidxRanges = !0), i
                            }, a
                        }(), Ce = Be, De = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), Ee = {
                            MANIFEST: "manifest",
                            LEVEL: "level",
                            AUDIO_TRACK: "audioTrack",
                            SUBTITLE_TRACK: "subtitleTrack"
                        }, Fe = {MAIN: "main", AUDIO: "audio", SUBTITLE: "subtitle"}, Ge = function (a) {
                            function b(c) {
                                ca(this, b);
                                var d = da(this, a.call(this, c, bc.a.MANIFEST_LOADING, bc.a.LEVEL_LOADING, bc.a.AUDIO_TRACK_LOADING, bc.a.SUBTITLE_TRACK_LOADING, bc.a.LOAD_M3U8_DIRECT_DATA));
                                return d.loaders = {}, d
                            }

                            return ea(b, a), b.canHaveQualityLevels = function (a) {
                                return a !== Ee.AUDIO_TRACK && a !== Ee.SUBTITLE_TRACK
                            }, b.mapContextToLevelType = function (a) {
                                var b = a.type;
                                switch (b) {
                                    case Ee.AUDIO_TRACK:
                                        return Fe.AUDIO;
                                    case Ee.SUBTITLE_TRACK:
                                        return Fe.SUBTITLE;
                                    default:
                                        return Fe.MAIN
                                }
                            }, b.getResponseUrl = function (a, b) {
                                var c = a.url;
                                return void 0 !== c && 0 !== c.indexOf("data:") || (c = b.url), c
                            }, b.prototype.createInternalLoader = function (a) {
                                var b = this.hls.config, c = b.pLoader, d = b.loader, e = c || d, f = new e(b);
                                return a.loader = f, this.loaders[a.type] = f, f
                            }, b.prototype.getInternalLoader = function (a) {
                                return this.loaders[a.type]
                            }, b.prototype.resetInternalLoader = function (a) {
                                this.loaders[a] && delete this.loaders[a]
                            }, b.prototype.destroyInternalLoaders = function () {
                                for (var a in this.loaders) {
                                    var b = this.loaders[a];
                                    b && b.destroy(), this.resetInternalLoader(a)
                                }
                            }, b.prototype.destroy = function () {
                                this.destroyInternalLoaders(), a.prototype.destroy.call(this)
                            }, b.prototype.onManifestLoading = function (a) {
                                cc.b.log("onManifestLoading m3u8:" + a.url), a.m3u8 || this.load(a.url, {type: Ee.MANIFEST})
                            }, b.prototype.onLoadM3U8DirectData = function (a) {
                                this.loadsuccess({data: a.m3u8, url: a.url}, {
                                    loaded: 1,
                                    retry: 1,
                                    tfirst: 1,
                                    tload: 1,
                                    total: 1,
                                    trequest: 1
                                }, {type: "manifest", url: a.url})
                            }, b.prototype.onLevelLoading = function (a) {
                                a.m3u8 ? this.currentUrl === a.url ? cc.b.log("tick too fast, loading the same m3u8?") : (this.loadsuccess({
                                    data: a.m3u8,
                                    url: a.url
                                }, {loaded: 1, retry: 1, tfirst: 1, tload: 1, total: 1, trequest: 1}, {
                                    type: Ee.LEVEL,
                                    url: a.url,
                                    level: a.level
                                }), this.currentUrl = a.url) : this.load(a.url, {type: Ee.LEVEL, level: a.level, id: a.id})
                            }, b.prototype.onAudioTrackLoading = function (a) {
                                this.load(a.url, {type: Ee.AUDIO_TRACK, id: a.id})
                            }, b.prototype.onSubtitleTrackLoading = function (a) {
                                this.load(a.url, {type: Ee.SUBTITLE_TRACK, id: a.id})
                            }, b.prototype.load = function (a, b) {
                                var c = this.hls.config, d = this.getInternalLoader(b);
                                if (d) {
                                    var e = d.context;
                                    if (e && e.url === a) return cc.b.trace("playlist request ongoing"), !1;
                                    cc.b.warn("aborting previous loader for type: " + b.type), d.abort()
                                }
                                var f = void 0, g = void 0, h = void 0, i = void 0;
                                switch (b.type) {
                                    case Ee.MANIFEST:
                                        f = c.manifestLoadingMaxRetry, g = c.manifestLoadingTimeOut, h = c.manifestLoadingRetryDelay, i = c.manifestLoadingMaxRetryTimeout;
                                        break;
                                    case Ee.LEVEL:
                                        f = 0, g = c.levelLoadingTimeOut;
                                        break;
                                    default:
                                        f = c.levelLoadingMaxRetry, g = c.levelLoadingTimeOut, h = c.levelLoadingRetryDelay, i = c.levelLoadingMaxRetryTimeout, cc.b.log("Playlist loader for " + b.type + " " + (b.level || b.id))
                                }
                                d = this.createInternalLoader(b), b.url = a, b.responseType = b.responseType || "";
                                var j = void 0, k = void 0;
                                return j = {
                                    timeout: g,
                                    maxRetry: f,
                                    retryDelay: h,
                                    maxRetryDelay: i
                                }, k = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this)
                                }, d.load(b, j, k), !0
                            }, b.prototype.loadsuccess = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                                if (c.isSidxRequest) return this._handleSidxRequest(a, c), void this._handlePlaylistLoaded(a, b, c, d);
                                this.resetInternalLoader(c.type);
                                var e = a.data;
                                return b.tload = performance.now(), 0 !== e.indexOf("#EXTM3U") ? void this._handleManifestParsingError(a, c, "no EXTM3U delimiter", d) : void (e.indexOf("#EXTINF:") > 0 || e.indexOf("#EXT-X-TARGETDURATION:") > 0 ? this._handleTrackOrLevelPlaylist(a, b, c, d) : this._handleMasterPlaylist(a, b, c, d))
                            }, b.prototype.loaderror = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                if (600 === a.code) this.reportM3U8Quality(kc.eErrno_M3U8XhrOnError, 0, b.url), cc.b.info("m3u8 xhr.onerror,url:" + b.url); else {
                                    if (this.reportM3U8Quality(kc.eErrno_M3U8DownloadError, a.code, b.url), 403 == a.code && this.hls && this.hls.on403Error) return void this.hls.on403Error();
                                    cc.b.info("error playlist-loader: m3u8\u4e0b\u8f7d\u5931\u8d25, text:" + a.text + ",httpStatus:" + a.code + ",url:" + b.url)
                                }
                                this._handleNetworkError(b, c)
                            }, b.prototype.loadtimeout = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                this.reportM3U8Quality(kc.eErrno_M3U8RecvTimeout, 0, b.url), cc.b.info("error playlist-loader: m3u8\u4e0b\u8f7d\u8d85\u65f6\uff0curl:" + b.url), this._handleNetworkError(b, c, !0)
                            }, b.prototype._handleMasterPlaylist = function (a, c, d, e) {
                                var f = this.hls, g = a.data, h = b.getResponseUrl(a, d), i = Ce.parseMasterPlaylist(g, h);
                                if (!i.length) return void this._handleManifestParsingError(a, d, "no level found in manifest", e);
                                var j = i.map(function (a) {
                                        return {id: a.attrs.AUDIO, codec: a.audioCodec}
                                    }), k = Ce.parseMasterPlaylistMedia(g, h, "AUDIO", j),
                                    l = Ce.parseMasterPlaylistMedia(g, h, "SUBTITLES");
                                if (k.length) {
                                    var m = !1;
                                    k.forEach(function (a) {
                                        a.url || (m = !0)
                                    }), m === !1 && i[0].audioCodec && !i[0].attrs.AUDIO && (cc.b.log("audio codec signaled in quality level, but no embedded audio track signaled, create one"), k.unshift({
                                        type: "main",
                                        name: "main"
                                    }))
                                }
                                f.trigger(bc.a.MANIFEST_LOADED, {
                                    levels: i,
                                    audioTracks: k,
                                    subtitles: l,
                                    url: h,
                                    stats: c,
                                    networkDetails: e
                                })
                            }, b.prototype._handleTrackOrLevelPlaylist = function (a, c, d, e) {
                                var f = this.hls, g = d.id, h = d.level, i = d.type, j = b.getResponseUrl(a, d),
                                    k = isNaN(g) ? 0 : g, l = isNaN(h) ? k : h, m = b.mapContextToLevelType(d),
                                    n = Ce.parseLevelPlaylist(a.data, j, l, m, k);
                                if (this.judgePlayType(n), n.tload = c.tload, i === Ee.MANIFEST) {
                                    var o = {url: j, details: n};
                                    f.trigger(bc.a.MANIFEST_LOADED, {
                                        levels: [o],
                                        audioTracks: [],
                                        url: j,
                                        stats: c,
                                        networkDetails: e
                                    })
                                }
                                if (c.tparsed = performance.now(), n.needSidxRanges) {
                                    var p = n.initSegment.url;
                                    return void this.load(p, {
                                        isSidxRequest: !0,
                                        type: i,
                                        level: h,
                                        levelDetails: n,
                                        id: g,
                                        rangeStart: 0,
                                        rangeEnd: 2048,
                                        responseType: "arraybuffer"
                                    })
                                }
                                d.levelDetails = n, this._handlePlaylistLoaded(a, c, d, e)
                            }, b.prototype._handleSidxRequest = function (a, b) {
                                var c = je.a.parseSegmentIndex(new Uint8Array(a.data));
                                c.references.forEach(function (a, c) {
                                    var d = a.info, e = b.levelDetails.fragments[c];
                                    0 === e.byteRange.length && (e.rawByteRange = String(1 + d.end - d.start) + "@" + String(d.start))
                                }), b.levelDetails.initSegment.rawByteRange = String(c.moovEndOffset) + "@0"
                            }, b.prototype._handleManifestParsingError = function (a, b, c, d) {
                                this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.NETWORK_ERROR,
                                    details: ac.a.MANIFEST_PARSING_ERROR,
                                    fatal: !0,
                                    url: a.url,
                                    reason: c,
                                    networkDetails: d
                                })
                            }, b.prototype._handleNetworkError = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], d = void 0,
                                    e = void 0, f = this.getInternalLoader(a);
                                switch (a.type) {
                                    case Ee.MANIFEST:
                                        d = c ? ac.a.MANIFEST_LOAD_TIMEOUT : ac.a.MANIFEST_LOAD_ERROR, e = !0;
                                        break;
                                    case Ee.LEVEL:
                                        d = c ? ac.a.LEVEL_LOAD_TIMEOUT : ac.a.LEVEL_LOAD_ERROR, e = !1;
                                        break;
                                    case Ee.AUDIO_TRACK:
                                        d = c ? ac.a.AUDIO_TRACK_LOAD_TIMEOUT : ac.a.AUDIO_TRACK_LOAD_ERROR, e = !1;
                                        break;
                                    default:
                                        e = !1
                                }
                                f && (f.abort(), this.resetInternalLoader(a.type)), this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.NETWORK_ERROR,
                                    details: d,
                                    fatal: e,
                                    url: f.url,
                                    loader: f,
                                    context: a,
                                    networkDetails: b
                                })
                            }, b.prototype.reportM3U8Quality = function (a, b, c) {
                                setTimeout(function () {
                                    sc.getInstance().reportSvrQuality(0, nc.ServerType_CDNServer, "", 0, a, b, 0, 0, 0, c)
                                }, 10)
                            }, b.prototype._handlePlaylistLoaded = function (a, c, d, e) {
                                var f = d.type, g = d.level, h = d.id, i = d.levelDetails;
                                if (!i.targetduration) return void this._handleManifestParsingError(a, d, "invalid target duration", e);
                                var j = b.canHaveQualityLevels(d.type);
                                if (j) this.hls.trigger(bc.a.LEVEL_LOADED, {
                                    details: i,
                                    level: g || 0,
                                    id: h || 0,
                                    stats: c,
                                    networkDetails: e
                                }); else switch (f) {
                                    case Ee.AUDIO_TRACK:
                                        this.hls.trigger(bc.a.AUDIO_TRACK_LOADED, {
                                            details: i,
                                            id: h,
                                            stats: c,
                                            networkDetails: e
                                        });
                                        break;
                                    case Ee.SUBTITLE_TRACK:
                                        this.hls.trigger(bc.a.SUBTITLE_TRACK_LOADED, {
                                            details: i,
                                            id: h,
                                            stats: c,
                                            networkDetails: e
                                        })
                                }
                            }, b.prototype.parseMasterPlaylist = function (a, b) {
                                return Ce.parseMasterPlaylist(a, b)
                            }, b.prototype.judgePlayType = function (a) {
                                if (a && a.fragments && a.fragments.length > 0 && "string" == typeof a.fragments[0].relurl) {
                                    var b = a.fragments[0].relurl, c = b.indexOf("?");
                                    c == -1 && (c = b.length - 1), ".mp4" == b.substr(c - 4, 4) && (hc.a.playType = 1)
                                }
                            }, De(b, null, [{
                                key: "ContextType", get: function () {
                                    return Ee
                                }
                            }, {
                                key: "LevelType", get: function () {
                                    return Fe
                                }
                            }]), b
                        }(gc), He = Ge, Ie = function (a) {
                            function b(c) {
                                fa(this, b);
                                var d = ga(this, a.call(this, c, bc.a.FRAG_LOADING, bc.a.FRAG_BUFFER_INFO, bc.a.HLS_CONFIG_INFO, bc.a.DATA_ERROR, bc.a.AUDIO_NOT_IN_SEQUENCE));
                                return d.loaders = {}, d
                            }

                            return ha(b, a), b.prototype.destroy = function () {
                                var b = this.loaders;
                                for (var c in b) {
                                    var d = b[c];
                                    d && d.destroy()
                                }
                                this.loaders = {}, a.prototype.destroy.call(this)
                            }, b.prototype.onFragLoading = function (a) {
                                var b = a.frag, c = b.type, d = this.loaders, e = this.hls.config, f = e.fLoader,
                                    g = e.loader;
                                b.loaded = 0;
                                var h = d[c];
                                h && (cc.b.warn("abort previous fragment loader for type: " + c), h.abort()), h = d[c] = b.loader = e.fLoader ? new f(e) : new g(e);
                                var i = void 0, j = void 0, k = void 0;
                                i = {url: b.url, frag: b, responseType: "arraybuffer", progressData: !1};
                                var l = b.byteRangeStartOffset, m = b.byteRangeEndOffset;
                                isNaN(l) || isNaN(m) || (i.rangeStart = l, i.rangeEnd = m), j = {
                                    timeout: e.fragLoadingTimeOut,
                                    maxRetry: 0,
                                    retryDelay: 0,
                                    maxRetryDelay: e.fragLoadingMaxRetryTimeout
                                }, k = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this),
                                    onProgress: this.loadprogress.bind(this)
                                }, (this.hls.config.emeEnabled || 0 != hc.a.playType) && (k = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this)
                                }), i.url && (i.url.indexOf("?") != -1 ? i.url += "&cost=low" : i.url += "?cost=low"), h.load(i, j, k)
                            }, b.prototype.loadsuccess = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, e = a.data,
                                    f = c.frag;
                                f.loader = void 0, this.loaders[f.type] = void 0, this.hls.trigger(bc.a.FRAG_LOADED, {
                                    payload: e,
                                    frag: f,
                                    stats: b,
                                    networkDetails: d
                                })
                            }, b.prototype.loaderror = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, d = b.loader;
                                d && d.abort(), this.loaders[b.type] = void 0, this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.NETWORK_ERROR,
                                    details: ac.a.FRAG_LOAD_ERROR,
                                    fatal: !1,
                                    frag: b.frag,
                                    response: a,
                                    networkDetails: c
                                })
                            }, b.prototype.loadtimeout = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, d = b.loader;
                                d && d.abort(), this.loaders[b.type] = void 0, this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.NETWORK_ERROR,
                                    details: ac.a.FRAG_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: b.frag,
                                    networkDetails: c
                                })
                            }, b.prototype.loadprogress = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, e = b.frag;
                                e.loaded = a.loaded, this.hls.trigger(bc.a.FRAG_LOAD_PROGRESS, {
                                    frag: e,
                                    stats: a,
                                    networkDetails: d
                                })
                            }, b.prototype.onDataError = function (a) {
                                cc.b.log("demux recv data error,sn:" + a.sn + ",pos:" + a.pos + ",keyid:" + a.keyid)
                            }, b.prototype.onAudioNotInSequence = function (a) {
                            }, b.prototype.on403Error = function () {
                            }, b.prototype.onBufferInfo = function (a) {
                            }, b.prototype.onConfigInfo = function (a) {
                            }, b
                        }(gc), Je = Ie, Ke = function (a) {
                            function b(c) {
                                ia(this, b);
                                var d = ja(this, a.call(this, c, bc.a.KEY_LOADING));
                                return d.loaders = {}, d.decryptkey = null, d.decrypturl = null, d
                            }

                            return ka(b, a), b.prototype.destroy = function () {
                                for (var a in this.loaders) {
                                    var b = this.loaders[a];
                                    b && b.destroy()
                                }
                                this.loaders = {}, gc.prototype.destroy.call(this)
                            }, b.prototype.onKeyLoading = function (a) {
                                var b = a.frag, c = b.type, d = this.loaders[c], e = b.decryptdata, f = e.uri;
                                if (f !== this.decrypturl || null === this.decryptkey) {
                                    var g = this.hls.config;
                                    d && (cc.b.warn("abort previous key loader for type:" + c), d.abort()), b.loader = this.loaders[c] = new g.loader(g), this.decrypturl = f, this.decryptkey = null;
                                    var h = void 0, i = void 0, j = void 0;
                                    h = {url: f, frag: b, responseType: "arraybuffer"}, i = {
                                        timeout: g.fragLoadingTimeOut,
                                        maxRetry: g.fragLoadingMaxRetry,
                                        retryDelay: g.fragLoadingRetryDelay,
                                        maxRetryDelay: g.fragLoadingMaxRetryTimeout
                                    }, j = {
                                        onSuccess: this.loadsuccess.bind(this),
                                        onError: this.loaderror.bind(this),
                                        onTimeout: this.loadtimeout.bind(this)
                                    }, b.loader.load(h, i, j)
                                } else this.decryptkey && (e.key = this.decryptkey, this.hls.trigger(bc.a.KEY_LOADED, {frag: b}))
                            }, b.prototype.loadsuccess = function (a, b, c) {
                                var d = c.frag;
                                this.decryptkey = d.decryptdata.key = new Uint8Array(a.data), d.loader = void 0, this.loaders[d.type] = void 0, this.hls.trigger(bc.a.KEY_LOADED, {frag: d})
                            }, b.prototype.loaderror = function (a, b) {
                                var c = b.frag, d = c.loader;
                                d && d.abort(), this.loaders[b.type] = void 0, this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.NETWORK_ERROR,
                                    details: ac.a.KEY_LOAD_ERROR,
                                    fatal: !1,
                                    frag: c,
                                    response: a
                                })
                            }, b.prototype.loadtimeout = function (a, b) {
                                var c = b.frag, d = c.loader;
                                d && d.abort(), this.loaders[b.type] = void 0, this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.NETWORK_ERROR,
                                    details: ac.a.KEY_LOAD_TIMEOUT,
                                    fatal: !1,
                                    frag: c
                                })
                            }, b
                        }(gc), Le = Ke,
                        Me = {NOT_LOADED: "NOT_LOADED", APPENDING: "APPENDING", PARTIAL: "PARTIAL", OK: "OK"},
                        Ne = function (a) {
                            function b(c) {
                                la(this, b);
                                var d = ma(this, a.call(this, c, bc.a.BUFFER_APPENDED, bc.a.FRAG_BUFFERED, bc.a.FRAG_LOADED, bc.a.REMOVE_BUFFERED_FRAG));
                                return d.bufferPadding = .2, d.fragments = Object.create(null), d.timeRanges = Object.create(null), d.config = c.config, d
                            }

                            return na(b, a), b.prototype.destroy = function () {
                                this.fragments = null, this.timeRanges = null, this.config = null, gc.prototype.destroy.call(this), a.prototype.destroy.call(this)
                            }, b.prototype.getBufferedFrag = function (a, b) {
                                var c = this.fragments, d = Object.keys(c).filter(function (d) {
                                    var e = c[d];
                                    if (e.body.type !== b) return !1;
                                    if (!e.buffered) return !1;
                                    var f = e.body;
                                    return f.start <= a && a <= f.start + f.duration
                                });
                                if (0 === d.length) return null;
                                var e = d.pop();
                                return c[e].body
                            }, b.prototype.detectEvictedFragments = function (a, b) {
                                var c = this, d = void 0, e = void 0;
                                Object.keys(this.fragments).forEach(function (f) {
                                    var g = c.fragments[f];
                                    if (g.buffered === !0) {
                                        var h = g.range[a];
                                        if (h) {
                                            d = h.time;
                                            for (var i = 0; i < d.length; i++) if (e = d[i], c.isTimeBuffered(e.startPTS, e.endPTS, b) === !1) {
                                                c.removeFragment(g.body);
                                                break
                                            }
                                        }
                                    }
                                })
                            }, b.prototype.detectPartialFragments = function (a) {
                                var b = this, c = this.getFragmentKey(a), d = this.fragments[c];
                                d && (d.buffered = !0, Object.keys(this.timeRanges).forEach(function (c) {
                                    if (a.hasElementaryStream(c) === !0) {
                                        var e = b.timeRanges[c];
                                        d.range[c] = b.getBufferedTimes(a.startPTS, a.endPTS, e)
                                    }
                                }))
                            }, b.prototype.getBufferedTimes = function (a, b, c) {
                                for (var d = [], e = void 0, f = void 0, g = !1, h = 0; h < c.length; h++) {
                                    if (e = c.start(h) - this.bufferPadding, f = c.end(h) + this.bufferPadding, a >= e && b <= f) {
                                        d.push({startPTS: Math.max(a, c.start(h)), endPTS: Math.min(b, c.end(h))});
                                        break
                                    }
                                    if (a < f && b > e) d.push({
                                        startPTS: Math.max(a, c.start(h)),
                                        endPTS: Math.min(b, c.end(h))
                                    }), g = !0; else if (b <= e) break
                                }
                                return {time: d, partial: g}
                            }, b.prototype.getFragmentKey = function (a) {
                                return a.type + "_" + a.level + "_" + a.urlId + "_" + a.sn
                            }, b.prototype.getPartialFragment = function (a) {
                                var b = this, c = void 0, d = void 0, e = void 0, f = null, g = 0;
                                return Object.keys(this.fragments).forEach(function (h) {
                                    var i = b.fragments[h];
                                    b.isPartial(i) && (d = i.body.startPTS - b.bufferPadding, e = i.body.endPTS + b.bufferPadding, a >= d && a <= e && (c = Math.min(a - d, e - a), g <= c && (f = i.body, g = c)))
                                }), f
                            }, b.prototype.getState = function (a) {
                                var b = this.getFragmentKey(a), c = this.fragments[b], d = Me.NOT_LOADED;
                                return void 0 !== c && (d = c.buffered ? this.isPartial(c) === !0 ? Me.PARTIAL : Me.OK : Me.APPENDING), d
                            }, b.prototype.isPartial = function (a) {
                                return a.buffered === !0 && (void 0 !== a.range.video && a.range.video.partial === !0 || void 0 !== a.range.audio && a.range.audio.partial === !0)
                            }, b.prototype.isTimeBuffered = function (a, b, c) {
                                for (var d = void 0, e = void 0, f = 0; f < c.length; f++) {
                                    if (d = c.start(f) - this.bufferPadding, e = c.end(f) + this.bufferPadding, a >= d && b <= e) return !0;
                                    if (b <= d) return !1
                                }
                                return !1
                            }, b.prototype.onFragLoaded = function (a) {
                                var b = a.frag;
                                if (!isNaN(b.sn) && !b.bitrateTest) {
                                    var c = this.getFragmentKey(b),
                                        d = {body: b, range: Object.create(null), buffered: !1};
                                    this.fragments[c] = d
                                }
                            }, b.prototype.onBufferAppended = function (a) {
                            }, b.prototype.onFragBuffered = function (a) {
                                this.detectPartialFragments(a.frag)
                            }, b.prototype.hasFragment = function (a) {
                                var b = this.getFragmentKey(a);
                                return void 0 !== this.fragments[b]
                            }, b.prototype.removeFragment = function (a) {
                                var b = this.getFragmentKey(a);
                                cc.b.log("removeFragment " + b), delete this.fragments[b]
                            }, b.prototype.removeAllFragments = function () {
                                this.fragments = Object.create(null)
                            }, b.prototype.onRemoveBufferedFrag = function (a) {
                                var b = this, c = a.start, d = a.end;
                                Object.keys(this.fragments).forEach(function (a) {
                                    var e = b.fragments[a], f = !1;
                                    if (e.buffered === !0 && e.body) {
                                        var g = e.body, h = g.start, i = g.start + g.duration;
                                        h <= c && i >= c ? f = !0 : h >= c && i <= d ? f = !0 : h <= d && i >= d && (f = !0)
                                    }
                                    f && b.removeFragment(e.body)
                                })
                            }, b
                        }(gc), Oe = {
                            search: function (a, b) {
                                for (var c = 0, d = a.length - 1, e = null, f = null; c <= d;) {
                                    e = (c + d) / 2 | 0, f = a[e];
                                    var g = b(f);
                                    if (g > 0) c = e + 1; else {
                                        if (!(g < 0)) return f;
                                        d = e - 1
                                    }
                                }
                                return null
                            }
                        }, Pe = Oe, Qe = function () {
                            function a() {
                                oa(this, a)
                            }

                            return a.isBuffered = function (a, b) {
                                try {
                                    if (a) for (var c = a.buffered, d = 0; d < c.length; d++) if (b >= c.start(d) && b <= c.end(d)) return !0
                                } catch (e) {
                                }
                                return !1
                            }, a.bufferInfo = function (a, b, c) {
                                try {
                                    if (a) {
                                        var d = a.buffered, e = [], f = void 0;
                                        for (f = 0; f < d.length; f++) e.push({start: d.start(f), end: d.end(f)});
                                        return this.bufferedInfo(e, b, c)
                                    }
                                } catch (g) {
                                }
                                return {len: 0, start: b, end: b, nextStart: void 0}
                            }, a.bufferedInfo = function (a, b, c) {
                                var d = [], e = void 0, f = void 0, g = void 0, h = void 0, i = void 0;
                                for (a.sort(function (a, b) {
                                    var c = a.start - b.start;
                                    return c ? c : b.end - a.end
                                }), i = 0; i < a.length; i++) {
                                    var j = d.length;
                                    if (j) {
                                        var k = d[j - 1].end;
                                        a[i].start - k < c ? a[i].end > k && (d[j - 1].end = a[i].end) : d.push(a[i])
                                    } else d.push(a[i])
                                }
                                for (i = 0, e = 0, f = g = b; i < d.length; i++) {
                                    var l = d[i].start, m = d[i].end;
                                    if (b + c >= l && b < m) f = l, g = m, e = g - b; else if (b + c < l) {
                                        h = l;
                                        break
                                    }
                                }
                                return {len: e, start: f, end: g, nextStart: h}
                            }, a.totalBuffer = function (a, b) {
                                var c = -1, d = -1, e = 0;
                                if (a) {
                                    var f, g = a.buffered;
                                    for (f = 0; f < g.length; f++) {
                                        var h = g.end(f), i = g.start(f);
                                        b >= h ? (e += h - i, d = d == -1 ? h : Math.max(d, h)) : b >= i && b <= h && (e += b - i, d = d == -1 ? h : Math.max(d, b), d = Math.min(d, b))
                                    }
                                    return {start: 0, end: d, len: e}
                                }
                                return {start: c, end: d, len: 0}
                            }, a
                        }(), Re = c(10), Se = c.n(Re), Te = c(86), Ue = c.n(Te), Ve = c(46), We = c(47), Xe = pa(),
                        Ye = function () {
                            function a(b, c) {
                                qa(this, a), this.hls = b, this.id = c, this.tsDemuxShell = new We.a((void 0));
                                var d = this.observer = new Se.a, e = b.config;
                                d.trigger = function (a) {
                                    for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), e = 1; e < b; e++) c[e - 1] = arguments[e];
                                    d.emit.apply(d, [a, a].concat(c))
                                }, d.off = function (a) {
                                    for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), e = 1; e < b; e++) c[e - 1] = arguments[e];
                                    d.removeListener.apply(d, [a].concat(c))
                                };
                                var f = function (a, c) {
                                    c = c || {}, c.frag = this.frag, c.id = this.id, b.trigger(a, c)
                                }.bind(this);
                                d.on(bc.a.FRAG_DECRYPTED, f), d.on(bc.a.FRAG_PARSING_INIT_SEGMENT, f), d.on(bc.a.FRAG_PARSING_DATA, f), d.on(bc.a.FRAG_PARSED, f), d.on(bc.a.ERROR, f), d.on(bc.a.FRAG_PARSING_METADATA, f), d.on(bc.a.FRAG_PARSING_USERDATA, f), d.on(bc.a.INIT_PTS_FOUND, f);
                                var g = {
                                    mp4: Xe.isTypeSupported("video/mp4"),
                                    mpeg: Xe.isTypeSupported("audio/mpeg"),
                                    mp3: Xe.isTypeSupported('audio/mp4; codecs="mp3"')
                                }, h = navigator.vendor;
                                if (tc.a.MultiThread && "undefined" != typeof Worker) {
                                    cc.b.log("demuxing in webworker");
                                    var i = void 0;
                                    try {
                                        i = this.w = Ue()(87), this.onwmsg = this.onWorkerMessage.bind(this), i.addEventListener("message", this.onwmsg), i.onerror = function (a) {
                                            cc.b.error(ac.c.PARSING_ERROR, "demuxer worker error msg:" + a.message + " lineno:" + a.lineno), b.trigger(bc.a.ERROR, {
                                                type: ac.b.OTHER_ERROR,
                                                details: ac.a.INTERNAL_EXCEPTION,
                                                fatal: !0,
                                                event: "demuxerWorker",
                                                err: {message: a.message + " (" + a.filename + ":" + a.lineno + ")"}
                                            })
                                        }, e.levels = void 0, i.postMessage({
                                            cmd: "init",
                                            typeSupported: g,
                                            vendor: h,
                                            id: c,
                                            config: JSON.stringify(e)
                                        })
                                    } catch (j) {
                                        cc.b.error(ac.c.PARSING_ERROR, "error while initializing DemuxerWorker, fallback on DemuxerInline"), i && URL.revokeObjectURL(i.objectURL), this.demuxer = new Ve.a(d, g, e, h), this.w = void 0
                                    }
                                } else this.demuxer = new Ve.a(d, g, e, h, this), this.tsDemuxShell.setDemuxer(this.demuxer), this.tsDemuxShell.openDemuxerTimer()
                            }

                            return a.prototype.destroy = function () {
                                var a = this.w;
                                if (a) a.removeEventListener("message", this.onwmsg), a.terminate(), this.w = null; else {
                                    var b = this.demuxer;
                                    b && (b.destroy(), this.demuxer = null)
                                }
                                var c = this.observer;
                                c && (c.removeAllListeners(), this.observer = null), this.tsDemuxShell && this.tsDemuxShell.destroy()
                            }, a.prototype.push = function (a, b, c, d, e, f, g, h, i, j, k, l) {
                                if (void 0 != a) {
                                    var m = this.w, n = e.start, o = e.decryptdata, p = this.frag,
                                        q = !(p && e.cc === p.cc), r = !(p && e.level === p.level),
                                        s = p && e.sn === p.sn + 1, t = !r && s, u = e.level, v = e.sn;
                                    if (q && cc.b.log(this.id + ":discontinuity detected"), r && cc.b.log(this.id + ":switch detected"), this.frag = e, m) {
                                        var w = !this.hls.config.emeEnabled && 0 == hc.a.playType;
                                        w ? m.postMessage({
                                            cmd: "demux",
                                            data: a,
                                            decryptdata: o,
                                            initSegment: b,
                                            audioCodec: c,
                                            videoCodec: d,
                                            timeOffset: n,
                                            discontinuity: q,
                                            trackSwitch: r,
                                            contiguous: t,
                                            duration: f,
                                            accurateTimeOffset: g,
                                            defaultInitPTS: h,
                                            level: u,
                                            sn: v,
                                            isFileEnd: i,
                                            filelen: j,
                                            offset: k,
                                            keyid: l,
                                            shouldLoadData: w
                                        }, a instanceof ArrayBuffer ? [a] : []) : m.postMessage({
                                            cmd: "demux",
                                            data: a,
                                            decryptdata: o,
                                            initSegment: b,
                                            audioCodec: c,
                                            videoCodec: d,
                                            timeOffset: n,
                                            discontinuity: q,
                                            trackSwitch: r,
                                            contiguous: t,
                                            duration: f,
                                            accurateTimeOffset: g,
                                            defaultInitPTS: h,
                                            extendInfo: {mapTag: e.mapTag}
                                        }, a instanceof ArrayBuffer ? [a] : [])
                                    } else {
                                        var x = this.demuxer;
                                        x && (this.hls.config.emeEnabled || 0 != hc.a.playType ? x.push(a, o, b, c, d, n, q, r, t, f, g, h, {mapTag: e.mapTag}) : this.tsDemuxShell.loadData({
                                            data: a,
                                            decryptdata: o,
                                            initSegment: b,
                                            audioCodec: c,
                                            videoCodec: d,
                                            timeOffset: n,
                                            discontinuity: q,
                                            trackSwitch: r,
                                            contiguous: t,
                                            duration: f,
                                            accurateTimeOffset: g,
                                            defaultInitPTS: h,
                                            level: u,
                                            sn: v,
                                            isFileEnd: i,
                                            filelen: j,
                                            offset: k,
                                            keyid: l
                                        }))
                                    }
                                }
                            }, a.prototype.onWorkerMessage = function (a) {
                                var b = a.data, c = this.hls;
                                switch (b.event) {
                                    case"init":
                                        URL.revokeObjectURL(this.w.objectURL);
                                        break;
                                    case bc.a.WRITE_FILE:
                                        break;
                                    case bc.a.LOG:
                                        0 === tc.a.openDemuxLog && "warn" != b.data.type && "error" != b.data.type || cc.b.recvlog && cc.b.recvlog(b.data.logdata, b.data.type);
                                        break;
                                    case bc.a.DATA_ERROR:
                                        c.trigger(b.event, b.data);
                                        break;
                                    case bc.a.AUDIO_NOT_IN_SEQUENCE:
                                        c.trigger(b.event, b.data);
                                        break;
                                    case bc.a.FRAG_PARSING_DATA:
                                        b.data.data1 = new Uint8Array(b.data1), b.data2 && (b.data.data2 = new Uint8Array(b.data2));
                                    default:
                                        b.data = b.data || {}, b.data.frag = this.frag, b.data.id = this.id, c.trigger(b.event, b.data)
                                }
                            }, a.prototype.postMsg = function (a) {
                                this.w && this.w.postMessage(a)
                            }, a
                        }(), Ze = Ye, $e = {
                            toString: function (a) {
                                for (var b = "", c = a.length, d = 0; d < c; d++) b += "[" + a.start(d).toFixed(3) + "," + a.end(d).toFixed(3) + "]";
                                return b
                            }
                        }, _e = $e, af = function (a) {
                            function b(c) {
                                Aa(this, b);
                                for (var d = arguments.length, e = Array(d > 1 ? d - 1 : 0), f = 1; f < d; f++) e[f - 1] = arguments[f];
                                var g = Ba(this, a.call.apply(a, [this, c].concat(e)));
                                return g._tickInterval = null, g._tickTimer = null, g._tickCallCount = 0, g._boundTick = g.tick.bind(g), g
                            }

                            return Ca(b, a), b.prototype.onHandlerDestroying = function () {
                                this.clearNextTick(), this.clearInterval()
                            }, b.prototype.hasInterval = function () {
                                return !!this._tickInterval
                            }, b.prototype.hasNextTick = function () {
                                return !!this._tickTimer
                            }, b.prototype.setInterval = function (a) {
                                function b(b) {
                                    return a.apply(this, arguments)
                                }

                                return b.toString = function () {
                                    return a.toString()
                                }, b
                            }(function (a) {
                                return !this._tickInterval && (this._tickInterval = setInterval(this._boundTick, a), !0)
                            }), b.prototype.clearInterval = function (a) {
                                function b() {
                                    return a.apply(this, arguments)
                                }

                                return b.toString = function () {
                                    return a.toString()
                                }, b
                            }(function () {
                                return !!this._tickInterval && (clearInterval(this._tickInterval), this._tickInterval = null, !0)
                            }), b.prototype.clearNextTick = function () {
                                return !!this._tickTimer && (clearTimeout(this._tickTimer), this._tickTimer = null, !0)
                            }, b.prototype.tick = function () {
                                this._tickCallCount++, 1 === this._tickCallCount && (this.doTick(), this._tickCallCount > 1 && (this.clearNextTick(), this._tickTimer = setTimeout(this._boundTick, 0)), this._tickCallCount = 0)
                            }, b.prototype.doTick = function () {
                            }, b
                        }(gc), bf = af, cf = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), df = {
                            STOPPED: "STOPPED",
                            IDLE: "IDLE",
                            KEY_LOADING: "KEY_LOADING",
                            FRAG_LOADING: "FRAG_LOADING",
                            FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                            WAITING_LEVEL: "WAITING_LEVEL",
                            PARSING: "PARSING",
                            PARSED: "PARSED",
                            BUFFER_FLUSHING: "BUFFER_FLUSHING",
                            ENDED: "ENDED",
                            ERROR: "ERROR"
                        }, ef = 1e3, ff = 500, gf = 1e3, hf = function (a) {
                            function b(c, d) {
                                Ha(this, b);
                                var e = Ia(this, a.call(this, c, bc.a.MEDIA_ATTACHED, bc.a.MEDIA_DETACHING, bc.a.MANIFEST_LOADING, bc.a.MANIFEST_PARSED, bc.a.LEVEL_LOADED, bc.a.KEY_LOADED, bc.a.FRAG_LOADED, bc.a.FRAG_LOAD_EMERGENCY_ABORTED, bc.a.FRAG_PARSING_INIT_SEGMENT, bc.a.FRAG_PARSING_DATA, bc.a.FRAG_PARSED, bc.a.ERROR, bc.a.AUDIO_TRACK_SWITCHING, bc.a.AUDIO_TRACK_SWITCHED, bc.a.BUFFER_CREATED, bc.a.BUFFER_APPENDED, bc.a.BUFFER_FLUSHED, bc.a.FRAG_LOAD_PROGRESS, bc.a.END_STREAM));
                                e.fragmentTracker = d, e.config = c.config, e.audioCodecSwap = !1, e._state = df.STOPPED, e.stallReported = !1, e.notifyMedia = e.notifyMediaTimer.bind(e), e.nmTimer = void 0, e.dragWasteTime = -1, e.dragWasteTimeList = [];
                                var f = performance.now();
                                return e.checkBufferTick = f, e.isEndStream = !1, e.startTick = f, e.loadSn = 0, e.bFirstLoadData = !0, e.checkVDropFrame = e.checkVideoDropFrame.bind(e), e.vdfTimer = void 0, e.dropFrameSec = 0, e.dropFrameCount = 0, e.noDropFrameSec = 0, e.noDropFrameCount = 0, e.onplay = !1, e.videoStart = void 0, e.audioStart = void 0, e.videoRealStartPos = void 0, e
                            }

                            return Ja(b, a), b.prototype.openVideoDropFrameTimer = function () {
                                void 0 === this.vdfTimer && (this.vdfTimer = setInterval(this.checkVDropFrame, gf))
                            }, b.prototype.closeVideoDropFrameTimer = function () {
                                this.vdfTimer && (clearInterval(this.vdfTimer), this.vdfTimer = void 0)
                            }, b.prototype.addWasterTimeList = function (a) {
                            }, b.prototype.onEndStream = function (a) {
                                cc.b.log("jy notify endStream " + a), this.isEndStream = a
                            }, b.prototype.checkSourceBufferRelease = function () {
                                if (!this.isEndStream && performance.now() - this.checkBufferTick > 1e3 * tc.a.CheckSourceBufferTime) {
                                    this.checkBufferTick = performance.now();
                                    var a = this.media;
                                    if (!a || void 0 === a.currentTime) return;
                                    var b = Qe.totalBuffer(this.mediaBuffer ? this.mediaBuffer : a, a.currentTime);
                                    if (b.len >= tc.a.CheckSourceBufferLen) {
                                        var c = Math.max(b.end - 20, b.start - 1);
                                        c > b.start && (cc.b.log("release SourceBuffer[" + b.start + "," + c + "]"), this.cutBuffer(b.start, c))
                                    }
                                }
                            }, b.prototype.checkVideoDropFrame = function () {
                                this.media && !this.media.paused && this.onplay && (this.media.webkitDroppedFrameCount / this.media.webkitDecodedFrameCount * 100 >= tc.a.DropFramePercent ? (this.noDropFrameSec = 0, this.dropFrameSec++, this.dropFrameSec >= tc.a.DropFrameSpan && (this.dropFrameCount++, ie.getInstance().m_dropFrameCount++, this.dropFrameSec = 0)) : (this.dropFrameSec = 0, this.noDropFrameSec++, this.noDropFrameSec >= tc.a.DropFrameSpan && (this.noDropFrameCount++, ie.getInstance().m_noDropFrameCount++, this.noDropFrameSec = 0)))
                            }, b.prototype.getRemainTime = function () {
                                var a = this.media;
                                if (!a || void 0 === a.currentTime) return 0;
                                var b = Qe.bufferInfo(this.mediaBuffer ? this.mediaBuffer : a, a.currentTime, this.config.maxBufferHole);
                                return b.len
                            }, b.prototype.notifyMediaTimer = function () {
                                this.checkSourceBufferRelease();
                                var a = this.media;
                                if (a && void 0 !== a.currentTime) {
                                    var b = Qe.bufferInfo(this.mediaBuffer ? this.mediaBuffer : a, a.currentTime, this.config.maxBufferHole);
                                    b.cur = a.currentTime, b.loadsn = this.loadSn, this.hls.trigger(bc.a.FRAG_BUFFER_INFO, b)
                                }
                            }, b.prototype.openMediaTimer = function () {
                                void 0 === this.nmTimer && (this.nmTimer = setInterval(this.notifyMedia, ff))
                            }, b.prototype.clearMediaTimer = function () {
                                this.nmTimer && (clearInterval(this.nmTimer), this.nmTimer = void 0)
                            }, b.prototype.onHandlerDestroying = function () {
                                this.stopLoad()
                            }, b.prototype.onHandlerDestroyed = function () {
                                this.clearMediaTimer(), this.closeVideoDropFrameTimer(), this.state = df.STOPPED, this.fragmentTracker = null
                            }, b.prototype.startLoad = function (a) {
                                if (this.hasSkipPianTou = !1, void 0 !== this.videoRealStartPos && 0 === a && (this.startPosition = this.videoRealStartPos), this.levels) {
                                    var b = this.lastCurrentTime, c = this.hls;
                                    if (this.stopLoad(), this.setInterval(100), this.openMediaTimer(), this.openVideoDropFrameTimer(), this.level = -1, this.fragLoadError = 0, !this.startFragRequested) {
                                        var d = c.startLevel;
                                        d === -1 && (d = 0, this.bitrateTest = !1), this.level = c.nextLoadLevel = d, this.loadedmetadata = !1
                                    }
                                    b > 0 && a === -1 && (cc.b.log("override startPosition with lastCurrentTime @" + b.toFixed(3)), a = b), this.state = df.IDLE, this.nextLoadPosition = this.startPosition = this.lastCurrentTime = a, this.tick()
                                } else this.forceStartLoad = !0, this.state = df.STOPPED
                            }, b.prototype.stopLoad = function () {
                                var a = this.fragCurrent;
                                a && (a.loader && a.loader.abort(), this.fragmentTracker.removeFragment(a), this.fragCurrent = null), this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.clearInterval(), this.state = df.STOPPED, this.forceStartLoad = !1
                            }, b.prototype.doTick = function () {
                                switch (this.state) {
                                    case df.BUFFER_FLUSHING:
                                        this.fragLoadError = 0;
                                        break;
                                    case df.IDLE:
                                        this._doTickIdle();
                                        break;
                                    case df.WAITING_LEVEL:
                                        var a = this.levels[this.level];
                                        a && a.details && (this.state = df.IDLE);
                                        break;
                                    case df.FRAG_LOADING_WAITING_RETRY:
                                        var b = performance.now(), c = this.retryDate;
                                        (!c || b >= c || this.media && this.media.seeking) && (cc.b.log("mediaController: retryDate reached, switch back to IDLE state"), this.fragmentTracker && this.fragCurrent && this.fragmentTracker.removeFragment(this.fragCurrent), this.state = df.IDLE);
                                        break;
                                    case df.ERROR:
                                    case df.STOPPED:
                                    case df.FRAG_LOADING:
                                    case df.PARSING:
                                    case df.PARSED:
                                    case df.ENDED:
                                }
                                this._checkBuffer(), this._checkFragmentChanged()
                            }, b.prototype._doTickIdle = function () {
                                var a = this.hls, b = a.config, c = this.media;
                                if (void 0 !== this.levelLastLoaded && (c || !this.startFragRequested && b.startFragPrefetch) && this.canSelectNewFrag()) {
                                    var d = void 0;
                                    this.loadedmetadata ? d = c.currentTime : (d = this.nextLoadPosition, cc.b.log("Loading nextLoadPosition pos:" + d));
                                    var e = a.nextLoadLevel, f = this.levels[e];
                                    if (f) {
                                        var g = f.bitrate, h = void 0, i = b.p2pConfig && b.p2pConfig.maxBufferTime || 30;
                                        h = g ? Math.max(b.maxBufferSize / g / 1024, i) : i, h = Math.min(Math.min(h, tc.a.PlayMaxRemainTime), b.maxMaxBufferLength);
                                        var j = Qe.bufferInfo(this.mediaBuffer ? this.mediaBuffer : c, d, b.maxBufferHole),
                                            k = j.len;
                                        if (!(k >= h)) {
                                            var l = void 0;
                                            c && (l = c.currentTime), cc.b.log("buffer length of " + k.toFixed(3) + " is below max of " + h.toFixed(3) + ". checking for more payload ... ,loadedmetadata:" + this.loadedmetadata + "," + l + "," + this.nextLoadPosition + "  "), this.level = a.nextLoadLevel = e;
                                            var m = f.details;
                                            if (void 0 === m || m.live === !0 && this.levelLastLoaded !== e) return void (this.state = df.WAITING_LEVEL);
                                            var n = this.fragPrevious;
                                            if (!m.live && n && !n.backtracked && n.sn === m.endSN && !j.nextStart) {
                                                var o = Math.min(c.duration, n.start + n.duration);
                                                if (o - Math.max(j.end, n.start) <= Math.max(.2, n.duration)) {
                                                    var p = {};
                                                    return this.altAudio && (p.type = "video"), void (this.appended && this.pendingBuffering || (this.hls.trigger(bc.a.BUFFER_EOS, p), this.state = df.ENDED))
                                                }
                                            }
                                            j.cur = l, j.loadsn = this.loadSn, this.hls.trigger(bc.a.FRAG_BUFFER_INFO, j), this._fetchPayloadOrEos(d, j, m)
                                        }
                                    }
                                }
                            }, b.prototype._fetchPayloadOrEos = function (a, b, c) {
                                var d = this.fragPrevious, e = this.level, f = c.fragments, g = f.length;
                                if (0 !== g) {
                                    var h = f[0].start, i = f[g - 1].start + f[g - 1].duration, j = b.end, k = void 0;
                                    if (c.initSegment && !c.initSegment.data) k = c.initSegment; else if (c.live) {
                                        var l = this.config.initialLiveManifestSize;
                                        if (g < l) return void cc.b.warn("Can not start playback of a level, reason: not enough fragments " + g + " < " + l);
                                        if (k = this._ensureFragmentAtLivePoint(c, j, h, i, d, f, g), null === k) return
                                    } else j < h && (k = f[0]);
                                    return !k && (k = this._findFragment(h, d, g, f, j, i, c), this.fragCurrent && k.sn == this.fragCurrent.sn && k.level == this.fragCurrent.level) ? void cc.b.log("_findFragment is same as fragCurrent,sn:" + this.fragCurrent.sn + " level:" + this.fragCurrent.level) : void (k && (k.encrypted ? (cc.b.log("Loading key for " + k.sn + " of [" + c.startSN + " ," + c.endSN + "],level " + e), this._loadKey(k)) : (this.loadSn = k.sn, this._loadFragment(k))))
                                }
                            }, b.prototype._ensureFragmentAtLivePoint = function (a, b, c, d, e, f, g) {
                                var h = this.hls.config, i = this.media, j = void 0,
                                    k = void 0 !== h.liveMaxLatencyDuration ? h.liveMaxLatencyDuration : h.liveMaxLatencyDurationCount * a.targetduration;
                                if (b < Math.max(c - h.maxFragLookUpTolerance, d - k)) {
                                    var l = this.liveSyncPosition = this.computeLivePosition(c, a);
                                    cc.b.log("buffer end: " + b.toFixed(3) + " is located too far from the end of live sliding playlist, reset currentTime to : " + l.toFixed(3)), b = l, i && i.readyState && i.duration > l && (i.currentTime = l), this.nextLoadPosition = l
                                }
                                if (a.PTSKnown && b > d && i && i.readyState) return null;
                                if (this.startFragRequested && !a.PTSKnown) {
                                    if (e) if (a.programDateTime) j = Ea(f, e.endPdt + 1); else {
                                        var m = e.sn + 1;
                                        if (m >= a.startSN && m <= a.endSN) {
                                            var n = f[m - a.startSN];
                                            e.cc === n.cc && (j = n, cc.b.log("live playlist, switching playlist, load frag with next SN: " + j.sn))
                                        }
                                        j || (j = Pe.search(f, function (a) {
                                            return e.cc - a.cc
                                        }), j && cc.b.log("live playlist, switching playlist, load frag with same CC: " + j.sn))
                                    }
                                    j || (j = f[Math.min(g - 1, Math.round(g / 2))], cc.b.log("live playlist, switching playlist, unknown, load middle frag : " + j.sn))
                                }
                                return j
                            }, b.prototype._findFragment = function (a, b, c, d, e, f, g) {
                                var h = this.hls.config, i = function () {
                                    return Fa(b, d, e, f, h.maxFragLookUpTolerance)
                                }, j = void 0, k = void 0;
                                if (e < f ? g.programDateTime ? (k = Ea(d, Da(a, e, g)), k && !Ga(e, h.maxFragLookUpTolerance, k) || (cc.b.warn("Frag found by PDT search did not fit within tolerance; falling back to finding by SN"), k = i())) : k = Fa(b, d, e, f, h.maxFragLookUpTolerance) : k = d[c - 1], k) {
                                    j = k;
                                    var l = j.sn - g.startSN, m = b && j.level === b.level, n = d[l - 1], o = d[l + 1];
                                    if (b && j.sn === b.sn) if (m && !j.backtracked) if (j.sn < g.endSN) {
                                        var p = b.deltaPTS;
                                        p && p > h.maxBufferHole && b.dropped && l ? (j = n, cc.b.warn("SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this")) : (j = o, cc.b.log("SN just loaded, load next one: " + j.sn))
                                    } else j = null; else j.backtracked && (o && o.backtracked ? (cc.b.warn("Already backtracked from fragment " + o.sn + ", will not backtrack to fragment " + j.sn + ". Loading fragment " + o.sn), j = o) : (cc.b.warn("Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe"), j.dropped = 0, n ? (j = n, j.backtracked = !0) : l && (j = null)))
                                }
                                return j
                            }, b.prototype._loadKey = function (a) {
                                this.state = df.KEY_LOADING, this.hls.trigger(bc.a.KEY_LOADING, {frag: a})
                            }, b.prototype._loadFragment = function (a) {
                                var b = this.fragmentTracker.getState(a);
                                this.fragCurrent = a, this.startFragRequested = !0, isNaN(a.sn) || a.bitrateTest || (this.hls.emeEnabled || 0 != hc.a.playType) && (this.nextLoadPosition = a.start + a.duration), !this.hls.config.emeEnabled && 0 == hc.a.playType || a.backtracked || b === Me.NOT_LOADED || b === Me.PARTIAL ? (a.autoLevel = this.hls.autoLevelEnabled, a.bitrateTest = this.bitrateTest, this.hls.trigger(bc.a.FRAG_LOADING, {frag: a}), this.demuxer || (this.demuxer = new Ze(this.hls, "main")), this.state = df.FRAG_LOADING) : b === Me.APPENDING && this._reduceMaxBufferLength(a.duration) && this.fragmentTracker.removeFragment(a)
                            }, b.prototype.getBufferedFrag = function (a) {
                                return this.fragmentTracker.getBufferedFrag(a, He.LevelType.MAIN)
                            }, b.prototype.followingBufferedFrag = function (a) {
                                return a ? this.getBufferedFrag(a.endPTS + .5) : null
                            }, b.prototype._checkFragmentChanged = function () {
                                var a = void 0, b = void 0, c = this.media;
                                if (c && c.readyState && c.seeking === !1 && (b = c.currentTime, b > c.playbackRate * this.lastCurrentTime && (this.lastCurrentTime = b), Qe.isBuffered(c, b) ? a = this.getBufferedFrag(b) : Qe.isBuffered(c, b + .1) && (a = this.getBufferedFrag(b + .1)), a)) {
                                    var d = a;
                                    if (d !== this.fragPlaying) {
                                        this.hls.trigger(bc.a.FRAG_CHANGED, {frag: d});
                                        var e = d.level;
                                        this.fragPlaying && this.fragPlaying.level === e || this.hls.trigger(bc.a.LEVEL_SWITCHED, {level: e}), this.fragPlaying = d
                                    }
                                }
                            }, b.prototype.immediateLevelSwitch = function () {
                                if (cc.b.log("immediateLevelSwitch"), !this.immediateSwitch) {
                                    this.immediateSwitch = !0;
                                    var a = this.media, b = void 0;
                                    a ? (b = a.paused, a.pause()) : b = !0, this.previouslyPaused = b
                                }
                                var c = this.fragCurrent;
                                c && c.loader && c.loader.abort(), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                            }, b.prototype.immediateLevelSwitchEnd = function () {
                                var a = this.media;
                                a && a.buffered.length && (this.immediateSwitch = !1, Qe.isBuffered(a, a.currentTime) && (a.currentTime -= 1e-4), this.previouslyPaused || a.play())
                            }, b.prototype.nextLevelSwitch = function () {
                                var a = this.media;
                                if (a && a.readyState) {
                                    var b = void 0, c = void 0, d = void 0;
                                    if (c = this.getBufferedFrag(a.currentTime), c && c.startPTS > 1) {
                                        var e = c.startPTS - 1;
                                        cc.b.log("jy remove buffer start:[0," + e + "] cur:[sn:" + c.sn + ",startPTS:" + c.startPTS + ",endPts:" + c.endPTS + " curTime:" + a.currentTime + "]"), this.flushMainBuffer(0, c.startPTS - 1)
                                    }
                                    if (a.paused) b = 0; else {
                                        var f = this.hls.nextLoadLevel, g = this.levels[f], h = this.fragLastKbps;
                                        b = h && this.fragCurrent ? this.fragCurrent.duration * g.bitrate / (1e3 * h) + 1 : 0
                                    }
                                    if (d = this.getBufferedFrag(a.currentTime + b), d && (cc.b.log("jy remove buffer nextflag1:[sn:" + d.sn + ",startPTS:" + d.startPTS + ",endPts:" + d.endPTS + " curTime:" + a.currentTime + "] delay:" + b), d = this.followingBufferedFrag(d))) {
                                        cc.b.log("jy remove buffer real nextflag:[sn:" + d.sn + ",startPTS:" + d.startPTS + ",endPts:" + d.endPTS + " curTime:" + a.currentTime + "]");
                                        var i = this.fragCurrent;
                                        i && i.loader && (i.loader.abort(), cc.b.log("jy remove buffer abort")), this.postMsg({
                                            cmd: "clear",
                                            type: "switch"
                                        }), this.fragCurrent = null, cc.b.log("jy remove buffer after:[" + d.maxStartPTS + ",infinity]  curTime:" + a.currentTime), this.flushMainBuffer(d.maxStartPTS, Number.POSITIVE_INFINITY)
                                    }
                                }
                            }, b.prototype.cutBuffer = function (a, b) {
                                var c = {startOffset: a, endOffset: b};
                                this.altAudio && (c.type = "video"), this.hls.trigger(bc.a.BUFFER_CUT, c), this.hls.trigger(bc.a.REMOVE_BUFFERED_FRAG, {
                                    start: a,
                                    end: b
                                })
                            }, b.prototype.flushMainBuffer = function (a, b) {
                                this.state = df.BUFFER_FLUSHING;
                                var c = {startOffset: a, endOffset: b};
                                this.altAudio && (c.type = "video"), this.hls.trigger(bc.a.BUFFER_FLUSHING, c)
                            }, b.prototype.onMediaAttached = function (a) {
                                var b = this.media = this.mediaBuffer = a.media;
                                this.onvseeking = this.onMediaSeeking.bind(this), this.onvseeked = this.onMediaSeeked.bind(this), this.onvended = this.onMediaEnded.bind(this), b.addEventListener("seeking", this.onvseeking), b.addEventListener("seeked", this.onvseeked), b.addEventListener("ended", this.onvended);
                                var c = this.config;
                                this.levels && c.autoStartLoad && this.hls.startLoad(c.startPosition)
                            }, b.prototype.onMediaDetaching = function () {
                                var a = this.media;
                                a && a.ended && (cc.b.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0);
                                var b = this.levels;
                                b && b.forEach(function (a) {
                                    a.details && a.details.fragments.forEach(function (a) {
                                        a.backtracked = void 0
                                    })
                                }), a && (a.removeEventListener("seeking", this.onvseeking), a.removeEventListener("seeked", this.onvseeked), a.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.media = this.mediaBuffer = null, this.loadedmetadata = !1, this.stopLoad()
                            }, b.prototype.onMediaSeeking = function () {
                                this.dragWasteTime = Jc.a.GetTick();
                                var a = this.media, b = a ? a.currentTime : void 0, c = this.config;
                                isNaN(b) || cc.b.log("media seeking to " + b.toFixed(3));
                                var d = this.mediaBuffer ? this.mediaBuffer : a,
                                    e = Qe.bufferInfo(d, b, this.config.maxBufferHole), f = this.fragCurrent;
                                if (0 === e.len && f) {
                                    var g = c.maxFragLookUpTolerance, h = f.start - g, i = f.start + f.duration + g;
                                    b < h || b > i ? (f.loader && (cc.b.log("seeking outside of buffer while fragment load in progress, cancel fragment load"), f.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.state = df.IDLE) : cc.b.log("seeking outside of buffer but within currently loaded fragment range")
                                }
                                this.state === df.ENDED && 0 === e.len && (this.fragPrevious = 0), a && (this.lastCurrentTime = b), this.loadedmetadata || (this.nextLoadPosition = this.startPosition = b), this.tick()
                            }, b.prototype.onMediaSeeked = function () {
                                var a = this.media, b = a ? a.currentTime : void 0;
                                isNaN(b) || cc.b.log("media seeked to " + b.toFixed(3)), this.tick()
                            }, b.prototype.onMediaEnded = function () {
                                cc.b.log("media ended"), this.startPosition = this.lastCurrentTime = 0
                            }, b.prototype.onManifestLoading = function () {
                                cc.b.log("trigger BUFFER_RESET"), this.hls.trigger(bc.a.BUFFER_RESET), this.fragmentTracker.removeAllFragments(), this.stalled = !1, this.startPosition = this.lastCurrentTime = 0
                            }, b.prototype.onManifestParsed = function (a) {
                                var b = !1, c = !1, d = void 0;
                                a.levels.forEach(function (a) {
                                    d = a.audioCodec, d && (d.indexOf("mp4a.40.2") !== -1 && (b = !0), d.indexOf("mp4a.40.5") !== -1 && (c = !0))
                                }), this.audioCodecSwitch = b && c, this.audioCodecSwitch && cc.b.log("both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"), this.levels = a.levels, this.startFragRequested = !1;
                                var e = this.config;
                                (e.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(e.startPosition)
                            }, b.prototype.onLevelLoaded = function (a) {
                                var b = a.details, c = a.level, d = this.levels[this.levelLastLoaded], e = this.levels[c],
                                    f = b.totalduration, g = 0;
                                if (ie.getInstance().m_m3u8Span = performance.now() - this.startTick, cc.b.log("preloading m3u8_cost:" + ie.getInstance().m_m3u8Span + "ms"), cc.b.setdata("total_duration", b.totalduration), cc.b.log("level " + c + " loaded [" + b.startSN + "," + b.endSN + "],duration:" + f), b.live) {
                                    var h = e.details;
                                    h && b.fragments.length > 0 ? (ta(h, b), g = b.fragments[0].start, this.liveSyncPosition = this.computeLivePosition(g, h), b.PTSKnown && !isNaN(g) ? cc.b.log("live playlist sliding:" + g.toFixed(3)) : (cc.b.log("live playlist - outdated PTS, unknown sliding"), za(this.fragPrevious, d, b))) : (cc.b.log("live playlist - first load, unknown sliding"), b.PTSKnown = !1, za(this.fragPrevious, d, b))
                                } else b.PTSKnown = !1;
                                if (e.details = b, this.levelLastLoaded = c, this.hls.trigger(bc.a.LEVEL_UPDATED, {
                                    details: b,
                                    level: c
                                }), this.startFragRequested === !1) {
                                    if (this.startPosition === -1 || this.lastCurrentTime === -1) {
                                        var i = b.startTimeOffset;
                                        isNaN(i) ? b.live ? (this.startPosition = this.computeLivePosition(g, b), cc.b.log("configure startPosition to " + this.startPosition)) : this.startPosition = 0 : (i < 0 && (cc.b.log("negative start time offset " + i + ", count from end of last fragment"), i = g + f + i), cc.b.log("start time offset found in playlist, adjust startPosition to " + i), this.startPosition = i), this.lastCurrentTime = this.startPosition
                                    }
                                    this.nextLoadPosition = this.startPosition
                                }
                                this.state === df.WAITING_LEVEL && (this.state = df.IDLE), this.tick()
                            }, b.prototype.onKeyLoaded = function () {
                                this.state === df.KEY_LOADING && (this.state = df.IDLE, this.tick())
                            }, b.prototype.onFragLoaded = function (a) {
                                var b = this.fragCurrent, c = a.frag;
                                if (b && "main" === c.type && c.level === b.level && c.sn === b.sn) {
                                    var d = a.stats, e = this.levels[b.level], f = e.details;
                                    if (this.bitrateTest = !1, this.stats = d, c.bitrateTest === !0 && this.hls.nextLoadLevel) this.state = df.IDLE, this.startFragRequested = !1, d.tparsed = d.tbuffered = performance.now(), this.hls.trigger(bc.a.FRAG_BUFFERED, {
                                        stats: d,
                                        frag: b,
                                        id: "main"
                                    }), this.tick(); else if ("initSegment" === c.sn) this.state = df.IDLE, d.tparsed = d.tbuffered = performance.now(), f.initSegment.data = a.payload, this.hls.trigger(bc.a.FRAG_BUFFERED, {
                                        stats: d,
                                        frag: b,
                                        id: "main"
                                    }), this.tick(); else {
                                        this.state = df.PARSING;
                                        var g = f.totalduration,
                                            h = (b.level, b.sn, this.config.defaultAudioCodec || e.audioCodec);
                                        this.audioCodecSwap && (cc.b.log("swapping playlist audio codec"), void 0 === h && (h = this.lastAudioCodec), h && (h = h.indexOf("mp4a.40.5") !== -1 ? "mp4a.40.2" : "mp4a.40.5")), this.pendingBuffering = !0, this.appended = !1;
                                        var i = this.demuxer;
                                        i || (i = this.demuxer = new Ze(this.hls, "main"));
                                        var j = this.media, k = j && j.seeking, l = !k && (f.PTSKnown || !f.live),
                                            m = f.initSegment ? f.initSegment.data : [], n = !0, o = 0, p = a.stats.offset;
                                        void 0 !== p && null !== p || (p = 0);
                                        var q = a.stats.keyid;
                                        b.mapTag = f.mapTag, i.push(a.payload, m, h, e.videoCodec, b, g, l, void 0, n, o, p, q)
                                    }
                                }
                                this.fragLoadError = 0
                            }, b.prototype.onFragLoadProgress = function (a) {
                                var b = this.fragCurrent, c = a.frag;
                                if (b && "main" === c.type && c.level === b.level && c.sn === b.sn) {
                                    var d = a.stats, e = this.levels[b.level], f = e.details;
                                    if (this.bitrateTest = !1, this.stats = d, "initSegment" === c.sn) this.state = df.IDLE, d.tparsed = d.tbuffered = performance.now(), f.initSegment.data = a.payload, this.hls.trigger(bc.a.FRAG_BUFFERED, {
                                        stats: d,
                                        frag: b,
                                        id: "main"
                                    }), this.tick(); else {
                                        this.state = df.PARSING;
                                        var g = f.totalduration,
                                            h = (b.level, b.sn, this.config.defaultAudioCodec || e.audioCodec);
                                        this.audioCodecSwap && (cc.b.log("swapping playlist audio codec"), void 0 === h && (h = this.lastAudioCodec), h && (h = h.indexOf("mp4a.40.5") !== -1 ? "mp4a.40.2" : "mp4a.40.5")), this.pendingBuffering = !0, this.appended = !1;
                                        var i = this.demuxer;
                                        i || (i = this.demuxer = new Ze(this.hls, "main"));
                                        var j = this.media, k = j && j.seeking, l = !k && (f.PTSKnown || !f.live),
                                            m = f.initSegment ? f.initSegment.data : [], n = !1, o = 0, p = a.stats.offset,
                                            q = a.stats.keyid;
                                        i.push(a.payload, m, h, e.videoCodec, b, g, l, void 0, n, o, p, q)
                                    }
                                }
                                this.fragLoadError = 0
                            }, b.prototype.onFragParsingInitSegment = function (a) {
                                var b = this.fragCurrent, c = a.frag;
                                if (b && "main" === a.id && c.sn === b.sn && c.level === b.level) {
                                    var d = a.tracks, e = void 0, f = void 0;
                                    if (d.audio && this.altAudio && delete d.audio, f = d.audio) {
                                        var g = this.levels[this.level].audioCodec, h = navigator.userAgent.toLowerCase();
                                        g && this.audioCodecSwap && (cc.b.log("swapping playlist audio codec"), g = g.indexOf("mp4a.40.5") !== -1 ? "mp4a.40.2" : "mp4a.40.5"), this.audioCodecSwitch && 1 !== f.metadata.channelCount && h.indexOf("firefox") === -1 && (g = "mp4a.40.5"), h.indexOf("android") !== -1 && "audio/mpeg" !== f.container && (g = "mp4a.40.2", cc.b.log("Android: force audio codec to " + g)), f.levelCodec = g, f.id = a.id
                                    }
                                    f = d.video, f && (f.levelCodec = this.levels[this.level].videoCodec, f.id = a.id), this.hls.trigger(bc.a.BUFFER_CODECS, d);
                                    for (e in d) {
                                        f = d[e], cc.b.log("main track:" + e + ",container:" + f.container + ",codecs[level/parsed]=[" + f.levelCodec + "/" + f.codec + "]");
                                        var i = f.initSegment;
                                        i && (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(bc.a.BUFFER_APPENDING, {
                                            type: e,
                                            data: i,
                                            parent: "main",
                                            content: "initSegment"
                                        }))
                                    }
                                    this.tick()
                                }
                            }, b.prototype.checkVideoRealStartPos = function (a) {
                                0 === a.sn && void 0 === this.videoRealStartPos && ("audio" == a.type && void 0 === this.audioStart && (this.audioStart = a.startPTS), "video" == a.type && void 0 === this.videoStart && (this.videoStart = a.startPTS), void 0 != this.audioStart && void 0 != this.videoStart && 0 == this.startPosition && (this.videoRealStartPos = Math.max(this.audioStart, this.videoStart), this.startPosition = this.videoRealStartPos, this.media && (this.media.currentTime = this.startPosition), cc.b.log("jump 2 " + this.startPosition)))
                            }, b.prototype.onFragParsingData = function (a) {
                                var b = this;
                                this.checkVideoRealStartPos(a);
                                var c = this.fragCurrent, d = a.frag;
                                if (!c || "main" !== a.id || d.sn !== c.sn || d.level !== c.level || "audio" === a.type && this.altAudio) {
                                    if (!this.hls.config.emeEnabled && 0 == hc.a.playType) {
                                        var e = c ? c.sn : void 0, f = c ? c.level : void 0;
                                        cc.b.log("demux drop data:" + a.type + ",startPTS:" + a.startPTS.toFixed(3) + ",endPTS:" + a.endPTS.toFixed(3) + " sn:[old:" + d.sn + ",new:" + e + "] level:[old:" + d.level + ",new:" + f + "]")
                                    }
                                } else {
                                    var g = this.levels[this.level], h = c;
                                    if (isNaN(a.endPTS) && (a.endPTS = a.startPTS + c.duration, a.endDTS = a.startDTS + c.duration), a.hasAudio === !0 && h.addElementaryStream(pe.ElementaryStreamTypes.AUDIO), a.hasVideo === !0 && h.addElementaryStream(pe.ElementaryStreamTypes.VIDEO), cc.b.log("Parsed " + a.type + ",PTS:[" + a.startPTS.toFixed(3) + "," + a.endPTS.toFixed(3) + "],DTS:[" + a.startDTS.toFixed(3) + "/" + a.endDTS.toFixed(3) + "],nb:" + a.nb + ",dropped:" + (a.dropped || 0)), "video" === a.type) if (h.dropped = a.dropped, h.dropped) if (h.backtracked) cc.b.warn("Already backtracked on this fragment, appending with the gap", h.sn); else {
                                        var i = g.details;
                                        if (!i || h.sn !== i.startSN) return cc.b.warn("missing video frame(s), backtracking fragment", h.sn), this.fragmentTracker.removeFragment(h), h.backtracked = !0, this.nextLoadPosition = a.startPTS, this.state = df.IDLE, this.fragPrevious = h, void this.tick();
                                        cc.b.warn("missing video frame(s) on first frag, appending with gap", h.sn)
                                    } else h.backtracked = !1;
                                    var j = sa(g.details, h, a.startPTS, a.endPTS, a.startDTS, a.endDTS), k = this.hls;
                                    k.trigger(bc.a.LEVEL_PTS_UPDATED, {
                                        details: g.details,
                                        level: this.level,
                                        drift: j,
                                        type: a.type,
                                        start: a.startPTS,
                                        end: a.endPTS
                                    });
                                    var l = 0;
                                    [a.data1, a.data2].forEach(function (c) {
                                        l++, c && c.length ? (b.appended = !0, b.pendingBuffering = !0, k.trigger(bc.a.BUFFER_APPENDING, {
                                            type: a.type,
                                            data: c,
                                            parent: "main",
                                            content: "data",
                                            index: l
                                        })) : cc.b.log("demux drop(" + a.type + ") PTS:[" + a.startPTS.toFixed(3) + "," + a.endPTS.toFixed(3) + "] state:" + b.state)
                                    }), this.tick()
                                }
                            }, b.prototype.onFragParsed = function (a) {
                                var b = this.fragCurrent, c = a.frag;
                                b && "main" === a.id && c.sn === b.sn && c.level === b.level && (this.stats.tparsed = performance.now(), this.state = df.PARSED, this._checkAppendedParsed())
                            }, b.prototype.onAudioTrackSwitching = function (a) {
                                var b = !!a.url, c = a.id;
                                if (!b) {
                                    if (this.mediaBuffer !== this.media) {
                                        cc.b.log("switching on main audio, use media.buffered to schedule main fragment loading"), this.mediaBuffer = this.media;
                                        var d = this.fragCurrent;
                                        d.loader && (cc.b.log("switching to main audio track, cancel main fragment load"), d.loader.abort()), this.fragCurrent = null, this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(),
                                            this.demuxer = null), this.state = df.IDLE
                                    }
                                    var e = this.hls;
                                    e.trigger(bc.a.BUFFER_FLUSHING, {
                                        startOffset: 0,
                                        endOffset: Number.POSITIVE_INFINITY,
                                        type: "audio"
                                    }), e.trigger(bc.a.AUDIO_TRACK_SWITCHED, {id: c}), this.altAudio = !1
                                }
                            }, b.prototype.onAudioTrackSwitched = function (a) {
                                var b = a.id, c = !!this.hls.audioTracks[b].url;
                                if (c) {
                                    var d = this.videoBuffer;
                                    d && this.mediaBuffer !== d && (cc.b.log("switching on alternate audio, use video.buffered to schedule main fragment loading"), this.mediaBuffer = d)
                                }
                                this.altAudio = c, this.tick()
                            }, b.prototype.onBufferCreated = function (a) {
                                var b = a.tracks, c = void 0, d = void 0, e = !1;
                                for (var f in b) {
                                    var g = b[f];
                                    "main" === g.id ? (d = f, c = g, "video" === f && (this.videoBuffer = b[f].buffer)) : e = !0
                                }
                                e && c ? (cc.b.log("alternate track found, use " + d + ".buffered to schedule main fragment loading"), this.mediaBuffer = c.buffer) : this.mediaBuffer = this.media
                            }, b.prototype.onBufferAppended = function (a) {
                                if ("main" === a.parent) {
                                    this.state;
                                    this.pendingBuffering = a.pending > 0, this._checkAppendedParsed()
                                }
                            }, b.prototype._checkAppendedParsed = function () {
                                if (!(this.state !== df.PARSED || this.appended && this.pendingBuffering)) {
                                    var a = this.fragCurrent;
                                    if (a) {
                                        var b = this.mediaBuffer ? this.mediaBuffer : this.media;
                                        cc.b.log("main buffered : " + _e.toString(b.buffered)), this.fragPrevious = a;
                                        var c = this.stats;
                                        c.tbuffered = performance.now(), this.fragLastKbps = Math.round(8 * c.total / (c.tbuffered - c.tfirst)), this.hls.trigger(bc.a.FRAG_BUFFERED, {
                                            stats: c,
                                            frag: a,
                                            id: "main"
                                        }), this.state = df.IDLE
                                    }
                                    this.doTick()
                                }
                            }, b.prototype.onError = function (a) {
                                var b = a.frag || this.fragCurrent;
                                if (!b || "main" === b.type) {
                                    var c = !!this.media && Qe.isBuffered(this.media, this.media.currentTime) && Qe.isBuffered(this.media, this.media.currentTime + .5);
                                    switch (a.details) {
                                        case ac.a.FRAG_LOAD_ERROR:
                                        case ac.a.FRAG_LOAD_TIMEOUT:
                                        case ac.a.KEY_LOAD_ERROR:
                                        case ac.a.KEY_LOAD_TIMEOUT:
                                            if (!a.fatal) {
                                                var d = 0;
                                                if (this.media && (d = Qe.bufferInfo(this.media, this.media.currentTime, .2).len), this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry || d >= 5) {
                                                    var e = ef;
                                                    cc.b.warn("mediaController: frag loading failed, retry in " + e + " ms"), this.retryDate = performance.now() + e, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.fragLoadError++, this.state = df.FRAG_LOADING_WAITING_RETRY
                                                } else cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "mediaController: " + a.details + " reaches max retry, redispatch as fatal ..."), a.fatal = !0, this.state = df.ERROR
                                            }
                                            break;
                                        case ac.a.LEVEL_LOAD_ERROR:
                                        case ac.a.LEVEL_LOAD_TIMEOUT:
                                            this.state !== df.ERROR && (a.fatal ? (this.state = df.ERROR, cc.b.warn("streamController: " + a.details + ",switch to " + this.state + " state ...")) : a.levelRetry || this.state !== df.WAITING_LEVEL || (this.state = df.IDLE));
                                            break;
                                        case ac.a.BUFFER_FULL_ERROR:
                                            "main" !== a.parent || this.state !== df.PARSING && this.state !== df.PARSED || (c ? (this._reduceMaxBufferLength(this.config.maxBufferLength), this.state = df.IDLE) : (cc.b.warn("buffer full error also media.currentTime is not buffered, flush everything"), this.fragCurrent = null, this.flushMainBuffer(0, Number.POSITIVE_INFINITY)))
                                    }
                                }
                            }, b.prototype._reduceMaxBufferLength = function (a) {
                                var b = this.config;
                                return b.maxMaxBufferLength >= a && (b.maxMaxBufferLength /= 2, cc.b.warn("main:reduce max buffer length to " + b.maxMaxBufferLength + "s"), !0)
                            }, b.prototype.onPlay = function (a) {
                                this.onplay = !0, 0 == ie.getInstance().m_playspan && (ie.getInstance().m_playspan = performance.now() - this.startTick, ie.getInstance().m_playspanFromOuter = a.start_play_cost, ie.getInstance().reportQuic1(), cc.b.log("preloading play_cost:" + ie.getInstance().m_playspan + "ms  outer:" + ie.getInstance().m_playspanFromOuter + "ms"))
                            }, b.prototype._checkBuffer = function () {
                                var a = this.config, b = this.media, c = 1e3;
                                if (b && 0 !== b.readyState) {
                                    var d = b.currentTime, e = this.mediaBuffer ? this.mediaBuffer : b, f = e.buffered;
                                    if (this._seekWhenGapBetweenCurrentTimeAndBufferStart(b, f), !this.loadedmetadata && f.length) this.loadedmetadata = !0, this._seekToStartPos(); else if (this.immediateSwitch) this.immediateLevelSwitchEnd(); else {
                                        var g = !(b.paused && b.readyState > 1 || b.ended || 0 === b.buffered.length),
                                            h = performance.now(), i = Qe.bufferInfo(b, d, 0);
                                        if (i.cur = d, i.loadsn = this.loadSn, this.hls.trigger(bc.a.FRAG_BUFFER_INFO, i), d !== this.lastCurrentTime) this.stallReported && (cc.b.warn("playback not stuck anymore @" + d + ", after " + Math.round(h - this.stalled) + "ms"), this.stallReported = !1), this.stalled = null, this.nudgeRetry = 0; else if (g) {
                                            var j = h - this.stalled, k = Qe.bufferInfo(b, d, a.maxBufferHole);
                                            if (!this.stalled) return void (this.stalled = h);
                                            j >= c && this._reportStall(k.len), this._tryFixBufferStall(k, j)
                                        }
                                    }
                                }
                            }, b.prototype.onFragLoadEmergencyAborted = function () {
                                this.state = df.IDLE, this.loadedmetadata || (this.startFragRequested = !1, this.nextLoadPosition = this.startPosition), this.tick()
                            }, b.prototype.onBufferFlushed = function () {
                                var a = this.mediaBuffer ? this.mediaBuffer : this.media;
                                a && this.fragmentTracker.detectEvictedFragments(pe.ElementaryStreamTypes.VIDEO, a.buffered), this.state = df.IDLE, this.fragPrevious = null
                            }, b.prototype.swapAudioCodec = function () {
                                this.audioCodecSwap = !this.audioCodecSwap
                            }, b.prototype.computeLivePosition = function (a, b) {
                                var c = void 0 !== this.config.liveSyncDuration ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * b.targetduration;
                                return a + Math.max(0, b.totalduration - c)
                            }, b.prototype._tryFixBufferStall = function (a, b) {
                                var c = this.config, d = this.media, e = d.currentTime, f = .5,
                                    g = this.fragmentTracker.getPartialFragment(e);
                                g && this._trySkipBufferHole(g), a.len > f && b > 1e3 * c.highBufferWatchdogPeriod && (this.stalled = null, this._tryNudgeBuffer())
                            }, b.prototype._reportStall = function (a) {
                                var b = this.hls, c = this.media, d = this.stallReported;
                                d || (this.stallReported = !0, cc.b.warn("Playback stalling at @" + c.currentTime + " due to low buffer"), b.trigger(bc.a.ERROR, {
                                    type: ac.b.MEDIA_ERROR,
                                    details: ac.a.BUFFER_STALLED_ERROR,
                                    fatal: !1,
                                    buffer: a
                                }))
                            }, b.prototype._trySkipBufferHole = function (a) {
                                for (var b = this.hls, c = this.media, d = c.currentTime, e = 0, f = 0; f < c.buffered.length; f++) {
                                    var g = c.buffered.start(f);
                                    if (d >= e && d < g) return c.currentTime = Math.max(g, c.currentTime + .1), cc.b.warn("skipping hole, adjusting currentTime from " + d + " to " + c.currentTime), this.stalled = null, void b.trigger(bc.a.ERROR, {
                                        type: ac.b.MEDIA_ERROR,
                                        details: ac.a.BUFFER_SEEK_OVER_HOLE,
                                        fatal: !1,
                                        reason: "fragment loaded with buffer holes, seeking from " + d + " to " + c.currentTime,
                                        frag: a
                                    });
                                    e = c.buffered.end(f)
                                }
                            }, b.prototype._tryNudgeBuffer = function () {
                                var a = this.config, b = this.hls, c = this.media, d = c.currentTime,
                                    e = (this.nudgeRetry || 0) + 1;
                                if (this.nudgeRetry = e, e < a.nudgeMaxRetry) {
                                    var f = d + e * a.nudgeOffset;
                                    cc.b.log("adjust currentTime from " + d + " to " + f), c.currentTime = f, b.trigger(bc.a.ERROR, {
                                        type: ac.b.MEDIA_ERROR,
                                        details: ac.a.BUFFER_NUDGE_ON_STALL,
                                        fatal: !1
                                    })
                                } else cc.b.error(ac.c.BUFFER_ERROR, "still stuck in high buffer @" + d + " after " + a.nudgeMaxRetry + ", raise fatal error"), b.trigger(bc.a.ERROR, {
                                    type: ac.b.MEDIA_ERROR,
                                    details: ac.a.BUFFER_STALLED_ERROR,
                                    fatal: !0
                                })
                            }, b.prototype._seekToStartPos = function () {
                                var a = this.media, b = a.currentTime, c = a.seeking ? b : this.startPosition;
                                b !== c && (cc.b.log("target start position not buffered, seek to buffered.start(0) " + c + " from current time " + b + " "), a.currentTime = c, this.hasSkipPianTou = !0)
                            }, b.prototype.postMsg = function (a) {
                                this.demuxer && this.demuxer.postMsg && this.demuxer.postMsg(a)
                            }, b.prototype.getCurrentFrag = function () {
                                return this.fragCurrent
                            }, b.prototype.canSelectNewFrag = function () {
                                if (this.hls && this.fragCurrent && this.hls.audioStreamController) {
                                    var a = this.hls.audioStreamController.getCurrentFrag();
                                    if (a) {
                                        var b = void 0 == this.fragCurrent.startPTS ? this.fragCurrent.start : this.fragCurrent.startPTS,
                                            c = void 0 == a.startPTS ? a.start : a.startPTS, d = this.fragCurrent.level,
                                            e = this.hls.levels, f = 12;
                                        if (this.maxDuration) f = this.maxDuration; else if (e.length > d) {
                                            var g = e[d].details;
                                            g && g.targetduration > 0 && (f = g.targetduration, this.maxDuration = f)
                                        }
                                        if (b - c > 3 * f) return !1
                                    }
                                }
                                return !0
                            }, b.prototype._seekWhenGapBetweenCurrentTimeAndBufferStart = function (a, b) {
                                for (var c = a.currentTime, d = b.length, e = 0; e < d; e++) {
                                    var f = b.start(e);
                                    if (f > c) {
                                        if (f - c < .1) {
                                            if (this.startPosition > .5 && !this.hasSkipPianTou) return;
                                            var g = f + .1;
                                            g != this.lastSeekPosition && (a.currentTime = g, cc.b.log("There is a gap(<0.1s) between currentTime and buffer start, we seek to " + g + "s"), this.lastSeekPosition = g)
                                        }
                                        break
                                    }
                                }
                            }, cf(b, [{
                                key: "state", set: function (a) {
                                    if (this.state !== a) {
                                        var b = this.state;
                                        this._state = a, cc.b.log("main stream:" + b + "->" + a), this.hls.trigger(bc.a.STREAM_STATE_TRANSITION, {
                                            previousState: b,
                                            nextState: a
                                        })
                                    }
                                }, get: function () {
                                    return this._state
                                }
                            }, {
                                key: "currentLevel", get: function () {
                                    var a = this.media;
                                    if (a) {
                                        var b = this.getBufferedFrag(a.currentTime);
                                        if (b) return b.level
                                    }
                                    return -1
                                }
                            }, {
                                key: "nextBufferedFrag", get: function () {
                                    var a = this.media;
                                    return a ? this.followingBufferedFrag(this.getBufferedFrag(a.currentTime)) : null
                                }
                            }, {
                                key: "nextLevel", get: function () {
                                    var a = this.nextBufferedFrag;
                                    return a ? a.level : -1
                                }
                            }, {
                                key: "liveSyncPosition", get: function () {
                                    return this._liveSyncPosition
                                }, set: function (a) {
                                    this._liveSyncPosition = a
                                }
                            }]), b
                        }(bf), jf = hf, kf = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), lf = function (a) {
                            function b(c) {
                                Ka(this, b);
                                var d = La(this, a.call(this, c, bc.a.MANIFEST_LOADED, bc.a.LEVEL_LOADED, bc.a.FRAG_LOADED, bc.a.ERROR));
                                return d.canload = !1, d.currentLevelIndex = null, d.manualLevelIndex = -1, d.timer = null, d
                            }

                            return Ma(b, a), b.prototype.onHandlerDestroying = function () {
                                this.cleanTimer(), this.manualLevelIndex = -1
                            }, b.prototype.cleanTimer = function () {
                                null !== this.timer && (clearTimeout(this.timer), this.timer = null)
                            }, b.prototype.startLoad = function () {
                                var a = this._levels;
                                this.canload = !0, this.levelRetryCount = 0, a && a.forEach(function (a) {
                                    a.loadError = 0;
                                    var b = a.details;
                                    b && b.live && (a.details = void 0)
                                }), null !== this.timer && this.loadLevel()
                            }, b.prototype.stopLoad = function () {
                                this.canload = !1
                            }, b.prototype.onManifestLoaded = function (a) {
                                var b = [], c = void 0, d = {}, e = null, f = !1, g = !1,
                                    h = /chrome|firefox/.test(navigator.userAgent.toLowerCase()), i = [];
                                if (a.levels.forEach(function (a) {
                                    a.loadError = 0, a.fragmentError = !1, f = f || !!a.videoCodec, g = g || !!a.audioCodec || !(!a.attrs || !a.attrs.AUDIO), h === !0 && a.audioCodec && a.audioCodec.indexOf("mp4a.40.34") !== -1 && (a.audioCodec = void 0), e = d[a.bitrate], void 0 === e ? (a.url = [a.url], a.urlId = 0, d[a.bitrate] = a, b.push(a)) : e.url.push(a.url)
                                }), f === !0 && g === !0 && (b = b.filter(function (a) {
                                    var b = a.videoCodec;
                                    return !!b
                                })), b = b.filter(function (a) {
                                    var b = a.audioCodec, c = a.videoCodec;
                                    return (!b || _(b)) && (!c || _(c))
                                }), a.audioTracks && (i = a.audioTracks.filter(function (a) {
                                    return !a.audioCodec || _(a.audioCodec, "audio")
                                })), b.length > 0) {
                                    c = b[0].bitrate, b.sort(function (a, b) {
                                        return a.bitrate - b.bitrate
                                    }), this._levels = b;
                                    for (var j = 0; j < b.length; j++) if (b[j].bitrate === c) {
                                        this._firstLevel = j, cc.b.log("manifest loaded," + b.length + " level(s) found, first bitrate:" + c);
                                        break
                                    }
                                    this.hls.trigger(bc.a.MANIFEST_PARSED, {
                                        levels: b,
                                        audioTracks: i,
                                        firstLevel: this._firstLevel,
                                        stats: a.stats,
                                        audio: g,
                                        video: f,
                                        altAudio: i.length > 0 && f
                                    })
                                } else this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.MEDIA_ERROR,
                                    details: ac.a.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                    fatal: !0,
                                    url: this.hls.url,
                                    reason: "no level with compatible codecs found in manifest"
                                })
                            }, b.prototype.setLevelInternal = function (a) {
                                var b = this._levels, c = this.hls;
                                if (a >= 0 && a < b.length) {
                                    if (this.cleanTimer(), this.currentLevelIndex !== a) {
                                        cc.b.log("switching to level " + a), this.currentLevelIndex = a;
                                        var d = b[a];
                                        d.level = a, c.trigger(bc.a.LEVEL_SWITCHING, d)
                                    }
                                    var e = b[a], f = e.details;
                                    if (!f || f.live === !0) {
                                        var g = e.urlId;
                                        c.trigger(bc.a.LEVEL_LOADING, {url: e.url[g], level: a, id: g, m3u8: e.m3u8})
                                    }
                                } else c.trigger(bc.a.ERROR, {
                                    type: ac.b.OTHER_ERROR,
                                    details: ac.a.LEVEL_SWITCH_ERROR,
                                    level: a,
                                    fatal: !1,
                                    reason: "invalid level idx"
                                })
                            }, b.prototype.onError = function (a) {
                                if (a.fatal === !0) return void (a.type === ac.b.NETWORK_ERROR && this.cleanTimer());
                                var b = !1, c = !1, d = void 0;
                                switch (a.details) {
                                    case ac.a.FRAG_LOAD_ERROR:
                                    case ac.a.FRAG_LOAD_TIMEOUT:
                                    case ac.a.KEY_LOAD_ERROR:
                                    case ac.a.KEY_LOAD_TIMEOUT:
                                        d = a.frag.level, c = !0;
                                        break;
                                    case ac.a.LEVEL_LOAD_ERROR:
                                    case ac.a.LEVEL_LOAD_TIMEOUT:
                                        d = a.context.level, b = !0;
                                        break;
                                    case ac.a.REMUX_ALLOC_ERROR:
                                        d = a.level, b = !0
                                }
                                void 0 !== d && this.recoverLevel(a, d, b, c)
                            }, b.prototype.recoverLevel = function (a, b, c, d) {
                                var e = this, f = this.hls.config, g = a.details, h = this._levels[b], i = void 0,
                                    j = void 0, k = void 0;
                                if (h.loadError++, h.fragmentError = d, c === !0) {
                                    if (!(this.levelRetryCount + 1 <= f.levelLoadingMaxRetry)) return cc.b.error(ac.c.NETWORK_ERROR, "level controller, cannot recover from " + g + " error"), this.currentLevelIndex = null, this.cleanTimer(), void (a.fatal = !0);
                                    j = Math.min(Math.pow(2, this.levelRetryCount) * f.levelLoadingRetryDelay, f.levelLoadingMaxRetryTimeout), this.timer = setTimeout(function () {
                                        return e.loadLevel()
                                    }, j), a.levelRetry = !0, this.levelRetryCount++, cc.b.warn("level controller, " + g + ", retry in " + j + " ms, current retry count is " + this.levelRetryCount)
                                }
                                c !== !0 && d !== !0 || (i = h.url.length, i > 1 && h.loadError < i ? (cc.b.warn("level controller, " + g + " for level " + b + ": switching to redundant stream id " + h.urlId), h.urlId = (h.urlId + 1) % i, h.details = void 0) : this.manualLevelIndex === -1 ? (k = 0 === b ? this._levels.length - 1 : b - 1, cc.b.warn("level controller, " + g + ": switch to " + k), this.hls.nextAutoLevel = this.currentLevelIndex = k) : d === !0 && (cc.b.warn("level controller, " + g + ": reload a fragment"), this.currentLevelIndex = null))
                            }, b.prototype.onFragLoaded = function (a) {
                                var b = a.frag;
                                if (void 0 !== b && "main" === b.type) {
                                    var c = this._levels[b.level];
                                    void 0 !== c && (c.fragmentError = !1, c.loadError = 0, this.levelRetryCount = 0)
                                }
                            }, b.prototype.onLevelLoaded = function (a) {
                                var b = this, c = a.level;
                                if (c === this.currentLevelIndex) {
                                    var d = this._levels[c];
                                    d.fragmentError === !1 && (d.loadError = 0, this.levelRetryCount = 0);
                                    var e = a.details;
                                    if (e.live) {
                                        var f = 1e3 * (e.averagetargetduration ? e.averagetargetduration : e.targetduration),
                                            g = f, h = d.details;
                                        h && e.endSN === h.endSN && (g /= 2, cc.b.log("same live playlist, reload twice faster")), g -= performance.now() - a.stats.trequest, g = Math.max(f / 2, Math.round(g)), cc.b.log("live playlist, reload in " + Math.round(g) + " ms"), this.timer = setTimeout(function () {
                                            return b.loadLevel()
                                        }, g)
                                    } else this.cleanTimer()
                                }
                            }, b.prototype.loadLevel = function () {
                                var a = void 0, b = void 0;
                                null !== this.currentLevelIndex && this.canload === !0 && (a = this._levels[this.currentLevelIndex], void 0 !== a && a.url.length > 0 && (b = a.urlId, this.hls.trigger(bc.a.LEVEL_LOADING, {
                                    url: a.url[b],
                                    level: this.currentLevelIndex,
                                    id: b
                                })))
                            }, kf(b, [{
                                key: "levels", get: function () {
                                    return this._levels
                                }
                            }, {
                                key: "level", get: function () {
                                    return this.currentLevelIndex
                                }, set: function (a) {
                                    var b = this._levels;
                                    b && (a = Math.min(a, b.length - 1), this.currentLevelIndex === a && void 0 !== b[a].details || this.setLevelInternal(a))
                                }
                            }, {
                                key: "manualLevel", get: function () {
                                    return this.manualLevelIndex
                                }, set: function (a) {
                                    this.manualLevelIndex = a, void 0 === this._startLevel && (this._startLevel = a), a !== -1 && (this.level = a)
                                }
                            }, {
                                key: "firstLevel", get: function () {
                                    return this._firstLevel
                                }, set: function (a) {
                                    this._firstLevel = a
                                }
                            }, {
                                key: "startLevel", get: function () {
                                    if (void 0 === this._startLevel) {
                                        var a = this.hls.config.startLevel;
                                        return void 0 !== a ? a : this._firstLevel
                                    }
                                    return this._startLevel
                                }, set: function (a) {
                                    this._startLevel = a
                                }
                            }, {
                                key: "nextLoadLevel", get: function () {
                                    return this.manualLevelIndex !== -1 ? this.manualLevelIndex : this.hls.nextAutoLevel
                                }, set: function (a) {
                                    this.level = a, this.manualLevelIndex === -1 && (this.hls.nextAutoLevel = a)
                                }
                            }]), b
                        }(gc), mf = lf, nf = c(20), of = function (a) {
                            function b(c) {
                                Pa(this, b);
                                var d = Qa(this, a.call(this, c, bc.a.MEDIA_ATTACHED, bc.a.MEDIA_DETACHING, bc.a.FRAG_PARSING_METADATA));
                                return d.id3Track = void 0, d.media = void 0, d
                            }

                            return Ra(b, a), b.prototype.destroy = function () {
                                gc.prototype.destroy.call(this)
                            }, b.prototype.onMediaAttached = function (a) {
                                this.media = a.media, !this.media
                            }, b.prototype.onMediaDetaching = function () {
                                Oa(this.id3Track), this.id3Track = void 0, this.media = void 0
                            }, b.prototype.getID3Track = function (a) {
                                for (var b = 0; b < a.length; b++) {
                                    var c = a[b];
                                    if ("metadata" === c.kind && "id3" === c.label) return Na(c, this.media), c
                                }
                                return this.media.addTextTrack("metadata", "id3")
                            }, b.prototype.onFragParsingMetadata = function (a) {
                                var b = a.frag, c = a.samples;
                                this.id3Track || (this.id3Track = this.getID3Track(this.media.textTracks), this.id3Track.mode = "hidden");
                                for (var d = window.WebKitDataCue || window.VTTCue || window.TextTrackCue, e = 0; e < c.length; e++) {
                                    var f = nf.a.getID3Frames(c[e].data);
                                    if (f) {
                                        var g = c[e].pts, h = e < c.length - 1 ? c[e + 1].pts : b.endPTS;
                                        g === h && (h += 1e-4);
                                        for (var i = 0; i < f.length; i++) {
                                            var j = f[i];
                                            if (!nf.a.isTimeStampFrame(j)) {
                                                var k = new d(g, h, "");
                                                k.value = j, this.id3Track.addCue(k)
                                            }
                                        }
                                    }
                                }
                            }, b
                        }(gc), pf = of, qf = function () {
                            function a(b) {
                                Ta(this, a), this.alpha_ = b ? Math.exp(Math.log(.5) / b) : 0, this.estimate_ = 0, this.totalWeight_ = 0
                            }

                            return a.prototype.sample = function (a, b) {
                                var c = Math.pow(this.alpha_, a);
                                this.estimate_ = b * (1 - c) + c * this.estimate_, this.totalWeight_ += a
                            }, a.prototype.getTotalWeight = function () {
                                return this.totalWeight_
                            }, a.prototype.getEstimate = function () {
                                if (this.alpha_) {
                                    var a = 1 - Math.pow(this.alpha_, this.totalWeight_);
                                    return this.estimate_ / a
                                }
                                return this.estimate_
                            }, a
                        }(), rf = qf, sf = function () {
                            function a(b, c, d, e) {
                                Ua(this, a), this.hls = b, this.defaultEstimate_ = e, this.minWeight_ = .001, this.minDelayMs_ = 50, this.slow_ = new rf(c), this.fast_ = new rf(d)
                            }

                            return a.prototype.sample = function (a, b) {
                                a = Math.max(a, this.minDelayMs_);
                                var c = 8e3 * b / a, d = a / 1e3;
                                this.fast_.sample(d, c), this.slow_.sample(d, c)
                            }, a.prototype.canEstimate = function () {
                                var a = this.fast_;
                                return a && a.getTotalWeight() >= this.minWeight_
                            }, a.prototype.getEstimate = function () {
                                return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                            }, a.prototype.destroy = function () {
                            }, a
                        }(), tf = sf, uf = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), vf = function (a) {
                            function b(c) {
                                Va(this, b);
                                var d = Wa(this, a.call(this, c, bc.a.FRAG_LOADING, bc.a.FRAG_LOADED, bc.a.FRAG_BUFFERED, bc.a.ERROR));
                                return d.lastLoadedFragLevel = 0, d._nextAutoLevel = -1, d.hls = c, d.timer = null, d._bwEstimator = null, d.onCheck = d._abandonRulesCheck.bind(d), d
                            }

                            return Xa(b, a), b.prototype.destroy = function () {
                                this.clearTimer(), gc.prototype.destroy.call(this)
                            }, b.prototype.onFragLoading = function (a) {
                                var b = a.frag;
                                if ("main" === b.type && (this.timer || (this.fragCurrent = b, this.timer = setInterval(this.onCheck, 100)), !this._bwEstimator)) {
                                    var c = this.hls, d = a.frag.level, e = c.levels[d].details.live, f = c.config,
                                        g = void 0, h = void 0;
                                    e ? (g = f.abrEwmaFastLive, h = f.abrEwmaSlowLive) : (g = f.abrEwmaFastVoD, h = f.abrEwmaSlowVoD), this._bwEstimator = new tf(c, h, g, f.abrEwmaDefaultEstimate)
                                }
                            }, b.prototype._abandonRulesCheck = function () {
                                var a = this.hls, b = a.media, c = this.fragCurrent, d = a.minAutoLevel, e = c.loader;
                                if (!e || e.stats && e.stats.aborted) return cc.b.warn("frag loader destroy or aborted, disarm abandonRules"), this.clearTimer(), void (this._nextAutoLevel = -1);
                                var f = e.stats;
                                if (b && f && (!b.paused && 0 !== b.playbackRate || !b.readyState) && c.autoLevel && c.level) {
                                    var g = performance.now() - f.trequest, h = Math.abs(b.playbackRate);
                                    if (g > 500 * c.duration / h) {
                                        var i = a.levels, j = Math.max(1, f.bw ? f.bw / 8 : 1e3 * f.loaded / g),
                                            k = i[c.level],
                                            l = k.realBitrate ? Math.max(k.realBitrate, k.bitrate) : k.bitrate,
                                            m = f.total ? f.total : Math.max(f.loaded, Math.round(c.duration * l / 8)),
                                            n = b.currentTime, o = (m - f.loaded) / j,
                                            p = (Qe.bufferInfo(b, n, a.config.maxBufferHole).end - n) / h;
                                        if (p < 2 * c.duration / h && o > p) {
                                            var q = void 0, r = void 0;
                                            for (r = c.level - 1; r > d; r--) {
                                                var s = i[r].realBitrate ? Math.max(i[r].realBitrate, i[r].bitrate) : i[r].bitrate;
                                                if (q = c.duration * s / (6.4 * j), q < p) break
                                            }
                                            q < o && (cc.b.warn("loading too slow, abort fragment loading and switch to level " + r + ":fragLoadedDelay[" + r + "]<fragLoadedDelay[" + (c.level - 1) + "];bufferStarvationDelay:" + q.toFixed(1) + "<" + o.toFixed(1) + ":" + p.toFixed(1)), a.nextLoadLevel = r, this._bwEstimator.sample(g, f.loaded), e.abort(), this.clearTimer(), a.trigger(bc.a.FRAG_LOAD_EMERGENCY_ABORTED, {
                                                frag: c,
                                                stats: f
                                            }))
                                        }
                                    }
                                }
                            }, b.prototype.onFragLoaded = function (a) {
                                var b = a.frag;
                                if ("main" === b.type && !isNaN(b.sn)) {
                                    if (this.clearTimer(), this.lastLoadedFragLevel = b.level, this._nextAutoLevel = -1, this.hls.config.abrMaxWithRealBitrate) {
                                        var c = this.hls.levels[b.level],
                                            d = (c.loaded ? c.loaded.bytes : 0) + a.stats.loaded,
                                            e = (c.loaded ? c.loaded.duration : 0) + a.frag.duration;
                                        c.loaded = {bytes: d, duration: e}, c.realBitrate = Math.round(8 * d / e)
                                    }
                                    if (a.frag.bitrateTest) {
                                        var f = a.stats;
                                        f.tparsed = f.tbuffered = f.tload, this.onFragBuffered(a)
                                    }
                                }
                            }, b.prototype.onFragBuffered = function (a) {
                                var b = a.stats, c = a.frag;
                                if (!(b.aborted === !0 || "main" !== c.type || isNaN(c.sn) || c.bitrateTest && b.tload !== b.tbuffered)) {
                                    var d = b.tparsed - b.trequest;
                                    this._bwEstimator.sample(d, b.loaded), b.bwEstimate = this._bwEstimator.getEstimate(), c.bitrateTest ? this.bitrateTestDelay = d / 1e3 : this.bitrateTestDelay = 0
                                }
                            }, b.prototype.onError = function (a) {
                                switch (a.details) {
                                    case ac.a.FRAG_LOAD_ERROR:
                                    case ac.a.FRAG_LOAD_TIMEOUT:
                                        this.clearTimer()
                                }
                            }, b.prototype.clearTimer = function () {
                                clearInterval(this.timer), this.timer = null
                            }, b.prototype._findBestLevel = function (a, b, c, d, e, f, g, h, i) {
                                for (var j = e; j >= d; j--) {
                                    var k = i[j], l = k.details, m = l ? l.totalduration / l.fragments.length : b,
                                        n = !!l && l.live, o = void 0;
                                    o = j <= a ? g * c : h * c;
                                    var p = i[j].realBitrate ? Math.max(i[j].realBitrate, i[j].bitrate) : i[j].bitrate,
                                        q = p * m / o;
                                    if (cc.b.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + j + "/" + Math.round(o) + "/" + p + "/" + m + "/" + f + "/" + q), o > p && (!q || n && !this.bitrateTestDelay || q < f)) return j
                                }
                                return -1
                            }, uf(b, [{
                                key: "nextAutoLevel", get: function () {
                                    var a = this._nextAutoLevel, b = this._bwEstimator;
                                    if (!(a === -1 || b && b.canEstimate())) return a;
                                    var c = this._nextABRAutoLevel;
                                    return a !== -1 && (c = Math.min(a, c)), c
                                }, set: function (a) {
                                    this._nextAutoLevel = a
                                }
                            }, {
                                key: "_nextABRAutoLevel", get: function () {
                                    var a = this.hls, b = a.maxAutoLevel, c = a.levels, d = a.config, e = a.minAutoLevel,
                                        f = a.media, g = this.lastLoadedFragLevel,
                                        h = this.fragCurrent ? this.fragCurrent.duration : 0, i = f ? f.currentTime : 0,
                                        j = f && 0 !== f.playbackRate ? Math.abs(f.playbackRate) : 1,
                                        k = this._bwEstimator ? this._bwEstimator.getEstimate() : d.abrEwmaDefaultEstimate,
                                        l = (Qe.bufferInfo(f, i, d.maxBufferHole).end - i) / j,
                                        m = this._findBestLevel(g, h, k, e, b, l, d.abrBandWidthFactor, d.abrBandWidthUpFactor, c);
                                    if (m >= 0) return m;
                                    cc.b.trace("rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering");
                                    var n = h ? Math.min(h, d.maxStarvationDelay) : d.maxStarvationDelay,
                                        o = d.abrBandWidthFactor, p = d.abrBandWidthUpFactor;
                                    if (0 === l) {
                                        var q = this.bitrateTestDelay;
                                        if (q) {
                                            var r = h ? Math.min(h, d.maxLoadingDelay) : d.maxLoadingDelay;
                                            n = r - q, cc.b.trace("bitrate test took " + Math.round(1e3 * q) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * n) + " ms"), o = p = 1
                                        }
                                    }
                                    return m = this._findBestLevel(g, h, k, e, b, l + n, o, p, c), Math.max(m, 0)
                                }
                            }]), b
                        }(gc), wf = vf, xf = pa(), yf = function (a) {
                            function b(c) {
                                Ya(this, b);
                                var d = Za(this, a.call(this, c, bc.a.MEDIA_ATTACHING, bc.a.MEDIA_DETACHING, bc.a.MANIFEST_PARSED, bc.a.BUFFER_RESET, bc.a.BUFFER_APPENDING, bc.a.BUFFER_CODECS, bc.a.BUFFER_EOS, bc.a.BUFFER_FLUSHING, bc.a.LEVEL_PTS_UPDATED, bc.a.LEVEL_UPDATED, bc.a.BUFFER_CUT));
                                return d._msDuration = null, d._levelDuration = null, d._live = null, d._objectUrl = null, d.onsbue = d.onSBUpdateEnd.bind(d), d.onsbe = d.onSBUpdateError.bind(d), d.pendingTracks = {}, d.tracks = {}, d.mediaClosed = !1, d._needCut = !1, d
                            }

                            return $a(b, a), b.prototype.destroy = function () {
                                gc.prototype.destroy.call(this)
                            }, b.prototype.onLevelPtsUpdated = function (a) {
                                var b = a.type, c = this.tracks.audio;
                                if ("audio" === b && c && "audio/mpeg" === c.container) {
                                    var d = this.sourceBuffer.audio, e = Math.abs(d.timestampOffset - a.start);
                                    if (e > .1) {
                                        var f = d.updating;
                                        try {
                                            d.abort()
                                        } catch (g) {
                                            f = !0, cc.b.warn("can not abort audio buffer: " + g)
                                        }
                                        f ? this.audioTimestampOffset = a.start : (cc.b.warn("change mpeg audio timestamp offset from " + d.timestampOffset + " to " + a.start), d.timestampOffset = a.start)
                                    }
                                }
                            }, b.prototype.onManifestParsed = function (a) {
                                var b = a.audio, c = a.video || a.levels.length && a.altAudio, d = 0;
                                a.altAudio && (b || c) && (d = (b ? 1 : 0) + (c ? 1 : 0), cc.b.log(d + " sourceBuffer(s) expected")), this.sourceBufferNb = d
                            }, b.prototype.onMediaAttaching = function (a) {
                                var b = this.media = a.media;
                                if (b) {
                                    var c = this.mediaSource = new xf;
                                    this.onmso = this.onMediaSourceOpen.bind(this), this.onmse = this.onMediaSourceEnded.bind(this), this.onmsc = this.onMediaSourceClose.bind(this), c.addEventListener("sourceopen", this.onmso), c.addEventListener("sourceended", this.onmse), c.addEventListener("sourceclose", this.onmsc), b.src = URL.createObjectURL(c), this._objectUrl = b.src
                                }
                            }, b.prototype.onMediaDetaching = function () {
                                cc.b.log("media source detaching");
                                var a = this.mediaSource;
                                if (a) {
                                    if ("open" === a.readyState) try {
                                        a.endOfStream()
                                    } catch (b) {
                                        cc.b.warn("onMediaDetaching:" + b.message + " while calling endOfStream")
                                    }
                                    a.removeEventListener("sourceopen", this.onmso), a.removeEventListener("sourceended", this.onmse), a.removeEventListener("sourceclose", this.onmsc), this.media && (URL.revokeObjectURL(this._objectUrl), this.media.src === this._objectUrl ? (this.media.removeAttribute("src"), this.media.load()) : cc.b.warn("media.src was changed by a third party - skip cleanup")), this.mediaSource = null, this.media = null, this._objectUrl = null, this.pendingTracks = {}, this.tracks = {}, this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                                }
                                this.onmso = this.onmse = this.onmsc = null, this.hls.trigger(bc.a.MEDIA_DETACHED)
                            }, b.prototype.onMediaSourceOpen = function () {
                                cc.b.log("media source opened"), this.hls.trigger(bc.a.MEDIA_ATTACHED, {media: this.media});
                                var a = this.mediaSource;
                                a && a.removeEventListener("sourceopen", this.onmso), this.checkPendingTracks()
                            }, b.prototype.checkPendingTracks = function () {
                                var a = this.pendingTracks, b = Object.keys(a).length;
                                b && (this.sourceBufferNb <= b || 0 === this.sourceBufferNb) && (this.createSourceBuffers(a), this.pendingTracks = {}, this.doAppending())
                            }, b.prototype.onMediaSourceClose = function () {
                                cc.b.log("media source closed"), this.mediaClosed = !0
                            }, b.prototype.onMediaSourceEnded = function () {
                                cc.b.log("media source ended")
                            }, b.prototype.onSBUpdateEnd = function () {
                                if (this.audioTimestampOffset) {
                                    var a = this.sourceBuffer.audio;
                                    cc.b.warn("change mpeg audio timestamp offset from " + a.timestampOffset + " to " + this.audioTimestampOffset), a.timestampOffset = this.audioTimestampOffset, delete this.audioTimestampOffset
                                }
                                this._needCut && this.doCut(), this._needsFlush && this.doFlush(), this._needsEos && this.checkEos(), this.appending = !1;
                                var b = this.parent, c = (this.segments.reduce(function (a, c) {
                                    return c.parent === b ? a + 1 : a
                                }, 0), {}), d = this.sourceBuffer;
                                for (var e in d) c[e] = d[e].buffered;
                                this._needsFlush || this.doAppending(), this.updateMediaElementDuration()
                            }, b.prototype.onSBUpdateError = function (a) {
                                cc.b.error(ac.c.MEDIA_ERROR, "sourceBuffer error:", a), this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.MEDIA_ERROR,
                                    details: ac.a.BUFFER_APPENDING_ERROR,
                                    fatal: !1
                                })
                            }, b.prototype.onBufferReset = function () {
                                var a = this.sourceBuffer;
                                for (var b in a) {
                                    var c = a[b];
                                    try {
                                        this.mediaSource.removeSourceBuffer(c), c.removeEventListener("updateend", this.onsbue), c.removeEventListener("error", this.onsbe)
                                    } catch (d) {
                                    }
                                }
                                this.sourceBuffer = {}, this.flushRange = [], this.segments = [], this.appended = 0
                            }, b.prototype.onBufferCodecs = function (a) {
                                if (0 === Object.keys(this.sourceBuffer).length) {
                                    for (var b in a) this.pendingTracks[b] = a[b];
                                    var c = this.mediaSource;
                                    c && "open" === c.readyState && this.checkPendingTracks()
                                }
                            }, b.prototype.createSourceBuffers = function (a) {
                                var b = this.sourceBuffer, c = this.mediaSource;
                                for (var d in a) if (!b[d]) {
                                    var e = a[d], f = e.levelCodec || e.codec, g = e.container + ";codecs=" + f;
                                    cc.b.log("creating sourceBuffer(" + g + ")");
                                    try {
                                        var h = b[d] = c.addSourceBuffer(g);
                                        h.addEventListener("updateend", this.onsbue), h.addEventListener("error", this.onsbe), this.tracks[d] = {
                                            codec: f,
                                            container: e.container
                                        }, e.buffer = h
                                    } catch (i) {
                                        cc.b.error(ac.c.MEDIA_ERROR, "error while trying to add sourceBuffer:" + i.message), this.hls.trigger(bc.a.ERROR, {
                                            type: ac.b.MEDIA_ERROR,
                                            details: ac.a.BUFFER_ADD_CODEC_ERROR,
                                            fatal: !1,
                                            err: i,
                                            mimeType: g
                                        })
                                    }
                                }
                                this.hls.trigger(bc.a.BUFFER_CREATED, {tracks: a})
                            }, b.prototype.onBufferAppending = function (a) {
                                this._needsFlush || (this.segments ? this.segments.push(a) : this.segments = [a], this.doAppending())
                            }, b.prototype.onBufferAppendFail = function (a) {
                                cc.b.error(ac.c.MEDIA_ERROR, "sourceBuffer error:", a.event), this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.MEDIA_ERROR,
                                    details: ac.a.BUFFER_APPENDING_ERROR,
                                    fatal: !1
                                })
                            }, b.prototype.onBufferEos = function (a) {
                                var b = this.sourceBuffer, c = a.type;
                                for (var d in b) c && d !== c || b[d].ended || (b[d].ended = !0, cc.b.log(d + " sourceBuffer now EOS"));
                                this.checkEos()
                            }, b.prototype.checkEos = function () {
                                var a = this.sourceBuffer, b = this.mediaSource;
                                if (!b || "open" !== b.readyState) return void (this._needsEos = !1);
                                for (var c in a) {
                                    var d = a[c];
                                    if (!d.ended) return;
                                    if (d.updating) return void (this._needsEos = !0)
                                }
                                cc.b.log("all media data available, signal endOfStream() to MediaSource and stop loading fragment");
                                try {
                                    cc.b.log("jy endofStream"), b.endOfStream()
                                } catch (e) {
                                    cc.b.warn("exception while calling mediaSource.endOfStream()")
                                }
                                this._needsEos = !1, this.hls.trigger(bc.a.END_STREAM, !0)
                            }, b.prototype.onBufferFlushing = function (a) {
                                this.flushRange.push({
                                    start: a.startOffset,
                                    end: a.endOffset,
                                    type: a.type
                                }), this.flushBufferCounter = 0, this.hls.trigger(bc.a.REMOVE_BUFFERED_FRAG, {
                                    start: a.startOffset,
                                    end: a.endOffset
                                }), this.doFlush()
                            }, b.prototype.doCut = function () {
                                if (!(this.mediaClosed || this.mediaSource && "closed" == this.mediaSource.readyState)) {
                                    for (; this.flushRange.length;) {
                                        var a = this.flushRange[0];
                                        if (!this.cutBuffer(a.start, a.end, a.type)) return void (this._needCut = !0);
                                        this.flushRange.shift()
                                    }
                                    0 === this.flushRange.length && (this._needCut = !1)
                                }
                            }, b.prototype.onBufferCut = function (a) {
                                this.flushRange.push({
                                    start: a.startOffset,
                                    end: a.endOffset,
                                    type: a.type
                                }), this.flushBufferCounter = 0, this.doCut()
                            }, b.prototype.onLevelUpdated = function (a) {
                                var b = a.details;
                                b.fragments.length > 0 && (this._levelDuration = b.totalduration + b.fragments[0].start, this._live = b.live, this.updateMediaElementDuration())
                            }, b.prototype.cutBuffer = function (a, b, c) {
                                if (!(this.mediaClosed || this.mediaSource && "closed" == this.mediaSource.readyState)) {
                                    var d, e = this.sourceBuffer;
                                    if (Object.keys(e).length) {
                                        cc.b.log("flushBuffer,pos/start/end: " + this.media.currentTime.toFixed(3) + "/" + a + "/" + b);
                                        for (var f in e) if (!c || f === c) {
                                            if (d = e[f], d.ended = !1, d.updating) return cc.b.warn("cannot flush, sb updating in progress"), !1;
                                            try {
                                                d.remove(a, b)
                                            } catch (g) {
                                                cc.b.warn("exception while accessing sourcebuffer, it might have been removed from MediaSource")
                                            }
                                        }
                                        cc.b.log("buffer flushed")
                                    }
                                    return !0
                                }
                            }, b.prototype.updateMediaElementDuration = function () {
                                var a = this.hls.config, b = void 0;
                                if (null !== this._levelDuration && this.media && this.mediaSource && this.sourceBuffer && 0 !== this.media.readyState && "open" === this.mediaSource.readyState) {
                                    for (var c in this.sourceBuffer) if (this.sourceBuffer[c].updating === !0) return;
                                    b = this.media.duration, null === this._msDuration && (this._msDuration = this.mediaSource.duration), this._live === !0 && a.liveDurationInfinity === !0 ? (cc.b.log("Media Source duration is set to Infinity"), this._msDuration = this.mediaSource.duration = 1 / 0) : (this._levelDuration > this._msDuration && this._levelDuration > b || b === 1 / 0 || isNaN(b)) && (cc.b.log("Updating Media Source duration to " + this._levelDuration.toFixed(3)), this._msDuration = this.mediaSource.duration = this._levelDuration)
                                }
                            }, b.prototype.doFlush = function () {
                                if (!(this.mediaClosed || this.mediaSource && "closed" == this.mediaSource.readyState)) {
                                    for (; this.flushRange.length;) {
                                        var a = this.flushRange[0];
                                        if (!this.flushBuffer(a.start, a.end, a.type)) return void (this._needsFlush = !0);
                                        this.flushRange.shift(), this.flushBufferCounter = 0
                                    }
                                    if (0 === this.flushRange.length) {
                                        this._needsFlush = !1;
                                        var b = 0, c = this.sourceBuffer;
                                        try {
                                            for (var d in c) b += c[d].buffered.length
                                        } catch (e) {
                                            cc.b.error(ac.c.MEDIA_ERROR, "error while accessing sourceBuffer.buffered")
                                        }
                                        this.appended = b, this.hls.trigger(bc.a.BUFFER_FLUSHED)
                                    }
                                }
                            }, b.prototype.doAppending = function () {
                                if (!(this.mediaClosed || this.mediaSource && "closed" == this.mediaSource.readyState)) {
                                    var a = this.hls, b = this.sourceBuffer, c = this.segments;
                                    if (Object.keys(b).length) {
                                        if (this.media.error) return this.segments = [], void cc.b.error(ac.c.MEDIA_ERROR, "trying to append although a media error occured, flush segment and abort");
                                        if (c && c.length) {
                                            var d = c.shift();
                                            try {
                                                var e = d.type, f = b[e];
                                                f ? f.updating ? c.unshift(d) : (f.ended = !1, this.parent = d.parent, f.appendBuffer(d.data), this.appendError = 0, this.appended++, this.appending = !0, this.hasSameSegment(c, this.parent) || this.hls.trigger(bc.a.BUFFER_APPENDED, {
                                                    parent: this.parent,
                                                    pending: 0
                                                })) : this.onSBUpdateEnd()
                                            } catch (g) {
                                                cc.b.error(ac.c.MEDIA_ERROR, "error while trying to append buffer:" + g.message), c.unshift(d);
                                                var h = {type: ac.b.MEDIA_ERROR, parent: d.parent};
                                                22 !== g.code ? (this.appendError ? this.appendError++ : this.appendError = 1, h.details = ac.a.BUFFER_APPEND_ERROR, this.appendError > a.config.appendErrorMaxRetry ? (cc.b.log("fail " + a.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"),
                                                    c = [], h.fatal = !0, a.trigger(bc.a.ERROR, h)) : (h.fatal = !1, a.trigger(bc.a.ERROR, h))) : (this.segments = [], h.details = ac.a.BUFFER_FULL_ERROR, h.fatal = !1, a.trigger(bc.a.ERROR, h))
                                            }
                                        }
                                    }
                                }
                            }, b.prototype.flushBuffer = function (a, b, c, d) {
                                if (!(this.mediaClosed || this.mediaSource && "closed" == this.mediaSource.readyState)) {
                                    var e = void 0, f = void 0, g = void 0, h = void 0, i = void 0, j = void 0,
                                        k = this.sourceBuffer;
                                    if (Object.keys(k).length) {
                                        if (cc.b.log("flushBuffer,pos/start/end: " + this.media.currentTime.toFixed(3) + "/" + a + "/" + b), d === !0 || this.flushBufferCounter < this.appended) {
                                            for (var l in k) if (!c || l === c) {
                                                if (e = k[l], e.ended = !1, e.updating) return cc.b.warn("cannot flush, sb updating in progress"), !1;
                                                try {
                                                    for (f = 0; f < e.buffered.length; f++) if (g = e.buffered.start(f), h = e.buffered.end(f), navigator.userAgent.toLowerCase().indexOf("firefox") !== -1 && b === Number.POSITIVE_INFINITY ? (i = a, j = b) : (i = Math.max(g, a), j = Math.min(h, b)), Math.min(j, h) - i > .5) return this.flushBufferCounter++, cc.b.log("flush " + l + " [" + i + "," + j + "], of [" + g + "," + h + "], pos:" + this.media.currentTime), e.remove(i, j), !1
                                                } catch (m) {
                                                    cc.b.warn("exception while accessing sourcebuffer, it might have been removed from MediaSource")
                                                }
                                            }
                                        } else cc.b.warn("abort flushing too many retries");
                                        cc.b.log("buffer flushed")
                                    }
                                    return !0
                                }
                            }, b.prototype.hasSameSegment = function (a, b) {
                                if (a) for (var c = 0; c < a.length; c++) {
                                    var d = a[c];
                                    if (d.parent == b) return !0
                                }
                                return !1
                            }, b
                        }(gc), zf = yf, Af = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), Bf = function (a) {
                            function b(c) {
                                _a(this, b);
                                var d = ab(this, a.call(this, c, bc.a.FPS_DROP_LEVEL_CAPPING, bc.a.MEDIA_ATTACHING, bc.a.MANIFEST_PARSED, bc.a.BUFFER_CODECS));
                                return d.autoLevelCapping = Number.POSITIVE_INFINITY, d.firstLevel = null, d.levels = [], d.media = null, d.restrictedLevels = [], d.timer = null, d
                            }

                            return bb(b, a), b.prototype.destroy = function () {
                                this.hls.config.capLevelToPlayerSize && (this.media = null, this._stopCapping())
                            }, b.prototype.onFpsDropLevelCapping = function (a) {
                                b.isLevelAllowed(a.droppedLevel, this.restrictedLevels) && this.restrictedLevels.push(a.droppedLevel)
                            }, b.prototype.onMediaAttaching = function (a) {
                                this.media = a.media instanceof HTMLVideoElement ? a.media : null
                            }, b.prototype.onManifestParsed = function (a) {
                                var b = this.hls;
                                this.restrictedLevels = [], this.levels = a.levels, this.firstLevel = a.firstLevel, b.config.capLevelToPlayerSize && (a.video || a.levels.length && a.altAudio) && this._startCapping()
                            }, b.prototype.onBufferCodecs = function (a) {
                                var b = this.hls;
                                b.config.capLevelToPlayerSize && a.video && this._startCapping()
                            }, b.prototype.onLevelsUpdated = function (a) {
                                this.levels = a.levels
                            }, b.prototype.detectPlayerSize = function () {
                                if (this.media) {
                                    var a = this.levels ? this.levels.length : 0;
                                    if (a) {
                                        var b = this.hls;
                                        b.autoLevelCapping = this.getMaxLevel(a - 1), b.autoLevelCapping > this.autoLevelCapping && b.streamController.nextLevelSwitch(), this.autoLevelCapping = b.autoLevelCapping
                                    }
                                }
                            }, b.prototype.getMaxLevel = function (a) {
                                var c = this;
                                if (!this.levels) return -1;
                                var d = this.levels.filter(function (d, e) {
                                    return b.isLevelAllowed(e, c.restrictedLevels) && e <= a
                                });
                                return b.getMaxLevelByMediaSize(d, this.mediaWidth, this.mediaHeight)
                            }, b.prototype._startCapping = function () {
                                this.timer || (this.autoLevelCapping = Number.POSITIVE_INFINITY, this.hls.firstLevel = this.getMaxLevel(this.firstLevel), clearInterval(this.timer), this.timer = setInterval(this.detectPlayerSize.bind(this), 1e3), this.detectPlayerSize())
                            }, b.prototype._stopCapping = function () {
                                this.restrictedLevels = [], this.firstLevel = null, this.autoLevelCapping = Number.POSITIVE_INFINITY, this.timer && (this.timer = clearInterval(this.timer), this.timer = null)
                            }, b.isLevelAllowed = function (a) {
                                var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];
                                return b.indexOf(a) === -1
                            }, b.getMaxLevelByMediaSize = function (a, b, c) {
                                if (!a || a && !a.length) return -1;
                                for (var d = function (a, b) {
                                    return !b || (a.width !== b.width || a.height !== b.height)
                                }, e = a.length - 1, f = 0; f < a.length; f += 1) {
                                    var g = a[f];
                                    if ((g.width >= b || g.height >= c) && d(g, a[f + 1])) {
                                        e = f;
                                        break
                                    }
                                }
                                return e
                            }, Af(b, [{
                                key: "mediaWidth", get: function () {
                                    var a = void 0, c = this.media;
                                    return c && (a = c.width || c.clientWidth || c.offsetWidth, a *= b.contentScaleFactor), a
                                }
                            }, {
                                key: "mediaHeight", get: function () {
                                    var a = void 0, c = this.media;
                                    return c && (a = c.height || c.clientHeight || c.offsetHeight, a *= b.contentScaleFactor), a
                                }
                            }], [{
                                key: "contentScaleFactor", get: function () {
                                    var a = 1;
                                    try {
                                        a = window.devicePixelRatio
                                    } catch (b) {
                                    }
                                    return a
                                }
                            }]), b
                        }(gc), Cf = Bf, Df = function (a) {
                            function b(c) {
                                return cb(this, b), db(this, a.call(this, c, bc.a.MEDIA_ATTACHING))
                            }

                            return eb(b, a), b.prototype.destroy = function () {
                                this.timer && clearInterval(this.timer), this.isVideoPlaybackQualityAvailable = !1
                            }, b.prototype.onMediaAttaching = function (a) {
                                var b = this.hls.config;
                                if (b.capLevelOnFPSDrop) {
                                    var c = this.video = a.media instanceof HTMLVideoElement ? a.media : null;
                                    "function" == typeof c.getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0), clearInterval(this.timer), this.timer = setInterval(this.checkFPSInterval.bind(this), b.fpsDroppedMonitoringPeriod)
                                }
                            }, b.prototype.checkFPS = function (a, b, c) {
                                var d = performance.now();
                                if (b) {
                                    if (this.lastTime) {
                                        var e = d - this.lastTime, f = c - this.lastDroppedFrames,
                                            g = b - this.lastDecodedFrames, h = 1e3 * f / e, i = this.hls;
                                        if (i.trigger(bc.a.FPS_DROP, {
                                            currentDropped: f,
                                            currentDecoded: g,
                                            totalDroppedFrames: c
                                        }), h > 0 && f > i.config.fpsDroppedMonitoringThreshold * g) {
                                            var j = i.currentLevel;
                                            cc.b.warn("drop FPS ratio greater than max allowed value for currentLevel: " + j), j > 0 && (i.autoLevelCapping === -1 || i.autoLevelCapping >= j) && (j -= 1, i.trigger(bc.a.FPS_DROP_LEVEL_CAPPING, {
                                                level: j,
                                                droppedLevel: i.currentLevel
                                            }), i.autoLevelCapping = j, i.streamController.nextLevelSwitch())
                                        }
                                    }
                                    this.lastTime = d, this.lastDroppedFrames = c, this.lastDecodedFrames = b
                                }
                            }, b.prototype.checkFPSInterval = function () {
                                var a = this.video;
                                if (a) if (this.isVideoPlaybackQualityAvailable) {
                                    var b = a.getVideoPlaybackQuality();
                                    this.checkFPS(a, b.totalVideoFrames, b.droppedVideoFrames)
                                } else this.checkFPS(a, a.webkitDecodedFrameCount, a.webkitDroppedFrameCount)
                            }, b
                        }(gc), Ef = Df, Ff = function () {
                            function a(b) {
                                fb(this, a), b && b.xhrSetup && (this.xhrSetup = b.xhrSetup)
                            }

                            return a.prototype.destroy = function () {
                                this.abort(), this.loader = null
                            }, a.prototype.abort = function () {
                                var a = this.loader;
                                a && 4 !== a.readyState && (this.stats.aborted = !0, a.abort()), window.clearTimeout(this.requestTimeout), this.requestTimeout = null, window.clearTimeout(this.retryTimeout), this.retryTimeout = null
                            }, a.prototype.load = function (a, b, c) {
                                this.context = a, this.config = b, this.callbacks = c, this.stats = {
                                    trequest: performance.now(),
                                    retry: 0
                                }, this.retryDelay = b.retryDelay, this.loadInternal()
                            }, a.prototype.loadInternal = function () {
                                var a, b = this.context;
                                a = "undefined" != typeof XDomainRequest ? this.loader = new XDomainRequest : this.loader = new XMLHttpRequest;
                                var c = this.stats;
                                c.tfirst = 0, c.loaded = 0;
                                var d = this.xhrSetup;
                                try {
                                    if (d) try {
                                        d(a, b.url)
                                    } catch (e) {
                                        a.open("GET", b.url, !0), d(a, b.url)
                                    }
                                    a.readyState || a.open("GET", b.url, !0)
                                } catch (e) {
                                    return cc.b.log("error code:" + a.status + " msg:" + e.message), void this.callbacks.onError({
                                        code: a.status,
                                        text: e.message
                                    }, b, a)
                                }
                                b.rangeEnd && a.setRequestHeader("Range", "bytes=" + b.rangeStart + "-" + (b.rangeEnd - 1)), a.onreadystatechange = this.readystatechange.bind(this), a.onprogress = this.loadprogress.bind(this), a.responseType = b.responseType;
                                var f = this;
                                a.onerror = function (a) {
                                    f.onerrorFlag = !0
                                }, this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout), a.send()
                            }, a.prototype.readystatechange = function (a) {
                                var b = a.currentTarget, c = b.readyState, d = this.stats, e = this.context,
                                    f = this.config;
                                if (!d.aborted && c >= 2) if (window.clearTimeout(this.requestTimeout), 0 === d.tfirst && (d.tfirst = Math.max(performance.now(), d.trequest)), 4 === c) {
                                    var g = b.status;
                                    if (g >= 200 && g < 300) {
                                        d.tload = Math.max(d.tfirst, performance.now());
                                        var h = void 0, i = void 0;
                                        "arraybuffer" === e.responseType ? (h = b.response, i = h.byteLength) : (h = b.responseText, i = h.length), d.loaded = d.total = i;
                                        var j = {url: b.responseURL, data: h};
                                        this.callbacks.onSuccess(j, d, e, b)
                                    } else if (d.retry >= f.maxRetry || g >= 400 && g < 499) {
                                        cc.b.error(ac.c.NETWORK_ERROR, g + " while loading " + e.url);
                                        var k = void 0;
                                        this.onerrorFlag ? (this.onerrorFlag = !1, k = 600) : k = g, this.callbacks.onError({
                                            code: k,
                                            text: b.statusText
                                        }, e, b)
                                    } else cc.b.warn(g + " while loading " + e.url + ", retrying in " + this.retryDelay + " count:" + d.retry + "..."), this.destroy(), this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay), this.retryDelay = Math.min(2 * this.retryDelay, f.maxRetryDelay), d.retry++
                                } else this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), f.timeout)
                            }, a.prototype.loadtimeout = function () {
                                cc.b.error(ac.c.NETWORK_ERROR, "timeout while loading " + this.context.url), this.callbacks.onTimeout(this.stats, this.context, null)
                            }, a.prototype.loadprogress = function (a) {
                                var b = a.currentTarget, c = this.stats;
                                c.loaded = a.loaded, a.lengthComputable && (c.total = a.total);
                                var d = this.callbacks.onProgress;
                                d && d(c, this.context, null, b)
                            }, a
                        }(), Gf = Ff, Hf = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), If = function (a) {
                            function b(c) {
                                gb(this, b);
                                var d = hb(this, a.call(this, c, bc.a.MANIFEST_LOADING, bc.a.MANIFEST_PARSED, bc.a.AUDIO_TRACK_LOADED, bc.a.ERROR));
                                return d.ticks = 0, d.ontick = d.tick.bind(d), d
                            }

                            return ib(b, a), b.prototype.destroy = function () {
                                this.cleanTimer(), gc.prototype.destroy.call(this)
                            }, b.prototype.cleanTimer = function () {
                                this.timer && (clearTimeout(this.timer), this.timer = null)
                            }, b.prototype.tick = function () {
                                this.ticks++, 1 === this.ticks && (this.doTick(!1), this.ticks > 1 && setTimeout(this.tick, 1), this.ticks = 0)
                            }, b.prototype.doTick = function () {
                                this.updateTrack(this.trackId)
                            }, b.prototype.onError = function (a) {
                                a.fatal && a.type === ac.b.NETWORK_ERROR && this.cleanTimer()
                            }, b.prototype.onManifestLoading = function () {
                                this.tracks = [], this.trackId = -1
                            }, b.prototype.onManifestParsed = function (a) {
                                var b = this, c = a.audioTracks || [], d = !1;
                                this.tracks = c, this.hls.trigger(bc.a.AUDIO_TRACKS_UPDATED, {audioTracks: c});
                                var e = 0;
                                c.forEach(function (a) {
                                    return a["default"] && !d ? (b.audioTrack = e, void (d = !0)) : void e++
                                }), d === !1 && c.length && (cc.b.log("no default audio track defined, use first audio track as default"), this.audioTrack = 0)
                            }, b.prototype.onAudioTrackLoaded = function (a) {
                                a.id < this.tracks.length && (cc.b.log("audioTrack " + a.id + " loaded"), this.tracks[a.id].details = a.details, a.details.live && !this.timer && (this.timer = setInterval(this.ontick, 1e3 * a.details.targetduration)), !a.details.live && this.timer && this.cleanTimer())
                            }, b.prototype.setAudioTrackInternal = function (a) {
                                if (a >= 0 && a < this.tracks.length) {
                                    this.cleanTimer(), this.trackId = a, cc.b.log("switching to audioTrack " + a);
                                    var b = this.tracks[a], c = this.hls, d = b.type, e = b.url,
                                        f = {id: a, type: d, url: e};
                                    c.trigger(bc.a.AUDIO_TRACK_SWITCHING, f);
                                    var g = b.details;
                                    !e || void 0 !== g && g.live !== !0 || (cc.b.log("(re)loading playlist for audioTrack " + a), c.trigger(bc.a.AUDIO_TRACK_LOADING, {
                                        url: e,
                                        id: a
                                    }))
                                }
                            }, b.prototype.updateTrack = function (a) {
                                if (a >= 0 && a < this.tracks.length) {
                                    this.cleanTimer(), this.trackId = a, cc.b.log("updating audioTrack " + a);
                                    var b = this.tracks[a], c = b.url, d = b.details;
                                    !c || void 0 !== d && d.live !== !0 || (cc.b.log("(re)loading playlist for audioTrack " + a), this.hls.trigger(bc.a.AUDIO_TRACK_LOADING, {
                                        url: c,
                                        id: a
                                    }))
                                }
                            }, Hf(b, [{
                                key: "audioTracks", get: function () {
                                    return this.tracks
                                }
                            }, {
                                key: "audioTrack", get: function () {
                                    return this.trackId
                                }, set: function (a) {
                                    this.trackId === a && void 0 !== this.tracks[a].details || this.setAudioTrackInternal(a)
                                }
                            }]), b
                        }(gc), Jf = If, Kf = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), Lf = {
                            STOPPED: "STOPPED",
                            STARTING: "STARTING",
                            IDLE: "IDLE",
                            PAUSED: "PAUSED",
                            KEY_LOADING: "KEY_LOADING",
                            FRAG_LOADING: "FRAG_LOADING",
                            FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                            WAITING_TRACK: "WAITING_TRACK",
                            PARSING: "PARSING",
                            PARSED: "PARSED",
                            BUFFER_FLUSHING: "BUFFER_FLUSHING",
                            ENDED: "ENDED",
                            ERROR: "ERROR",
                            WAITING_INIT_PTS: "WAITING_INIT_PTS"
                        }, Mf = 1e3, Nf = function (a) {
                            function b(c, d) {
                                jb(this, b);
                                var e = kb(this, a.call(this, c, bc.a.MEDIA_ATTACHED, bc.a.MEDIA_DETACHING, bc.a.AUDIO_TRACKS_UPDATED, bc.a.AUDIO_TRACK_SWITCHING, bc.a.AUDIO_TRACK_LOADED, bc.a.KEY_LOADED, bc.a.FRAG_LOADED, bc.a.FRAG_PARSING_INIT_SEGMENT, bc.a.FRAG_PARSING_DATA, bc.a.FRAG_PARSED, bc.a.ERROR, bc.a.BUFFER_RESET, bc.a.BUFFER_CREATED, bc.a.BUFFER_APPENDED, bc.a.BUFFER_FLUSHED, bc.a.INIT_PTS_FOUND));
                                return e.fragmentTracker = d, e.config = c.config, e.audioCodecSwap = !1, e._state = Lf.STOPPED, e.initPTS = [], e.waitingFragment = null, e.videoTrackCC = null, e
                            }

                            return lb(b, a), b.prototype.onHandlerDestroying = function () {
                                this.stopLoad()
                            }, b.prototype.onHandlerDestroyed = function () {
                                this.state = Lf.STOPPED, this.fragmentTracker = null
                            }, b.prototype.onInitPtsFound = function (a) {
                                var b = a.id, c = a.frag.cc, d = a.initPTS;
                                "main" === b && (this.initPTS[c] = d, this.videoTrackCC = c, cc.b.log("InitPTS for cc: " + c + " found from video track: " + d), this.state === Lf.WAITING_INIT_PTS && this.tick())
                            }, b.prototype.startLoad = function (a) {
                                if (this.tracks) {
                                    var b = this.lastCurrentTime;
                                    this.stopLoad(), this.setInterval(100), this.fragLoadError = 0, b > 0 && a === -1 ? (cc.b.log("audio:override startPosition with lastCurrentTime @" + b.toFixed(3)), this.state = Lf.IDLE) : (this.lastCurrentTime = this.startPosition ? this.startPosition : a, this.state = Lf.STARTING), this.nextLoadPosition = this.startPosition = this.lastCurrentTime, this.tick()
                                } else this.startPosition = a, this.state = Lf.STOPPED
                            }, b.prototype.stopLoad = function () {
                                var a = this.fragCurrent;
                                a && (a.loader && a.loader.abort(), this.fragmentTracker.removeFragment(a), this.fragCurrent = null), this.fragPrevious = null, this.demuxer && (this.demuxer.destroy(), this.demuxer = null), this.state = Lf.STOPPED
                            }, b.prototype.canSelectNewFrag = function () {
                                if (this.hls && this.fragCurrent && this.hls.streamController) {
                                    var a = this.hls.streamController.getCurrentFrag();
                                    if (a) {
                                        var b = void 0 == a.startPTS ? a.start : a.startPTS,
                                            c = void 0 == this.fragCurrent.startPTS ? this.fragCurrent.start : this.fragCurrent.startPTS,
                                            d = this.fragCurrent.level, e = this.hls.levels, f = 12;
                                        if (this.maxDuration) f = this.maxDuration; else if (e.length > d) {
                                            var g = e[d].details;
                                            g && g.targetduration > 0 && (f = g.targetduration, this.maxDuration = f)
                                        }
                                        if (c - b > 3 * f) return !1
                                    }
                                }
                                return !0
                            }, b.prototype.doTick = function (a) {
                                var b = void 0, c = void 0, d = void 0, e = this.hls, f = e.config;
                                switch (a && (this.state = Lf.IDLE), this.state) {
                                    case Lf.ERROR:
                                    case Lf.PAUSED:
                                    case Lf.BUFFER_FLUSHING:
                                        break;
                                    case Lf.STARTING:
                                        this.state = Lf.WAITING_TRACK, this.loadedmetadata = !1;
                                        break;
                                    case Lf.IDLE:
                                        var g = this.tracks;
                                        if (!g) break;
                                        if (!a && !this.canSelectNewFrag()) break;
                                        if (!this.media && (this.startFragRequested || !f.startFragPrefetch)) break;
                                        if (this.loadedmetadata) b = this.media.currentTime; else if (b = this.nextLoadPosition, void 0 === b) break;
                                        var h = this.mediaBuffer ? this.mediaBuffer : this.media,
                                            i = this.videoBuffer ? this.videoBuffer : this.media,
                                            j = Qe.bufferInfo(h, b, f.maxBufferHole),
                                            k = Qe.bufferInfo(i, b, f.maxBufferHole), l = j.len, m = j.end,
                                            n = this.fragPrevious, o = Math.min(f.maxBufferLength, f.maxMaxBufferLength),
                                            p = Math.max(o, k.len), q = this.audioSwitch, r = this.trackId;
                                        if ((l < p || q) && r < g.length) {
                                            if (d = g[r].details, "undefined" == typeof d) {
                                                this.state = Lf.WAITING_TRACK;
                                                break
                                            }
                                            if (!q && !d.live && n && n.sn === d.endSN && !j.nextStart && (!this.media.seeking || this.media.duration - m < n.duration / 2)) {
                                                this.hls.trigger(bc.a.BUFFER_EOS, {type: "audio"}), this.state = Lf.ENDED;
                                                break
                                            }
                                            var s = d.fragments, t = s.length, u = s[0].start,
                                                v = s[t - 1].start + s[t - 1].duration, w = void 0;
                                            if (q) if (d.live && !d.PTSKnown) cc.b.log("switching audiotrack, live stream, unknown PTS,load first fragment"), m = 0; else if (m = b, d.PTSKnown && b < u) {
                                                if (!(j.end > u || j.nextStart)) return;
                                                cc.b.log("alt audio track ahead of main track, seek to start of alt audio track"), this.media.currentTime = u + .05
                                            }
                                            if (d.initSegment && !d.initSegment.data) w = d.initSegment; else if (m <= u) {
                                                if (w = s[0], null !== this.videoTrackCC && w.cc !== this.videoTrackCC && (w = va(s, this.videoTrackCC)), d.live && w.loadIdx && w.loadIdx === this.fragLoadIdx) {
                                                    var x = j.nextStart ? j.nextStart : u;
                                                    return cc.b.log("no alt audio available @currentTime:" + this.media.currentTime + ", seeking @" + (x + .05)), void (this.media.currentTime = x + .05)
                                                }
                                            } else {
                                                var y = void 0, z = f.maxFragLookUpTolerance,
                                                    A = n ? s[n.sn - s[0].sn + 1] : void 0, B = function (a) {
                                                        var b = Math.min(z, a.duration);
                                                        return a.start + a.duration - b <= m ? 1 : a.start - b > m && a.start ? -1 : 0
                                                    };
                                                m < v ? (m > v - z && (z = 0), y = A && !B(A) ? A : Pe.search(s, B)) : y = s[t - 1], y && (w = y, u = y.start, n && w.level === n.level && w.sn === n.sn && (w.sn < d.endSN ? (w = s[w.sn + 1 - d.startSN], cc.b.log("SN just loaded, load next one: " + w.sn)) : w = null))
                                            }
                                            w && (w.encrypted ? (cc.b.log("Loading key for " + w.sn + " of [" + d.startSN + " ," + d.endSN + "],track " + r), this.state = Lf.KEY_LOADING, e.trigger(bc.a.KEY_LOADING, {frag: w})) : (cc.b.log("Loading " + w.sn + ", cc: " + w.cc + " of [" + d.startSN + " ," + d.endSN + "],track " + r + ", currentTime:" + b + ",bufferEnd:" + m.toFixed(3)), (q || this.fragmentTracker.getState(w) === Me.NOT_LOADED) && (this.fragCurrent = w, this.startFragRequested = !0, isNaN(w.sn) || (this.nextLoadPosition = w.start + w.duration), e.trigger(bc.a.FRAG_LOADING, {frag: w}), this.state = Lf.FRAG_LOADING)))
                                        }
                                        break;
                                    case Lf.WAITING_TRACK:
                                        c = this.tracks[this.trackId], c && c.details && (this.state = Lf.IDLE);
                                        break;
                                    case Lf.FRAG_LOADING_WAITING_RETRY:
                                        var C = performance.now(), D = this.retryDate;
                                        h = this.media;
                                        var E = h && h.seeking;
                                        (!D || C >= D || E) && (cc.b.log("audioStreamController: retryDate reached, switch back to IDLE state"), this.fragmentTracker && this.fragCurrent && this.fragmentTracker.removeFragment(this.fragCurrent), this.state = Lf.IDLE);
                                        break;
                                    case Lf.WAITING_INIT_PTS:
                                        var F = this.videoTrackCC;
                                        if (void 0 === this.initPTS[F]) break;
                                        var G = this.waitingFragment;
                                        if (G) {
                                            var H = G.frag.cc;
                                            F !== H ? (c = this.tracks[this.trackId], c.details && c.details.live && (cc.b.warn("Waiting fragment CC (" + H + ") does not match video track CC (" + F + ")"), this.waitingFragment = null, this.state = Lf.IDLE)) : (this.state = Lf.FRAG_LOADING, this.onFragLoaded(this.waitingFragment), this.waitingFragment = null)
                                        } else this.state = Lf.IDLE;
                                        break;
                                    case Lf.STOPPED:
                                    case Lf.FRAG_LOADING:
                                    case Lf.PARSING:
                                    case Lf.PARSED:
                                    case Lf.ENDED:
                                }
                            }, b.prototype.onMediaAttached = function (a) {
                                var b = this.media = this.mediaBuffer = a.media;
                                this.onvseeking = this.onMediaSeeking.bind(this), this.onvended = this.onMediaEnded.bind(this), b.addEventListener("seeking", this.onvseeking), b.addEventListener("ended", this.onvended);
                                var c = this.config;
                                this.tracks && c.autoStartLoad && this.startLoad(c.startPosition)
                            }, b.prototype.onMediaDetaching = function () {
                                var a = this.media;
                                a && a.ended && (cc.b.log("MSE detaching and video ended, reset startPosition"), this.startPosition = this.lastCurrentTime = 0), a && (a.removeEventListener("seeking", this.onvseeking), a.removeEventListener("ended", this.onvended), this.onvseeking = this.onvseeked = this.onvended = null), this.media = this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1, this.stopLoad()
                            }, b.prototype.onMediaSeeking = function () {
                                this.state === Lf.ENDED && (this.state = Lf.IDLE), this.media && (this.lastCurrentTime = this.media.currentTime), this.doTick(!0)
                            }, b.prototype.onMediaEnded = function () {
                                this.startPosition = this.lastCurrentTime = 0
                            }, b.prototype.onAudioTracksUpdated = function (a) {
                                cc.b.log("audio tracks updated"), this.tracks = a.audioTracks
                            }, b.prototype.onAudioTrackSwitching = function (a) {
                                var b = !!a.url;
                                this.trackId = a.id, this.fragCurrent = null, this.state = Lf.PAUSED, this.waitingFragment = null, b ? this.setInterval(100) : this.demuxer && (this.demuxer.destroy(), this.demuxer = null), b && (this.audioSwitch = !0, this.state = Lf.IDLE), this.tick()
                            }, b.prototype.onAudioTrackLoaded = function (a) {
                                var b = a.details, c = a.id, d = this.tracks[c], e = b.totalduration, f = 0;
                                if (cc.b.log("track " + c + " loaded [" + b.startSN + "," + b.endSN + "],duration:" + e), b.live) {
                                    var g = d.details;
                                    g && b.fragments.length > 0 ? (ta(g, b), f = b.fragments[0].start, b.PTSKnown ? cc.b.log("live audio playlist sliding:" + f.toFixed(3)) : cc.b.log("live audio playlist - outdated PTS, unknown sliding")) : (b.PTSKnown = !1, cc.b.log("live audio playlist - first load, unknown sliding"))
                                } else b.PTSKnown = !1;
                                if (d.details = b, !this.startFragRequested) {
                                    if (this.startPosition === -1) {
                                        var h = b.startTimeOffset;
                                        isNaN(h) ? this.startPosition = 0 : (cc.b.log("start time offset found in playlist, adjust startPosition to " + h), this.startPosition = h)
                                    }
                                    this.nextLoadPosition = this.startPosition
                                }
                                this.state === Lf.WAITING_TRACK && (this.state = Lf.IDLE), this.tick()
                            }, b.prototype.onKeyLoaded = function () {
                                this.state === Lf.KEY_LOADING && (this.state = Lf.IDLE, this.tick())
                            }, b.prototype.onFragLoaded = function (a) {
                                var b = this.fragCurrent, c = a.frag;
                                if (this.state === Lf.FRAG_LOADING && b && "audio" === c.type && c.level === b.level && c.sn === b.sn) {
                                    var d = this.tracks[this.trackId], e = d.details, f = e.totalduration, g = b.level,
                                        h = b.sn, i = b.cc,
                                        j = this.config.defaultAudioCodec || d.audioCodec || "mp4a.40.2",
                                        k = this.stats = a.stats;
                                    if ("initSegment" === h) this.state = Lf.IDLE, k.tparsed = k.tbuffered = performance.now(), e.initSegment.data = a.payload, this.hls.trigger(bc.a.FRAG_BUFFERED, {
                                        stats: k,
                                        frag: b,
                                        id: "audio"
                                    }), this.tick(); else {
                                        this.state = Lf.PARSING, this.appended = !1, this.demuxer || (this.demuxer = new Ze(this.hls, "audio"));
                                        var l = this.initPTS[i], m = e.initSegment ? e.initSegment.data : [];
                                        if (e.initSegment || void 0 !== l) {
                                            this.pendingBuffering = !0, cc.b.log("Demuxing " + h + " of [" + e.startSN + " ," + e.endSN + "],track " + g);
                                            var n = !1;
                                            b.mapTag = e.mapTag, this.demuxer.push(a.payload, m, j, null, b, f, n, l)
                                        } else cc.b.log("unknown video PTS for continuity counter " + i + ", waiting for video PTS before demuxing audio frag " + h + " of [" + e.startSN + " ," + e.endSN + "],track " + g), this.waitingFragment = a, this.state = Lf.WAITING_INIT_PTS
                                    }
                                }
                                this.fragLoadError = 0
                            }, b.prototype.onFragParsingInitSegment = function (a) {
                                var b = this.fragCurrent, c = a.frag;
                                if (b && "audio" === a.id && c.sn === b.sn && c.level === b.level && this.state === Lf.PARSING) {
                                    var d = a.tracks, e = void 0;
                                    if (d.video && delete d.video, e = d.audio) {
                                        e.levelCodec = e.codec, e.id = a.id, this.hls.trigger(bc.a.BUFFER_CODECS, d), cc.b.log("audio track:audio,container:" + e.container + ",codecs[level/parsed]=[" + e.levelCodec + "/" + e.codec + "]");
                                        var f = e.initSegment;
                                        if (f) {
                                            var g = {type: "audio", data: f, parent: "audio", content: "initSegment"};
                                            this.audioSwitch ? this.pendingData = [g] : (this.appended = !0, this.pendingBuffering = !0, this.hls.trigger(bc.a.BUFFER_APPENDING, g))
                                        }
                                        this.tick()
                                    }
                                }
                            }, b.prototype.onFragParsingData = function (a) {
                                var b = this, c = this.fragCurrent, d = a.frag;
                                if (c && "audio" === a.id && "audio" === a.type && d.sn === c.sn && d.level === c.level) {
                                    var e = this.trackId, f = this.tracks[e], g = this.hls;
                                    isNaN(a.endPTS) && (a.endPTS = a.startPTS + c.duration, a.endDTS = a.startDTS + c.duration), c.addElementaryStream(pe.ElementaryStreamTypes.AUDIO), cc.b.log("parsed " + a.type + ",PTS:[" + a.startPTS.toFixed(3) + "," + a.endPTS.toFixed(3) + "],DTS:[" + a.startDTS.toFixed(3) + "/" + a.endDTS.toFixed(3) + "],nb:" + a.nb), sa(f.details, c, a.startPTS, a.endPTS);
                                    var h = this.audioSwitch, i = this.media, j = !1;
                                    if (h && i) if (i.readyState) {
                                        var k = i.currentTime;
                                        cc.b.log("switching audio track : currentTime:" + k), k >= a.startPTS && (cc.b.log("switching audio track : flushing all audio"), this.state = Lf.BUFFER_FLUSHING, g.trigger(bc.a.BUFFER_FLUSHING, {
                                            startOffset: 0,
                                            endOffset: Number.POSITIVE_INFINITY,
                                            type: "audio"
                                        }), j = !0, this.audioSwitch = !1, g.trigger(bc.a.AUDIO_TRACK_SWITCHED, {id: e}))
                                    } else this.audioSwitch = !1, g.trigger(bc.a.AUDIO_TRACK_SWITCHED, {id: e});
                                    var l = this.pendingData;
                                    if (!l) return void g.trigger(bc.a.ERROR, {
                                        type: ac.b.MEDIA_ERROR,
                                        details: null,
                                        fatal: !0
                                    });
                                    this.audioSwitch || ([a.data1, a.data2].forEach(function (b) {
                                        b && b.length && l.push({type: a.type, data: b, parent: "audio", content: "data"})
                                    }), !j && l.length && (l.forEach(function (a) {
                                        b.state === Lf.PARSING && (b.pendingBuffering = !0, b.hls.trigger(bc.a.BUFFER_APPENDING, a))
                                    }), this.pendingData = [], this.appended = !0)), this.tick()
                                }
                            }, b.prototype.onFragParsed = function (a) {
                                var b = this.fragCurrent, c = a.frag;
                                b && "audio" === a.id && c.sn === b.sn && c.level === b.level && (this.stats.tparsed = performance.now(), this.state = Lf.PARSED, this._checkAppendedParsed())
                            }, b.prototype.onBufferReset = function () {
                                this.mediaBuffer = this.videoBuffer = null, this.loadedmetadata = !1
                            }, b.prototype.onBufferCreated = function (a) {
                                var b = a.tracks.audio;
                                b && (this.mediaBuffer = b.buffer, this.loadedmetadata = !0), a.tracks.video && (this.videoBuffer = a.tracks.video.buffer)
                            }, b.prototype.onBufferAppended = function (a) {
                                if ("audio" === a.parent) {
                                    this.state;
                                    this.pendingBuffering = a.pending > 0, this._checkAppendedParsed()
                                }
                            }, b.prototype._checkAppendedParsed = function () {
                                if (!(this.state !== Lf.PARSED || this.appended && this.pendingBuffering)) {
                                    var a = this.fragCurrent, b = this.stats, c = this.hls;
                                    if (a) {
                                        this.fragPrevious = a, b.tbuffered = performance.now(), c.trigger(bc.a.FRAG_BUFFERED, {
                                            stats: b,
                                            frag: a,
                                            id: "audio"
                                        });
                                        var d = this.mediaBuffer ? this.mediaBuffer : this.media;
                                        cc.b.log("audio buffered : " + _e.toString(d.buffered)), this.audioSwitch && this.appended && (this.audioSwitch = !1, c.trigger(bc.a.AUDIO_TRACK_SWITCHED, {id: this.trackId})), this.state = Lf.IDLE
                                    }
                                    this.tick()
                                }
                            }, b.prototype.getCurrentFrag = function () {
                                return this.fragCurrent
                            }, b.prototype.onError = function (a) {
                                var b = a.frag;
                                if (!b || "audio" === b.type) switch (a.details) {
                                    case ac.a.FRAG_LOAD_ERROR:
                                    case ac.a.FRAG_LOAD_TIMEOUT:
                                        if (!a.fatal) {
                                            var c = this.fragLoadError;
                                            c ? c++ : c = 1;
                                            var d = 0;
                                            this.media && (d = Qe.bufferInfo(this.media, this.media.currentTime, .2).len);
                                            var e = this.config;
                                            if (c <= e.fragLoadingMaxRetry || d >= 5) {
                                                this.fragLoadError = c;
                                                var f = Mf;
                                                cc.b.warn("audioStreamController: frag loading failed, retry in " + f + " ms"), this.retryDate = performance.now() + f, this.state = Lf.FRAG_LOADING_WAITING_RETRY
                                            } else cc.b.error("audioStreamController: " + a.details + " reaches max retry, redispatch as fatal ..."), a.fatal = !0, this.state = Lf.ERROR
                                        }
                                        break;
                                    case ac.a.AUDIO_TRACK_LOAD_ERROR:
                                    case ac.a.AUDIO_TRACK_LOAD_TIMEOUT:
                                    case ac.a.KEY_LOAD_ERROR:
                                    case ac.a.KEY_LOAD_TIMEOUT:
                                        this.state !== Lf.ERROR && (this.state = a.fatal ? Lf.ERROR : Lf.IDLE, cc.b.warn("audioStreamController: " + a.details + " while loading frag,switch to " + this.state + " state ..."));
                                        break;
                                    case ac.a.BUFFER_FULL_ERROR:
                                        if ("audio" === a.parent && (this.state === Lf.PARSING || this.state === Lf.PARSED)) {
                                            var g = this.mediaBuffer, h = this.media.currentTime,
                                                i = g && Qe.isBuffered(g, h) && Qe.isBuffered(g, h + .5);
                                            if (i) {
                                                var j = this.config;
                                                j.maxMaxBufferLength >= j.maxBufferLength && (j.maxMaxBufferLength /= 2, cc.b.warn("audio:reduce max buffer length to " + j.maxMaxBufferLength + "s")), this.state = Lf.IDLE
                                            } else cc.b.warn("buffer full error also media.currentTime is not buffered, flush audio buffer"), this.fragCurrent = null, this.state = Lf.BUFFER_FLUSHING, this.hls.trigger(bc.a.BUFFER_FLUSHING, {
                                                startOffset: 0,
                                                endOffset: Number.POSITIVE_INFINITY,
                                                type: "audio"
                                            })
                                        }
                                }
                            }, b.prototype.onBufferFlushed = function () {
                                var a = this, b = this.pendingData;
                                b && b.length ? (cc.b.log("appending pending audio data on Buffer Flushed"), b.forEach(function (b) {
                                    a.hls.trigger(bc.a.BUFFER_APPENDING, b)
                                }), this.appended = !0, this.pendingData = [], this.state = Lf.PARSED) : (this.state = Lf.IDLE, this.fragPrevious = null, this.tick())
                            }, Kf(b, [{
                                key: "state", set: function (a) {
                                    if (this.state !== a) {
                                        var b = this.state;
                                        this._state = a, cc.b.log("audio stream:" + b + "->" + a)
                                    }
                                }, get: function () {
                                    return this._state
                                }
                            }]), b
                        }(bf), Of = Nf, Pf = function () {
                            function a(a) {
                                if ("string" != typeof a) return !1;
                                var b = f[a.toLowerCase()];
                                return !!b && a.toLowerCase()
                            }

                            function b(a) {
                                if ("string" != typeof a) return !1;
                                var b = g[a.toLowerCase()];
                                return !!b && a.toLowerCase()
                            }

                            function c(a) {
                                for (var b = 1; b < arguments.length; b++) {
                                    var c = arguments[b];
                                    for (var d in c) a[d] = c[d]
                                }
                                return a
                            }

                            function d(d, f, g) {
                                var h = this, i = function () {
                                    if ("undefined" != typeof navigator) return /MSIE\s8\.0/.test(navigator.userAgent)
                                }(), j = {};
                                i ? h = document.createElement("custom") : j.enumerable = !0, h.hasBeenReset = !1;
                                var k = "", l = !1, m = d, n = f, o = g, p = null, q = "", r = !0, s = "auto", t = "start",
                                    u = 50, v = "middle", w = 50, x = "middle";
                                if (Object.defineProperty(h, "id", c({}, j, {
                                    get: function () {
                                        return k
                                    }, set: function (a) {
                                        k = "" + a
                                    }
                                })), Object.defineProperty(h, "pauseOnExit", c({}, j, {
                                    get: function () {
                                        return l
                                    }, set: function (a) {
                                        l = !!a
                                    }
                                })), Object.defineProperty(h, "startTime", c({}, j, {
                                    get: function () {
                                        return m
                                    }, set: function (a) {
                                        if ("number" != typeof a) throw new TypeError("Start time must be set to a number.");
                                        m = a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "endTime", c({}, j, {
                                    get: function () {
                                        return n
                                    }, set: function (a) {
                                        if ("number" != typeof a) throw new TypeError("End time must be set to a number.");
                                        n = a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "text", c({}, j, {
                                    get: function () {
                                        return o
                                    }, set: function (a) {
                                        o = "" + a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "region", c({}, j, {
                                    get: function () {
                                        return p
                                    }, set: function (a) {
                                        p = a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "vertical", c({}, j, {
                                    get: function () {
                                        return q
                                    }, set: function (b) {
                                        var c = a(b);
                                        if (c === !1) throw new SyntaxError("An invalid or illegal string was specified.");
                                        q = c, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "snapToLines", c({}, j, {
                                    get: function () {
                                        return r
                                    }, set: function (a) {
                                        r = !!a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "line", c({}, j, {
                                    get: function () {
                                        return s
                                    }, set: function (a) {
                                        if ("number" != typeof a && a !== e) throw new SyntaxError("An invalid number or illegal string was specified.");
                                        s = a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "lineAlign", c({}, j, {
                                    get: function () {
                                        return t
                                    }, set: function (a) {
                                        var c = b(a);
                                        if (!c) throw new SyntaxError("An invalid or illegal string was specified.");
                                        t = c, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "position", c({}, j, {
                                    get: function () {
                                        return u
                                    }, set: function (a) {
                                        if (a < 0 || a > 100) throw new Error("Position must be between 0 and 100.");
                                        u = a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "positionAlign", c({}, j, {
                                    get: function () {
                                        return v
                                    }, set: function (a) {
                                        var c = b(a);
                                        if (!c) throw new SyntaxError("An invalid or illegal string was specified.");
                                        v = c, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "size", c({}, j, {
                                    get: function () {
                                        return w
                                    }, set: function (a) {
                                        if (a < 0 || a > 100) throw new Error("Size must be between 0 and 100.");
                                        w = a, this.hasBeenReset = !0
                                    }
                                })), Object.defineProperty(h, "align", c({}, j, {
                                    get: function () {
                                        return x
                                    }, set: function (a) {
                                        var c = b(a);
                                        if (!c) throw new SyntaxError("An invalid or illegal string was specified.");
                                        x = c, this.hasBeenReset = !0
                                    }
                                })), h.displayState = void 0, i) return h
                            }

                            if ("undefined" != typeof window && window.VTTCue) return window.VTTCue;
                            var e = "auto", f = {"": !0, lr: !0, rl: !0},
                                g = {start: !0, middle: !0, end: !0, left: !0, right: !0};
                            return d.prototype.getCueAsHTML = function () {
                                var a = window.WebVTT;
                                return a.convertCueToDOMTree(window, this.text)
                            }, d
                        }(), Qf = function () {
                            return {
                                decode: function (a) {
                                    if (!a) return "";
                                    if ("string" != typeof a) throw new Error("Error - expected string data.");
                                    return decodeURIComponent(encodeURIComponent(a))
                                }
                            }
                        };
                    ob.prototype = {
                        set: function (a, b) {
                            this.get(a) || "" === b || (this.values[a] = b)
                        }, get: function (a, b, c) {
                            return c ? this.has(a) ? this.values[a] : b[c] : this.has(a) ? this.values[a] : b
                        }, has: function (a) {
                            return a in this.values
                        }, alt: function (a, b, c) {
                            for (var d = 0; d < c.length; ++d) if (b === c[d]) {
                                this.set(a, b);
                                break
                            }
                        }, integer: function (a, b) {
                            /^-?\d+$/.test(b) && this.set(a, parseInt(b, 10))
                        }, percent: function (a, b) {
                            var c = void 0;
                            return !!((c = b.match(/^([\d]{1,3})(\.[\d]*)?%$/)) && (b = parseFloat(b), b >= 0 && b <= 100)) && (this.set(a, b), !0)
                        }
                    };
                    var Rf = new Pf(0, 0, 0), Sf = "middle" === Rf.align ? "middle" : "center";
                    mb.prototype = {
                        parse: function (a) {
                            function b() {
                                var a = d.buffer, b = 0;
                                for (a = rb(a); b < a.length && "\r" !== a[b] && "\n" !== a[b];) ++b;
                                var c = a.substr(0, b);
                                return "\r" === a[b] && ++b, "\n" === a[b] && ++b, d.buffer = a.substr(b), c
                            }

                            function c(a) {
                                pb(a, function (a, b) {
                                    switch (a) {
                                        case"Region":
                                    }
                                }, /:/)
                            }

                            var d = this;
                            a && (d.buffer += d.decoder.decode(a, {stream: !0}));
                            try {
                                var e = void 0;
                                if ("INITIAL" === d.state) {
                                    if (!/\r\n|\n/.test(d.buffer)) return this;
                                    e = b();
                                    var f = e.match(/^(\xef\xbb\xbf)?WEBVTT([ \t].*)?$/);
                                    if (!f || !f[0]) throw new Error("Malformed WebVTT signature.");
                                    d.state = "HEADER"
                                }
                                for (var g = !1; d.buffer;) {
                                    if (!/\r\n|\n/.test(d.buffer)) return this;
                                    switch (g ? g = !1 : e = b(), d.state) {
                                        case"HEADER":
                                            /:/.test(e) ? c(e) : e || (d.state = "ID");
                                            continue;
                                        case"NOTE":
                                            e || (d.state = "ID");
                                            continue;
                                        case"ID":
                                            if (/^NOTE($|[ \t])/.test(e)) {
                                                d.state = "NOTE";
                                                break
                                            }
                                            if (!e) continue;
                                            if (d.cue = new Pf(0, 0, ""), d.state = "CUE", e.indexOf("-->") === -1) {
                                                d.cue.id = e;
                                                continue
                                            }
                                        case"CUE":
                                            try {
                                                qb(e, d.cue, d.regionList)
                                            } catch (h) {
                                                d.cue = null, d.state = "BADCUE";
                                                continue
                                            }
                                            d.state = "CUETEXT";
                                            continue;
                                        case"CUETEXT":
                                            var i = e.indexOf("-->") !== -1;
                                            if (!e || i && (g = !0)) {
                                                d.oncue && d.oncue(d.cue), d.cue = null, d.state = "ID";
                                                continue
                                            }
                                            d.cue.text && (d.cue.text += "\n"), d.cue.text += e;
                                            continue;
                                        case"BADCUE":
                                            e || (d.state = "ID");
                                            continue
                                    }
                                }
                            } catch (h) {
                                "CUETEXT" === d.state && d.cue && d.oncue && d.oncue(d.cue), d.cue = null, d.state = "INITIAL" === d.state ? "BADWEBVTT" : "BADCUE"
                            }
                            return this
                        }, flush: function () {
                            var a = this;
                            try {
                                if (a.buffer += a.decoder.decode(), (a.cue || "HEADER" === a.state) && (a.buffer += "\n\n", a.parse()), "INITIAL" === a.state) throw new Error("Malformed WebVTT signature.")
                            } catch (b) {
                                throw b
                            }
                            return a.onflush && a.onflush(),
                                this
                        }
                    };
                    var Tf = mb, Uf = {
                            42: 225,
                            92: 233,
                            94: 237,
                            95: 243,
                            96: 250,
                            123: 231,
                            124: 247,
                            125: 209,
                            126: 241,
                            127: 9608,
                            128: 174,
                            129: 176,
                            130: 189,
                            131: 191,
                            132: 8482,
                            133: 162,
                            134: 163,
                            135: 9834,
                            136: 224,
                            137: 32,
                            138: 232,
                            139: 226,
                            140: 234,
                            141: 238,
                            142: 244,
                            143: 251,
                            144: 193,
                            145: 201,
                            146: 211,
                            147: 218,
                            148: 220,
                            149: 252,
                            150: 8216,
                            151: 161,
                            152: 42,
                            153: 8217,
                            154: 9473,
                            155: 169,
                            156: 8480,
                            157: 8226,
                            158: 8220,
                            159: 8221,
                            160: 192,
                            161: 194,
                            162: 199,
                            163: 200,
                            164: 202,
                            165: 203,
                            166: 235,
                            167: 206,
                            168: 207,
                            169: 239,
                            170: 212,
                            171: 217,
                            172: 249,
                            173: 219,
                            174: 171,
                            175: 187,
                            176: 195,
                            177: 227,
                            178: 205,
                            179: 204,
                            180: 236,
                            181: 210,
                            182: 242,
                            183: 213,
                            184: 245,
                            185: 123,
                            186: 125,
                            187: 92,
                            188: 94,
                            189: 95,
                            190: 124,
                            191: 8764,
                            192: 196,
                            193: 228,
                            194: 214,
                            195: 246,
                            196: 223,
                            197: 165,
                            198: 164,
                            199: 9475,
                            200: 197,
                            201: 229,
                            202: 216,
                            203: 248,
                            204: 9487,
                            205: 9491,
                            206: 9495,
                            207: 9499
                        }, Vf = function (a) {
                            var b = a;
                            return Uf.hasOwnProperty(a) && (b = Uf[a]), String.fromCharCode(b)
                        }, Wf = 15, Xf = 100, Yf = {17: 1, 18: 3, 21: 5, 22: 7, 23: 9, 16: 11, 19: 12, 20: 14},
                        Zf = {17: 2, 18: 4, 21: 6, 22: 8, 23: 10, 19: 13, 20: 15},
                        $f = {25: 1, 26: 3, 29: 5, 30: 7, 31: 9, 24: 11, 27: 12, 28: 14},
                        _f = {25: 2, 26: 4, 29: 6, 30: 8, 31: 10, 27: 13, 28: 15},
                        ag = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"],
                        bg = {
                            verboseFilter: {DATA: 3, DEBUG: 3, INFO: 2, WARNING: 2, TEXT: 1, ERROR: 0},
                            time: null,
                            verboseLevel: 0,
                            setTime: function (a) {
                                this.time = a
                            },
                            log: function (a, b) {
                                var c = this.verboseFilter[a];
                                this.verboseLevel >= c
                            }
                        }, cg = function (a) {
                            for (var b = [], c = 0; c < a.length; c++) b.push(a[c].toString(16));
                            return b
                        }, dg = function () {
                            function a(b, c, d, e, f) {
                                tb(this, a), this.foreground = b || "white", this.underline = c || !1, this.italics = d || !1, this.background = e || "black", this.flash = f || !1
                            }

                            return a.prototype.reset = function () {
                                this.foreground = "white", this.underline = !1, this.italics = !1, this.background = "black", this.flash = !1
                            }, a.prototype.setStyles = function (a) {
                                for (var b = ["foreground", "underline", "italics", "background", "flash"], c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    a.hasOwnProperty(d) && (this[d] = a[d])
                                }
                            }, a.prototype.isDefault = function () {
                                return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
                            }, a.prototype.equals = function (a) {
                                return this.foreground === a.foreground && this.underline === a.underline && this.italics === a.italics && this.background === a.background && this.flash === a.flash
                            }, a.prototype.copy = function (a) {
                                this.foreground = a.foreground, this.underline = a.underline, this.italics = a.italics, this.background = a.background, this.flash = a.flash
                            }, a.prototype.toString = function () {
                                return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
                            }, a
                        }(), eg = function () {
                            function a(b, c, d, e, f, g) {
                                tb(this, a), this.uchar = b || " ", this.penState = new dg(c, d, e, f, g)
                            }

                            return a.prototype.reset = function () {
                                this.uchar = " ", this.penState.reset()
                            }, a.prototype.setChar = function (a, b) {
                                this.uchar = a, this.penState.copy(b)
                            }, a.prototype.setPenState = function (a) {
                                this.penState.copy(a)
                            }, a.prototype.equals = function (a) {
                                return this.uchar === a.uchar && this.penState.equals(a.penState)
                            }, a.prototype.copy = function (a) {
                                this.uchar = a.uchar, this.penState.copy(a.penState)
                            }, a.prototype.isEmpty = function () {
                                return " " === this.uchar && this.penState.isDefault()
                            }, a
                        }(), fg = function () {
                            function a() {
                                tb(this, a), this.chars = [];
                                for (var b = 0; b < Xf; b++) this.chars.push(new eg);
                                this.pos = 0, this.currPenState = new dg
                            }

                            return a.prototype.equals = function (a) {
                                for (var b = !0, c = 0; c < Xf; c++) if (!this.chars[c].equals(a.chars[c])) {
                                    b = !1;
                                    break
                                }
                                return b
                            }, a.prototype.copy = function (a) {
                                for (var b = 0; b < Xf; b++) this.chars[b].copy(a.chars[b])
                            }, a.prototype.isEmpty = function () {
                                for (var a = !0, b = 0; b < Xf; b++) if (!this.chars[b].isEmpty()) {
                                    a = !1;
                                    break
                                }
                                return a
                            }, a.prototype.setCursor = function (a) {
                                this.pos !== a && (this.pos = a), this.pos < 0 ? (bg.log("ERROR", "Negative cursor position " + this.pos), this.pos = 0) : this.pos > Xf && (bg.log("ERROR", "Too large cursor position " + this.pos), this.pos = Xf)
                            }, a.prototype.moveCursor = function (a) {
                                var b = this.pos + a;
                                if (a > 1) for (var c = this.pos + 1; c < b + 1; c++) this.chars[c].setPenState(this.currPenState);
                                this.setCursor(b)
                            }, a.prototype.backSpace = function () {
                                this.moveCursor(-1), this.chars[this.pos].setChar(" ", this.currPenState)
                            }, a.prototype.insertChar = function (a) {
                                a >= 144 && this.backSpace();
                                var b = Vf(a);
                                return this.pos >= Xf ? void bg.log("ERROR", "Cannot insert " + a.toString(16) + " (" + b + ") at position " + this.pos + ". Skipping it!") : (this.chars[this.pos].setChar(b, this.currPenState), void this.moveCursor(1))
                            }, a.prototype.clearFromPos = function (a) {
                                var b = void 0;
                                for (b = a; b < Xf; b++) this.chars[b].reset()
                            }, a.prototype.clear = function () {
                                this.clearFromPos(0), this.pos = 0, this.currPenState.reset()
                            }, a.prototype.clearToEndOfRow = function () {
                                this.clearFromPos(this.pos)
                            }, a.prototype.getTextString = function () {
                                for (var a = [], b = !0, c = 0; c < Xf; c++) {
                                    var d = this.chars[c].uchar;
                                    " " !== d && (b = !1), a.push(d)
                                }
                                return b ? "" : a.join("")
                            }, a.prototype.setPenStyles = function (a) {
                                this.currPenState.setStyles(a);
                                var b = this.chars[this.pos];
                                b.setPenState(this.currPenState)
                            }, a
                        }(), gg = function () {
                            function a() {
                                tb(this, a), this.rows = [];
                                for (var b = 0; b < Wf; b++) this.rows.push(new fg);
                                this.currRow = Wf - 1, this.nrRollUpRows = null, this.reset()
                            }

                            return a.prototype.reset = function () {
                                for (var a = 0; a < Wf; a++) this.rows[a].clear();
                                this.currRow = Wf - 1
                            }, a.prototype.equals = function (a) {
                                for (var b = !0, c = 0; c < Wf; c++) if (!this.rows[c].equals(a.rows[c])) {
                                    b = !1;
                                    break
                                }
                                return b
                            }, a.prototype.copy = function (a) {
                                for (var b = 0; b < Wf; b++) this.rows[b].copy(a.rows[b])
                            }, a.prototype.isEmpty = function () {
                                for (var a = !0, b = 0; b < Wf; b++) if (!this.rows[b].isEmpty()) {
                                    a = !1;
                                    break
                                }
                                return a
                            }, a.prototype.backSpace = function () {
                                var a = this.rows[this.currRow];
                                a.backSpace()
                            }, a.prototype.clearToEndOfRow = function () {
                                var a = this.rows[this.currRow];
                                a.clearToEndOfRow()
                            }, a.prototype.insertChar = function (a) {
                                var b = this.rows[this.currRow];
                                b.insertChar(a)
                            }, a.prototype.setPen = function (a) {
                                var b = this.rows[this.currRow];
                                b.setPenStyles(a)
                            }, a.prototype.moveCursor = function (a) {
                                var b = this.rows[this.currRow];
                                b.moveCursor(a)
                            }, a.prototype.setCursor = function (a) {
                                bg.log("INFO", "setCursor: " + a);
                                var b = this.rows[this.currRow];
                                b.setCursor(a)
                            }, a.prototype.setPAC = function (a) {
                                bg.log("INFO", "pacData = " + JSON.stringify(a));
                                var b = a.row - 1;
                                if (this.nrRollUpRows && b < this.nrRollUpRows - 1 && (b = this.nrRollUpRows - 1), this.nrRollUpRows && this.currRow !== b) {
                                    for (var c = 0; c < Wf; c++) this.rows[c].clear();
                                    var d = this.currRow + 1 - this.nrRollUpRows, e = this.lastOutputScreen;
                                    if (e) {
                                        var f = e.rows[d].cueStartTime;
                                        if (f && f < bg.time) for (var g = 0; g < this.nrRollUpRows; g++) this.rows[b - this.nrRollUpRows + g + 1].copy(e.rows[d + g])
                                    }
                                }
                                this.currRow = b;
                                var h = this.rows[this.currRow];
                                if (null !== a.indent) {
                                    var i = a.indent, j = Math.max(i - 1, 0);
                                    h.setCursor(a.indent), a.color = h.chars[j].penState.foreground
                                }
                                var k = {
                                    foreground: a.color,
                                    underline: a.underline,
                                    italics: a.italics,
                                    background: "black",
                                    flash: !1
                                };
                                this.setPen(k)
                            }, a.prototype.setBkgData = function (a) {
                                bg.log("INFO", "bkgData = " + JSON.stringify(a)), this.backSpace(), this.setPen(a), this.insertChar(32)
                            }, a.prototype.setRollUpRows = function (a) {
                                this.nrRollUpRows = a
                            }, a.prototype.rollUp = function () {
                                if (null === this.nrRollUpRows) return void bg.log("DEBUG", "roll_up but nrRollUpRows not set yet");
                                bg.log("TEXT", this.getDisplayText());
                                var a = this.currRow + 1 - this.nrRollUpRows, b = this.rows.splice(a, 1)[0];
                                b.clear(), this.rows.splice(this.currRow, 0, b), bg.log("INFO", "Rolling up")
                            }, a.prototype.getDisplayText = function (a) {
                                a = a || !1;
                                for (var b = [], c = "", d = -1, e = 0; e < Wf; e++) {
                                    var f = this.rows[e].getTextString();
                                    f && (d = e + 1, a ? b.push("Row " + d + ": '" + f + "'") : b.push(f.trim()))
                                }
                                return b.length > 0 && (c = a ? "[" + b.join(" | ") + "]" : b.join("\n")), c
                            }, a.prototype.getTextAndFormat = function () {
                                return this.rows
                            }, a
                        }(), hg = function () {
                            function a(b, c) {
                                tb(this, a), this.chNr = b, this.outputFilter = c, this.mode = null, this.verbose = 0, this.displayedMemory = new gg, this.nonDisplayedMemory = new gg, this.lastOutputScreen = new gg, this.currRollUpRow = this.displayedMemory.rows[Wf - 1], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null
                            }

                            return a.prototype.reset = function () {
                                this.mode = null, this.displayedMemory.reset(), this.nonDisplayedMemory.reset(), this.lastOutputScreen.reset(), this.currRollUpRow = this.displayedMemory.rows[Wf - 1], this.writeScreen = this.displayedMemory, this.mode = null, this.cueStartTime = null, this.lastCueEndTime = null
                            }, a.prototype.getHandler = function () {
                                return this.outputFilter
                            }, a.prototype.setHandler = function (a) {
                                this.outputFilter = a
                            }, a.prototype.setPAC = function (a) {
                                this.writeScreen.setPAC(a)
                            }, a.prototype.setBkgData = function (a) {
                                this.writeScreen.setBkgData(a)
                            }, a.prototype.setMode = function (a) {
                                a !== this.mode && (this.mode = a, bg.log("INFO", "MODE=" + a), "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory, this.writeScreen.reset()), "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null, this.nonDisplayedMemory.nrRollUpRows = null), this.mode = a)
                            }, a.prototype.insertChars = function (a) {
                                for (var b = 0; b < a.length; b++) this.writeScreen.insertChar(a[b]);
                                var c = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
                                bg.log("INFO", c + ": " + this.writeScreen.getDisplayText(!0)), "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (bg.log("TEXT", "DISPLAYED: " + this.displayedMemory.getDisplayText(!0)), this.outputDataUpdate())
                            }, a.prototype.ccRCL = function () {
                                bg.log("INFO", "RCL - Resume Caption Loading"), this.setMode("MODE_POP-ON")
                            }, a.prototype.ccBS = function () {
                                bg.log("INFO", "BS - BackSpace"), "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(), this.writeScreen === this.displayedMemory && this.outputDataUpdate())
                            }, a.prototype.ccAOF = function () {
                            }, a.prototype.ccAON = function () {
                            }, a.prototype.ccDER = function () {
                                bg.log("INFO", "DER- Delete to End of Row"), this.writeScreen.clearToEndOfRow(), this.outputDataUpdate()
                            }, a.prototype.ccRU = function (a) {
                                bg.log("INFO", "RU(" + a + ") - Roll Up"), this.writeScreen = this.displayedMemory, this.setMode("MODE_ROLL-UP"), this.writeScreen.setRollUpRows(a)
                            }, a.prototype.ccFON = function () {
                                bg.log("INFO", "FON - Flash On"), this.writeScreen.setPen({flash: !0})
                            }, a.prototype.ccRDC = function () {
                                bg.log("INFO", "RDC - Resume Direct Captioning"), this.setMode("MODE_PAINT-ON")
                            }, a.prototype.ccTR = function () {
                                bg.log("INFO", "TR"), this.setMode("MODE_TEXT")
                            }, a.prototype.ccRTD = function () {
                                bg.log("INFO", "RTD"), this.setMode("MODE_TEXT")
                            }, a.prototype.ccEDM = function () {
                                bg.log("INFO", "EDM - Erase Displayed Memory"), this.displayedMemory.reset(), this.outputDataUpdate(!0)
                            }, a.prototype.ccCR = function () {
                                bg.log("CR - Carriage Return"), this.writeScreen.rollUp(), this.outputDataUpdate(!0)
                            }, a.prototype.ccENM = function () {
                                bg.log("INFO", "ENM - Erase Non-displayed Memory"), this.nonDisplayedMemory.reset()
                            }, a.prototype.ccEOC = function () {
                                if (bg.log("INFO", "EOC - End Of Caption"), "MODE_POP-ON" === this.mode) {
                                    var a = this.displayedMemory;
                                    this.displayedMemory = this.nonDisplayedMemory, this.nonDisplayedMemory = a, this.writeScreen = this.nonDisplayedMemory, bg.log("TEXT", "DISP: " + this.displayedMemory.getDisplayText())
                                }
                                this.outputDataUpdate(!0)
                            }, a.prototype.ccTO = function (a) {
                                bg.log("INFO", "TO(" + a + ") - Tab Offset"), this.writeScreen.moveCursor(a)
                            }, a.prototype.ccMIDROW = function (a) {
                                var b = {flash: !1};
                                if (b.underline = a % 2 === 1, b.italics = a >= 46, b.italics) b.foreground = "white"; else {
                                    var c = Math.floor(a / 2) - 16,
                                        d = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"];
                                    b.foreground = d[c]
                                }
                                bg.log("INFO", "MIDROW: " + JSON.stringify(b)), this.writeScreen.setPen(b)
                            }, a.prototype.outputDataUpdate = function () {
                                var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], b = bg.time;
                                null !== b && this.outputFilter && (null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue && (this.outputFilter.newCue(this.cueStartTime, b, this.lastOutputScreen), a === !0 && this.outputFilter.dispatchCue && this.outputFilter.dispatchCue()), this.cueStartTime = this.displayedMemory.isEmpty() ? null : b) : this.cueStartTime = b, this.lastOutputScreen.copy(this.displayedMemory))
                            }, a.prototype.cueSplitAtTime = function (a) {
                                this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, a, this.displayedMemory), this.cueStartTime = a))
                            }, a
                        }(), ig = function () {
                            function a(b, c, d) {
                                tb(this, a), this.field = b || 1, this.outputs = [c, d], this.channels = [new hg(1, c), new hg(2, d)], this.currChNr = -1, this.lastCmdA = null, this.lastCmdB = null, this.bufferedData = [], this.startTime = null, this.lastTime = null, this.dataCounters = {
                                    padding: 0,
                                    "char": 0,
                                    cmd: 0,
                                    other: 0
                                }
                            }

                            return a.prototype.getHandler = function (a) {
                                return this.channels[a].getHandler()
                            }, a.prototype.setHandler = function (a, b) {
                                this.channels[a].setHandler(b)
                            }, a.prototype.addData = function (a, b) {
                                var c = void 0, d = void 0, e = void 0, f = !1;
                                this.lastTime = a, bg.setTime(a);
                                for (var g = 0; g < b.length; g += 2) if (d = 127 & b[g], e = 127 & b[g + 1], 0 !== d || 0 !== e) {
                                    if (bg.log("DATA", "[" + cg([b[g], b[g + 1]]) + "] -> (" + cg([d, e]) + ")"), c = this.parseCmd(d, e), c || (c = this.parseMidrow(d, e)), c || (c = this.parsePAC(d, e)), c || (c = this.parseBackgroundAttributes(d, e)), !c && (f = this.parseChars(d, e))) if (this.currChNr && this.currChNr >= 0) {
                                        var h = this.channels[this.currChNr - 1];
                                        h.insertChars(f)
                                    } else bg.log("WARNING", "No channel found yet. TEXT-MODE?");
                                    c ? this.dataCounters.cmd += 2 : f ? this.dataCounters["char"] += 2 : (this.dataCounters.other += 2, bg.log("WARNING", "Couldn't parse cleaned data " + cg([d, e]) + " orig: " + cg([b[g], b[g + 1]])))
                                } else this.dataCounters.padding += 2
                            }, a.prototype.parseCmd = function (a, b) {
                                var c = null, d = (20 === a || 28 === a) && b >= 32 && b <= 47,
                                    e = (23 === a || 31 === a) && b >= 33 && b <= 35;
                                if (!d && !e) return !1;
                                if (a === this.lastCmdA && b === this.lastCmdB) return this.lastCmdA = null, this.lastCmdB = null, bg.log("DEBUG", "Repeated command (" + cg([a, b]) + ") is dropped"), !0;
                                c = 20 === a || 23 === a ? 1 : 2;
                                var f = this.channels[c - 1];
                                return 20 === a || 28 === a ? 32 === b ? f.ccRCL() : 33 === b ? f.ccBS() : 34 === b ? f.ccAOF() : 35 === b ? f.ccAON() : 36 === b ? f.ccDER() : 37 === b ? f.ccRU(2) : 38 === b ? f.ccRU(3) : 39 === b ? f.ccRU(4) : 40 === b ? f.ccFON() : 41 === b ? f.ccRDC() : 42 === b ? f.ccTR() : 43 === b ? f.ccRTD() : 44 === b ? f.ccEDM() : 45 === b ? f.ccCR() : 46 === b ? f.ccENM() : 47 === b && f.ccEOC() : f.ccTO(b - 32), this.lastCmdA = a, this.lastCmdB = b, this.currChNr = c, !0
                            }, a.prototype.parseMidrow = function (a, b) {
                                var c = null;
                                if ((17 === a || 25 === a) && b >= 32 && b <= 47) {
                                    if (c = 17 === a ? 1 : 2, c !== this.currChNr) return bg.log("ERROR", "Mismatch channel in midrow parsing"), !1;
                                    var d = this.channels[c - 1];
                                    return d.ccMIDROW(b), bg.log("DEBUG", "MIDROW (" + cg([a, b]) + ")"), !0
                                }
                                return !1
                            }, a.prototype.parsePAC = function (a, b) {
                                var c = null, d = null,
                                    e = (a >= 17 && a <= 23 || a >= 25 && a <= 31) && b >= 64 && b <= 127,
                                    f = (16 === a || 24 === a) && b >= 64 && b <= 95;
                                if (!e && !f) return !1;
                                if (a === this.lastCmdA && b === this.lastCmdB) return this.lastCmdA = null, this.lastCmdB = null, !0;
                                c = a <= 23 ? 1 : 2, d = b >= 64 && b <= 95 ? 1 === c ? Yf[a] : $f[a] : 1 === c ? Zf[a] : _f[a];
                                var g = this.interpretPAC(d, b), h = this.channels[c - 1];
                                return h.setPAC(g), this.lastCmdA = a, this.lastCmdB = b, this.currChNr = c, !0
                            }, a.prototype.interpretPAC = function (a, b) {
                                var c = b, d = {color: null, italics: !1, indent: null, underline: !1, row: a};
                                return c = b > 95 ? b - 96 : b - 64, d.underline = 1 === (1 & c), c <= 13 ? d.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(c / 2)] : c <= 15 ? (d.italics = !0, d.color = "white") : d.indent = 4 * Math.floor((c - 16) / 2), d
                            }, a.prototype.parseChars = function (a, b) {
                                var c = null, d = null, e = null;
                                if (a >= 25 ? (c = 2, e = a - 8) : (c = 1, e = a), e >= 17 && e <= 19) {
                                    var f = b;
                                    f = 17 === e ? b + 80 : 18 === e ? b + 112 : b + 144, bg.log("INFO", "Special char '" + Vf(f) + "' in channel " + c), d = [f]
                                } else a >= 32 && a <= 127 && (d = 0 === b ? [a] : [a, b]);
                                if (d) {
                                    var g = cg(d);
                                    bg.log("DEBUG", "Char codes =  " + g.join(",")), this.lastCmdA = null, this.lastCmdB = null
                                }
                                return d
                            }, a.prototype.parseBackgroundAttributes = function (a, b) {
                                var c = void 0, d = void 0, e = void 0, f = void 0,
                                    g = (16 === a || 24 === a) && b >= 32 && b <= 47,
                                    h = (23 === a || 31 === a) && b >= 45 && b <= 47;
                                return !(!g && !h) && (c = {}, 16 === a || 24 === a ? (d = Math.floor((b - 32) / 2), c.background = ag[d], b % 2 === 1 && (c.background = c.background + "_semi")) : 45 === b ? c.background = "transparent" : (c.foreground = "black", 47 === b && (c.underline = !0)), e = a < 24 ? 1 : 2, f = this.channels[e - 1], f.setBkgData(c), this.lastCmdA = null, this.lastCmdB = null, !0)
                            }, a.prototype.reset = function () {
                                for (var a = 0; a < this.channels.length; a++) this.channels[a] && this.channels[a].reset();
                                this.lastCmdA = null, this.lastCmdB = null
                            }, a.prototype.cueSplitAtTime = function (a) {
                                for (var b = 0; b < this.channels.length; b++) this.channels[b] && this.channels[b].cueSplitAtTime(a)
                            }, a
                        }(), jg = ig, kg = function () {
                            function a(b, c) {
                                ub(this, a), this.timelineController = b, this.trackName = c, this.startTime = null, this.endTime = null, this.screen = null
                            }

                            return a.prototype.dispatchCue = function () {
                                null !== this.startTime && (this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen), this.startTime = null)
                            }, a.prototype.newCue = function (a, b, c) {
                                (null === this.startTime || this.startTime > a) && (this.startTime = a), this.endTime = b, this.screen = c, this.timelineController.createCaptionsTrack(this.trackName)
                            }, a
                        }(), lg = kg, mg = function (a, b, c) {
                            return a.substr(c || 0, b.length) === b
                        }, ng = function (a) {
                            var b = parseInt(a.substr(-3)), c = parseInt(a.substr(-6, 2)), d = parseInt(a.substr(-9, 2)),
                                e = a.length > 9 ? parseInt(a.substr(0, a.indexOf(":"))) : 0;
                            return isNaN(b) || isNaN(c) || isNaN(d) || isNaN(e) ? -1 : (b += 1e3 * c, b += 6e4 * d, b += 36e5 * e)
                        }, og = function sh(a) {
                            for (var sh = 5381, b = a.length; b;) sh = 33 * sh ^ a.charCodeAt(--b);
                            return (sh >>> 0).toString()
                        }, pg = function (a, b, c) {
                            var d = a[b], e = a[d.prevCC];
                            if (!e || !e["new"] && d["new"]) return a.ccOffset = a.presentationOffset = d.start, void (d["new"] = !1);
                            for (; e && e["new"];) a.ccOffset += d.start - e.start, d["new"] = !1, d = e, e = a[d.prevCC];
                            a.presentationOffset = c
                        }, qg = {
                            parse: function (a, b, c, d, e, f) {
                                var g = /\r\n|\n\r|\n|\r/g,
                                    h = Object(nf.b)(new Uint8Array(a)).trim().replace(g, "\n").split("\n"),
                                    i = "00:00.000", j = 0, k = 0, l = 0, m = [], n = void 0, o = !0, p = new Tf;
                                p.oncue = function (a) {
                                    var b = c[d], e = c.ccOffset;
                                    b && b["new"] && (void 0 !== k ? e = c.ccOffset = b.start : pg(c, d, l)), l && (e = l + c.ccOffset - c.presentationOffset), a.startTime += e - k, a.endTime += e - k, a.id = og(a.startTime.toString()) + og(a.endTime.toString()) + og(a.text), a.text = decodeURIComponent(encodeURIComponent(a.text)), a.endTime > 0 && m.push(a)
                                }, p.onparsingerror = function (a) {
                                    n = a
                                }, p.onflush = function () {
                                    return n && f ? void f(n) : void e(m)
                                }, h.forEach(function (a) {
                                    if (o) {
                                        if (mg(a, "X-TIMESTAMP-MAP=")) {
                                            o = !1, a.substr(16).split(",").forEach(function (a) {
                                                mg(a, "LOCAL:") ? i = a.substr(6) : mg(a, "MPEGTS:") && (j = parseInt(a.substr(7)))
                                            });
                                            try {
                                                b = b < 0 ? b + 8589934592 : b, j -= b, k = ng(i) / 1e3, l = j / 9e4, k === -1 && (n = new Error("Malformed X-TIMESTAMP-MAP: " + a))
                                            } catch (c) {
                                                n = new Error("Malformed X-TIMESTAMP-MAP: " + a)
                                            }
                                            return
                                        }
                                        "" === a && (o = !1)
                                    }
                                    p.parse(a + "\n")
                                }), p.flush()
                            }
                        }, rg = qg, sg = function (a) {
                            function b(c) {
                                vb(this, b);
                                var d = wb(this, a.call(this, c, bc.a.MEDIA_ATTACHING, bc.a.MEDIA_DETACHING, bc.a.FRAG_PARSING_USERDATA, bc.a.FRAG_DECRYPTED, bc.a.MANIFEST_LOADING, bc.a.MANIFEST_LOADED, bc.a.FRAG_LOADED, bc.a.LEVEL_SWITCHING, bc.a.INIT_PTS_FOUND));
                                if (d.hls = c, d.config = c.config, d.enabled = !0, d.Cues = c.config.cueHandler, d.textTracks = [], d.tracks = [], d.unparsedVttFrags = [], d.initPTS = void 0, d.cueRanges = [], d.captionsTracks = {}, d.captionsProperties = {
                                    textTrack1: {
                                        label: d.config.captionsTextTrack1Label,
                                        languageCode: d.config.captionsTextTrack1LanguageCode
                                    },
                                    textTrack2: {
                                        label: d.config.captionsTextTrack2Label,
                                        languageCode: d.config.captionsTextTrack2LanguageCode
                                    }
                                }, d.config.enableCEA708Captions) {
                                    var e = new lg(d, "textTrack1"), f = new lg(d, "textTrack2");
                                    d.cea608Parser = new jg(0, e, f)
                                }
                                return d
                            }

                            return xb(b, a), b.prototype.addCues = function (a, b, c, d) {
                                for (var e = this.cueRanges, f = !1, g = e.length; g--;) {
                                    var h = e[g], i = zb(h[0], h[1], b, c);
                                    if (i >= 0 && (h[0] = Math.min(h[0], b), h[1] = Math.max(h[1], c), f = !0, i / (c - b) > .5)) return
                                }
                                f || e.push([b, c]), this.Cues.newCue(this.captionsTracks[a], b, c, d)
                            }, b.prototype.onInitPtsFound = function (a) {
                                var b = this;
                                "undefined" == typeof this.initPTS && (this.initPTS = a.initPTS), this.unparsedVttFrags.length && (this.unparsedVttFrags.forEach(function (a) {
                                    b.onFragLoaded(a)
                                }), this.unparsedVttFrags = [])
                            }, b.prototype.getExistingTrack = function (a) {
                                var b = this.media;
                                if (b) for (var c = 0; c < b.textTracks.length; c++) {
                                    var d = b.textTracks[c];
                                    if (d[a]) return d
                                }
                                return null
                            }, b.prototype.createCaptionsTrack = function (a) {
                                var b = this.captionsProperties[a], c = b.label, d = b.languageCode,
                                    e = this.captionsTracks;
                                if (!e[a]) {
                                    var f = this.getExistingTrack(a);
                                    if (f) e[a] = f, Oa(e[a]), Na(e[a], this.media); else {
                                        var g = this.createTextTrack("captions", c, d);
                                        g && (g[a] = !0, e[a] = g)
                                    }
                                }
                            }, b.prototype.createTextTrack = function (a, b, c) {
                                var d = this.media;
                                if (d) return d.addTextTrack(a, b, c)
                            }, b.prototype.destroy = function () {
                                gc.prototype.destroy.call(this)
                            }, b.prototype.onMediaAttaching = function (a) {
                                this.media = a.media, this._cleanTracks()
                            }, b.prototype.onMediaDetaching = function () {
                                var a = this.captionsTracks;
                                Object.keys(a).forEach(function (b) {
                                    Oa(a[b]), delete a[b]
                                })
                            }, b.prototype.onManifestLoading = function () {
                                this.lastSn = -1, this.prevCC = -1, this.vttCCs = {
                                    ccOffset: 0,
                                    presentationOffset: 0
                                }, this._cleanTracks()
                            }, b.prototype._cleanTracks = function () {
                                var a = this.media;
                                if (a) {
                                    var b = a.textTracks;
                                    if (b) for (var c = 0; c < b.length; c++) Oa(b[c])
                                }
                            }, b.prototype.onManifestLoaded = function (a) {
                                var b = this;
                                if (this.textTracks = [], this.unparsedVttFrags = this.unparsedVttFrags || [], this.initPTS = void 0, this.cueRanges = [], this.config.enableWebVTT) {
                                    this.tracks = a.subtitles || [];
                                    var c = this.media ? this.media.textTracks : [];
                                    this.tracks.forEach(function (a, d) {
                                        var e = void 0;
                                        if (d < c.length) {
                                            var f = c[d];
                                            yb(f, a) && (e = f)
                                        }
                                        e || (e = b.createTextTrack("subtitles", a.name, a.lang)), a["default"] ? e.mode = b.hls.subtitleDisplay ? "showing" : "hidden" : e.mode = "disabled", b.textTracks.push(e)
                                    })
                                }
                            }, b.prototype.onLevelSwitching = function () {
                                this.enabled = "NONE" !== this.hls.currentLevel.closedCaptions
                            }, b.prototype.onFragLoaded = function (a) {
                                var b = a.frag, c = a.payload;
                                if ("main" === b.type) {
                                    var d = b.sn;
                                    if (d !== this.lastSn + 1) {
                                        var e = this.cea608Parser;
                                        e && e.reset()
                                    }
                                    this.lastSn = d
                                } else if ("subtitle" === b.type) if (c.byteLength) {
                                    if ("undefined" == typeof this.initPTS) return void this.unparsedVttFrags.push(a);
                                    var f = b.decryptdata;
                                    null != f && null != f.key && "AES-128" === f.method || this._parseVTTs(b, c)
                                } else this.hls.trigger(bc.a.SUBTITLE_FRAG_PROCESSED, {success: !1, frag: b})
                            }, b.prototype._parseVTTs = function (a, b) {
                                var c = this.vttCCs;
                                c[a.cc] || (c[a.cc] = {start: a.start, prevCC: this.prevCC, "new": !0}, this.prevCC = a.cc);
                                var d = this.textTracks, e = this.hls;
                                rg.parse(b, this.initPTS, c, a.cc, function (b) {
                                    var c = d[a.trackId];
                                    return "disabled" === c.mode ? void e.trigger(bc.a.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: a
                                    }) : (b.forEach(function (a) {
                                        if (!c.cues.getCueById(a.id)) try {
                                            c.addCue(a)
                                        } catch (b) {
                                            var d = new window.TextTrackCue(a.startTime, a.endTime, a.text);
                                            d.id = a.id, c.addCue(d)
                                        }
                                    }), void e.trigger(bc.a.SUBTITLE_FRAG_PROCESSED, {success: !0, frag: a}))
                                }, function (b) {
                                    cc.b.log("Failed to parse VTT cue: " + b), e.trigger(bc.a.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: a
                                    })
                                })
                            }, b.prototype.onFragDecrypted = function (a) {
                                var b = a.payload, c = a.frag;
                                if ("subtitle" === c.type) {
                                    if ("undefined" == typeof this.initPTS) return void this.unparsedVttFrags.push(a);
                                    this._parseVTTs(c, b)
                                }
                            }, b.prototype.onFragParsingUserdata = function (a) {
                                if (this.enabled && this.config.enableCEA708Captions) for (var b = 0; b < a.samples.length; b++) {
                                    var c = this.extractCea608Data(a.samples[b].bytes);
                                    this.cea608Parser.addData(a.samples[b].pts, c)
                                }
                            }, b.prototype.extractCea608Data = function (a) {
                                for (var b = 31 & a[0], c = 2, d = void 0, e = void 0, f = void 0, g = void 0, h = void 0, i = [], j = 0; j < b; j++) d = a[c++], e = 127 & a[c++], f = 127 & a[c++], g = 0 !== (4 & d), h = 3 & d, 0 === e && 0 === f || g && 0 === h && (i.push(e), i.push(f));
                                return i
                            }, b
                        }(gc), tg = sg, ug = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), vg = function (a) {
                            function b(c) {
                                Ab(this, b);
                                var d = Bb(this, a.call(this, c, bc.a.MEDIA_ATTACHED, bc.a.MEDIA_DETACHING, bc.a.MANIFEST_LOADING, bc.a.MANIFEST_LOADED, bc.a.SUBTITLE_TRACK_LOADED));
                                return d.tracks = [], d.trackId = -1, d.media = null, d.subtitleDisplay = !0, d
                            }

                            return Cb(b, a), b.prototype._onTextTracksChanged = function () {
                                if (this.media) {
                                    for (var a = -1, b = Db(this.media.textTracks), c = 0; c < b.length; c++) if ("hidden" === b[c].mode) a = c; else if ("showing" === b[c].mode) {
                                        a = c;
                                        break
                                    }
                                    this.subtitleTrack = a
                                }
                            }, b.prototype.destroy = function () {
                                gc.prototype.destroy.call(this)
                            }, b.prototype.onMediaAttached = function (a) {
                                var b = this;
                                this.media = a.media, this.media && (this.queuedDefaultTrack && (this.subtitleTrack = this.queuedDefaultTrack, delete this.queuedDefaultTrack), this.trackChangeListener = this._onTextTracksChanged.bind(this), this.useTextTrackPolling = !(this.media.textTracks && "onchange" in this.media.textTracks), this.useTextTrackPolling ? this.subtitlePollingInterval = setInterval(function () {
                                    b.trackChangeListener()
                                }, 500) : this.media.textTracks.addEventListener("change", this.trackChangeListener))
                            }, b.prototype.onMediaDetaching = function () {
                                this.media && (this.useTextTrackPolling ? clearInterval(this.subtitlePollingInterval) : this.media.textTracks.removeEventListener("change", this.trackChangeListener), this.media = null)
                            }, b.prototype.onManifestLoading = function () {
                                this.tracks = [], this.trackId = -1
                            }, b.prototype.onManifestLoaded = function (a) {
                                var b = this, c = a.subtitles || [];
                                this.tracks = c, this.trackId = -1, this.hls.trigger(bc.a.SUBTITLE_TRACKS_UPDATED, {subtitleTracks: c}), c.forEach(function (a) {
                                    a["default"] && (b.media ? b.subtitleTrack = a.id : b.queuedDefaultTrack = a.id)
                                })
                            }, b.prototype.onTick = function () {
                                var a = this.trackId, b = this.tracks[a];
                                if (b) {
                                    var c = b.details;
                                    c && c.live !== !0 || (cc.b.log("(re)loading playlist for subtitle track " + a), this.hls.trigger(bc.a.SUBTITLE_TRACK_LOADING, {
                                        url: b.url,
                                        id: a
                                    }))
                                }
                            }, b.prototype.onSubtitleTrackLoaded = function (a) {
                                var b = this;
                                a.id < this.tracks.length && (cc.b.log("subtitle track " + a.id + " loaded"), this.tracks[a.id].details = a.details, a.details.live && !this.timer && (this.timer = setInterval(function () {
                                    b.onTick()
                                }, 1e3 * a.details.targetduration, this)), !a.details.live && this.timer && this._stopTimer())
                            }, b.prototype.setSubtitleTrackInternal = function (a) {
                                var b = this.hls, c = this.tracks;
                                if (!("number" != typeof a || a < -1 || a >= c.length) && (this._stopTimer(), this.trackId = a, cc.b.log("switching to subtitle track " + a), b.trigger(bc.a.SUBTITLE_TRACK_SWITCH, {id: a}), a !== -1)) {
                                    var d = c[a], e = d.details;
                                    e && !e.live || (cc.b.log("(re)loading playlist for subtitle track " + a), b.trigger(bc.a.SUBTITLE_TRACK_LOADING, {
                                        url: d.url,
                                        id: a
                                    }))
                                }
                            }, b.prototype._stopTimer = function () {
                                this.timer && (clearInterval(this.timer), this.timer = null)
                            }, b.prototype._toggleTrackModes = function (a) {
                                var b = this.media, c = this.subtitleDisplay, d = this.trackId;
                                if (b) {
                                    var e = Db(b.textTracks);
                                    if (a === -1) [].slice.call(e).forEach(function (a) {
                                        a.mode = "disabled"
                                    }); else {
                                        var f = e[d];
                                        f && (f.mode = "disabled")
                                    }
                                    var g = e[a];
                                    g && (g.mode = c ? "showing" : "hidden")
                                }
                            }, ug(b, [{
                                key: "subtitleTracks", get: function () {
                                    return this.tracks
                                }
                            }, {
                                key: "subtitleTrack", get: function () {
                                    return this.trackId
                                }, set: function (a) {
                                    this.trackId !== a && (this._toggleTrackModes(a), this.setSubtitleTrackInternal(a))
                                }
                            }]), b
                        }(gc), wg = vg, xg = c(27), yg = {
                            STOPPED: "STOPPED",
                            IDLE: "IDLE",
                            KEY_LOADING: "KEY_LOADING",
                            FRAG_LOADING: "FRAG_LOADING"
                        }, zg = function (a) {
                            function b(c) {
                                Eb(this, b);
                                var d = Fb(this, a.call(this, c, bc.a.MEDIA_ATTACHED, bc.a.ERROR, bc.a.KEY_LOADED, bc.a.FRAG_LOADED, bc.a.SUBTITLE_TRACKS_UPDATED, bc.a.SUBTITLE_TRACK_SWITCH, bc.a.SUBTITLE_TRACK_LOADED, bc.a.SUBTITLE_FRAG_PROCESSED));
                                return d.config = c.config, d.vttFragSNsProcessed = {}, d.vttFragQueues = void 0, d.currentlyProcessing = null, d.state = yg.STOPPED, d.currentTrackId = -1, d.decrypter = new xg.a(c.observer, c.config), d
                            }

                            return Gb(b, a), b.prototype.onHandlerDestroyed = function () {
                                this.state = yg.STOPPED
                            }, b.prototype.clearVttFragQueues = function () {
                                var a = this;
                                this.vttFragQueues = {}, this.tracks.forEach(function (b) {
                                    a.vttFragQueues[b.id] = []
                                })
                            }, b.prototype.nextFrag = function () {
                                if (null === this.currentlyProcessing && this.currentTrackId > -1 && this.vttFragQueues[this.currentTrackId].length) {
                                    var a = this.currentlyProcessing = this.vttFragQueues[this.currentTrackId].shift();
                                    this.fragCurrent = a, this.hls.trigger(bc.a.FRAG_LOADING, {frag: a}), this.state = yg.FRAG_LOADING
                                }
                            }, b.prototype.onSubtitleFragProcessed = function (a) {
                                a.success && this.vttFragSNsProcessed[a.frag.trackId].push(a.frag.sn), this.currentlyProcessing = null, this.state = yg.IDLE, this.nextFrag()
                            }, b.prototype.onMediaAttached = function () {
                                this.state = yg.IDLE
                            }, b.prototype.onError = function (a) {
                                var b = a.frag;
                                b && "subtitle" !== b.type || this.currentlyProcessing && (this.currentlyProcessing = null, this.nextFrag())
                            }, b.prototype.doTick = function () {
                                var a = this;
                                switch (this.state) {
                                    case yg.IDLE:
                                        var b = this.tracks, c = this.currentTrackId, d = this.vttFragSNsProcessed[c],
                                            e = this.vttFragQueues[c],
                                            f = this.currentlyProcessing ? this.currentlyProcessing.sn : -1,
                                            g = function (a) {
                                                return d.indexOf(a.sn) > -1
                                            }, h = function (a) {
                                                return e.some(function (b) {
                                                    return b.sn === a.sn
                                                })
                                            };
                                        if (!b) break;
                                        var i;
                                        if (c < b.length && (i = b[c].details), "undefined" == typeof i) break;
                                        i.fragments.forEach(function (b) {
                                            g(b) || b.sn === f || h(b) || (b.encrypted ? (cc.b.log("Loading key for " + b.sn), a.state = yg.KEY_LOADING, a.hls.trigger(bc.a.KEY_LOADING, {frag: b})) : (b.trackId = c, e.push(b), a.nextFrag()))
                                        })
                                }
                            }, b.prototype.onSubtitleTracksUpdated = function (a) {
                                var b = this;
                                cc.b.log("subtitle tracks updated"), this.tracks = a.subtitleTracks, this.clearVttFragQueues(), this.vttFragSNsProcessed = {}, this.tracks.forEach(function (a) {
                                    b.vttFragSNsProcessed[a.id] = []
                                })
                            }, b.prototype.onSubtitleTrackSwitch = function (a) {
                                if (this.currentTrackId = a.id, this.tracks && this.currentTrackId !== -1) {
                                    var b = this.tracks[this.currentTrackId];
                                    b && b.details && this.tick()
                                }
                            }, b.prototype.onSubtitleTrackLoaded = function () {
                                this.tick()
                            }, b.prototype.onKeyLoaded = function () {
                                this.state === yg.KEY_LOADING && (this.state = yg.IDLE, this.tick())
                            }, b.prototype.onFragLoaded = function (a) {
                                var b = this.fragCurrent, c = a.frag.decryptdata, d = a.frag, e = this.hls;
                                if (this.state === yg.FRAG_LOADING && b && "subtitle" === a.frag.type && b.sn === a.frag.sn && a.payload.byteLength > 0 && null != c && null != c.key && "AES-128" === c.method) {
                                    var f = void 0;
                                    try {
                                        f = performance.now()
                                    } catch (g) {
                                        f = Date.now()
                                    }
                                    this.decrypter.decrypt(a.payload, c.key.buffer, c.iv.buffer, function (a) {
                                        var b = void 0;
                                        try {
                                            b = performance.now()
                                        } catch (c) {
                                            b = Date.now()
                                        }
                                        e.trigger(bc.a.FRAG_DECRYPTED, {
                                            frag: d,
                                            payload: a,
                                            stats: {tstart: f, tdecrypt: b}
                                        })
                                    })
                                }
                            }, b
                        }(bf), Ag = zg, Bg = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(), Cg = 3, Dg = {WIDEVINE: "com.widevine.alpha", PLAYREADY: "com.microsoft.playready"},
                        Eg = function (a, b, c) {
                            var d = {videoCapabilities: []};
                            return b.forEach(function (a) {
                                d.videoCapabilities.push({contentType: 'video/mp4; codecs="' + a + '"'})
                            }), [d]
                        }, Fg = function (a, b, c) {
                            switch (a) {
                                case Dg.WIDEVINE:
                                    return Eg(b, c);
                                default:
                                    throw Error("Unknown key-system: " + a)
                            }
                        }, Gg = function (a) {
                            function b(c) {
                                Hb(this, b);
                                var d = Ib(this, a.call(this, c, bc.a.MEDIA_ATTACHED, bc.a.MANIFEST_PARSED));
                                return d._widevineLicenseUrl = c.config.widevineLicenseUrl, d._licenseXhrSetup = c.config.licenseXhrSetup, d._emeEnabled = c.config.emeEnabled, d._requestMediaKeySystemAccess = c.config.requestMediaKeySystemAccessFunc, d._mediaKeysList = [], d._media = null, d._hasSetMediaKeys = !1, d._isMediaEncrypted = !1, d._requestLicenseFailureCount = 0, d
                            }

                            return Jb(b, a), b.prototype.destroy = function () {
                                this._media && (this._media.removeEventListener("encrypted", this._onEncrypted), this._media = null)
                            }, b.prototype.getLicenseServerUrl = function (a) {
                                var b = void 0;
                                switch (a) {
                                    case Dg.WIDEVINE:
                                        b = this._widevineLicenseUrl;
                                        break;
                                    default:
                                        b = null
                                }
                                return b || (cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, 'No license server URL configured for key-system "' + a + '"'), this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.KEY_SYSTEM_ERROR,
                                    details: ac.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                    fatal: !0
                                })), b
                            }, b.prototype._attemptKeySystemAccess = function (a, b, c) {
                                var d = this, e = Fg(a, b, c);
                                return e ? (cc.b.log("Requesting encrypted media key-system access"), void this.requestMediaKeySystemAccess(a, e).then(function (b) {
                                    d._onMediaKeySystemAccessObtained(a, b)
                                })["catch"](function (b) {
                                    cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, 'Failed to obtain key-system "' + a + '" access:', b)
                                })) : void cc.b.warn("Can not create config for key-system (maybe because platform is not supported):", a)
                            }, b.prototype._onMediaKeySystemAccessObtained = function (a, b) {
                                var c = this;
                                cc.b.log('Access for key-system "' + a + '" obtained');
                                var d = {
                                    mediaKeys: null,
                                    mediaKeysSession: null,
                                    mediaKeysSessionInitialized: !1,
                                    mediaKeySystemAccess: b,
                                    mediaKeySystemDomain: a
                                };
                                this._mediaKeysList.push(d), b.createMediaKeys().then(function (b) {
                                    d.mediaKeys = b, cc.b.log('Media-keys created for key-system "' + a + '"'), c._onMediaKeysCreated()
                                })["catch"](function (a) {
                                    cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Failed to create media-keys:", a)
                                })
                            }, b.prototype._onMediaKeysCreated = function () {
                                var a = this;
                                this._mediaKeysList.forEach(function (b) {
                                    b.mediaKeysSession || (b.mediaKeysSession = b.mediaKeys.createSession(), a._onNewMediaKeySession(b.mediaKeysSession))
                                })
                            }, b.prototype._onNewMediaKeySession = function (a) {
                                var b = this;
                                cc.b.log("New key-system session " + a.sessionId), a.addEventListener("message", function (c) {
                                    b._onKeySessionMessage(a, c.message)
                                }, !1)
                            }, b.prototype._onKeySessionMessage = function (a, b) {
                                cc.b.log("Got EME message event, creating license request"), this._requestLicense(b, function (b) {
                                    cc.b.log("Received license data, updating key-session"), a.update(b)
                                })
                            }, b.prototype._onMediaEncrypted = function (a, b) {
                                cc.b.log('Media is encrypted using "' + a + '" init data type'), this._isMediaEncrypted = !0, this._mediaEncryptionInitDataType = a, this._mediaEncryptionInitData = b, this._attemptSetMediaKeys(), this._generateRequestWithPreferredKeySession()
                            }, b.prototype._attemptSetMediaKeys = function () {
                                if (!this._hasSetMediaKeys) {
                                    var a = this._mediaKeysList[0];
                                    if (!a || !a.mediaKeys) return cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Fatal: Media is encrypted but no CDM access or no keys have been obtained yet"), void this.hls.trigger(bc.a.ERROR, {
                                        type: ac.b.KEY_SYSTEM_ERROR,
                                        details: ac.a.KEY_SYSTEM_NO_KEYS,
                                        fatal: !0
                                    });
                                    cc.b.log("Setting keys for encrypted media"), this._media.setMediaKeys(a.mediaKeys), this._hasSetMediaKeys = !0
                                }
                            }, b.prototype._generateRequestWithPreferredKeySession = function () {
                                var a = this, b = this._mediaKeysList[0];
                                if (!b) return cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Fatal: Media is encrypted but not any key-system access has been obtained yet"), void this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.KEY_SYSTEM_ERROR,
                                    details: ac.a.KEY_SYSTEM_NO_ACCESS,
                                    fatal: !0
                                });
                                if (b.mediaKeysSessionInitialized) return void cc.b.warn("Key-Session already initialized but requested again");
                                var c = b.mediaKeysSession;
                                if (!c) return cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Fatal: Media is encrypted but no key-session existing"), void this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.KEY_SYSTEM_ERROR,
                                    details: ac.a.KEY_SYSTEM_NO_SESSION,
                                    fatal: !0
                                });
                                var d = this._mediaEncryptionInitDataType, e = this._mediaEncryptionInitData;
                                return e ? (cc.b.log('Generating key-session request for "' + d + '" init data type'), b.mediaKeysSessionInitialized = !0, void c.generateRequest(d, e).then(function () {
                                    cc.b.debug("Key-session generation succeeded")
                                })["catch"](function (b) {
                                    cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Error generating key-session request:", b), a.hls.trigger(bc.a.ERROR, {
                                        type: ac.b.KEY_SYSTEM_ERROR,
                                        details: ac.a.KEY_SYSTEM_NO_SESSION,
                                        fatal: !1
                                    })
                                })) : (cc.b.warn("Fatal: initData required for generating a key session is null"), void this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.KEY_SYSTEM_ERROR,
                                    details: ac.a.KEY_SYSTEM_NO_INIT_DATA,
                                    fatal: !0
                                }))
                            }, b.prototype._createLicenseXhr = function (a, b, c) {
                                var d = new XMLHttpRequest, e = this._licenseXhrSetup;
                                try {
                                    if (e) try {
                                        e(d, a)
                                    } catch (f) {
                                        d.open("POST", a, !0), e(d, a)
                                    }
                                    d.readyState || d.open("POST", a, !0)
                                } catch (f) {
                                    return cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Error setting up key-system license XHR", f), void this.hls.trigger(bc.a.ERROR, {
                                        type: ac.b.KEY_SYSTEM_ERROR,
                                        details: ac.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                        fatal: !0
                                    })
                                }
                                return hc.a.test ? (d.responseType = "arraybuffer", d.responseType = "text") : d.responseType = "text", d.onreadystatechange = this._onLicenseRequestReadyStageChange.bind(this, d, a, b, c), d
                            }, b.prototype.getCKC = function (a) {
                                var b = new Blob([a]), c = new FileReader;
                                c.readAsText(b, "utf-8"), c.onload = function (a) {
                                }
                            }, b.prototype.getCKC1 = function (a, b) {
                                var c = new Blob([a]), d = new FileReader;
                                d.readAsArrayBuffer(c), d.onload = function (a) {
                                    b(d.result)
                                }
                            }, b.prototype._onLicenseRequestReadyStageChange = function (a, b, d, e) {
                                var f = !1;
                                switch (a.readyState) {
                                    case 4:
                                        if (200 === a.status) if (cc.b.log("License request succeeded"), hc.a.test) try {
                                            var g = JSON.parse(a.response);
                                            if (0 == g.code && g.ckc) {
                                                this._requestLicenseFailureCount = 0;
                                                var h = c(12), i = new h.Buffer(g.ckc, "base64");
                                                e(i.buffer)
                                            } else f = !0
                                        } catch (j) {
                                            cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "_onLicenseRequestReadyStageChange error: " + j), f = !0
                                        } else try {
                                            var g = JSON.parse(a.response);
                                            if (0 == g.code && g.ckc) {
                                                this._requestLicenseFailureCount = 0;
                                                var h = c(12), i = new h.Buffer(g.ckc, "base64");
                                                e(i.buffer)
                                            } else f = !0
                                        } catch (j) {
                                            cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "_onLicenseRequestReadyStageChange error: " + j), f = !0
                                        } else cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "License Request XHR failed (" + b + "). Status: " + a.status + " (" + a.statusText + ")"), f = !0
                                }
                                if (f) {
                                    if (this._requestLicenseFailureCount++, this._requestLicenseFailureCount <= Cg) {
                                        var k = Cg - this._requestLicenseFailureCount + 1;
                                        cc.b.warn("Retrying license request, " + k + " attempts left");
                                        var l = this;
                                        return void setTimeout(function () {
                                            l._requestLicense(d, e)
                                        }, 2e3)
                                    }
                                    this.hls.trigger(bc.a.ERROR, {
                                        type: ac.b.KEY_SYSTEM_ERROR,
                                        details: ac.a.KEY_SYSTEM_LICENSE_REQUEST_FAILED,
                                        fatal: !0
                                    })
                                }
                            }, b.prototype._generateLicenseRequestChallenge = function (a, b) {
                                var c = void 0;
                                return a.mediaKeySystemDomain === Dg.PLAYREADY ? cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "PlayReady is not supported (yet)") : a.mediaKeySystemDomain === Dg.WIDEVINE ? c = b : cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Unsupported key-system:", a.mediaKeySystemDomain), c
                            }, b.prototype._requestLicense = function (a, b) {
                                cc.b.log("Requesting content license for key-system");
                                var c = this._mediaKeysList[0];
                                if (!c) return cc.b.error(ac.c.ENCRYPT_HANDLE_ERROR, "Fatal error: Media is encrypted but no key-system access has been obtained yet"), void this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.KEY_SYSTEM_ERROR,
                                    details: ac.a.KEY_SYSTEM_NO_ACCESS,
                                    fatal: !0
                                });
                                var d = this.getLicenseServerUrl(c.mediaKeySystemDomain),
                                    e = this._createLicenseXhr(d, a, b);
                                cc.b.log("Sending license request to URL: " + d), e.send(this._generateLicenseRequestChallenge(c, a))
                            }, b.prototype.onEncrypted = function (a) {
                                this._onMediaEncrypted(a.initDataType, a.initData)
                            }, b.prototype.onMediaAttached = function (a) {
                                if (this._emeEnabled) {
                                    var b = a.media;
                                    this._media = b, this._onEncrypted = this.onEncrypted.bind(this), b.addEventListener("encrypted", this._onEncrypted)
                                }
                            }, b.prototype.onManifestParsed = function (a) {
                                if (this._emeEnabled) {
                                    var b = a.levels.map(function (a) {
                                        return a.audioCodec
                                    }), c = a.levels.map(function (a) {
                                        return a.videoCodec
                                    });
                                    this._attemptKeySystemAccess(Dg.WIDEVINE, b, c)
                                }
                            }, Bg(b, [{
                                key: "requestMediaKeySystemAccess", get: function () {
                                    if (!this._requestMediaKeySystemAccess) throw new Error("No requestMediaKeySystemAccess function configured");
                                    return this._requestMediaKeySystemAccess
                                }
                            }]), b
                        }(gc), Hg = Gg, Ig = function () {
                            return "undefined" != typeof window && window.navigator && window.navigator.requestMediaKeySystemAccess ? window.navigator.requestMediaKeySystemAccess.bind(window.navigator) : null
                        }(), Jg = {
                            autoStartLoad: !0,
                            startPosition: -1,
                            defaultAudioCodec: void 0,
                            debug: !0,
                            capLevelOnFPSDrop: !1,
                            capLevelToPlayerSize: !1,
                            initialLiveManifestSize: 1,
                            maxBufferLength: 30,
                            maxBufferSize: 6e7,
                            maxBufferHole: .5,
                            maxSeekHole: 2,
                            lowBufferWatchdogPeriod: .5,
                            highBufferWatchdogPeriod: 3,
                            nudgeOffset: .1,
                            nudgeMaxRetry: 3,
                            maxFragLookUpTolerance: .25,
                            liveSyncDurationCount: 3,
                            liveMaxLatencyDurationCount: 1 / 0,
                            liveSyncDuration: void 0,
                            liveMaxLatencyDuration: void 0,
                            liveDurationInfinity: !1,
                            maxMaxBufferLength: 600,
                            enableWorker: !1,
                            enableSoftwareAES: !0,
                            manifestLoadingTimeOut: 1e4,
                            manifestLoadingMaxRetry: 1,
                            manifestLoadingRetryDelay: 1e3,
                            manifestLoadingMaxRetryTimeout: 64e3,
                            startLevel: void 0,
                            levelLoadingTimeOut: 1e4,
                            levelLoadingMaxRetry: 4,
                            levelLoadingRetryDelay: 1e3,
                            levelLoadingMaxRetryTimeout: 64e3,
                            fragLoadingTimeOut: 2e4,
                            fragLoadingMaxRetry: 6,
                            fragLoadingRetryDelay: 1e3,
                            fragLoadingMaxRetryTimeout: 64e3,
                            fragLoadingLoopThreshold: 3,
                            startFragPrefetch: !1,
                            fpsDroppedMonitoringPeriod: 5e3,
                            fpsDroppedMonitoringThreshold: .2,
                            appendErrorMaxRetry: 3,
                            loader: Gf,
                            fLoader: void 0,
                            pLoader: void 0,
                            xhrSetup: void 0,
                            licenseXhrSetup: void 0,
                            fetchSetup: void 0,
                            abrController: wf,
                            bufferController: zf,
                            capLevelController: Cf,
                            fpsController: Ef,
                            stretchShortVideoTrack: !1,
                            maxAudioFramesDrift: 1,
                            forceKeyFrameOnDiscontinuity: !0,
                            abrEwmaFastLive: 3,
                            abrEwmaSlowLive: 9,
                            abrEwmaFastVoD: 3,
                            abrEwmaSlowVoD: 9,
                            abrEwmaDefaultEstimate: 5e5,
                            abrBandWidthFactor: .95,
                            abrBandWidthUpFactor: .7,
                            abrMaxWithRealBitrate: !1,
                            maxStarvationDelay: 4,
                            maxLoadingDelay: 4,
                            minAutoBitrate: 0,
                            emeEnabled: !1,
                            widevineLicenseUrl: void 0,
                            requestMediaKeySystemAccessFunc: Ig
                        };
                    Jg.subtitleStreamController = Ag, Jg.subtitleTrackController = wg, Jg.timelineController = tg, Jg.cueHandler = Zb, Jg.enableCEA708Captions = !0, Jg.enableWebVTT = !0, Jg.captionsTextTrack1Label = "English", Jg.captionsTextTrack1LanguageCode = "en", Jg.captionsTextTrack2Label = "Spanish", Jg.captionsTextTrack2LanguageCode = "es", Jg.audioStreamController = Of, Jg.audioTrackController = Jf, Jg.emeController = Hg;
                    var Kg = {
                            eStatus_HttpCDNConnectTimeout: 34,
                            eStatus_HttpCDNRecvTimeout: 35,
                            eStatus_HttpCDNLoadError: 36,
                            eMode_Window_Fast: 81,
                            eMode_Window_Slow: 82
                        }, Lg = Kg, Mg = "arraybuffer", Ng = {IDLE: 0, CONNECTING: 1, LOADING: 2, STOP: 3},
                        Og = function () {
                            function a(b, c) {
                                Kb(this, a), this.m_Callbacks = b, this.m_Config = c, this.m_RequestTsSeq = -1, this.m_ConnectTimeout = void 0, this.m_RecvTimeout = void 0, this.m_TimeoutTsInfo = {
                                    seq: -1,
                                    url: ""
                                }, this.m_LoadStatus = Ng.IDLE, this.m_Seq = Jc.a.GetHttpSeq(), this.offset = 0, this.totalDownload = 0, this.m_DelayTimer = void 0, this.downloadTime = 0, this.recvTime = 0, this.m_RangeStart = void 0, this.m_RangeEnd = void 0, this.m_UseRangeReq = !1, this.startTick = performance.now(), this.downloadStartTick = 0, this.is_quic = !1, this.quic_str = "", this.checked_quic = !1, this.is_xhr = !1, this.x_tcp_info = ""
                            }

                            return a.prototype.getLogHeader = function () {
                                return "HttpLoader(" + this.m_Seq + "," + this.getStatusString() + ")"
                            }, a.prototype.getStatusString = function () {
                                var a = "";
                                switch (this.m_LoadStatus) {
                                    case Ng.IDLE:
                                        a = "IDLE";
                                        break;
                                    case Ng.CONNECTING:
                                        a = "CONNECTING";
                                        break;
                                    case Ng.LOADING:
                                        a = "LOADING";
                                        break;
                                    case Ng.STOP:
                                        a = "STOP"
                                }
                                return a
                            }, a.prototype.isStop = function () {
                                return this.m_LoadStatus == Ng.STOP
                            }, a.prototype.abort = function () {
                            }, a.prototype.stop = function () {
                                var a = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], b = 0;
                                void 0 != this.offset && void 0 != this.m_TotalRecvElapse && (b = 1e3 * this.offset / this.m_TotalRecvElapse / 1024);
                                var c = this.getLogHeader() + " ";
                                c += a ? "succeed " : "fail ", c += "conn_time:" + this.m_ConnectElapse + "ms,cost first_recv_time:" + this.m_FirstRecvElapse + "ms,total_recv_time:" + this.m_TotalRecvElapse + "ms readLen:" + this.offset + "B speed:" + b + "KB/s", cc.b.info(c), this.m_DelayTimer && (clearInterval(this.m_DelayTimer), this.m_DelayTimer = void 0), this.m_LoadStatus = Ng.STOP, this.downloadTime = 0, this.recvTime = 0
                            }, a.prototype.getRequestTsSeq = function () {
                                return this.m_RequestTsSeq
                            }, a.prototype.load = function (a) {
                                this.downloadStartTick = performance.now(), this.m_RequestTsSeq = a.sn, this.m_LoadURL = a.url, this.m_ResponseType = Mg, 0 === a.rangeStart && a.rangeEnd === -1 || (this.m_RangeStart = a.rangeStart, this.m_RangeEnd = a.rangeEnd, this.m_UseRangeReq = !0), this.m_Stats = {
                                    trequest: performance.now(),
                                    retry: 0
                                }, this.m_RetryDelay = this.m_Config.retryDelay, this.m_MaxRetry = 0, this.m_ConnectElapse = void 0, this.m_FirstRecvElapse = void 0, this.m_TotalRecvElapse = void 0, this.loadInternal()
                            }, a.prototype.loadInternal = function () {
                            }, a.prototype.unregisterCallBack = function () {
                                this.m_Callbacks = void 0
                            }, a.prototype.onDelaySchedule = function () {
                                if (hc.a.UseTimeoutCtrl) {
                                    var a = performance.now();
                                    if (this.m_LoadStatus === Ng.CONNECTING) a - this.downloadTime > this.m_Config.connectTimeout && (cc.b.info("[HttpLoader]CONNECTING: curTime=" + a + ",downloadTime=" + this.downloadTime + ",connectTimeout=" + this.m_Config.connectTimeout + ",elapse=" + (a - this.downloadTime)), this.handleConnectTimeout()); else {
                                        if (this.m_LoadStatus !== Ng.LOADING) return;
                                        a - this.recvTime > this.m_Config.recvTimeout && (cc.b.info("[HttpLoader]LOADING: curTime=" + a + ",downloadTime=" + this.downloadTime + ",connectTimeout=" + this.m_Config.connectTimeout + ",elapse=" + (a - this.downloadTime)), this.handleRecvTimeout())
                                    }
                                }
                            }, a.prototype.onConnecting = function () {
                                void 0 === this.m_DelayTimer && (this.m_DelayTimer = setInterval(this.onDelaySchedule.bind(this), hc.a.SecondTimer)), this.m_LoadStatus = Ng.CONNECTING, this.downloadTime = performance.now()
                            }, a.prototype.onLoading = function () {
                                this.m_ConnectElapse || (this.m_ConnectElapse = (performance.now() - this.downloadTime).toFixed(2)), this.recvTime = performance.now(), this.m_LoadStatus = Ng.LOADING
                            }, a.prototype.handleConnectTimeout = function () {
                                cc.b.info(this.getLogHeader() + " : handleConnectTimeout ");
                                var a = {errorStatus: Lg.eStatus_HttpCDNConnectTimeout};
                                this.stop(), this.m_Callbacks && this.m_Callbacks.onTimeout(this.m_Stats, this.m_RequestTsSeq, a), this.unregisterCallBack()
                            }, a.prototype.handleRecvTimeout = function () {
                                cc.b.info(this.getLogHeader() + " : handleRecvTimeout"), this.stop();
                                var a = {errorStatus: Lg.eStatus_HttpCDNRecvTimeout};
                                this.m_Callbacks && this.m_Callbacks.onTimeout(this.m_Stats, this.m_RequestTsSeq, a), this.unregisterCallBack()
                            }, a.prototype.onDownloadFailed = function (a, b) {
                                if (this.m_LoadURL && this.m_RequestTsSeq != -1) {
                                    this.downloadType || this.checkFetch(), "xhr" === this.downloadType && (a += 50);
                                    var c = we.parseUrl(this.m_LoadURL);
                                    sc.getInstance().reportSvrQuality(this.m_ConnectTimes, nc.ServerType_CDNServer, c.host, c.port, a, b, this.m_ConnectElapse ? this.m_ConnectElapse : 0, this.m_FirstRecvElapse ? this.m_FirstRecvElapse : 0, this.m_TotalRecvElapse ? this.m_TotalRecvElapse : 0, this.m_LoadURL)
                                }
                            }, a.prototype.checkFetch = function () {
                                var a = navigator.userAgent || "", b = navigator.appVersion || "",
                                    c = navigator.vendor || "", d = (a + " " + b + " " + c).toLowerCase(),
                                    e = /(chrome)[ \/]([\w.]+)/.exec(d) || /(webkit)[ \/]([\w.]+)/.exec(d) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(d) || /(msie) ([\w.]+)/.exec(d) || /(trident)(?:.*? rv:([\w.]+)|)/.exec(d) || d.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(d) || [],
                                    f = e[0], g = e[2].split(".")[0];
                                0 === f.indexOf("chrome") && g >= 46 ? (window.__disableNativeFetch = !1, this.downloadType = "fetch") : 0 === f.indexOf("mozilla") && g >= 39 ? this.downloadType = "xhr" : (window.__disableNativeFetch = !0, this.downloadType = "xhr")
                            }, a.prototype.checkIsSameTimeoutTs = function (a) {
                                return a.seq === this.m_TimeoutTsInfo.seq && a.url === this.m_TimeoutTsInfo.url || (this.m_TimeoutTsInfo.seq = a.seq, this.m_TimeoutTsInfo.url = a.url, !1)
                            }, a.prototype.isIdle = function () {
                                return this.m_LoadStatus === Ng.IDLE
                            }, a.prototype.onLoadSuccess = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                                ie.getInstance().addTsElapse(this.m_ConnectElapse, this.m_FirstRecvElapse, this.m_TotalRecvElapse), this.stop(!0), this.m_Callbacks && this.m_Callbacks.onSuccess(a, b, c, d), this.unregisterCallBack()
                            }, a.prototype.getErrorObj = function (a, b) {
                                return {code: a, text: b}
                            }, a.prototype.onLoadError = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                cc.b.info(this.getLogHeader() + " : onLoadError : onError [" + a.code + "," + a.text + "]"), this.stop(), this.m_Callbacks && this.m_Callbacks.onError(a, b, c), this.unregisterCallBack()
                            }, a.prototype.getStatusText = function (a) {
                                var b = void 0;
                                return b = 403 === a ? "403 Forbidden" : 404 === a ? "404 Not Found" : 503 === a ? "Service Unavailable" : a + " error"
                            }, a.prototype.checkQuic = function (a, b) {
                                try {
                                    if (!this.checked_quic) {
                                        this.checked_quic = !0;
                                        if (b) {
                                            if (a && a.getResponseHeader) {
                                                this.is_xhr = !0;
                                                for (var c = [], d = a.getAllResponseHeaders().split("\n"), e = 0; e < d.length; e++) {
                                                    var f = d[e];
                                                    if (f = f.trim(), "" != f) {
                                                        var g = f.indexOf(":");
                                                        if (g != -1) {
                                                            var h = f.substr(0, g),
                                                                i = f.substr(g + 1, f.length - g - 1);
                                                            h = h.trim(), i = i.trim(), c.push({key: h, value: i})
                                                        }
                                                    }
                                                }
                                                for (var j = !1, k = !1, l = "", e = 0; e < c.length; e++) {
                                                    var m = c[e];
                                                    if ("x-video-quic-info" == m.key && "quic" == m.value) {
                                                        j = !0;
                                                        break
                                                    }
                                                }
                                                if (j = !0) {
                                                    for (var e = 0; e < c.length; e++) {
                                                        var m = c[e];
                                                        "x-client-quic-ver" == m.key && (k = !0, l = m.value), "x-tcp-info" == m.key && (this.x_tcp_info = m.value)
                                                    }
                                                    k && "" != l && (ie.getInstance().m_isquic = !0, this.is_quic = !0, this.quic_str = l)
                                                }
                                            }
                                        } else if (a && a.headers && a.headers.get) {
                                            if (this.is_xhr = !1, "quic" == a.headers.get("x-video-quic-info")) {
                                                var l = a.headers.get("x-client-quic-ver");
                                                if ("" == l || null == l) return;
                                                ie.getInstance().m_isquic = !0, this.is_quic = !0, this.quic_str = l
                                            }
                                            var n = a.headers.get("x-tcp-info");
                                            null != n && "string" == typeof n && (this.x_tcp_info = n)
                                        }
                                    }
                                } catch (o) {
                                    cc.b.error("checkQuic error msg:" + o.message)
                                }
                            }, a.prototype.reportQuic = function () {
                                try {
                                    if (hc.a.hasReportQuic) return;
                                    if (hc.a.hasReportQuic = !0, 0 == tc.a.IsReportQuic) return;
                                    if (ie.getInstance().m_post2QuicServer) return;
                                    var a = tc.a.ReportQuic;
                                    this.is_quic && (a = tc.a.ReportGoQuic);
                                    var b = !1;
                                    this.m_LoadURL && this.m_LoadURL.indexOf("test.apdcdn.tc.qq.com") != -1 && (b = !0);
                                    var c = Math.ceil(Math.random() * a);
                                    if (c < 2 || hc.a.quicTest || b) {
                                        var d = 0;
                                        void 0 != this.offset && void 0 != this.m_TotalRecvElapse && (d = parseInt(1e3 * this.offset / this.m_TotalRecvElapse));
                                        var e = 0;
                                        void 0 !== this.m_ConnectElapse && null !== this.m_ConnectElapse && (e = parseInt(this.m_ConnectElapse));
                                        var f = 0;
                                        this.is_xhr && (f = 1);
                                        var g = 0;
                                        this.is_quic && (g = 1);
                                        var h = {serverIP: this.serverIP, clientIP: this.clientIP, url: this.m_LoadURL};
                                        ie.getInstance().reportQuic(this.quic_str, e, d, f, g, this.m_Config.keyid, h, this.offset, this.x_tcp_info, this.m_TotalRecvElapse)
                                    }
                                } catch (i) {
                                    cc.b.error("reportQuic error msg:" + i.message)
                                }
                            }, a.prototype.recordServerAndClientIP = function (a, b) {
                                try {
                                    var c = void 0, d = void 0;
                                    if (1 === hc.a.IsReportServerAndClientIP && 1 == ie.getInstance().m_post2QuicServer) return;
                                    if (b) {
                                        if (a && a.getResponseHeader) {
                                            for (var e = [], f = a.getAllResponseHeaders().split("\n"), g = 0; g < f.length; g++) {
                                                var h = f[g];
                                                if (h = h.trim(), "" != h) {
                                                    var i = h.indexOf(":");
                                                    if (i != -1) {
                                                        var j = h.substr(0, i), k = h.substr(i + 1, h.length - i - 1);
                                                        j = j.trim(), k = k.trim(), e.push({key: j, value: k})
                                                    }
                                                }
                                            }
                                            for (var l = 0; l < e.length; l++) {
                                                var m = e[l];
                                                "x-serverip" == m.key.toLowerCase() ? c = m.value : "client-ip" == m.key.toLowerCase() && (d = m.value)
                                            }
                                        }
                                    } else a && a.headers && a.headers.get && (c = a.headers.get("X-ServerIp"), d = a.headers.get("Client-Ip"));
                                    d && c && (this.serverIP = c, this.clientIP = d)
                                } catch (n) {
                                    cc.b.error("recordServerAndClientIP error msg:" + n.message)
                                }
                            }, a
                        }(), Pg = Og, Qg = {UNSENT: 0, OPENED: 1, HEADERS_RECEIVED: 2, LOADING: 3, LOADING_DONE: 4},
                        Rg = function (a) {
                            function b(c, d) {
                                return Lb(this, b), Mb(this, a.call(this, c, d))
                            }

                            return Nb(b, a), b.prototype.stop = function (b) {
                                a.prototype.stop.call(this, b);
                                var c = this.loader;
                                c && c.readyState !== Qg.LOADING_DONE && (this.m_Stats.aborted = !0, c.abort())
                            }, b.prototype.getLogHeader = function () {
                                return "XHR(" + this.m_Seq + "," + this.getStatusString() + ",tsSeq:" + this.m_RequestTsSeq + ")"
                            }, b.prototype.abort = function () {
                                this.stop()
                            }, b.prototype.loadInternal = function () {
                                var a = void 0;
                                a = "undefined" != typeof XDomainRequest ? this.loader = new XDomainRequest : this.loader = new XMLHttpRequest;
                                var b = this.m_Stats;
                                b.tfirst = 0, b.loaded = 0;
                                try {
                                    a.readyState || a.open("GET", this.m_LoadURL, !0)
                                } catch (c) {
                                    return void this.onLoadError(this.getErrorObj(a.status, c.message), this.m_RequestTsSeq, a)
                                }
                                this.m_UseRangeReq && a.setRequestHeader("Range", "bytes=" + this.m_RangeStart + "-" + this.m_RangeEnd), a.onreadystatechange = this.readystatechange.bind(this), a.onprogress = this.loadprogress.bind(this), a.responseType = this.m_ResponseType;
                                var d = this;
                                a.onerror = function (a) {
                                    d.onerrorFlag = !0
                                }, this.onConnecting();
                                var e = "";
                                e = this.m_UseRangeReq ? this.getLogHeader() + " : loadInternal : seq = " + this.m_RequestTsSeq + ", range: " + this.m_RangeStart + "-" + this.m_RangeEnd + ", url = " + this.m_LoadURL : this.getLogHeader() + " : loadInternal : seq = " + this.m_RequestTsSeq + ", url = " + this.m_LoadURL, cc.b.info(e), a.send()
                            }, b.prototype.readystatechange = function (a) {
                                var b = a.currentTarget, c = b.readyState, d = this.m_Stats;
                                this.m_Config;
                                if (!d.aborted && c >= Qg.HEADERS_RECEIVED) {
                                    if (this.isStop()) return;
                                    this.m_FirstRecvElapse || (this.m_FirstRecvElapse = performance.now() - this.downloadTime), this.onLoading(), 0 === d.tfirst && (d.tfirst = Math.max(performance.now(), d.trequest));
                                    var e = b.status;
                                    if (c === Qg.LOADING_DONE) {
                                        this.checkQuic(b, !0), this.recordServerAndClientIP(b, !0);
                                        var f = e;
                                        if (f >= 200 && f < 300) {
                                            d.tload = Math.max(d.tfirst, performance.now());
                                            var g = void 0, h = void 0;
                                            "arraybuffer" === this.m_ResponseType ? (g = b.response, h = g.byteLength) : (g = b.responseText, h = g.length), this.m_TotalRecvElapse = (performance.now() - this.downloadTime).toFixed(2), d.loaded = d.total = h;
                                            var i = this.offset;
                                            this.m_UseRangeReq && (i += this.m_RangeStart), this.offset += h;
                                            var j = {url: b.responseURL, data: g, offset: i};
                                            this.reportQuic(), d.is_quic = this.is_quic, d.serverIP = this.serverIP, d.clientIP = this.clientIP, d.quicver = this.quic_str, this.onLoadSuccess(j, d, this.m_RequestTsSeq, b)
                                        } else this.onerrorFlag ? (this.onerrorFlag = !1, cc.b.info(this.getLogHeader() + ": xhr.onerror url = " + this.m_LoadURL), this.onLoadError(this.getErrorObj(600, JSON.stringify(err)), this.m_RequestTsSeq, b)) : (cc.b.info(this.getLogHeader() + " : readyStateChange: download error status: " + f), f >= 400 && f < 499 ? this.onLoadError(this.getErrorObj(f, b.statusText), this.m_RequestTsSeq, b) : 301 === f || 302 === f || this.onLoadError(this.getErrorObj(f, b.statusText), this.m_RequestTsSeq, b))
                                    }
                                }
                            }, b.prototype.loadprogress = function (a) {
                                var b = a.currentTarget, c = this.m_Stats;
                                if (c.loaded = a.loaded, a.lengthComputable && (c.total = a.total), this.m_Callbacks) {
                                    var d = this.m_Callbacks.onProgress;
                                    d && d(c, this.m_RequestTsSeq, null, b)
                                }
                            }, b
                        }(Pg), Sg = Rg, Tg = function (a) {
                            function b(c, d) {
                                Ob(this, b);
                                var e = Pb(this, a.call(this, c, d));
                                return e.cancel = !1, e.reader = void 0, e.readEnd = !1, e
                            }

                            return Qb(b, a), b.prototype.getLogHeader = function () {
                                return "HttpFetch(" + this.m_Seq + "," + this.getStatusString() + ",tsSeq:" + this.m_RequestTsSeq + ")"
                            }, b.prototype.readFinish = function () {
                                this.reader = void 0, this.readEnd = !0
                            }, b.prototype.cancleFetch = function () {
                                if (!this.readEnd) if (void 0 !== this.reader) try {
                                    this.reader.cancel(), this.readFinish(), cc.b.info(this.getLogHeader() + " cancleFetch : reader cancel")
                                } catch (a) {
                                    this.readFinish(), cc.b.error(ac.c.NETWORK_ERROR, this.getLogHeader() + " cancleFetch : reader cancel fail:   " + a)
                                } else this.cancel = !0, cc.b.info(this.getLogHeader() + " cancleFetch : set cancel true")
                            }, b.prototype.loadInternal = function () {
                                var a = this.m_LoadURL, b = this.m_Stats, c = this, d = new Headers;
                                this.m_UseRangeReq && d.append("Range", "bytes=" + this.m_RangeStart + "-" + this.m_RangeEnd);
                                var e = new Request(a, {mode: "cors", headers: d}), f = "";
                                f = this.m_UseRangeReq ? this.getLogHeader() + " : loadInternal : seq = " + this.m_RequestTsSeq + ", range: " + this.m_RangeStart + "-" + this.m_RangeEnd + ", url = " + a : this.getLogHeader() + " : loadInternal : seq = " + this.m_RequestTsSeq + ", url = " + a, cc.b.info(f), this.onConnecting(), fetch(e).then(function (a) {
                                    if (!c.isStop()) {
                                        if (c.onLoading(), 0 === b.tfirst && (b.tfirst = Math.max(performance.now(), b.trequest)), a.status >= 400 || a.status < 200) {
                                            var d = c.getStatusText(a.status);
                                            return c.readFinish(), void c.onLoadError(c.getErrorObj(a.status, d), c.m_RequestTsSeq, null)
                                        }
                                        c.reader = a.body.getReader(), c.cancel ? c.cancleFetch() : (c.checkQuic(a, !1), c.recordServerAndClientIP(a, !1), c.m_FirstRecvElapse = (performance.now() - c.downloadTime).toFixed(2), c.readData())
                                    }
                                })["catch"](function (a) {
                                    c.readFinish();
                                    cc.b.info(c.getLogHeader() + " : loadInternal : Catch error " + a + ", _this.reader = " + c.reader);
                                    a.toString();
                                    c.onLoadError(c.getErrorObj(600, "600 catch error"), c.m_RequestTsSeq, null)
                                })
                            }, b.prototype.readData = function () {
                                if (!this.isStop() && void 0 !== this.reader) {
                                    var a = this;
                                    return this.reader.read().then(function (b) {
                                        if (!a.isStop()) {
                                            var c = b.value;
                                            if (void 0 == c && !b.done) return cc.b.info(a.getLogHeader() + ": data undefined"), void a.readFinish();
                                            if (void 0 !== c && c.byteLength > 0) {
                                                var d = a.offset;
                                                a.m_UseRangeReq && (d += a.m_RangeStart);
                                                var e = {data: c, offset: d};
                                                a.m_Callbacks.onProgress(a.m_RequestTsSeq, e), a.offset += c.byteLength
                                            }
                                            if (b.done) {
                                                a.m_TotalRecvElapse = (performance.now() - a.downloadTime).toFixed(2), a.reportQuic(), a.readFinish(), a.m_Stats.tload = Math.max(a.m_Stats.tfirst, performance.now()), a.m_Stats.loaded = a.m_Stats.total = a.offset, a.m_Stats.is_quic = a.is_quic, a.m_Stats.serverIP = a.serverIP, a.m_Stats.clientIP = a.clientIP, a.m_Stats.quicver = a.quic_str;
                                                var f = {data: null};
                                                return void a.onLoadSuccess(f, a.m_Stats, a.m_RequestTsSeq)
                                            }
                                            return a.readData()
                                        }
                                    })["catch"](function (b) {
                                        a.readFinish();
                                        cc.b.info(a.getLogHeader() + " : loadInternal : Catch error " + b + ", _this.reader = " + a.reader);
                                        b.toString();
                                        a.onLoadError(a.getErrorObj(600, "600 catch error"), a.m_RequestTsSeq, null)
                                    })
                                }
                            }, b.prototype.stop = function (b) {
                                a.prototype.stop.call(this, b), this.cancleFetch()
                            }, b.prototype.abort = function () {
                                this.stop()
                            }, b
                        }(Pg), Ug = Tg, Vg = function () {
                            function a() {
                                Rb(this, a), this.m_IsGotConfig = !1, this.m_TryTimes = 0, this.m_ConfigServerHost = "", this.m_ConfigServerPort = 0, this.m_LastConnectTime = 0
                            }

                            return a.getInstance = function () {
                                return this.instance || (this.instance = new a), this.instance
                            }, a.prototype.isGotConfig = function () {
                                return this.m_IsGotConfig
                            }, a.prototype.getP2PVersionNum = function (a) {
                                var b = 0, c = a.split(".");
                                return 3 === c.length && (b += 1e4 * c[0] + 100 * c[1] + 1 * c[2]), b
                            }, a.prototype.checkP2P = function () {
                                tc.a.IsStartP2P ? cd.getInstance().isOpenP2P() || cd.getInstance().openP2P() : cd.getInstance().isOpenP2P() && cd.getInstance().stopP2P()
                            }, a.prototype.reqConfig = function () {
                                if (this.m_IsGotConfig = !1, this.m_TryTimes++, !(this.m_TryTimes > 5)) {
                                    cc.b.log("ServerConfig Request config.");
                                    var a = hc.a.ConfigURL + "&flash_ver=" + this.getP2PVersionNum(hc.a.P2PVersion),
                                        b = this, c = we.parseUrl(a);
                                    this.m_ConfigServerHost = c.host, this.m_ConfigServerPort = c.port, this.m_LastConnectTime = performance.now();
                                    $.jsonp({
                                        url: a, timeout: 6e3, callbackParameter: "callback", success: function (a) {
                                            if (0 != a.ret) return cc.b.info("ReqConfig fail, ret not equals zero. ret:" + a.ret), void b.reportCSSvrQuality(kc.eErrno_CSSvrRetError, a.ret);
                                            if (!a.context) {
                                                var c = JSON.stringify(a);
                                                return cc.b.info("ReqConfig fail, no context. data:" + c), void b.reportCSSvrQuality(kc.eErrno_CSNoContext, 0)
                                            }
                                            var d = JSON.stringify(a.context);
                                            b.setGlobalConfig(a.context), b.checkP2P(), cc.b.setdata("updateconfig", tc.a), cc.b.info("ReqConfig ok config:" + d), b.reportCSSvrQuality(kc.eErrno_CSRecvSuccess, 0), b.m_TryTimes = 0, b.m_IsGotConfig = !0, b.reqTimer = setTimeout(function () {
                                                b.reqConfig()
                                            }, 1e3 * tc.a.ReqConfigInterval)
                                        }, error: function (a, c) {
                                            switch (cc.b.info("ReqConfig fail err: " + c), c) {
                                                case"timeout":
                                                    b.reportCSSvrQuality(kc.eErrno_CSSocketConnectTimeout, 0);
                                                    break;
                                                case"error":
                                                default:
                                                    b.reportCSSvrQuality(kc.eErrno_CSUnknownError, 0)
                                            }
                                            b.reqConfig()
                                        }
                                    })
                                }
                            }, a.prototype.setGlobalConfig = function (a) {
                                tc.a.SendDataScheduleInterval = this.GetSingleConfig(a.SendDataScheduleInterval, tc.a.SendDataScheduleInterval), tc.a.DownloadScheduleInterval = this.GetSingleConfig(a.DownloadScheduleInterval, tc.a.DownloadScheduleInterval), tc.a.CommitBlockCntPerTime = this.GetSingleConfig(a.CommitBlockCntPerTime, tc.a.CommitBlockCntPerTime), tc.a.MinEmergencyTime = this.GetSingleConfig(a.MinEmergencyTime, tc.a.MinEmergencyTime), tc.a.MinSafeTime = this.GetSingleConfig(a.MinSafeTime, tc.a.MinSafeTime), tc.a.MaxCacheSize = this.GetSingleConfig(a.MaxCacheSize, tc.a.MaxCacheSize), tc.a.FastReleaseRatio = this.GetSingleConfig(a.FastReleaseRatio, tc.a.FastReleaseRatio), tc.a.P2PDownloadMemoryRatio = this.GetSingleConfig(a.P2PDownloadMemoryRatio, tc.a.P2PDownloadMemoryRatio), tc.a.HttpRecvTimeout = this.GetSingleConfig(a.HttpRecvTimeout, tc.a.HttpRecvTimeout), tc.a.HttpConnectTimeout = this.GetSingleConfig(a.HttpConnectTimeout, tc.a.HttpConnectTimeout), tc.a.XhrRecvTimeout = this.GetSingleConfig(a.XhrRecvTimeout, tc.a.XhrRecvTimeout), tc.a.XhrConnectTimeout = this.GetSingleConfig(a.XhrConnectTimeout, tc.a.XhrConnectTimeout), tc.a.P2PStartTime = this.GetSingleConfig(a.P2PStartTime, tc.a.P2PStartTime), tc.a.AdjustHttpBufferTime = this.GetSingleConfig(a.AdjustHttpBufferTime, tc.a.AdjustHttpBufferTime), tc.a.IsStartP2P = this.GetSingleConfig(a.IsStartP2P, tc.a.IsStartP2P), tc.a.reportLogParm = this.GetSingleConfig(a.reportLogParm, tc.a.reportLogParm), tc.a.macReportLogParm = this.GetSingleConfig(a.macReportLogParm, tc.a.macReportLogParm), tc.a.reportDataErrorLogParm = this.GetSingleConfig(a.reportDataErrorLogParm, tc.a.reportDataErrorLogParm), tc.a.MinPeerWindowSize = this.GetSingleConfig(a.MinPeerWindowSize, tc.a.MinPeerWindowSize), tc.a.MaxPeerWindowSize = this.GetSingleConfig(a.MaxPeerWindowSize, tc.a.MaxPeerWindowSize), tc.a.QuerySeedInterval = this.GetSingleConfig(a.QuerySeedInterval, tc.a.QuerySeedInterval), tc.a.MaxQuerySeedNum = this.GetSingleConfig(a.MaxQuerySeedNum, tc.a.MaxQuerySeedNum), tc.a.MaxPeerNum = this.GetSingleConfig(a.MaxPeerNum, tc.a.MaxPeerNum), tc.a.ReducePeerCount = this.GetSingleConfig(a.ReducePeerCount, tc.a.ReducePeerCount), tc.a.AddQuerySeedInterval = this.GetSingleConfig(a.AddQuerySeedInterval, tc.a.AddQuerySeedInterval), tc.a.ConnectPeerIntervar = this.GetSingleConfig(a.ConnectPeerIntervar, tc.a.ConnectPeerIntervar), tc.a.MaxConnectingPeerNumber = this.GetSingleConfig(a.MaxConnectingPeerNumber, tc.a.MaxConnectingPeerNumber), tc.a.MaxConnectedPeerNumber = this.GetSingleConfig(a.MaxConnectedPeerNumber, tc.a.MaxConnectedPeerNumber), tc.a.MaxConnectPeerNumberOneTime = this.GetSingleConfig(a.MaxConnectPeerNumberOneTime, tc.a.MaxConnectPeerNumberOneTime), tc.a.MaxUploadConnectingPeerNum = this.GetSingleConfig(a.MaxUploadConnectingPeerNum, tc.a.MaxUploadConnectingPeerNum), tc.a.MaxUploadConnectedPeerNum = this.GetSingleConfig(a.MaxUploadConnectedPeerNum, tc.a.MaxUploadConnectedPeerNum), tc.a.ExchangeBitmapInterval = this.GetSingleConfig(a.ExchangeBitmapInterval, tc.a.ExchangeBitmapInterval), tc.a.MaxBitmapNumber = this.GetSingleConfig(a.MaxBitmapNumber, tc.a.MaxBitmapNumber), tc.a.MaxChooseTsNum = this.GetSingleConfig(a.MaxChooseTsNum, tc.a.MaxChooseTsNum), tc.a.MaxP2PRecvTimeout = this.GetSingleConfig(a.MaxP2PRecvTimeout, tc.a.MaxP2PRecvTimeout), tc.a.logOpen = this.GetSingleConfig(a.logOpen, tc.a.logOpen), tc.a.logLevel = this.GetSingleConfig(a.logLevel, tc.a.logLevel), tc.a.logSize = this.GetSingleConfig(a.logSize, tc.a.logSize), tc.a.logType = this.GetSingleConfig(a.logType, tc.a.logType), tc.a.logSupportZip = this.GetSingleConfig(a.logSupportZip, tc.a.logSupportZip), tc.a.filterInclude = this.GetSingleConfig(a.filterInclude, tc.a.filterInclude), tc.a.filterExclude = this.GetSingleConfig(a.filterExclude, tc.a.filterExclude), tc.a.filterIgnore = this.GetSingleConfig(a.filterIgnore, tc.a.filterIgnore), tc.a.openDemuxLog = this.GetSingleConfig(a.openDemuxLog, tc.a.openDemuxLog), tc.a.MinReportErrorTime = this.GetSingleConfig(a.MinReportErrorTime, tc.a.MinReportErrorTime), tc.a.MinReportTimeoutTime = this.GetSingleConfig(a.MinReportTimeoutTime, tc.a.MinReportTimeoutTime), tc.a.ErrorRetryTimes = this.GetSingleConfig(a.ErrorRetryTimes, tc.a.ErrorRetryTimes), tc.a.TimeoutRetryTime = this.GetSingleConfig(a.TimeoutRetryTime, tc.a.TimeoutRetryTime), tc.a.ReportInterval = this.GetSingleConfig(a.ReportInterval, tc.a.ReportInterval), tc.a.HeartbeatInterval = this.GetSingleConfig(a.HeartbeatInterval, tc.a.HeartbeatInterval);
                                var b = this.GetSingleConfig(a.IceServer, []);
                                b instanceof Array && 0 != b.length && (tc.a.IceServer = b);
                                var c = this.GetSingleConfig(a.PSServer, []);
                                c instanceof Array && 0 != c.length && (tc.a.PSServer = punchServer), tc.a.EnableDeletePeerWhenDestory = this.GetSingleConfig(a.EnableDeletePeerWhenDestory, tc.a.EnableDeletePeerWhenDestory), tc.a.PeerBlackTime = this.GetSingleConfig(a.PeerBlackTime, tc.a.PeerBlackTime), tc.a.MinPlayingConnectPeer = this.GetSingleConfig(a.MinPlayingConnectPeer, tc.a.MinPlayingConnectPeer), tc.a.MaxP2PConnectTimeout = this.GetSingleConfig(a.MaxP2PConnectTimeout, tc.a.MaxP2PConnectTimeout), tc.a.MaxP2PRecvDataTimeOut = this.GetSingleConfig(a.MaxP2PRecvDataTimeOut, tc.a.MaxP2PRecvDataTimeOut), tc.a.MinPeerQos = this.GetSingleConfig(a.MinPeerQos, tc.a.MinPeerQos), tc.a.MaxProtectPeerTime = this.GetSingleConfig(a.MaxProtectPeerTime, tc.a.MaxProtectPeerTime), tc.a.MaxP2POfflineSendDataTimeOut = this.GetSingleConfig(a.MaxP2POfflineSendDataTimeOut, tc.a.MaxP2POfflineSendDataTimeOut), tc.a.ErrorRetryInterval = this.GetSingleConfig(a.ErrorRetryInterval, tc.a.ErrorRetryInterval), tc.a.UseVodFragmentLoader = this.GetSingleConfig(a.UseVodFragmentLoader, tc.a.UseVodFragmentLoader), tc.a.HttpCheckInterval = this.GetSingleConfig(a.HttpCheckInterval, tc.a.HttpCheckInterval), tc.a.EnableSwitchUrl = this.GetSingleConfig(a.EnableSwitchUrl, tc.a.EnableSwitchUrl), tc.a.HttpMaxFailedTimes = this.GetSingleConfig(a.HttpMaxFailedTimes, tc.a.HttpMaxFailedTimes), tc.a.P2PServerRetryInternal = this.GetSingleConfig(a.P2PServerRetryInternal, tc.a.P2PServerRetryInternal), tc.a.P2PServerRetryTimes = this.GetSingleConfig(a.P2PServerRetryTimes, tc.a.P2PServerRetryTimes), tc.a.P2PSendPackTimeout = this.GetSingleConfig(a.P2PSendPackTimeout, tc.a.P2PSendPackTimeout), tc.a.P2PPeerUploadMsgDead = this.GetSingleConfig(a.P2PPeerUploadMsgDead, tc.a.P2PPeerUploadMsgDead), tc.a.P2PPeerDownloadMsgDead = this.GetSingleConfig(a.P2PPeerDownloadMsgDead, tc.a.P2PPeerDownloadMsgDead), tc.a.ReqConfigInterval = this.GetSingleConfig(a.ReqConfigInterval, tc.a.ReqConfigInterval), tc.a.PlayMaxRemainTime = this.GetSingleConfig(a.PlayMaxRemainTime, tc.a.PlayMaxRemainTime), tc.a.MultiThread = this.GetSingleConfig(a.MultiThread, tc.a.MultiThread), tc.a.CheckSourceBufferTime = this.GetSingleConfig(a.CheckSourceBufferTime, tc.a.CheckSourceBufferTime), tc.a.CheckSourceBufferLen = this.GetSingleConfig(a.CheckSourceBufferLen, tc.a.CheckSourceBufferLen), tc.a.ParseDataFailSwitchUrl = this.GetSingleConfig(a.ParseDataFailSwitchUrl, tc.a.ParseDataFailSwitchUrl), tc.a.P2PPackRetryTimes = this.GetSingleConfig(a.P2PPackRetryTimes, tc.a.P2PPackRetryTimes), tc.a.P2PLoginRetryTimes = this.GetSingleConfig(a.P2PLoginRetryTimes, tc.a.P2PLoginRetryTimes), tc.a.P2PWebSockMaxRetryTimes = this.GetSingleConfig(a.P2PWebSockMaxRetryTimes, tc.a.P2PWebSockMaxRetryTimes), tc.a.TPTSuccReportRate = this.GetSingleConfig(a.TPTSuccReportRate, tc.a.TPTSuccReportRate),
                                    tc.a.IsUseRange = this.GetSingleConfig(a.IsUseRange, tc.a.IsUseRange), tc.a.OnlyXHR = this.GetSingleConfig(a.OnlyXHR, tc.a.OnlyXHR), tc.a.AudioFrameInternalDelta = this.GetSingleConfig(a.AudioFrameInternalDelta, tc.a.AudioFrameInternalDelta), tc.a.OpenDropFrameBetweenTs = this.GetSingleConfig(a.OpenDropFrameBetweenTs, tc.a.OpenDropFrameBetweenTs), tc.a.EnableCDNSlowSwitch = this.GetSingleConfig(a.EnableCDNSlowSwitch, tc.a.EnableCDNSlowSwitch), tc.a.MaxLastBitrateCount = this.GetSingleConfig(a.MaxLastBitrateCount, tc.a.MaxLastBitrateCount), tc.a.LowSpeedRatio = this.GetSingleConfig(a.LowSpeedRatio, tc.a.LowSpeedRatio), tc.a.MaxLowSpeedCount = this.GetSingleConfig(a.MaxLowSpeedCount, tc.a.MaxLowSpeedCount), tc.a.M3U8RecvTimeOut = this.GetSingleConfig(a.M3U8RecvTimeOut, tc.a.M3U8RecvTimeOut), tc.a.M3u8RetryTimes = this.GetSingleConfig(a.M3u8RetryTimes, tc.a.M3u8RetryTimes), tc.a.CanUploadRemainTime = this.GetSingleConfig(a.CanUploadRemainTime, tc.a.CanUploadRemainTime), tc.a.HttpFluxInvalid = this.GetSingleConfig(a.HttpFluxInvalid, tc.a.HttpFluxInvalid), tc.a.M3U8403SwitchUrl = this.GetSingleConfig(a.M3U8403SwitchUrl, tc.a.M3U8403SwitchUrl), tc.a.JumpVideoHead = this.GetSingleConfig(a.JumpVideoHead, tc.a.JumpVideoHead), tc.a.AdPreLoadConnectedPeerNum = this.GetSingleConfig(a.AdPreLoadConnectedPeerNum, tc.a.AdPreLoadConnectedPeerNum), tc.a.AdPreLoadMaxWindowNum = this.GetSingleConfig(a.AdPreLoadMaxWindowNum, tc.a.AdPreLoadMaxWindowNum), tc.a.HighTime = this.GetSingleConfig(a.HighTime, tc.a.HighTime), tc.a.EnableFirstCachestrategy = this.GetSingleConfig(a.EnableFirstCachestrategy, tc.a.EnableFirstCachestrategy), tc.a.FirstCacheTime = this.GetSingleConfig(a.FirstCacheTime, tc.a.FirstCacheTime), tc.a.FirstCacheEmerTime = this.GetSingleConfig(a.FirstCacheEmerTime, tc.a.FirstCacheEmerTime), tc.a.FirstCacheSafeTime = this.GetSingleConfig(a.FirstCacheSafeTime, tc.a.FirstCacheSafeTime), tc.a.FirstCacheMinPoolSize = this.GetSingleConfig(a.FirstCacheMinPoolSize, tc.a.FirstCacheMinPoolSize), tc.a.BTRatio = this.GetSingleConfig(a.BTRatio, tc.a.BTRatio), tc.a.MinDecreaseEmerTime = this.GetSingleConfig(a.MinDecreaseEmerTime, tc.a.MinDecreaseEmerTime), tc.a.MinDecreaseSafeTime = this.GetSingleConfig(a.MinDecreaseSafeTime, tc.a.MinDecreaseSafeTime), tc.a.MaxAddEmerTime = this.GetSingleConfig(a.MaxAddEmerTime, tc.a.MaxAddEmerTime), tc.a.MaxAddSafeTime = this.GetSingleConfig(a.MaxAddSafeTime, tc.a.MaxAddSafeTime), tc.a.DecreaseTimeDelta = this.GetSingleConfig(a.DecreaseTimeDelta, tc.a.DecreaseTimeDelta), tc.a.AddTimeDelta = this.GetSingleConfig(a.AddTimeDelta, tc.a.AddTimeDelta), tc.a.DropFrameFirstLevel = this.GetSingleConfig(a.DropFrameFirstLevel, tc.a.DropFrameFirstLevel), tc.a.DropFrameSecondLevel = this.GetSingleConfig(a.DropFrameSecondLevel, tc.a.DropFrameSecondLevel), tc.a.DropFrameThirdLevel = this.GetSingleConfig(a.DropFrameThirdLevel, tc.a.DropFrameThirdLevel), tc.a.DFFirstDecreseConPeer = this.GetSingleConfig(a.DFFirstDecreseConPeer, tc.a.DFFirstDecreseConPeer), tc.a.DFSecondDecreseConPeer = this.GetSingleConfig(a.DFSecondDecreseConPeer, tc.a.DFSecondDecreseConPeer), tc.a.DFThirdDecreseConPeer = this.GetSingleConfig(a.DFThirdDecreseConPeer, tc.a.DFThirdDecreseConPeer), tc.a.DFFirstDecreseConInterval = this.GetSingleConfig(a.DFFirstDecreseConInterval, tc.a.DFFirstDecreseConInterval), tc.a.DFSecondDecreseConInterval = this.GetSingleConfig(a.DFSecondDecreseConInterval, tc.a.DFSecondDecreseConInterval), tc.a.DFThirdDecreseConInterval = this.GetSingleConfig(a.DFThirdDecreseConInterval, tc.a.DFThirdDecreseConInterval), tc.a.ReportQuic = this.GetSingleConfig(a.ReportQuic, tc.a.ReportQuic), tc.a.IsReportQuic = this.GetSingleConfig(a.IsReportQuic, tc.a.IsReportQuic), tc.a.ReportGoQuic = this.GetSingleConfig(a.ReportGoQuic, tc.a.ReportGoQuic), tc.a.ForbiddenCloseP2P = this.GetSingleConfig(a.ForbiddenCloseP2P, tc.a.ForbiddenCloseP2P);
                                var d = this.GetSingleConfig(a.ForbiddenCloseP2PDuration, []);
                                d instanceof Array && 0 != d.length && (tc.a.ForbiddenCloseP2PDuration = d), tc.a.DropFrameSpan = this.GetSingleConfig(a.DropFrameSpan, tc.a.DropFrameSpan), tc.a.DropFramePercent = this.GetSingleConfig(a.DropFramePercent, tc.a.DropFramePercent), tc.a.ImmediateDownloadTime = this.GetSingleConfig(a.ImmediateDownloadTime, tc.a.ImmediateDownloadTime), tc.a.DataChannelReliableMode = this.GetSingleConfig(a.DataChannelReliableMode, tc.a.DataChannelReliableMode), tc.a.UseSlidingWindow = this.GetSingleConfig(a.UseSlidingWindow, tc.a.UseSlidingWindow), tc.a.ForbiddenInsertVideoInAdP2P = this.GetSingleConfig(a.ForbiddenInsertVideoInAdP2P, tc.a.ForbiddenInsertVideoInAdP2P)
                            }, a.prototype.GetSingleConfig = function (a, b) {
                                return void 0 !== a ? a : b
                            }, a.prototype.reportCSSvrQuality = function (a, b) {
                                sc.getInstance().reportSvrQuality(this.m_TryTimes, nc.ServerType_SrvCfg, this.m_ConfigServerHost, this.m_ConfigServerPort, a, b, performance.now() - this.m_LastConnectTime, 0, 0)
                            }, a
                        }(), Wg = Vg, Xg = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }(),
                        Yg = new RegExp([/#EXTINF:(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, /|(?!#)(\S+)/.source, /|#EXT-X-BYTERANGE:*(.+)/.source, /|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, /|#.*/.source].join(""), "g"),
                        Zg = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)(.*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/,
                        $g = function () {
                            function a() {
                                Sb(this, a), this.method = null, this.key = null, this.iv = null, this._uri = null
                            }

                            return Xg(a, [{
                                key: "uri", get: function () {
                                    return !this._uri && this.reluri && (this._uri = _b.a.buildAbsoluteURL(this.baseuri, this.reluri, {alwaysNormalize: !0})), this._uri
                                }
                            }]), a
                        }(), _g = function () {
                            function a() {
                                Sb(this, a), this._url = null, this._byteRange = null, this._decryptdata = null, this.tagList = []
                            }

                            return a.prototype.createInitializationVector = function (a) {
                                for (var b = new Uint8Array(16), c = 12; c < 16; c++) b[c] = a >> 8 * (15 - c) & 255;
                                return b
                            }, a.prototype.fragmentDecryptdataFromLevelkey = function (a, b) {
                                var c = a;
                                return a && a.method && a.uri && !a.iv && (c = new $g, c.method = a.method, c.baseuri = a.baseuri, c.reluri = a.reluri, c.iv = this.createInitializationVector(b)), c
                            }, a.prototype.cloneObj = function (a) {
                                return JSON.parse(JSON.stringify(a))
                            }, Xg(a, [{
                                key: "url", get: function () {
                                    return !this._url && this.relurl && (this._url = _b.a.buildAbsoluteURL(this.baseurl, this.relurl, {alwaysNormalize: !0})), this._url
                                }, set: function (a) {
                                    this._url = a
                                }
                            }, {
                                key: "programDateTime", get: function () {
                                    return !this._programDateTime && this.rawProgramDateTime && (this._programDateTime = new Date(Date.parse(this.rawProgramDateTime))), this._programDateTime
                                }
                            }, {
                                key: "byteRange", get: function () {
                                    if (!this._byteRange) {
                                        var a = this._byteRange = [];
                                        if (this.rawByteRange) {
                                            var b = this.rawByteRange.split("@", 2);
                                            if (1 === b.length) {
                                                var c = this.lastByteRangeEndOffset;
                                                a[0] = c ? c : 0
                                            } else a[0] = parseInt(b[1]);
                                            a[1] = parseInt(b[0]) + a[0]
                                        }
                                    }
                                    return this._byteRange
                                }
                            }, {
                                key: "byteRangeStartOffset", get: function () {
                                    return this.byteRange[0]
                                }
                            }, {
                                key: "byteRangeEndOffset", get: function () {
                                    return this.byteRange[1]
                                }
                            }, {
                                key: "decryptdata", get: function () {
                                    return this._decryptdata || (this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn)), this._decryptdata
                                }
                            }]), a
                        }(), ah = function () {
                            function a(b) {
                                Sb(this, a), this.loader = void 0, this.onError = b.onM3U8Error, this.onRecv = b.onM3U8Recv, this.on403Error = b.on403Error, this.m_isBusy = !1
                            }

                            return a.prototype.load = function (a) {
                                var b = {};
                                b.url = a, b.responseType = "", this.loader = new Gf((void 0));
                                var c = tc.a.M3U8RecvTimeOut, d = tc.a.M3u8RetryTimes, e = 100, f = 64e3;
                                this.m_isBusy = !0;
                                var g = void 0, h = void 0;
                                g = {
                                    timeout: c,
                                    maxRetry: d,
                                    retryDelay: e,
                                    maxRetryDelay: f
                                }, h = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this)
                                }, this.loader.load(b, g, h)
                            }, a.prototype.loadsuccess = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, e = a.data,
                                    f = a.url, g = c.type, h = c.id, i = c.level, j = isNaN(h) ? 0 : h;
                                if (this.m_isBusy = !1, this.closeLoader(), void 0 !== f && 0 !== f.indexOf("data:") || (f = c.url), 0 === e.indexOf("#EXTM3U")) if (e.indexOf("#EXTINF:") > 0) {
                                    var k = "audioTrack" !== g && "subtitleTrack" !== g,
                                        l = isNaN(i) ? isNaN(h) ? 0 : h : i,
                                        m = Ce.parseLevelPlaylist(e, f, l, "audioTrack" === g ? "audio" : "subtitleTrack" === g ? "subtitle" : "main", j);
                                    m.tload = b.tload, b.tparsed = performance.now(), m.targetduration ? k ? this.onRecv(m, i || 0, h || 0, d) : "audioTrack" === g ? cc.b.info("M3U8Loader : loadsuccess : AUDIO_TRACK_LOADED") : "subtitleTrack" === g && cc.b.info("M3U8Loader : loadsuccess : SUBTITLE_TRACK_LOADED") : this.onError(Lg.eStatus_ManifestLoadError, f)
                                } else this.onError(Lg.eStatus_ManifestLoadError, f); else this.onError(Lg.eStatus_ManifestLoadError, f)
                            }, a.prototype.closeLoader = function () {
                                this.loader && (this.loader.abort(), this.loader = void 0, this.m_isBusy = !1)
                            }, a.prototype.loaderror = function (a, b) {
                                arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                return 0 == tc.a.M3U8403SwitchUrl && a && 403 == a.code && this.on403Error ? (this.on403Error(), void this.closeLoader()) : (this.closeLoader(), void (this.onError && this.onError(Lg.eStatus_m3u8IOError, b.url, a.code)))
                            }, a.prototype.loadtimeout = function (a, b) {
                                arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                this.closeLoader(), this.onError && this.onError(Lg.eStatus_m3u8Recv_timeout, b.url, 0)
                            }, a.prototype.parseLevelPlaylist = function (a, b, c, d) {
                                var e, f, g = 0, h = 0,
                                    i = {type: null, version: null, url: b, fragments: [], live: !0, startSN: 0},
                                    j = new $g, k = 0, l = null, m = new _g;
                                for (Yg.lastIndex = 0; null !== (e = Yg.exec(a));) {
                                    var n = e[1];
                                    if (n) {
                                        m.duration = parseFloat(n);
                                        var o = (" " + e[2]).slice(1);
                                        m.title = o ? o : null, m.tagList.push(o ? ["INF", n, o] : ["INF", n])
                                    } else if (e[3]) {
                                        if (!isNaN(m.duration)) {
                                            var p = g++;
                                            m.type = d, m.start = h, m.levelkey = j, m.sn = p, m.level = c, m.cc = k, m.baseurl = b;
                                            var q = (" " + e[3]).slice(1);
                                            m.relurl = q;
                                            var r = q.split("&"), s = parseInt(this.getUrlValue(r, "brs")),
                                                t = parseInt(this.getUrlValue(r, "bre"));
                                            m.fileSize = t <= s ? 0 : t - s + 1, i.fragments.push(m), l = m, h += m.duration, m = new _g
                                        }
                                    } else if (e[4]) {
                                        if (m.rawByteRange = (" " + e[4]).slice(1), l) {
                                            var u = l.byteRangeEndOffset;
                                            u && (m.lastByteRangeEndOffset = u)
                                        }
                                    } else if (e[5]) m.rawProgramDateTime = (" " + e[5]).slice(1), m.tagList.push(["PROGRAM-DATE-TIME", m.rawProgramDateTime]); else {
                                        for (e = e[0].match(Zg), f = 1; f < e.length && void 0 === e[f]; f++) ;
                                        var v = (" " + e[f + 1]).slice(1), w = (" " + e[f + 2]).slice(1);
                                        switch (e[f]) {
                                            case"#":
                                                m.tagList.push(w ? [v, w] : [v]);
                                                break;
                                            case"PLAYLIST-TYPE":
                                                i.type = v.toUpperCase();
                                                break;
                                            case"MEDIA-SEQUENCE":
                                                g = i.startSN = parseInt(v);
                                                break;
                                            case"TARGETDURATION":
                                                i.targetduration = parseFloat(v);
                                                break;
                                            case"VERSION":
                                                i.version = parseInt(v);
                                                break;
                                            case"EXTM3U":
                                                break;
                                            case"ENDLIST":
                                                i.live = !1;
                                                break;
                                            case"DIS":
                                                k++, m.tagList.push(["DIS"]);
                                                break;
                                            case"DISCONTINUITY-SEQ":
                                                k = parseInt(v);
                                                break;
                                            case"KEY":
                                                var x = v, y = new AttrList(x), z = y.enumeratedString("METHOD"), A = y.URI,
                                                    B = y.hexadecimalInteger("IV");
                                                z && (j = new $g, A && ["AES-128", "SAMPLE-AES"].indexOf(z) >= 0 && (j.method = z, j.baseuri = b, j.reluri = A, j.key = null, j.iv = B));
                                                break;
                                            case"START":
                                                var C = v, D = new AttrList(C), E = D.decimalFloatingPoint("TIME-OFFSET");
                                                isNaN(E) || (i.startTimeOffset = E);
                                                break;
                                            case"MAP":
                                                var F = new AttrList(v);
                                                m.relurl = F.URI, m.rawByteRange = F.BYTERANGE, m.baseurl = b, m.level = c, m.type = d, m.sn = "initSegment", i.initSegment = m, m = new _g, i.mapTag = !0;
                                                break;
                                            default:
                                                cc.b.warn("line parsed but not handled: " + e)
                                        }
                                    }
                                }
                                return m = l, m && !m.relurl && (i.fragments.pop(), h -= m.duration), i.totalduration = h, i.averagetargetduration = h / i.fragments.length, i.endSN = g - 1, i
                            }, a.prototype.getUrlValue = function (a, b) {
                                for (var c = 0; c < a.length; c++) {
                                    a[c];
                                    if (void 0 !== a[c] && a[c].indexOf(b + "=") !== -1) return a[c].substring(b.length + 1)
                                }
                                return 0
                            }, a.prototype.stop = function () {
                                this.closeLoader()
                            }, a.prototype.isBusy = function () {
                                return this.m_isBusy
                            }, a
                        }(), bh = ah,
                        ch = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) {
                            return typeof a
                        } : function (a) {
                            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                        }, dh = function th(a) {
                            Tb(this, th), this.url = a, this.failedCount403 = 0
                        }, eh = function () {
                            function a(b, c, d, e) {
                                Tb(this, a), Qd.getInstance().setMultiNetLoader(this), this.seq = Jc.a.GetMultiloaderSeq(), this.stoped = !1, cc.b.info(this.getLogHeader() + " create."), this._initMultiNetLoader(b, c, d, e)
                            }

                            return a.prototype.getLogHeader = function () {
                                return "MultiNetLoader(" + this.seq + ") "
                            }, a.prototype.isStop = function () {
                                return this.stoped === !0
                            }, a.prototype.destroy = function () {
                                Qd.getInstance().setMultiNetLoader(null), this.stoped || (this.m_M3U8Loader.stop(), this.m_DownloadTimer && (clearInterval(this.m_DownloadTimer), this.m_DownloadTimer = void 0), this.m_P2PRoutineTimer && (clearInterval(this.m_P2PRoutineTimer), this.m_P2PRoutineTimer = void 0), this.m_SendDataTimer && (clearInterval(this.m_SendDataTimer), this.m_SendDataTimer = void 0), this.loaderContext = void 0, this.m_HttpDownloader && (this.m_HttpDownloader.isStop() || this.m_HttpDownloader.abort(), this.m_HttpDownloader.unregisterCallBack()), this.m_HttpDownloader = void 0, this.m_LoaderCallbacks = void 0, this.m_KeyID = void 0, this.m_MediaFile = null, cc.b.info(this.getLogHeader() + " destroy"), this.stoped = !0, this.stopedP2P = !1)
                            }, a.prototype.startP2P = function () {
                                this.stopedP2P = !1, this.initPeerContainer()
                            }, a.prototype.stopP2P = function () {
                                this.stopedP2P = !0, this.m_PeerContainer = void 0, this.m_PeerDownPool = void 0, this.m_haveRequestTpt = !1
                            }, a.prototype._initMultiNetLoader = function (a, b, c, d) {
                                this.videoPreLoad = void 0 == d ? 0 : d, this.videoPreLoad && (hc.a.isAdPreLoading = !0), this.openCDNDownload = 0 == this.videoPreLoad, cc.b.log(this.getLogHeader() + ":openCDNDownload " + this.openCDNDownload), this.postLogCount = 0, this.m_playerEndTime = 0, this.m_currentPlayTime = 0, this.m_PeerDownPool = null, this.httpCanDownloadTick = 0, this.checkFetch(), this.m_MediaFile = null, this.m_LoaderCallbacks = b, this.m_LowSpeedCount = 0, this.m_WatchTime = 0, this.m_MaxConnectPeerInterval = tc.a.ConnectPeerIntervar, this.m_MaxConnectedPeerNumber = tc.a.MaxConnectedPeerNumber, a.linkVID && a.resolution ? (this.m_KeyID = "hls." + a.linkVID + "." + a.resolution, sc.getInstance().keyIDForReport = a.linkVID + "." + a.resolution + ".hls") : (this.m_KeyID = "", cc.b.info("m_KeyID is wrong can not use p2p")), this.m_IsUseP2P = !0, a && 0 == a.fp2p && (this.m_IsUseP2P = !1), this.m_IsCharge = this.getSingleInfo(a.isCharge, !1), a.urls && (this.m_Urls = a.urls.concat()), this.m_CommitOffset = 0, this.m_PlayEmergencyTime = tc.a.MinEmergencyTime, this.m_PlaySafeTime = tc.a.MinSafeTime, this.initBufferTime(), this.m_PlayRemainTime = 0, this.m_IsHTTPPullTime = !1, this.m_IsStopSendData = !1, this.m_QuerySeedInterval = 0, this.m_ConnectPeerInterval = 0, this.m_ExchangeBitmapInterval = 0, this.m_DownloadPieces = [], this.m_DownloadingHttpSeq = 0, this.m_haveRecvTimeout = !1, this.m_haveConnectTimeout = !1, this.m_HttpDownloadFailedTimes = 0, this.m_M3U8ErrorTimes = 0, this.m_M3U8Loader = new bh({
                                    onM3U8Error: this.onM3U8Error.bind(this),
                                    onM3U8Recv: this.onM3U8Recv.bind(this),
                                    on403Error: this.on403Error.bind(this)
                                }), this.m_M3U8Urls = [], this.appendM3U8Urls(a.urls), this.m_M3U8UrlsIndex = 0, this.m_haveRequestTpt = !1, void 0 === this.m_DownloadTimer && (this.m_DownloadTimer = setInterval(this.onSchedule.bind(this), tc.a.DownloadScheduleInterval)), void 0 === this.m_P2PRoutineTimer && (this.m_P2PRoutineTimer = setInterval(this.onP2PRoutineWork.bind(this), tc.a.DownloadScheduleInterval)), void 0 === this.m_SendDataTimer && (this.m_SendDataTimer = setInterval(this.onSendDataToPlayer.bind(this), tc.a.SendDataScheduleInterval)), this.m_downFinish = !1, this.m_ErrorFileSizeSeq = -1, this.setDataCollection(), hc.a.IsReportServerAndClientIP = 0, this.doCacheWork(c), this.httpDownloadSchedule(), this.setGlobalBalInfo(a);
                                var e = tc.a.ForbiddenInsertVideoInAdP2P && (this.m_MediaFile.isAdInsert || this.m_MediaFile.isVideoIn);
                                tc.a.IsStartP2P && hc.a.isSupportP2P && !e && (this.initPeerContainer(), this.getTorrent()), Wg.getInstance().isGotConfig() || Wg.getInstance().reqConfig()
                            }, a.prototype.initBufferTime = function () {
                                for (var a = tc.a.AdjustHttpBufferTime, b = a.split(","), c = 0; c < b.length; c++) {
                                    var d = b[c].split(" ");
                                    if (3 == d.length) {
                                        var e = d[0].split("-");
                                        if (2 == e.length) {
                                            var f = parseInt(e[0]), g = parseInt(e[1]);
                                            if (f >= 0 && g <= 24 && f < g) {
                                                var h = new Date;
                                                if (h.getHours() >= f && h.getHours() < g && d[1] >= tc.a.MinEmergencyTime && d[2] >= tc.a.MinSafeTime) {
                                                    this.m_PlayEmergencyTime = parseInt(d[1]), this.m_PlaySafeTime = parseInt(d[2]);
                                                    break
                                                }
                                            }
                                        }
                                    }
                                }
                            }, a.prototype.appendM3U8Urls = function (a) {
                                for (var b = 0; b < a.length; b++) {
                                    var c = new dh(a[b]);
                                    this.m_M3U8Urls.push(c)
                                }
                            }, a.prototype.setDataCollection = function () {
                                this.m_DataCollection = ie.getInstance(), this.m_DataCollection.setKeyID(this.m_KeyID), this.m_DataCollection.setIsCharge(this.m_IsCharge), this.m_DataCollection.setIsUseP2P(this.m_IsUseP2P), this.m_DataCollection.m_post2QuicServer = !1
                            }, a.prototype.initPeerContainer = function () {
                                var a = {
                                    onPeerDataPingPang: this.onPeerDataPingPang.bind(this),
                                    onPeerConnectSuccess: this.onPeerConnectSuccess.bind(this)
                                };
                                this.m_PeerContainer = de.getInstance().createPeerContainer(this.m_KeyID, a), this.m_PeerContainer && (this.m_PeerDownPool = this.m_PeerContainer.getPeerDownPool())
                            }, a.prototype.onPeerDataPingPang = function (a, b, c, d) {
                                this.m_IsStopSendData || (this.m_PeerDownPool.choosePingPangBlockWithPeer(a, this.m_DownloadPieces, b, c), this.m_PeerDownPool.chooseBlockByPeerID(a, this.m_DownloadPieces))
                            }, a.prototype.onPeerConnectSuccess = function (a) {
                            }, a.prototype.setGlobalBalInfo = function (a) {
                                var b = this.getSingleInfo;
                                hc.a.playerVer = b(a.playerVer, hc.a.playerVer), hc.a.guid = b(a.guid, hc.a.guid);
                                var c = b(a.osVer, hc.a.osVer);
                                hc.a.osVer = b(c.name, "") + " " + b(c.version, "");
                                var d = b(a.broVer, hc.a.broVer);
                                "object" == ("undefined" == typeof d ? "undefined" : ch(d)) && (d = JSON.stringify(d)), hc.a.broVer = d, hc.a.platform = b(a.platform, hc.a.platform), hc.a.qq = b(a.qq, hc.a.qq), hc.a.wx = b(a.wx, hc.a.wx)
                            }, a.prototype.getSingleInfo = function (a, b) {
                                return void 0 === a ? b : a
                            }, a.prototype.constructHttpLoader = function () {
                                var a = {maxRetry: 0, retryDelay: 0, maxRetryDelay: 64e3, keyid: this.m_KeyID};
                                if (this.setTimeoutValue(a, this.m_SupportFetch), this.m_SupportFetch === !0) {
                                    var b = {
                                        onSuccess: this.httpFetchSuccess.bind(this),
                                        onError: this.httpFetchError.bind(this),
                                        onTimeout: this.httpFetchTimeout.bind(this),
                                        onProgress: this.httpFetchProgress.bind(this),
                                        onRedirect: this.httpFetchRedirect.bind(this)
                                    };
                                    this.m_HttpDownloader = new Ug(b, a)
                                } else {
                                    var c = {
                                        onSuccess: this.httpLoadSuccess.bind(this),
                                        onError: this.httpLoadError.bind(this),
                                        onTimeout: this.httpLoadTimeout.bind(this),
                                        onProgress: this.httpLoadProgress.bind(this),
                                        onRedirect: this.httpLoadRedirect.bind(this)
                                    };
                                    this.m_HttpDownloader = new Sg(c, a)
                                }
                            }, a.prototype.setTimeoutValue = function (a, b) {
                                b ? (a.recvTimeout = tc.a.HttpRecvTimeout, this.m_haveConnectTimeout ? a.connectTimeout = 2 * tc.a.HttpConnectTimeout : a.connectTimeout = tc.a.HttpConnectTimeout) : (a.recvTimeout = tc.a.XhrRecvTimeout, this.m_haveConnectTimeout ? a.connectTimeout = 2 * tc.a.XhrConnectTimeout : a.connectTimeout = tc.a.XhrConnectTimeout)
                            }, a.prototype.checkFetch = function () {
                                this.m_SupportFetch = !1;
                                var a = navigator.userAgent || "", b = navigator.appVersion || "",
                                    c = navigator.vendor || "", d = (a + " " + b + " " + c).toLowerCase(),
                                    e = /(chrome)[ \/]([\w.]+)/.exec(d) || /(webkit)[ \/]([\w.]+)/.exec(d) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(d) || /(msie) ([\w.]+)/.exec(d) || /(trident)(?:.*? rv:([\w.]+)|)/.exec(d) || d.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(d) || [],
                                    f = e[0], g = e[2].split(".")[0];
                                cc.b.info(this.getLogHeader() + " : checkFetch : engine = " + f + ", mainVersion = " + g), 0 === f.indexOf("chrome") && g >= 46 ? (window.__disableNativeFetch = !1, this.m_SupportFetch = !0) : 0 === f.indexOf("mozilla") && g >= 39 || (window.__disableNativeFetch = !0, this.m_SupportFetch = !1);
                                var h = void 0;
                                h = e.length > 2 ? e[1] + " " + e[2] : f.length <= 32 ? f : f.substring(0, 32), sc.getInstance().browserVer = h
                            }, a.prototype.onP2PRoutineWork = function () {
                                var a = tc.a.ForbiddenInsertVideoInAdP2P && (this.m_MediaFile.isAdInsert || this.m_MediaFile.isVideoIn);
                                0 == hc.a.stopP2PValue && this.m_IsUseP2P && tc.a.IsStartP2P && hc.a.isSupportP2P && this.m_PeerContainer && !this.stopedP2P && !a && this.P2PRoutineWork()
                            }, a.prototype.onSchedule = function () {
                                cc.b.info(this.getLogHeader() + " : remain [" + this.m_PlayRemainTime.toFixed(2) + "," + (this.m_playerEndTime - this.m_currentPlayTime).toFixed(2) + "] emergency = " + this.m_PlayEmergencyTime + (" safe = " + this.m_PlaySafeTime) + (" ishttppull = " + this.m_IsHTTPPullTime) + (" cur:" + this.m_currentPlayTime.toFixed(2)) + (" end:" + this.m_playerEndTime.toFixed(2)) + (" watch:" + this.m_WatchTime)), this.adjustHttpBufferTime(), this.checkLowSpeed(), this.httpDownloadSchedule(), 0 == hc.a.stopP2PValue && this.m_IsUseP2P && tc.a.IsStartP2P && hc.a.isSupportP2P && this.m_PeerContainer && !this.stopedP2P && (this.P2PDownloadSchedule(), tc.a.IsStartP2P && hc.a.isSupportP2P && cc.b.log(this.getLogHeader() + ":emergency:" + this.isInEmergencyTime() + " canupload:" + this.isInUploadTime() + ", p2p " + ie.getInstance().getP2PInfoStr() + " " + de.getInstance().getPeerInfoStr())), this.updateTimeForReport()
                            }, a.prototype.P2PDownloadSchedule = function () {
                                if (this.canP2PDownload() && this.m_PeerDownPool.getConnectedPeerLen() > 0) {
                                    var a = Math.max(this.m_DownloadingHttpSeq, this.m_ReadTSSeq);
                                    this.m_DownloadPieces = this.m_MediaFile.constructDownloadPieceInfo(a + 1, tc.a.MaxChooseTsNum), this.m_PeerDownPool.chooseBlockWithPeers(this.m_DownloadPieces)
                                }
                            }, a.prototype.canP2PDownload = function () {
                                return !!(this.m_PlayRemainTime > this.m_PlayEmergencyTime && !sd.getInstance().isOverMemory() || hc.a.isAdPreLoading)
                            }, a.prototype.adjustP2PConfigByDropFrame = function () {
                                var a = ie.getInstance().getDropFrameRate();
                                a > tc.a.DropFrameFirstLevel && a < tc.a.DropFrameSecondLevel ? (this.m_MaxConnectPeerInterval = tc.a.DFFirstDecreseConInterval, this.m_MaxConnectedPeerNumber = tc.a.DFFirstDecreseConPeer) : a > tc.a.DropFrameSecondLevel && a < tc.a.DropFrameThirdLevel ? (this.m_MaxConnectPeerInterval = tc.a.DFSecondDecreseConInterval, this.m_MaxConnectedPeerNumber = tc.a.DFSecondDecreseConPeer) : a > tc.a.DropFrameThirdLevel ? (this.m_MaxConnectPeerInterval = tc.a.DFThirdDecreseConInterval, this.m_MaxConnectedPeerNumber = tc.a.DFThirdDecreseConPeer) : (this.m_MaxConnectPeerInterval = tc.a.ConnectPeerIntervar, this.m_MaxConnectedPeerNumber = tc.a.MaxConnectedPeerNumber)
                            }, a.prototype.P2PRoutineWork = function () {
                                this.getTorrent(), this.CanP2PAction() && (this.adjustP2PConfigByDropFrame(), 0 == this.m_QuerySeedInterval-- && (this.querySeed(), this.m_QuerySeedInterval = tc.a.QuerySeedInterval - 1), 0 == this.m_ConnectPeerInterval-- && (hc.a.isAdPreLoading ? de.getInstance().getAllConnectingPeerCount() < tc.a.MaxConnectingPeerNumber && de.getInstance().getAllConnectedPeerCount() < tc.a.AdPreLoadConnectedPeerNum && this.m_PeerDownPool.connectPeer() : de.getInstance().getAllConnectingPeerCount() < tc.a.MaxConnectingPeerNumber && de.getInstance().getAllConnectedPeerCount() < this.m_MaxConnectedPeerNumber && this.m_PeerDownPool.connectPeer(), this.m_ConnectPeerInterval = this.m_MaxConnectPeerInterval - 1), 0 == this.m_ExchangeBitmapInterval-- && (this.swapBitmap(), this.m_ExchangeBitmapInterval = tc.a.ExchangeBitmapInterval - 1)), this.m_PeerDownPool && this.m_PeerDownPool.checkP2PTimeoutRequest()
                            }, a.prototype.CanP2PAction = function () {
                                return !!(this.m_PlayRemainTime > tc.a.P2PStartTime || hc.a.isAdPreLoading)
                            }, a.prototype.swapBitmap = function () {
                                if (this.m_MediaFile) {
                                    var a = this.m_MediaFile.getUnloadTSP2PSeq(this.m_ReadTSSeq);
                                    a >= 0 && this.m_PeerDownPool && this.m_PeerDownPool.exchangeBitmap(a, tc.a.MaxBitmapNumber)
                                }
                            }, a.prototype.querySeed = function () {
                                if (this.m_MediaFile && this.m_MediaFile.hasTorrent()) {
                                    var a = this.m_MediaFile.getUnloadTSP2PSeq(this.m_ReadTSSeq);
                                    if (a != -1 && this.m_PeerDownPool && this.m_PeerDownPool.getPeerPoolLen() <= tc.a.MaxPeerNum) {
                                        var b = this.m_MediaFile.getFileIDByP2PSeq(a),
                                            c = {onQueryCompleteCall: this.onQrySeedRsp.bind(this)};
                                        if ("" !== b) {
                                            var d = od.getInstance().getPeerServer();
                                            d && d.querySeed(b, tc.a.MaxQuerySeedNum, c)
                                        }
                                        cc.b.info(this.getLogHeader() + " : querySeed fileID:" + b)
                                    }
                                }
                            }, a.prototype.onQrySeedRsp = function (a, b, c, d, e) {
                                this.m_IsStopSendData || 0 == a && (d < tc.a.ReducePeerCount && (this.m_QuerySeedInterval += tc.a.AddQuerySeedInterval), cc.b.info(this.getLogHeader() + " : onQrySeedRsp iRet:" + a + " fileID:" + b + " peerIDArray:" + c.toString() + " peerSum:" + d + ", totalPeerSum:" + e), this.m_PeerDownPool && this.m_PeerDownPool.insertPeersIntoPeerPool(c))
                            }, a.prototype.getTorrent = function () {
                                if (!this.m_MediaFile.hasTorrent() && !this.m_haveRequestTpt && this.m_KeyID && "" !== this.m_KeyID) {
                                    var a = {
                                        onTPTReturn: this.onTPTReturn.bind(this),
                                        onTPTTimeout: this.onTPTTimeout.bind(this),
                                        onTPTError: this.onTPTError.bind(this)
                                    }, b = od.getInstance().getTPTServer();
                                    b && (this.m_haveRequestTpt = !0, b.queryTPT(this.m_KeyID, a)), cc.b.info(this.getLogHeader() + " : getTorrent m_KeyID " + this.m_KeyID)
                                }
                            }, a.prototype.onTPTReturn = function (a, b, c) {
                                this.m_IsStopSendData || (this.m_MediaFile.setFileID(b, c), cc.b.info(this.getLogHeader() + " onTPTReturn iRet:" + a + " fileIDArray:" + b.toString() + " tsNumArray:" + c.toString()), this.querySeed())
                            }, a.prototype.onTPTTimeout = function () {
                                this.m_IsStopSendData
                            }, a.prototype.onTPTError = function () {
                                this.m_IsStopSendData
                            }, a.prototype.onSendDataToPlayer = function () {
                                hc.a.isAdPreLoading || this.sendDataToPlayer()
                            }, a.prototype.onAudioNotInSequence = function (a) {
                                sc.getInstance().reportAudioDtsError(a.keyid, a.sn), this.loaderContext.sn == a.sn ? this.load(this.loaderContext) : (this.loaderContext.sn = a.sn, this.load(this.loaderContext))
                            }, a.prototype.onDataError = function (a) {
                                if (this.m_HttpDownloader && this.m_HttpDownloader.abort(), this.m_MediaFile && this.m_MediaFile.deleteTsByIndex(a.sn), tc.a.ParseDataFailSwitchUrl && (cc.b.info("parse data fail, switchUrl"), this.m_M3U8ErrorTimes = 0, this.switchUrl()), this.loaderContext.sn == a.sn && this.load(this.loaderContext), ie.getInstance().m_ParseFailTimes++, this.postLogCount <= 1) {
                                    var b = Math.ceil(Math.random() * tc.a.reportDataErrorLogParm);
                                    b < 2 && (this.postLogCount++, nh.postLog(1e3))
                                }
                            }, a.prototype.sendDataToPlayer = function () {
                                if (null !== this.m_MediaFile && this.m_IsStopSendData !== !0) {
                                    var a = this.m_MediaFile.readBlocksData(this.m_ReadTSSeq, this.m_ReadTSBlockIndex, tc.a.CommitBlockCntPerTime);
                                    if (a) {
                                        var b = (performance.now(), a.buff);
                                        this.m_CommitOffset += b.byteLength;
                                        var c = {
                                            offset: a.readOffset,
                                            loaded: this.m_CommitOffset,
                                            total: a.tsLen,
                                            keyid: this.getKeyId()
                                        };
                                        this.m_LoaderCallbacks.onProgress && this.m_LoaderCallbacks.onProgress(c, this.loaderContext, b, null);
                                        var d = a.readFinish, e = this.m_LoaderCallbacks.onSuccess;
                                        if (d && e) {
                                            var f = {data: new ArrayBuffer};
                                            cc.b.info(this.getLogHeader() + " : sendDataToPlayer complete : this.m_ReadTSSeq = " + this.m_ReadTSSeq + " totalBlockCount = " + a.totalBlockCount), e(f, c, this.loaderContext, null)
                                        }
                                        this.m_ReadTSBlockIndex += a.readBlockNum, d && (this.m_CommitOffset = 0)
                                    }
                                }
                            }, a.prototype.setRemainTime = function (a, b, c, d, e) {
                                this.m_PlayRemainTime = a, this.m_currentPlayTime = d, this.m_playerEndTime = c, this.m_MediaFile && (this.m_PlayRemainTime = Jc.a.GetCacheSecond(this.m_MediaFile.m_ArrTsCache, d, c, e))
                            }, a.prototype.load = function (a) {
                                this.loaderContext = a, this.m_CurrentLevel = a.level, this.m_IsStopSendData = !1, this.m_ReadTSSeq == a.sn || this.m_MediaFile.isTsFinishBySeq(a.sn) || this.m_HttpDownloader && !this.m_HttpDownloader.isStop() && this.m_HttpDownloader.getRequestTsSeq() != a.sn && this.m_HttpDownloader.abort();
                                var b = this.m_ReadTSSeq;
                                if (this.m_ReadTSSeq = a.sn, this.m_ReadTSBlockIndex = 0, this.m_CommitOffset = 0, cc.b.info(this.getLogHeader() + " : load : player read ts seq: " + this.m_ReadTSSeq + ", m_CurrentLevel = " + this.m_CurrentLevel), this.httpDownloadSchedule(), sd.getInstance().setCurrentVideoInfo(this.m_KeyID, this.m_ReadTSSeq), this.m_ReadTSSeq < b) {
                                    var c = this.m_KeyID;
                                    setTimeout(function () {
                                        sd.getInstance().onCacheManage(), sd.getInstance().releaseCacheFromEnd(c)
                                    }, 0)
                                }
                            }, a.prototype.httpLoadSuccess = function (a, b, c) {
                                arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                                if (!this.isStop()) {
                                    if (this.retryTimeForReport = 0, this.m_HttpDownloadFailedTimes = 0, this.m_MediaFile) {
                                        this.insertDataIntoCache(a.data, c, a.offset), this.m_MediaFile.setStatsBySeq(c, b), this.updateBitrate(c);
                                        var d = Math.min(this.m_PlayEmergencyTime, tc.a.ImmediateDownloadTime);
                                        this.m_PlayRemainTime < d && this.httpDownloadSchedule()
                                    }
                                    if (this.lastIsQuic != b.is_quic && this.m_LoaderCallbacks.onNotifyQuic) {
                                        var e = b.is_quic;
                                        void 0 != this.lastIsQuic && (e = 2), this.m_LoaderCallbacks.onNotifyQuic(e, this.m_KeyID, this.getQuicVer(b.quicver)), this.lastIsQuic = b.is_quic
                                    }
                                    hc.a.IsReportServerAndClientIP || this.m_LoaderCallbacks.onNotifyServerAndClientIP && b.serverIP && b.clientIP && (this.m_LoaderCallbacks.onNotifyServerAndClientIP(b.serverIP, b.clientIP), hc.a.IsReportServerAndClientIP = 1)
                                }
                            }, a.prototype.on403Error = function () {
                                this.m_LoaderCallbacks && this.m_LoaderCallbacks.on403Error && this.m_LoaderCallbacks.on403Error()
                            }, a.prototype.httpLoadError = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                this.isStop() || (cc.b.info(this.getLogHeader() + " : load Error : seqnum = " + b + ", this.m_ReadTSSeq = " + this.m_ReadTSSeq + ", statusCode=" + a.code + ", statusText=" + a.text), this.httpErrorReport(a.code), 403 == a.code ? this.m_LoaderCallbacks && this.m_LoaderCallbacks.on403Error && this.m_LoaderCallbacks.on403Error() : this.handleHttpLoadFail(a, c, Lg.eStatus_HttpCDNLoadError))
                            }, a.prototype.httpErrorReport = function (a) {
                                this.retryTimeForReport || (this.retryTimeForReport = 0), this.m_HttpDownloader.m_ConnectTimes = ++this.retryTimeForReport;
                                var b = void 0;
                                switch (a) {
                                    case 600:
                                        a = 0, b = kc.eErrno_TSFetchCatchError;
                                        break;
                                    case 301:
                                        b = kc.eErrno_TSHTTP301Redirect;
                                        break;
                                    case 302:
                                        b = kc.eErrno_TSHTTP302Redirect;
                                        break;
                                    case 403:
                                        b = kc.eErrno_TSHTTP403Forbidden;
                                        break;
                                    case 404:
                                        b = kc.eErrno_TSHTTP404NotFound;
                                        break;
                                    default:
                                        b = kc.eErrno_TSUnhandled
                                }
                                this.m_HttpDownloader.onDownloadFailed(b, a)
                            }, a.prototype.httpLoadTimeout = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                if (!this.isStop()) {
                                    var d = ie.getInstance().getSpeedArrayStr();
                                    switch (cc.b.info(this.getLogHeader() + " : load Timeout, seqnum = " + b + " networkDetails.errorStatus = " + c.errorStatus + " speed:" + d), c.errorStatus) {
                                        case Lg.eStatus_HttpCDNConnectTimeout:
                                        case Lg.eStatus_HttpCDNRecvTimeout:
                                            c.errorStatus == Lg.eStatus_HttpCDNConnectTimeout ? this.m_haveConnectTimeout = !0 : c.errorStatus == Lg.eStatus_HttpCDNRecvTimeout && (this.m_haveRecvTimeout = !0), this.retryTimeForReport || (this.retryTimeForReport = 0), this.m_HttpDownloader.m_ConnectTimes = ++this.retryTimeForReport, this.m_HttpDownloader.onDownloadFailed(c.errorStatus === Lg.eStatus_HttpCDNConnectTimeout ? kc.eErrno_TSConnectTimeOut : kc.eErrno_TSRevDataTimeout, 0), this.handleHttpLoadFail(null, c, c.errorStatus)
                                    }
                                }
                            }, a.prototype.httpLoadProgress = function (a, b, c) {
                                arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null
                            }, a.prototype.httpLoadRedirect = function (a, b) {
                                void 0 !== a && (cc.b.info(this.getLogHeader() + " : httpLoadRedirect : seq = " + b + ", url = " + a), this.m_HttpDownloader && !this.m_HttpDownloader.isStop() && this.m_HttpDownloader.abort(), this.m_MediaFile.setUrlBySeq(a, b), this.httpDownloadSchedule())
                            }, a.prototype.handleHttpLoadFail = function (a, b, c) {
                                if (this.m_HttpDownloadFailedTimes++, this.m_PlayRemainTime < tc.a.MinReportErrorTime) switch (c) {
                                    case Lg.eStatus_HttpCDNConnectTimeout:
                                    case Lg.eStatus_HttpCDNRecvTimeout:
                                        this.m_LoaderCallbacks.onTimeout(a, this.loaderContext, b);
                                        break;
                                    case Lg.eStatus_HttpCDNLoadError:
                                        this.m_LoaderCallbacks.onError(a, this.loaderContext, b)
                                }
                                tc.a.EnableSwitchUrl && this.m_HttpDownloadFailedTimes % tc.a.HttpMaxFailedTimes === 0 ? (this.m_M3U8ErrorTimes = 0, this.switchUrl()) : this.httpDownloadSchedule()
                            }, a.prototype.doCacheWork = function (a) {
                                this.m_MediaFile = sd.getInstance().createMediaFile(a, this.m_KeyID), ie.getInstance().isVideoIn = this.m_MediaFile.isVideoIn, ie.getInstance().isAdInsert = this.m_MediaFile.isAdInsert
                            }, a.prototype.canHttpDownload = function () {
                                return !this.m_M3U8Loader.isBusy() && (!(this.m_HttpDownloader && !this.m_HttpDownloader.isStop()) && !sd.getInstance().isHTTPOverMemory())
                            }, a.prototype.checkLowSpeed = function () {
                                if (tc.a.EnableCDNSlowSwitch && void 0 != this.m_HttpDownloader && !this.m_HttpDownloader.isStop() && !this.m_HttpDownloader.isIdle()) {
                                    var a = ie.getInstance().getRealHttpSpeed(), b = ie.getInstance().getAvgBitrate();
                                    a < b / tc.a.LowSpeedRatio ? (this.m_LowSpeedCount++, this.m_LowSpeedCount >= tc.a.MaxLowSpeedCount && (this.switchUrl(), this.m_LowSpeedCount = 0, ie.getInstance().lowSpeedAndSwitchUrlTimes++)) : this.m_LowSpeedCount = 0
                                }
                            }, a.prototype.httpDownloadSchedule = function () {
                                if (this.openCDNDownload && this.needHTTPDownload() && null !== this.m_MediaFile && this.canHttpDownload()) {
                                    var a = this.m_MediaFile.getUnloadTsSeq(this.m_ReadTSSeq);
                                    if (a === -1) return void (this.m_downFinish = !0);
                                    if (this.m_downFinish = !1, void 0 === this.m_HttpDownloader || this.m_HttpDownloader.getRequestTsSeq() !== a || this.m_HttpDownloader.isStop()) {
                                        var b = {sn: a, rangeStart: 0, rangeEnd: -1};
                                        b.url = this.m_MediaFile.getUrlBySeq(a), tc.a.IsUseRange && this.m_MediaFile.getFirstRangeByTsSeq(b), this.constructHttpLoader(),
                                            this.m_HttpDownloader.load(b), this.m_DownloadingHttpSeq = a
                                    }
                                }
                            }, a.prototype.isInEmergencyTime = function () {
                                return !!(this.m_PlayRemainTime < this.m_PlayEmergencyTime || this.m_downFinish)
                            }, a.prototype.isInUploadTime = function () {
                                return !!(this.m_PlayRemainTime >= tc.a.CanUploadRemainTime || this.m_downFinish)
                            }, a.prototype.getKeyId = function () {
                                return this.m_KeyID
                            }, a.prototype.getCurrentPlayTime = function () {
                                return this.m_currentPlayTime
                            }, a.prototype.needHTTPDownload = function () {
                                return this.m_PlayRemainTime < this.m_PlayEmergencyTime && !this.m_IsHTTPPullTime && (this.m_IsHTTPPullTime = !0), !!(this.m_IsHTTPPullTime && this.m_PlayRemainTime < this.m_PlaySafeTime) || (this.m_IsHTTPPullTime = !1, !1)
                            }, a.prototype.insertDataIntoCache = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;
                                this.m_MediaFile && this.m_MediaFile.writeData(b, c, a, !1)
                            }, a.prototype.abort = function () {
                                this.m_IsStopSendData = !0
                            }, a.prototype.httpFetchSuccess = function (a, b, c) {
                                arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                                if (!this.isStop() && null !== this.m_MediaFile) {
                                    if (null !== a.data && this.insertDataIntoCache(a.data, c), this.m_MediaFile.setStatsBySeq(c, b), this.updateBitrate(c), this.lastIsQuic != b.is_quic && this.m_LoaderCallbacks.onNotifyQuic) {
                                        var d = b.is_quic;
                                        void 0 != this.lastIsQuic && (d = 2), this.m_LoaderCallbacks.onNotifyQuic(d, this.m_KeyID, this.getQuicVer(b.quicver)), this.lastIsQuic = b.is_quic
                                    }
                                    hc.a.IsReportServerAndClientIP || this.m_LoaderCallbacks.onNotifyServerAndClientIP && b.serverIP && b.clientIP && (this.m_LoaderCallbacks.onNotifyServerAndClientIP(b.serverIP, b.clientIP), hc.a.IsReportServerAndClientIP = 1);
                                    var e = Math.min(this.m_PlayEmergencyTime, tc.a.ImmediateDownloadTime);
                                    this.m_PlayRemainTime < e && this.httpDownloadSchedule()
                                }
                            }, a.prototype.updateBitrate = function (a) {
                                if (a >= 0) {
                                    var b = this.m_MediaFile.getBitrate(a);
                                    ie.getInstance().updateLatestBitrate(b)
                                }
                            }, a.prototype.checkDataValid = function (a, b) {
                                var c = 0, d = 0;
                                a % 188 == 0 ? (c = a, d = 0) : (c = 188 * (parseInt(a / 188) + 1), d = c - a);
                                var e = new Uint8Array(b);
                                if (e.byteLength > d && 71 != e[d]) {
                                    var f = Jc.a.GetDataHex(b, d, 32);
                                    cc.b.error(ac.c.TS_CHECK_ERROR, this.getLogHeader() + ": data error:recv from cdn filePos:" + c + " dataPos:" + d + " errorData:" + f)
                                }
                            }, a.prototype.httpFetchProgress = function (a, b) {
                                if (!this.isStop()) {
                                    this.checkDataValid(b.offset, b.data);
                                    b.offset + b.data.byteLength;
                                    b.data.byteLength > 0 && this.insertDataIntoCache(b.data, a, b.offset)
                                }
                            }, a.prototype.httpFetchTimeout = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                this.isStop() || this.httpLoadTimeout(a, b, c)
                            }, a.prototype.httpFetchError = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                                this.isStop() || this.httpLoadError(a, b, c)
                            }, a.prototype.httpFetchRedirect = function (a, b) {
                                this.httpLoadRedirect(a, b)
                            }, a.prototype.adjustHttpBufferTime = function () {
                                if (this.openCDNDownload && this.m_WatchTime++, this.isInHighTime()) {
                                    var a = ie.getInstance();
                                    if (tc.a.EnableFirstCachestrategy && this.m_WatchTime < tc.a.FirstCacheTime) return this.m_PlayEmergencyTime = tc.a.FirstCacheEmerTime, void (this.m_PlaySafeTime = tc.a.FirstCacheSafeTime);
                                    a.getAvgBitrate() * tc.a.BTRatio < a.getRealP2PSpeed() ? (this.m_PlayEmergencyTime -= tc.a.DecreaseTimeDelta, this.m_PlaySafeTime -= tc.a.DecreaseTimeDelta, this.m_PlayEmergencyTime = this.m_PlayEmergencyTime < tc.a.MinDecreaseEmerTime ? tc.a.MinDecreaseEmerTime : this.m_PlayEmergencyTime, this.m_PlaySafeTime = this.m_PlaySafeTime < tc.a.MinDecreaseSafeTime ? tc.a.MinDecreaseSafeTime : this.m_PlaySafeTime) : (this.m_PlayEmergencyTime += tc.a.AddTimeDelta, this.m_PlaySafeTime += tc.a.AddTimeDelta, this.m_PlayEmergencyTime = this.m_PlayEmergencyTime > tc.a.MaxAddEmerTime ? tc.a.MaxAddEmerTime : this.m_PlayEmergencyTime, this.m_PlaySafeTime = this.m_PlaySafeTime > tc.a.MaxAddSafeTime ? tc.a.MaxAddSafeTime : this.m_PlaySafeTime)
                                }
                            }, a.prototype.isInHighTime = function () {
                                for (var a = tc.a.HighTime, b = a.split(","), c = 0; c < b.length; c++) {
                                    var d = b[c].split(" ");
                                    if (2 === d.length) {
                                        var e = parseInt(d[0]), f = parseInt(d[1]), g = new Date;
                                        if (g.getHours() >= e && g.getHours() < f) return !0
                                    }
                                }
                                return !1
                            }, a.prototype.switchUrl = function () {
                                if (this.m_MediaFile && (this.m_MediaFile.isVideoIn || this.m_MediaFile.isAdInsert)) return void cc.b.log("this m3u8 contains videoin or adinsert, do not switchurl");
                                if (cc.b.info("MultiNetLoader : switchUrl"), this.m_M3U8Loader && !this.m_M3U8Loader.isBusy() && this.m_M3U8Urls.length > 0) {
                                    this.m_M3U8UrlsIndex++, this.m_M3U8UrlsIndex >= this.m_M3U8Urls.length && (this.m_M3U8UrlsIndex = 0);
                                    var a = this.m_M3U8Urls[this.m_M3U8UrlsIndex].url;
                                    this.m_M3U8Loader.load(a)
                                }
                            }, a.prototype.onM3U8Change = function (a, b) {
                                return a != this.getKeyId() ? (cc.b.log("error keyid not same new:" + a + " old:" + this.getKeyId()), void (this.m_LoaderCallbacks && this.m_LoaderCallbacks.onKeyIdChange && this.m_LoaderCallbacks.onKeyIdChange(a, this.getKeyId()))) : (this.m_M3U8Urls = [], this.appendM3U8Urls(b), this.m_M3U8UrlsIndex = this.m_M3U8Urls.length - 1, void this.switchUrl())
                            }, a.prototype.onM3U8Recv = function (a, b, c) {
                                arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                                this.m_M3U8ErrorTimes = 0, this.resetM3U8403Error();
                                var d = a;
                                this.m_MediaFile && this.m_M3U8Loader && (this.reportData(this.m_M3U8ErrorTimes, nc.ServerType_SwitchUrl, kc.eErrno_SwitchUrlSuc, this.m_M3U8Urls[this.m_M3U8UrlsIndex % this.m_M3U8Urls.length].url), this.m_M3U8Loader.stop(), this.m_ErrorFileSizeSeq !== -1 && (this.m_MediaFile.setFileSizeBySeqAndDetails(this.m_ErrorFileSizeSeq, d), this.m_ErrorFileSizeSeq = -1), this.m_MediaFile.updateUrlByDetails(d), this.m_HttpDownloadFailedTimes = 0, hc.a.IsReportServerAndClientIP = 0, ie.getInstance().m_post2QuicServer = !1, this.httpDownloadSchedule())
                            }, a.prototype.appendM3U8Error = function (a) {
                                for (var b = 0; b < this.m_M3U8Urls.length; b++) if (this.m_M3U8Urls[b].url == a) {
                                    this.m_M3U8Urls[b].failedCount403++;
                                    break
                                }
                            }, a.prototype.isAllM3U8403Error = function () {
                                for (var a = !0, b = 0; b < this.m_M3U8Urls.length; b++) if (0 == this.m_M3U8Urls[b].failedCount403) {
                                    a = !1;
                                    break
                                }
                                return a
                            }, a.prototype.resetM3U8403Error = function () {
                                for (var a = 0; a < this.m_M3U8Urls.length; a++) this.m_M3U8Urls[a].failedCount403 = 0
                            }, a.prototype.onM3U8Error = function (a, b, c) {
                                return this.m_M3U8ErrorTimes++, 403 == c && this.appendM3U8Error(b), this.isAllM3U8403Error() ? (this.m_M3U8ErrorTimes = 0, void this.on403Error()) : void (this.m_M3U8ErrorTimes < this.m_M3U8Urls.length ? this.switchUrl() : (this.reportData(this.m_M3U8ErrorTimes - 1, nc.ServerType_SwitchUrl, kc.eErrno_SwitchUrlFailed, this.m_M3U8Urls[this.m_M3U8UrlsIndex % this.m_M3U8Urls.length].url), this.m_M3U8Loader.stop(), cc.b.info("MultiNetLoader : Too many try times,switch url Failed! m_M3U8ErrorTimes: " + this.m_M3U8ErrorTimes)))
                            }, a.prototype.reportData = function (a, b, c, d) {
                                sc.getInstance().reportSvrQuality(a, b, "", 0, c, 0, 0, 0, 0, d)
                            }, a.prototype.updateTimeForReport = function () {
                                ie.getInstance().m_playerRemainTime = this.m_PlayRemainTime, ie.getInstance().m_playableTime = this.m_PlayRemainTime + sd.getInstance().getPlayableTime(this.m_KeyID, this.m_ReadTSSeq)
                            }, a.prototype.setOpenCDNDownload = function (a) {
                                cc.b.log(this.getLogHeader() + ":openCDNDownload true"), this.openCDNDownload = !0
                            }, a.prototype.getQuicVer = function (a) {
                                var b = "";
                                if (a) {
                                    var c = a.split("|");
                                    c.length >= 8 && (b = c[7])
                                }
                                return b
                            }, a
                        }(), fh = eh, gh = function (a) {
                            function b(c, d) {
                                Ub(this, b);
                                var e = Vb(this, a.call(this, c));
                                return d && (e.p2pConfig = d), e
                            }

                            return Wb(b, a), b.prototype.destroy = function () {
                                return void 0 !== this.mLoader && this.mLoader.destroy(), this.mLoader = void 0, a.prototype.destroy.call(this)
                            }, b.prototype.startP2P = function () {
                                this.mLoader && this.mLoader.startP2P && this.mLoader.startP2P()
                            }, b.prototype.stopP2P = function () {
                                this.mLoader && this.mLoader.stopP2P && this.mLoader.stopP2P()
                            }, b.prototype.createLoader = function (a, b, c) {
                                if (void 0 === this.mLoader || this.mLoader.m_CurrentLevel !== c.level) {
                                    var d = null;
                                    if (this.hls.levels.length <= c.level) {
                                        if (!(this.hls.levels.length >= 1)) return cc.b.error("no levels ,level length is 0"), null;
                                        d = this.hls.levels[0]
                                    } else {
                                        for (var e = 0; e < this.hls.levels.length; e++) if (this.hls.levels[e].level === c.level) {
                                            d = this.hls.levels[c.level];
                                            break
                                        }
                                        if (null === d) return null
                                    }
                                    null !== this.mLoader && void 0 !== this.mLoader && (this.mLoader.destroy(), this.mLoader = null), this.mLoader = new fh(this.p2pConfig, b, d, a.videoPreLoad)
                                }
                                return this.mLoader
                            }, b.prototype.on403Error = function () {
                                this.hls && this.hls.on403Error && this.hls.on403Error()
                            }, b.prototype.onM3U8Change = function (a, b) {
                                this.mLoader && this.mLoader && this.mLoader.onM3U8Change(a, b)
                            }, b.prototype.onFragLoading = function (b) {
                                if (0 != hc.a.playType) return void a.prototype.onFragLoading.call(this, b);
                                var c = b.frag, d = this.hls.config;
                                c.loaded = 0;
                                var e = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this),
                                    onProgress: this.loadprogress.bind(this),
                                    on403Error: this.on403Error.bind(this),
                                    onKeyIdChange: this.onKeyIdChange.bind(this),
                                    onNotifyQuic: this.onNotifyQuic.bind(this),
                                    onNotifyServerAndClientIP: this.onNotifyServerAndClientIP.bind(this)
                                }, f = this.createLoader(d, e, c);
                                if (null !== f) {
                                    c.loader = f;
                                    var g = {
                                        url: c.url,
                                        sn: c.sn,
                                        level: c.level,
                                        frag: c,
                                        responseType: "arraybuffer",
                                        progressData: !1
                                    }, h = c.byteRangeStartOffset, i = c.byteRangeEndOffset;
                                    isNaN(h) || isNaN(i) || (g.rangeStart = h, g.rangeEnd = i);
                                    var j = {
                                        timeout: d.fragLoadingTimeOut,
                                        maxRetry: 0,
                                        retryDelay: 0,
                                        maxRetryDelay: d.fragLoadingMaxRetryTimeout
                                    };
                                    this.mLoader.load(g, j, e)
                                }
                            }, b.prototype.getKeyId = function () {
                                return this.mLoader ? this.mLoader.getKeyId() : ""
                            }, b.prototype.onDataError = function (b) {
                                a.prototype.onDataError.call(this, b), this.mLoader && this.mLoader.getKeyId() == b.keyid && this.mLoader.onDataError(b)
                            }, b.prototype.onKeyIdChange = function (a, b) {
                                this.hls && this.hls.trigger(bc.a.KEYID_CHANGE)
                            }, b.prototype.onAudioNotInSequence = function (b) {
                                a.prototype.onAudioNotInSequence.call(this, b), this.mLoader && this.mLoader.getKeyId() == b.keyid && this.mLoader.onAudioNotInSequence(b)
                            }, b.prototype.loadprogress = function (a, b, c) {
                                var d = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null, e = b.frag;
                                e.loaded = a.loaded, this.hls.trigger(bc.a.FRAG_LOAD_PROGRESS, {
                                    payload: c,
                                    frag: e,
                                    stats: a,
                                    networkDetails: d
                                })
                            }, b.prototype.loaderror = function (a, b) {
                                var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null, d = b.frag;
                                this.hls.trigger(bc.a.ERROR, {
                                    type: ac.b.NETWORK_ERROR,
                                    details: ac.a.FRAG_LOAD_ERROR,
                                    fatal: !0,
                                    frag: d,
                                    response: a,
                                    networkDetails: c
                                })
                            }, b.prototype.onBufferInfo = function (a) {
                                this.mLoader && this.mLoader.setRemainTime(a.len, a.start, a.end, a.cur, a.loadsn)
                            }, b.prototype.onConfigInfo = function (a) {
                                a && (this.p2pConfig = a, this.hls.config.p2pConfig = a)
                            }, b.prototype.getCurrentTime = function () {
                                return this.mLoader && this.mLoader.getCurrentPlayTime ? this.mLoader.getCurrentPlayTime() : 0
                            }, b.prototype.setOpenCDNDownload = function (a) {
                                this.mLoader && this.mLoader.setOpenCDNDownload(a)
                            }, b.prototype.onNotifyQuic = function (a, b, c) {
                                this.hls && this.hls.trigger(bc.a.QUIC_NOTIFY, {is_quic: a, keyid: b, quicver: c})
                            }, b.prototype.onNotifyServerAndClientIP = function (a, b) {
                                this.hls && this.hls.trigger(bc.a.SERVER_AND_CLIENT_IP_NOTIFY, {serverIP: a, clientIP: b})
                            }, b
                        }(Je), hh = gh, ih = function () {
                            function a() {
                                Xb(this, a)
                            }

                            return a.getInstance = function () {
                                return void 0 == a.instance && (a.instance = new a), a.instance
                            }, a.prototype.postLog = function (a) {
                                return !(!cc.b.setdata || !cc.b.postdata) && (cc.b.setdata("errorcode", a), cc.b.postdata(a), !0)
                            }, a
                        }(), jh = ih, kh = function () {
                            function a(a, b) {
                                for (var c = 0; c < b.length; c++) {
                                    var d = b[c];
                                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d)
                                }
                            }

                            return function (b, c, d) {
                                return c && a(b.prototype, c), d && a(b, d), b
                            }
                        }();
                    c(88);
                    var lh = "test.apdcdn.tc.qq.com", mh = function () {
                        function a() {
                            var b = this, c = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            Yb(this, a), location && location.href && (location.href.indexOf("quictest=1") != -1 ? hc.a.quicTest = 1 : hc.a.quicTest = 0), hc.a.hasReportQuic = !1, hc.a.playType = 0, ie.getInstance().m_playspan = 0, ie.getInstance().m_m3u8Span = 0, ie.getInstance().m_hasPostPlaySpan = !1;
                            var d = ie.getInstance().lastFlowID;
                            d && d != c.flowid && (ie.getInstance().report(mc.ReportStep_TaskStop), ie.getInstance().hasReportStop = !0), ie.getInstance().m_hasPostIsQuic = !1, ie.getInstance().m_isquic = !1, ie.getInstance().m_hasPostQuic = !1, ie.getInstance().m_post2QuicServer = !1, ie.getInstance().m_playspanFromOuter = 0, ie.getInstance().m_hasSetQuicInfo = !1, ie.getInstance().resetQuic(), 1 == hc.a.stopP2PValue && (hc.a.stopP2PValue = 0);
                            var e = cd.getInstance();
                            e.initModule(this), a.instance = this, cc.b.log("Hls constructor videoPreLoad:" + c.videoPreLoad), 1 == c.videoPreLoad && (ie.getInstance().m_AdPreLoadNum++, hc.a.adPreLoadTick = performance.now()), this.vkeyChanging = !1, a.destoryObj = {
                                currentTime: -1,
                                keyid: "",
                                remainTime: -1,
                                tick: 0,
                                destroy: !1
                            };
                            var f = a.DefaultConfig;
                            if ((c.liveSyncDurationCount || c.liveMaxLatencyDurationCount) && (c.liveSyncDuration || c.liveMaxLatencyDuration)) throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                            for (var g in f) g in c || (c[g] = f[g]);
                            if (void 0 !== c.liveMaxLatencyDurationCount && c.liveMaxLatencyDurationCount <= c.liveSyncDurationCount) throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                            if (void 0 !== c.liveMaxLatencyDuration && (c.liveMaxLatencyDuration <= c.liveSyncDuration || void 0 === c.liveSyncDuration)) throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                            hc.a.test && (c.widevineLicenseUrl = "http://sec.video.qq.com/p/teststatic.video/wvproxy?vid=m0604ohqx1e&fmt=321013&afmt=326002", c.emeEnabled = !0), this.config = c, void 0 != this.config.flowid && (hc.a.flowid = this.config.flowid), this._autoLevelCapping = -1;
                            var h = this.observer = new Se.a;
                            h.trigger = function (a) {
                                for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
                                h.emit.apply(h, [a, a].concat(c))
                            }, h.off = function (a) {
                                for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++) c[d - 1] = arguments[d];
                                h.removeListener.apply(h, [a].concat(c))
                            }, this.on = h.on.bind(h), this.off = h.off.bind(h), this.trigger = h.trigger.bind(h);
                            var i = this.abrController = new c.abrController(this), j = new c.bufferController(this),
                                k = new c.capLevelController(this), l = new c.fpsController(this), m = new He(this);
                            if (1 != tc.a.UseVodFragmentLoader || this.config.emeEnabled) {
                                var n = new Je(this);
                                this.fragmentLoader = n
                            } else {
                                var n = new hh(this, c.p2pConfig);
                                this.fragmentLoader = n
                            }
                            var o = new Le(this), p = new pf(this), q = this.levelController = new mf(this),
                                r = new Ne(this), s = this.streamController = new jf(this, r), t = [q, s],
                                u = c.audioStreamController;
                            if (u) {
                                var v = new u(this, r);
                                this.audioStreamController = v, t.push(v)
                            } else this.audioStreamController = null;
                            this.networkControllers = t;
                            var w = [m, n, o, i, j, k, l, p, r];
                            if (u = c.audioTrackController) {
                                var x = new u(this);
                                this.audioTrackController = x, w.push(x)
                            }
                            if (u = c.subtitleTrackController) {
                                var y = new u(this);
                                this.subtitleTrackController = y, w.push(y)
                            }
                            if (u = c.emeController) {
                                var z = new u(this);
                                this.emeController = z, w.push(z)
                            }
                            [c.subtitleStreamController, c.timelineController].forEach(function (a) {
                                a && w.push(new a(b))
                            }), this.coreComponents = w, ie.getInstance().lastFlowID = this.config.flowid, window.addEventListener ? window.addEventListener("beforeunload", this.closeWindow) : window.attachEvent && window.attachEvent("beforeunload", this.closeWindow)
                        }

                        return a.isSupported = function () {
                            return Sa()
                        }, a.__stuck = function () {
                            if (a.destoryObj.destroy === !0) {
                                if (a.destoryObj.remainTime >= 20 && Jc.a.GetTick() - a.destoryObj.tick <= 1e4) {
                                    var b = sd.getInstance().getMedia(a.destoryObj.keyid);
                                    if (b) {
                                        var c = b.getTsMD5Str(a.destoryObj.currentTime);
                                        cc.b.log(c)
                                    }
                                }
                            } else a.instance.logTsMd5()
                        }, a.log = function (b) {
                            b.indexOf("playerLoading") != -1 && a.__stuck();
                            var c = "hls error:" + b + "\n";
                            a.instance && a.instance.media && (c += " cur:" + a.instance.media.currentTime + " status:" + a.instance.media.status + " paused:" + a.instance.media.paused + " readyState:" + a.instance.media.readyState, a.instance.media.error && (c += "[" + a.instance.media.error.code + "," + a.instance.media.error.message + "]")), cc.b.log(c)
                        }, a.postLog = function (a) {
                            var b = jh.getInstance();
                            0 == a ? b.postLog(666) : a < 0 ? b.postLog(a + 1e5) : b.postLog(a)
                        }, a.setData = function (b, c) {
                            var d = a.instance;
                            if ("onplay" == b) d && d.streamController && d.streamController.onPlay(c); else if ("keytimeout" == b) d && d.onM3U8Change && d.onM3U8Change(c.keyid, c.m3u8url); else if ("vip" == b) ie.getInstance().setVip(1 == c ? 1 : 0); else if ("videoDropFrameRateChange" == b) {
                                var e = 0;
                                c && c.dropFrameCount && c.totalFrameCount && c.totalFrameCount > 0 && (e = Math.round(c.dropFrameCount / c.totalFrameCount * 100), ie.getInstance().setDropFrameRate(e))
                            } else if ("videoPreLoadFinish" == b) {
                                if (cc.b.log("Hls setData key:" + b + " value:[" + c.keyid + "," + c.adLeaveTime + "]"), d && d.getCurKeyId) {
                                    var f = d.getCurKeyId();
                                    if (c.keyid == f) {
                                        if (d.fragmentLoader && d.fragmentLoader.setOpenCDNDownload) {
                                            if (hc.a.isAdPreLoading) {
                                                var g = Math.floor((performance.now() - hc.a.adPreLoadTick) / 1e3);
                                                g > 0 && (ie.getInstance().m_AdPreLoadSpan += g)
                                            }
                                            d.fragmentLoader.setOpenCDNDownload(c.adLeaveTime)
                                        }
                                    } else cc.b.error("[SetData] keyid is not same " + c.keyid + "," + f)
                                }
                                hc.a.isAdPreLoading = !1, cc.b.log("adpreload span:" + ie.getInstance().m_AdPreLoadSpan + " byte:" + ie.getInstance().m_P2PDownloadBytesAdPreLoad + " num:" + ie.getInstance().m_AdPreLoadNum + " connected:" + ie.getInstance().m_ConnectedNumAdPreLoad + " connecting:" + ie.getInstance().m_ConnectingNumAdPreLoad)
                            } else if ("stopp2p" == b && !tc.a.ForbiddenCloseP2P) {
                                var h = (new Date).getHours();
                                if (tc.a.ForbiddenCloseP2PDuration instanceof Array && 0 != tc.a.ForbiddenCloseP2PDuration.length) for (var i = 0; i < tc.a.ForbiddenCloseP2PDuration.length; i++) if (tc.a.ForbiddenCloseP2PDuration[i].forbidden && tc.a.ForbiddenCloseP2PDuration[i].start <= h && tc.a.ForbiddenCloseP2PDuration[i].end >= h) return;
                                hc.a.stopP2PValue = c, cd.getInstance().stopP2P()
                            }
                        }, a.setPlayerError = function (b) {
                            var c = 0;
                            if (a.instance.streamController && (c = a.instance.streamController.getRemainTime()), a.instance.media) {
                                var d = "cur:" + a.instance.media.currentTime + " status:" + a.instance.media.status + " paused:" + a.instance.media.paused + " readyState:" + a.instance.media.readyState + " paused:" + a.instance.media.paused + " remainTime:" + c;
                                cc.b.log(d)
                            }
                            var e = Math.ceil(Math.random() * this.getReportLogParam());
                            e < 2 && void 0 === this.m_IsReprotLogBefore && (a.postLog(b - 1e5), this.m_IsReprotLogBefore = !0)
                        }, a.getReportLogParam = function () {
                            var a = tc.a.reportLogParm,
                                b = navigator.userAgent.match("Macintosh") || navigator.userAgent.match("Mac OS");
                            return b && !isNaN(tc.a.macReportLogParm) && (a = tc.a.macReportLogParm), a
                        }, a.prototype.startP2P = function () {
                            this.fragmentLoader && this.fragmentLoader.startP2P && this.fragmentLoader.startP2P()
                        }, a.prototype.stopP2P = function () {
                            this.fragmentLoader && this.fragmentLoader.stopP2P && this.fragmentLoader.stopP2P()
                        }, a.prototype.logTsMd5 = function () {
                            var a = 0, b = -1, c = "";
                            if (this.streamController && (a = this.streamController.getRemainTime()), this.media && (b = this.media.currentTime), c = this.getCurKeyId(), a >= 20) {
                                var d = sd.getInstance().getMedia(c);
                                if (d) {
                                    var e = d.getTsMD5Str(b);
                                    cc.b.log(e)
                                }
                            }
                        }, a.prototype.getCurKeyId = function () {
                            return this.fragmentLoader && this.fragmentLoader.getKeyId ? this.fragmentLoader.getKeyId() : null
                        }, kh(a, null, [{
                            key: "version", get: function () {
                                return "0.9.1"
                            }
                        }, {
                            key: "Events", get: function () {
                                return bc.a
                            }
                        }, {
                            key: "ErrorTypes", get: function () {
                                return ac.b
                            }
                        }, {
                            key: "ErrorDetails", get: function () {
                                return ac.a
                            }
                        }, {
                            key: "DefaultConfig", get: function () {
                                return a.defaultConfig ? a.defaultConfig : Jg
                            }, set: function (b) {
                                a.defaultConfig = b
                            }
                        }]), a.prototype.closeWindow = function () {
                            ie.getInstance().hasReportStop || ie.getInstance().report(mc.ReportStep_TaskStop), cd.getInstance().stopP2P(), sd.getInstance().destroy()
                        }, a.prototype.reportMediaError3 = function () {
                            var a = this.getCurKeyId();
                            if (null != a && this.__canMediaError3Report(a)) {
                                var b = 0;
                                this.fragmentLoader && this.fragmentLoader.getCurrentTime && (b = this.fragmentLoader.getCurrentTime());
                                var c = sd.getInstance().getMedia(a);
                                if (c) {
                                    var d = -1, e = c.getTsArray(b);
                                    e && e.length >= 1 && (d = e[0]), sc.getInstance().reportSvrQuality(b, nc.ServerType_PlayerError, 0, d, kc.eErrno_MediaError3, 0, 0, 0, 0, sc.getInstance().browserVer, mc.ReportStep_ServerQuality, a)
                                }
                            }
                        }, a.prototype.__canMediaError3Report = function (b) {
                            void 0 == a.MediaError3Array && (a.MediaError3Array = []);
                            for (var c = a.MediaError3Array, d = Array.isArray(c), e = 0, c = d ? c : c[Symbol.iterator](); ;) {
                                var f;
                                if (d) {
                                    if (e >= c.length) break;
                                    f = c[e++]
                                } else {
                                    if (e = c.next(), e.done) break;
                                    f = e.value
                                }
                                var g = f;
                                if (g == b) return !1
                            }
                            return a.MediaError3Array.length >= 10 && a.MediaError3Array.shift(), a.MediaError3Array.push(b), !0
                        }, a.prototype.destroy = function () {
                            var b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                            if (this.emeController && this.emeController.destroy(), cc.b.log("hls destroy. reason:" + b), this.media) {
                                var c = "cur:" + this.media.currentTime + " status:" + this.media.status + " paused:" + this.media.paused + " readyState:" + this.media.readyState;
                                this.media.error && (3 == this.media.error.code && void 0 == this.media.error.message && this.reportMediaError3(), c += "mediaError:[" + this.media.error.code + "," + this.media.error.message + "]"), cc.b.log(c)
                            }
                            a.destoryObj.destroy = !0, a.destoryObj.tick = Jc.a.GetTick(), this.trigger(bc.a.DESTROYING), this.fragmentLoader && this.fragmentLoader.getKeyId && (a.destoryObj.keyid = this.fragmentLoader.getKeyId()), this.media && (a.destoryObj.currentTime = this.media.currentTime), this.streamController && (a.destoryObj.remainTime = this.streamController.getRemainTime()), a.__stuck(), this.fragmentLoader && (this.fragmentLoader.destroy(), this.fragmentLoader = null), this.detachMedia(), this.coreComponents.concat(this.networkControllers).forEach(function (a) {
                                a.destroy()
                            }), this.url = null, this.observer.removeAllListeners(), this._autoLevelCapping = -1
                        }, a.prototype.on403Error = function () {
                            this.vkeyChanging !== !0 && (this.vkeyChanging = !0, this.trigger(bc.a.CKEY_TIMEOUT))
                        }, a.prototype.onM3U8Change = function (a, b) {
                            this.vkeyChanging = !1, this.fragmentLoader && this.fragmentLoader.onM3U8Change && this.fragmentLoader.onM3U8Change(a, b)
                        }, a.prototype.attachMedia = function (a) {
                            cc.b.log("attachMedia"), this.media = a, this.trigger(bc.a.MEDIA_ATTACHING, {media: a})
                        }, a.prototype.detachMedia = function () {
                            cc.b.log("detachMedia"), this.trigger(bc.a.MEDIA_DETACHING), this.media = null
                        }, a.prototype.loadSource = function (a) {
                            a.m3u8 ? (cc.b.log("loadSource:" + a.url), hc.a.quicTest && (a.url = Jc.a.ReplaceDomain(a.url, lh), a.url = Jc.a.ReplaceDomain1(a.url, lh)), this.url = a.url, this.trigger(bc.a.MANIFEST_LOADING, {
                                url: a.url,
                                m3u8: a.m3u8
                            }), this.trigger(bc.a.LOAD_M3U8_DIRECT_DATA, {
                                url: a.url,
                                m3u8: a.m3u8
                            })) : (hc.a.test && (a.url = "http://sec.video.qq.com/p/teststatic.video/static/fmp4/widevinetest/m0604ohqx1e.master.m3u8"), a = a.url, hc.a.quicTest && (a = Jc.a.ReplaceDomain(a, lh), a = Jc.a.ReplaceDomain1(a, lh)), a = _b.a.buildAbsoluteURL(window.location.href, a, {alwaysNormalize: !0}), cc.b.log("loadSource:" + a), this.url = a, this.trigger(bc.a.MANIFEST_LOADING, {url: a}))
                        }, a.prototype.setInfo = function (a) {
                            this.trigger(bc.a.HLS_CONFIG_INFO, a)
                        }, a.prototype.startLoad = function () {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1;
                            cc.b.log("startLoad(" + a + ")"), this.networkControllers.forEach(function (b) {
                                b.startLoad(a)
                            })
                        }, a.prototype.stopLoad = function () {
                            cc.b.log("stopLoad"), this.networkControllers.forEach(function (a) {
                                a.stopLoad()
                            })
                        }, a.prototype.swapAudioCodec = function () {
                            cc.b.log("swapAudioCodec"), this.streamController.swapAudioCodec()
                        }, a.prototype.recoverMediaError = function () {
                            cc.b.log("recoverMediaError");
                            var a = this.media;
                            this.detachMedia(), this.attachMedia(a)
                        }, a.SetP2PLogConsole = function (a) {
                            a === !0 ? tc.a.logType = "mem|console" : tc.a.logType = "mem"
                        }, a.GetP2PLog = function () {
                            try {
                                var a = cc.b.getMemBuf(), b = new TextDecoder;
                                if (a && b) return b.decode(a)
                            } catch (c) {
                                return null
                            }
                        }, a.IsSupportVideoIn = function () {
                            return !0
                        }, kh(a, [{
                            key: "levels", get: function () {
                                return this.levelController.levels
                            }
                        }, {
                            key: "currentLevel", get: function () {
                                return this.streamController.currentLevel
                            }, set: function (a) {
                                cc.b.log("set currentLevel:" + a), this.loadLevel = a, this.streamController.immediateLevelSwitch()
                            }
                        }, {
                            key: "nextLevel", get: function () {
                                return this.streamController.nextLevel
                            }, set: function (a) {
                                cc.b.log("set nextLevel:" + a), this.levelController.manualLevel = a, this.streamController.nextLevelSwitch()
                            }
                        }, {
                            key: "loadLevel", get: function () {
                                return this.levelController.level
                            }, set: function (a) {
                                cc.b.log("set loadLevel:" + a), this.levelController.manualLevel = a
                            }
                        }, {
                            key: "nextLoadLevel", get: function () {
                                return this.levelController.nextLoadLevel
                            }, set: function (a) {
                                this.levelController.nextLoadLevel = a
                            }
                        }, {
                            key: "firstLevel", get: function () {
                                return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                            }, set: function (a) {
                                cc.b.log("set firstLevel:" + a), this.levelController.firstLevel = a
                            }
                        }, {
                            key: "startLevel", get: function () {
                                return this.levelController.startLevel
                            }, set: function (a) {
                                cc.b.log("set startLevel:" + a);
                                var b = this;
                                a !== -1 && (a = Math.max(a, b.minAutoLevel)), b.levelController.startLevel = a
                            }
                        }, {
                            key: "autoLevelCapping", get: function () {
                                return this._autoLevelCapping
                            }, set: function (a) {
                                cc.b.log("set autoLevelCapping:" + a), this._autoLevelCapping = a
                            }
                        }, {
                            key: "autoLevelEnabled", get: function () {
                                return this.levelController.manualLevel === -1
                            }
                        }, {
                            key: "manualLevel", get: function () {
                                return this.levelController.manualLevel
                            }
                        }, {
                            key: "minAutoLevel", get: function () {
                                for (var a = this, b = a.levels, c = a.config.minAutoBitrate, d = b ? b.length : 0, e = 0; e < d; e++) {
                                    var f = b[e].realBitrate ? Math.max(b[e].realBitrate, b[e].bitrate) : b[e].bitrate;
                                    if (f > c) return e
                                }
                                return 0
                            }
                        }, {
                            key: "maxAutoLevel", get: function () {
                                var a = this, b = a.levels, c = a.autoLevelCapping, d = void 0;
                                return d = c === -1 && b && b.length ? b.length - 1 : c
                            }
                        }, {
                            key: "nextAutoLevel", get: function () {
                                var a = this;
                                return Math.min(Math.max(a.abrController.nextAutoLevel, a.minAutoLevel), a.maxAutoLevel)
                            }, set: function (a) {
                                var b = this;
                                b.abrController.nextAutoLevel = Math.max(b.minAutoLevel, a)
                            }
                        }, {
                            key: "audioTracks", get: function () {
                                var a = this.audioTrackController;
                                return a ? a.audioTracks : []
                            }
                        }, {
                            key: "audioTrack", get: function () {
                                var a = this.audioTrackController;
                                return a ? a.audioTrack : -1
                            }, set: function (a) {
                                var b = this.audioTrackController;
                                b && (b.audioTrack = a)
                            }
                        }, {
                            key: "liveSyncPosition", get: function () {
                                return this.streamController.liveSyncPosition
                            }
                        }, {
                            key: "subtitleTracks", get: function () {
                                var a = this.subtitleTrackController;
                                return a ? a.subtitleTracks : []
                            }
                        }, {
                            key: "subtitleTrack", get: function () {
                                var a = this.subtitleTrackController;
                                return a ? a.subtitleTrack : -1
                            }, set: function (a) {
                                var b = this.subtitleTrackController;
                                b && (b.subtitleTrack = a)
                            }
                        }, {
                            key: "subtitleDisplay", get: function () {
                                var a = this.subtitleTrackController;
                                return !!a && a.subtitleDisplay
                            }, set: function (a) {
                                var b = this.subtitleTrackController;
                                b && (b.subtitleDisplay = a)
                            }
                        }]), a
                    }(), nh = b["default"] = mh
                }, function (a, b, c) {
                    (function (b) {
                        var d = c(16), e = c(23);
                        d.existsSync = d.existsSync || e.existsSync;
                        var f = c(31), g = c(81), h = c(14);
                        a.exports = function (a) {
                            function c(a) {
                                if (a && i) {
                                    var b;
                                    if ("string" == typeof a && (b = i.getEntry(a)), "object" == typeof a && void 0 != a.entryName && void 0 != a.header && (b = i.getEntry(a.entryName)), b) return b
                                }
                                return null
                            }

                            var i = void 0, j = "";
                            if (a && "string" == typeof a) {
                                if (!d.existsSync(a)) throw h.Errors.INVALID_FILENAME;
                                j = a, i = new g(a, h.Constants.FILE)
                            } else i = a && b.isBuffer(a) ? new g(a, h.Constants.BUFFER) : new g(null, h.Constants.NONE);
                            return {
                                readFile: function (a) {
                                    var b = c(a);
                                    return b && b.getData() || null
                                }, readFileAsync: function (a, b) {
                                    var d = c(a);
                                    d ? d.getDataAsync(b) : b(null, "getEntry failed for:" + a)
                                }, readAsText: function (a, b) {
                                    var d = c(a);
                                    if (d) {
                                        var e = d.getData();
                                        if (e && e.length) return e.toString(b || "utf8")
                                    }
                                    return ""
                                }, readAsTextAsync: function (a, b, d) {
                                    var e = c(a);
                                    e ? e.getDataAsync(function (a) {
                                        b(a && a.length ? a.toString(d || "utf8") : "")
                                    }) : b("")
                                }, deleteFile: function (a) {
                                    var b = c(a);
                                    b && i.deleteEntry(b.entryName)
                                }, addZipComment: function (a) {
                                    i.comment = a
                                }, getZipComment: function () {
                                    return i.comment || ""
                                }, addZipEntryComment: function (a, b) {
                                    var d = c(a);
                                    d && (d.comment = b)
                                }, getZipEntryComment: function (a) {
                                    var b = c(a);
                                    return b ? b.comment || "" : ""
                                }, updateFile: function (a, b) {
                                    var d = c(a);
                                    d && d.setData(b)
                                }, addLocalFile: function (a, b, c) {
                                    if (!d.existsSync(a)) throw h.Errors.FILE_NOT_FOUND.replace("%s", a);
                                    b ? (b = b.split("\\").join("/"), "/" != b.charAt(b.length - 1) && (b += "/")) : b = "";
                                    var e = a.split("\\").join("/").split("/").pop();
                                    c ? this.addFile(b + c, d.readFileSync(a), "", 0) : this.addFile(b + e, d.readFileSync(a), "", 0)
                                }, addLocalFolder: function (a, c, f) {
                                    if (void 0 === f ? f = function () {
                                        return !0
                                    } : f instanceof RegExp && (f = function (a) {
                                        return function (b) {
                                            return a.test(b)
                                        }
                                    }(f)), c ? (c = c.split("\\").join("/"), "/" != c.charAt(c.length - 1) && (c += "/")) : c = "", a = a.split("\\").join("/"), a = e.normalize(a), "/" != a.charAt(a.length - 1) && (a += "/"), !d.existsSync(a)) throw h.Errors.FILE_NOT_FOUND.replace("%s", a);
                                    var g = h.findFiles(a), i = this;
                                    g.length && g.forEach(function (e) {
                                        var g = e.split("\\").join("/").replace(new RegExp(a, "i"), "");
                                        f(g) && ("/" !== g.charAt(g.length - 1) ? i.addFile(c + g, d.readFileSync(e), "", 0) : i.addFile(c + g, new b(0), "", 0))
                                    })
                                }, addFile: function (a, b, c, d) {
                                    var e = new f;
                                    e.entryName = a, e.comment = c || "", e.attr = d || 438, e.isDirectory && b.length, e.setData(b), i.setEntry(e)
                                }, getEntries: function () {
                                    return i ? i.entries : []
                                }, getEntry: function (a) {
                                    return c(a)
                                }, extractEntryTo: function (a, b, f, g) {
                                    g = g || !1, f = "undefined" == typeof f || f;
                                    var j = c(a);
                                    if (!j) throw h.Errors.NO_ENTRY;
                                    var k = e.resolve(b, f ? j.entryName : e.basename(j.entryName));
                                    if (j.isDirectory) {
                                        k = e.resolve(k, "..");
                                        var l = i.getEntryChildren(j);
                                        return l.forEach(function (a) {
                                            if (!a.isDirectory) {
                                                var c = a.getData();
                                                if (!c) throw h.Errors.CANT_EXTRACT_FILE;
                                                h.writeFileTo(e.resolve(b, f ? a.entryName : a.entryName.substr(j.entryName.length)), c, g)
                                            }
                                        }), !0
                                    }
                                    var m = j.getData();
                                    if (!m) throw h.Errors.CANT_EXTRACT_FILE;
                                    if (d.existsSync(k) && !g) throw h.Errors.CANT_OVERRIDE;
                                    return h.writeFileTo(k, m, g), !0
                                }, extractAllTo: function (a, b) {
                                    if (b = b || !1, !i) throw h.Errors.NO_ZIP;
                                    i.entries.forEach(function (c) {
                                        if (c.isDirectory) return void h.makeDir(e.resolve(a, c.entryName.toString()));
                                        var d = c.getData();
                                        if (!d) throw h.Errors.CANT_EXTRACT_FILE + "2";
                                        h.writeFileTo(e.resolve(a, c.entryName.toString()), d, b)
                                    })
                                }, extractAllToAsync: function (a, b, c) {
                                    if (b = b || !1, !i) return void c(new Error(h.Errors.NO_ZIP));
                                    var d = i.entries, f = d.length;
                                    d.forEach(function (d) {
                                        if (!(f <= 0)) return d.isDirectory ? (h.makeDir(e.resolve(a, d.entryName.toString())), void (0 == --f && c(void 0))) : void d.getDataAsync(function (g) {
                                            if (!(f <= 0)) return g ? void h.writeFileToAsync(e.resolve(a, d.entryName.toString()), g, b, function (a) {
                                                if (!(f <= 0)) return a ? void (0 == --f && c(void 0)) : (f = 0, void c(new Error("Unable to write")))
                                            }) : (f = 0, void c(new Error(h.Errors.CANT_EXTRACT_FILE + "2")))
                                        })
                                    })
                                }, writeZip: function (a, b) {
                                    if (1 == arguments.length && "function" == typeof a && (b = a, a = ""), !a && j && (a = j), a) {
                                        var c = i.compressToBuffer();
                                        if (c) {
                                            var d = h.writeFileTo(a, c, !0);
                                            "function" == typeof b && b(d ? null : new Error("failed"), "")
                                        }
                                    }
                                }, toBuffer: function (a, b, c, d) {
                                    return this.valueOf = 2, "function" == typeof a ? (i.toAsyncBuffer(a, b, c, d), null) : i.compressToBuffer()
                                }
                            }
                        }
                    }).call(b, c(6).Buffer)
                }, function (a, b, c) {
                    (function (b) {
                        var d = c(16), e = c(23);
                        d.existsSync = d.existsSync || e.existsSync, a.exports = function () {
                            function a(a) {
                                var b = a.split(j)[0];
                                a.split(j).forEach(function (a) {
                                    if (a && ":" != a.substr(-1, 1)) {
                                        b += j + a;
                                        var c;
                                        try {
                                            c = d.statSync(b)
                                        } catch (e) {
                                            d.mkdirSync(b)
                                        }
                                        if (c && c.isFile()) throw i.FILE_IN_THE_WAY.replace("%s", b)
                                    }
                                })
                            }

                            function f(a, b, c) {
                                "boolean" == typeof b && (c = b, b = void 0);
                                var g = [];
                                return d.readdirSync(a).forEach(function (h) {
                                    var i = e.join(a, h);
                                    d.statSync(i).isDirectory() && c && (g = g.concat(f(i, b, c))), b && !b.test(i) || g.push(e.normalize(i) + (d.statSync(i).isDirectory() ? j : ""))
                                }), g
                            }

                            var g = [], h = c(32), i = c(33), j = e.normalize("/");
                            return {
                                makeDir: function (b) {
                                    a(b)
                                }, crc32: function (a) {
                                    var c = new b(4);
                                    if (!g.length) for (var d = 0; d < 256; d++) {
                                        for (var e = d, f = 8; --f >= 0;) 0 != (1 & e) ? e = 3988292384 ^ e >>> 1 : e >>>= 1;
                                        e < 0 && (c.writeInt32LE(e, 0), e = c.readUInt32LE(0)), g[d] = e
                                    }
                                    for (var h = 0, i = 0, j = a.length, k = ~h; --j >= 0;) k = g[255 & (k ^ a[i++])] ^ k >>> 8;
                                    return h = ~k, c.writeInt32LE(4294967295 & h, 0), c.readUInt32LE(0)
                                }, methodToString: function (a) {
                                    switch (a) {
                                        case h.STORED:
                                            return "STORED (" + a + ")";
                                        case h.DEFLATED:
                                            return "DEFLATED (" + a + ")";
                                        default:
                                            return "UNSUPPORTED (" + a + ")"
                                    }
                                }, writeFileTo: function (b, c, f, g) {
                                    if (d.existsSync(b)) {
                                        if (!f) return !1;
                                        var h = d.statSync(b);
                                        if (h.isDirectory()) return !1
                                    }
                                    var i = e.dirname(b);
                                    d.existsSync(i) || a(i);
                                    var j;
                                    try {
                                        j = d.openSync(b, "w", 438)
                                    } catch (k) {
                                        d.chmodSync(b, 438), j = d.openSync(b, "w", 438)
                                    }
                                    return j && (d.writeSync(j, c, 0, c.length, 0), d.closeSync(j)), d.chmodSync(b, g || 438), !0
                                }, writeFileToAsync: function (b, c, f, g, h) {
                                    "function" == typeof g && (h = g, g = void 0), d.exists(b, function (i) {
                                        return i && !f ? h(!1) : void d.stat(b, function (f, j) {
                                            if (i && j.isDirectory()) return h(!1);
                                            var k = e.dirname(b);
                                            d.exists(k, function (e) {
                                                e || a(k), d.open(b, "w", 438, function (a, e) {
                                                    a ? d.chmod(b, 438, function (a) {
                                                        d.open(b, "w", 438, function (a, e) {
                                                            d.write(e, c, 0, c.length, 0, function (a, c, f) {
                                                                d.close(e, function (a) {
                                                                    d.chmod(b, g || 438, function () {
                                                                        h(!0)
                                                                    })
                                                                })
                                                            })
                                                        })
                                                    }) : e ? d.write(e, c, 0, c.length, 0, function (a, c, f) {
                                                        d.close(e, function (a) {
                                                            d.chmod(b, g || 438, function () {
                                                                h(!0)
                                                            })
                                                        })
                                                    }) : d.chmod(b, g || 438, function () {
                                                        h(!0)
                                                    })
                                                })
                                            })
                                        })
                                    })
                                }, findFiles: function (a) {
                                    return f(a, !0)
                                }, getAttributes: function (a) {
                                },
                                setAttributes: function (a) {
                                }, toBuffer: function (a) {
                                    return b.isBuffer(a) ? a : 0 == a.length ? new b(0) : new b(a, "utf8")
                                }, Constants: h, Errors: i
                            }
                        }()
                    }).call(b, c(6).Buffer)
                }, function (a, b, c) {
                    var d = c(16), e = c(23);
                    d.existsSync = d.existsSync || e.existsSync, a.exports = function (a) {
                        function b() {
                            return {directory: !1, readonly: !1, hidden: !1, executable: !1, mtime: 0, atime: 0}
                        }

                        var c = a || "", f = b(), g = null;
                        return c && d.existsSync(c) && (g = d.statSync(c), f.directory = g.isDirectory(), f.mtime = g.mtime, f.atime = g.atime, f.executable = !!(1 & parseInt((g.mode & parseInt("777", 8)).toString(8)[0])), f.readonly = !!(2 & parseInt((g.mode & parseInt("777", 8)).toString(8)[0])), f.hidden = "." === e.basename(c)[0]), {
                            get directory() {
                                return f.directory
                            }, get readOnly() {
                                return f.readonly
                            }, get hidden() {
                                return f.hidden
                            }, get mtime() {
                                return f.mtime
                            }, get atime() {
                                return f.atime
                            }, get executable() {
                                return f.executable
                            }, decodeAttributes: function (a) {
                            }, encodeAttributes: function (a) {
                            }, toString: function () {
                                return '{\n\t"path" : "' + c + ',\n\t"isDirectory" : ' + f.directory + ',\n\t"isReadOnly" : ' + f.readonly + ',\n\t"isHidden" : ' + f.hidden + ',\n\t"isExecutable" : ' + f.executable + ',\n\t"mTime" : ' + f.mtime + '\n\t"aTime" : ' + f.atime + "\n}"
                            }
                        }
                    }
                }, function (a, b, c) {
                    (function (b) {
                        var d = c(14), e = d.Constants;
                        a.exports = function () {
                            function a(a) {
                                var a = new Date(a);
                                i = (a.getFullYear() - 1980 & 127) << 25 | a.getMonth() + 1 << 21 | a.getDay() << 16 | a.getHours() << 11 | a.getMinutes() << 5 | a.getSeconds() >> 1
                            }

                            var c = 10, f = 10, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0,
                                q = 0, r = 0, s = 0, t = {};
                            return a(+new Date), {
                                get made() {
                                    return c
                                }, set made(a) {
                                    c = a
                                }, get version() {
                                    return f
                                }, set version(a) {
                                    f = a
                                }, get flags() {
                                    return g
                                }, set flags(a) {
                                    g = a
                                }, get method() {
                                    return h
                                }, set method(a) {
                                    h = a
                                }, get time() {
                                    return new Date((i >> 25 & 127) + 1980, (i >> 21 & 15) - 1, i >> 16 & 31, i >> 11 & 31, i >> 5 & 63, (31 & i) << 1)
                                }, set time(b) {
                                    a(b)
                                }, get crc() {
                                    return j
                                }, set crc(a) {
                                    j = a
                                }, get compressedSize() {
                                    return k
                                }, set compressedSize(a) {
                                    k = a
                                }, get size() {
                                    return l
                                }, set size(a) {
                                    l = a
                                }, get fileNameLength() {
                                    return m
                                }, set fileNameLength(a) {
                                    m = a
                                }, get extraLength() {
                                    return n
                                }, set extraLength(a) {
                                    n = a
                                }, get commentLength() {
                                    return o
                                }, set commentLength(a) {
                                    o = a
                                }, get diskNumStart() {
                                    return p
                                }, set diskNumStart(a) {
                                    p = a
                                }, get inAttr() {
                                    return q
                                }, set inAttr(a) {
                                    q = a
                                }, get attr() {
                                    return r
                                }, set attr(a) {
                                    r = a
                                }, get offset() {
                                    return s
                                }, set offset(a) {
                                    s = a
                                }, get encripted() {
                                    return 1 == (1 & g)
                                }, get entryHeaderSize() {
                                    return e.CENHDR + m + n + o
                                }, get realDataOffset() {
                                    return s + e.LOCHDR + t.fnameLen + t.extraLen
                                }, get dataHeader() {
                                    return t
                                }, loadDataHeaderFromBinary: function (a) {
                                    var b = a.slice(s, s + e.LOCHDR);
                                    if (b.readUInt32LE(0) != e.LOCSIG) throw d.Errors.INVALID_LOC;
                                    t = {
                                        version: b.readUInt16LE(e.LOCVER),
                                        flags: b.readUInt16LE(e.LOCFLG),
                                        method: b.readUInt16LE(e.LOCHOW),
                                        time: b.readUInt32LE(e.LOCTIM),
                                        crc: b.readUInt32LE(e.LOCCRC),
                                        compressedSize: b.readUInt32LE(e.LOCSIZ),
                                        size: b.readUInt32LE(e.LOCLEN),
                                        fnameLen: b.readUInt16LE(e.LOCNAM),
                                        extraLen: b.readUInt16LE(e.LOCEXT)
                                    }
                                }, loadFromBinary: function (a) {
                                    if (a.length != e.CENHDR || a.readUInt32LE(0) != e.CENSIG) throw d.Errors.INVALID_CEN;
                                    c = a.readUInt16LE(e.CENVEM), f = a.readUInt16LE(e.CENVER), g = a.readUInt16LE(e.CENFLG), h = a.readUInt16LE(e.CENHOW), i = a.readUInt32LE(e.CENTIM), j = a.readUInt32LE(e.CENCRC), k = a.readUInt32LE(e.CENSIZ), l = a.readUInt32LE(e.CENLEN), m = a.readUInt16LE(e.CENNAM), n = a.readUInt16LE(e.CENEXT), o = a.readUInt16LE(e.CENCOM), p = a.readUInt16LE(e.CENDSK), q = a.readUInt16LE(e.CENATT), r = a.readUInt32LE(e.CENATX), s = a.readUInt32LE(e.CENOFF)
                                }, dataHeaderToBinary: function () {
                                    var a = new b(e.LOCHDR);
                                    return a.writeUInt32LE(e.LOCSIG, 0), a.writeUInt16LE(f, e.LOCVER), a.writeUInt16LE(g, e.LOCFLG), a.writeUInt16LE(h, e.LOCHOW), a.writeUInt32LE(i, e.LOCTIM), a.writeUInt32LE(j, e.LOCCRC), a.writeUInt32LE(k, e.LOCSIZ), a.writeUInt32LE(l, e.LOCLEN), a.writeUInt16LE(m, e.LOCNAM), a.writeUInt16LE(n, e.LOCEXT), a
                                }, entryHeaderToBinary: function () {
                                    var a = new b(e.CENHDR + m + n + o);
                                    return a.writeUInt32LE(e.CENSIG, 0), a.writeUInt16LE(c, e.CENVEM), a.writeUInt16LE(f, e.CENVER), a.writeUInt16LE(g, e.CENFLG), a.writeUInt16LE(h, e.CENHOW), a.writeUInt32LE(i, e.CENTIM), a.writeInt32LE(j, e.CENCRC, !0), a.writeUInt32LE(k, e.CENSIZ), a.writeUInt32LE(l, e.CENLEN), a.writeUInt16LE(m, e.CENNAM), a.writeUInt16LE(n, e.CENEXT), a.writeUInt16LE(o, e.CENCOM), a.writeUInt16LE(p, e.CENDSK), a.writeUInt16LE(q, e.CENATT), a.writeUInt32LE(r, e.CENATX), a.writeUInt32LE(s, e.CENOFF), a.fill(0, e.CENHDR), a
                                }, toString: function () {
                                    return '{\n\t"made" : ' + c + ',\n\t"version" : ' + f + ',\n\t"flags" : ' + g + ',\n\t"method" : ' + d.methodToString(h) + ',\n\t"time" : ' + i + ',\n\t"crc" : 0x' + j.toString(16).toUpperCase() + ',\n\t"compressedSize" : ' + k + ' bytes,\n\t"size" : ' + l + ' bytes,\n\t"fileNameLength" : ' + m + ',\n\t"extraLength" : ' + n + ' bytes,\n\t"commentLength" : ' + o + ' bytes,\n\t"diskNumStart" : ' + p + ',\n\t"inAttr" : ' + q + ',\n\t"attr" : ' + r + ',\n\t"offset" : ' + s + ',\n\t"entryHeaderSize" : ' + (e.CENHDR + m + n + o) + " bytes\n}"
                                }
                            }
                        }
                    }).call(b, c(6).Buffer)
                }, function (a, b, c) {
                    (function (b) {
                        var d = c(14), e = d.Constants;
                        a.exports = function () {
                            var a = 0, c = 0, f = 0, g = 0, h = 0;
                            return {
                                get diskEntries() {
                                    return a
                                }, set diskEntries(b) {
                                    a = c = b
                                }, get totalEntries() {
                                    return c
                                }, set totalEntries(b) {
                                    c = a = b
                                }, get size() {
                                    return f
                                }, set size(a) {
                                    f = a
                                }, get offset() {
                                    return g
                                }, set offset(a) {
                                    g = a
                                }, get commentLength() {
                                    return h
                                }, set commentLength(a) {
                                    h = a
                                }, get mainHeaderSize() {
                                    return e.ENDHDR + h
                                }, loadFromBinary: function (b) {
                                    if (b.length != e.ENDHDR || b.readUInt32LE(0) != e.ENDSIG) throw d.Errors.INVALID_END;
                                    a = b.readUInt16LE(e.ENDSUB), c = b.readUInt16LE(e.ENDTOT), f = b.readUInt32LE(e.ENDSIZ), g = b.readUInt32LE(e.ENDOFF), h = b.readUInt16LE(e.ENDCOM)
                                }, toBinary: function () {
                                    var d = new b(e.ENDHDR + h);
                                    return d.writeUInt32LE(e.ENDSIG, 0), d.writeUInt32LE(0, 4), d.writeUInt16LE(a, e.ENDSUB), d.writeUInt16LE(c, e.ENDTOT), d.writeUInt32LE(f, e.ENDSIZ), d.writeUInt32LE(g, e.ENDOFF), d.writeUInt16LE(h, e.ENDCOM), d.fill(" ", e.ENDHDR), d
                                }, toString: function () {
                                    return '{\n\t"diskEntries" : ' + a + ',\n\t"totalEntries" : ' + c + ',\n\t"size" : ' + f + ' bytes,\n\t"offset" : 0x' + g.toString(16).toUpperCase() + ',\n\t"commentLength" : 0x' + h + "\n}"
                                }
                            }
                        }
                    }).call(b, c(6).Buffer)
                }, function (a, b, c) {
                    b.Deflater = c(55), b.Inflater = c(80)
                }, function (a, b, c) {
                    (function (b) {
                        function d(a) {
                            function c(a, c) {
                                da = a, ea = 0, $a(c);
                                var d, e = new Array(1024), f = [], g = 0;
                                for (d = 0; d < 1024; d++) e[d] = 0;
                                for (; (d = qb(e, 0, e.length)) > 0;) {
                                    var h = new b(e.slice(0, d));
                                    f.push(h), g += h.length
                                }
                                if (1 == f.length) return f[0];
                                var i = new b(g), j = 0;
                                for (d = 0; d < f.length; d++) f[d].copy(i, j), j += f[d].length;
                                return i
                            }

                            var d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F,
                                G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, $, _, aa, ba, ca, da, ea,
                                fa = 32768, ga = 0, ha = 1, ia = 2, ja = 6, ka = !0, la = 32768, ma = 64, na = 8192,
                                oa = 2 * fa, pa = 3, qa = 258, ra = 16, sa = 8192, ta = 13, ua = sa, va = 1 << ta,
                                wa = va - 1, xa = fa - 1, ya = 0, za = 4096, Aa = qa + pa + 1, Ba = fa - Aa, Ca = 1,
                                Da = 15, Ea = 7, Fa = 29, Ga = 256, Ha = 256, Ia = Ga + 1 + Fa, Ja = 30, Ka = 19,
                                La = 16, Ma = 17, Na = 18, Oa = 2 * Ia + 1, Pa = parseInt((ta + pa - 1) / pa),
                                Qa = null, Ra = function () {
                                    this.fc = 0, this.dl = 0
                                }, Sa = function () {
                                    this.dyn_tree = null, this.static_tree = null, this.extra_bits = null, this.extra_base = 0, this.elems = 0, this.max_length = 0, this.max_code = 0
                                }, Ta = function (a, b, c, d) {
                                    this.good_length = a, this.max_lazy = b, this.nice_length = c, this.max_chain = d
                                }, Ua = function () {
                                    this.next = null, this.len = 0, this.ptr = new Array(na), this.off = 0
                                },
                                Va = new Array(0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0),
                                Wa = new Array(0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13),
                                Xa = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7),
                                Ya = new Array(16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15),
                                Za = new Array(new Ta(0, 0, 0, 0), new Ta(4, 4, 8, 4), new Ta(4, 5, 16, 8), new Ta(4, 6, 32, 32), new Ta(4, 4, 16, 16), new Ta(8, 16, 32, 32), new Ta(8, 16, 128, 128), new Ta(8, 32, 128, 256), new Ta(32, 128, 258, 1024), new Ta(32, 258, 258, 4096)),
                                $a = function (a) {
                                    var b;
                                    if (a ? a < 1 ? a = 1 : a > 9 && (a = 9) : a = ja, D = a, g = !1, z = !1, null == Qa) {
                                        for (d = e = f = null, Qa = new Array(na), k = new Array(oa), l = new Array(ua), m = new Array(la + ma), n = new Array(1 << ra), G = new Array(Oa), b = 0; b < Oa; b++) G[b] = new Ra;
                                        for (H = new Array(2 * Ja + 1), b = 0; b < 2 * Ja + 1; b++) H[b] = new Ra;
                                        for (I = new Array(Ia + 2), b = 0; b < Ia + 2; b++) I[b] = new Ra;
                                        for (J = new Array(Ja), b = 0; b < Ja; b++) J[b] = new Ra;
                                        for (K = new Array(2 * Ka + 1), b = 0; b < 2 * Ka + 1; b++) K[b] = new Ra;
                                        L = new Sa, M = new Sa, N = new Sa, O = new Array(Da + 1), P = new Array(2 * Ia + 1), S = new Array(2 * Ia + 1), T = new Array(qa - pa + 1), U = new Array(512), V = new Array(Fa), W = new Array(Ja), X = new Array(parseInt(sa / 8))
                                    }
                                }, _a = function (a) {
                                    a.next = d, d = a
                                }, ab = function () {
                                    var a;
                                    return null != d ? (a = d, d = d.next) : a = new Ua, a.next = null, a.len = a.off = 0, a
                                }, bb = function (a) {
                                    return n[fa + a]
                                }, cb = function (a, b) {
                                    return n[fa + a] = b
                                }, db = function (a) {
                                    Qa[i + h++] = a, i + h == na && Jb()
                                }, eb = function (a) {
                                    a &= 65535, i + h < na - 2 ? (Qa[i + h++] = 255 & a, Qa[i + h++] = a >>> 8) : (db(255 & a), db(a >>> 8))
                                }, fb = function () {
                                    r = (r << Pa ^ 255 & k[x + pa - 1]) & wa, s = bb(r), n[x & xa] = s, cb(r, x)
                                }, gb = function (a, b) {
                                    Gb(b[a].fc, b[a].dl)
                                }, hb = function (a) {
                                    return 255 & (a < 256 ? U[a] : U[256 + (a >> 7)])
                                }, ib = function (a, b, c) {
                                    return a[b].fc < a[c].fc || a[b].fc == a[c].fc && S[b] <= S[c]
                                }, jb = function (a, b, c) {
                                    var d;
                                    for (d = 0; d < c && ea < da.length; d++) a[b + d] = 255 & da[ea++];
                                    return d
                                }, kb = function () {
                                    var a;
                                    for (a = 0; a < va; a++) n[fa + a] = 0;
                                    if (C = Za[D].max_lazy, E = Za[D].good_length, ka || (F = Za[D].nice_length), B = Za[D].max_chain, x = 0, q = 0, A = jb(k, 0, 2 * fa), A <= 0) return z = !0, void (A = 0);
                                    for (z = !1; A < Aa && !z;) mb();
                                    for (r = 0, a = 0; a < pa - 1; a++) r = (r << Pa ^ 255 & k[a]) & wa
                                }, lb = function (a) {
                                    var b, c, d = B, e = x, f = w, g = x > Ba ? x - Ba : ya, h = x + qa, i = k[e + f - 1],
                                        j = k[e + f];
                                    w >= E && (d >>= 2);
                                    do if (b = a, k[b + f] == j && k[b + f - 1] == i && k[b] == k[e] && k[++b] == k[e + 1]) {
                                        e += 2, b++;
                                        do ; while (k[++e] == k[++b] && k[++e] == k[++b] && k[++e] == k[++b] && k[++e] == k[++b] && k[++e] == k[++b] && k[++e] == k[++b] && k[++e] == k[++b] && k[++e] == k[++b] && e < h);
                                        if (c = qa - (h - e), e = h - qa, c > f) {
                                            if (y = a, f = c, ka) {
                                                if (c >= qa) break
                                            } else if (c >= F) break;
                                            i = k[e + f - 1], j = k[e + f]
                                        }
                                    } while ((a = n[a & xa]) > g && 0 != --d);
                                    return f
                                }, mb = function () {
                                    var a, b, c = oa - A - x;
                                    if (c == -1) c--; else if (x >= fa + Ba) {
                                        for (a = 0; a < fa; a++) k[a] = k[a + fa];
                                        for (y -= fa, x -= fa, q -= fa, a = 0; a < va; a++) b = bb(a), cb(a, b >= fa ? b - fa : ya);
                                        for (a = 0; a < fa; a++) b = n[a], n[a] = b >= fa ? b - fa : ya;
                                        c += fa
                                    }
                                    z || (a = jb(k, x + A, c), a <= 0 ? z = !0 : A += a)
                                }, nb = function () {
                                    for (; 0 != A && null == e;) {
                                        var a;
                                        if (fb(), s != ya && x - s <= Ba && (v = lb(s), v > A && (v = A)), v >= pa) if (a = Db(x - y, v - pa), A -= v, v <= C) {
                                            v--;
                                            do x++, fb(); while (0 != --v);
                                            x++
                                        } else x += v, v = 0, r = 255 & k[x], r = (r << Pa ^ 255 & k[x + 1]) & wa; else a = Db(0, 255 & k[x]), A--, x++;
                                        for (a && (Cb(0), q = x); A < Aa && !z;) mb()
                                    }
                                }, ob = function () {
                                    for (; 0 != A && null == e;) {
                                        if (fb(), w = v, t = y, v = pa - 1, s != ya && w < C && x - s <= Ba && (v = lb(s), v > A && (v = A), v == pa && x - y > za && v--), w >= pa && v <= w) {
                                            var a;
                                            a = Db(x - 1 - t, w - pa), A -= w - 1, w -= 2;
                                            do x++, fb(); while (0 != --w);
                                            u = 0, v = pa - 1, x++, a && (Cb(0), q = x)
                                        } else 0 != u ? (Db(0, 255 & k[x - 1]) && (Cb(0), q = x), x++, A--) : (u = 1, x++, A--);
                                        for (; A < Aa && !z;) mb()
                                    }
                                }, pb = function () {
                                    z || (o = 0, p = 0, sb(), kb(), e = null, h = 0, i = 0, u = 0, D <= 3 ? (w = pa - 1, v = 0) : (v = pa - 1, u = 0, u = 0), j = !1)
                                }, qb = function (a, b, c) {
                                    var d;
                                    return g || (pb(), g = !0, 0 != A) ? (d = rb(a, b, c)) == c ? c : j ? d : (D <= 3 ? nb() : ob(), 0 == A && (0 != u && Db(0, 255 & k[x - 1]), Cb(1), j = !0), d + rb(a, d + b, c - d)) : (j = !0, 0)
                                }, rb = function (a, b, c) {
                                    var d, f, g;
                                    for (d = 0; null != e && d < c;) {
                                        for (f = c - d, f > e.len && (f = e.len), g = 0; g < f; g++) a[b + d + g] = e.ptr[e.off + g];
                                        if (e.off += f, e.len -= f, d += f, 0 == e.len) {
                                            var j;
                                            j = e, e = e.next, _a(j)
                                        }
                                    }
                                    if (d == c) return d;
                                    if (i < h) {
                                        for (f = c - d, f > h - i && (f = h - i), g = 0; g < f; g++) a[b + d + g] = Qa[i + g];
                                        i += f, d += f, h == i && (h = i = 0)
                                    }
                                    return d
                                }, sb = function () {
                                    var a, b, c, d, e;
                                    if (0 == J[0].dl) {
                                        for (L.dyn_tree = G, L.static_tree = I, L.extra_bits = Va, L.extra_base = Ga + 1, L.elems = Ia, L.max_length = Da, L.max_code = 0, M.dyn_tree = H, M.static_tree = J, M.extra_bits = Wa, M.extra_base = 0, M.elems = Ja, M.max_length = Da, M.max_code = 0, N.dyn_tree = K, N.static_tree = null, N.extra_bits = Xa, N.extra_base = 0, N.elems = Ka, N.max_length = Ea, N.max_code = 0, c = 0, d = 0; d < Fa - 1; d++) for (V[d] = c, a = 0; a < 1 << Va[d]; a++) T[c++] = d;
                                        for (T[c - 1] = d, e = 0, d = 0; d < 16; d++) for (W[d] = e, a = 0; a < 1 << Wa[d]; a++) U[e++] = d;
                                        for (e >>= 7; d < Ja; d++) for (W[d] = e << 7, a = 0; a < 1 << Wa[d] - 7; a++) U[256 + e++] = d;
                                        for (b = 0; b <= Da; b++) O[b] = 0;
                                        for (a = 0; a <= 143;) I[a++].dl = 8, O[8]++;
                                        for (; a <= 255;) I[a++].dl = 9, O[9]++;
                                        for (; a <= 279;) I[a++].dl = 7, O[7]++;
                                        for (; a <= 287;) I[a++].dl = 8, O[8]++;
                                        for (wb(I, Ia + 1), a = 0; a < Ja; a++) J[a].dl = 5, J[a].fc = Hb(a, 5);
                                        tb()
                                    }
                                }, tb = function () {
                                    var a;
                                    for (a = 0; a < Ia; a++) G[a].fc = 0;
                                    for (a = 0; a < Ja; a++) H[a].fc = 0;
                                    for (a = 0; a < Ka; a++) K[a].fc = 0;
                                    G[Ha].fc = 1, ba = ca = 0, Y = Z = $ = 0, _ = 0, aa = 1
                                }, ub = function (a, b) {
                                    for (var c = P[b], d = b << 1; d <= Q && (d < Q && ib(a, P[d + 1], P[d]) && d++, !ib(a, c, P[d]));) P[b] = P[d], b = d, d <<= 1;
                                    P[b] = c
                                }, vb = function (a) {
                                    var b, c, d, e, f, g, h = a.dyn_tree, i = a.extra_bits, j = a.extra_base,
                                        k = a.max_code, l = a.max_length, m = a.static_tree, n = 0;
                                    for (e = 0; e <= Da; e++) O[e] = 0;
                                    for (h[P[R]].dl = 0, b = R + 1; b < Oa; b++) c = P[b], e = h[h[c].dl].dl + 1, e > l && (e = l, n++), h[c].dl = e, c > k || (O[e]++, f = 0, c >= j && (f = i[c - j]), g = h[c].fc, ba += g * (e + f), null != m && (ca += g * (m[c].dl + f)));
                                    if (0 != n) {
                                        do {
                                            for (e = l - 1; 0 == O[e];) e--;
                                            O[e]--, O[e + 1] += 2, O[l]--, n -= 2
                                        } while (n > 0);
                                        for (e = l; 0 != e; e--) for (c = O[e]; 0 != c;) d = P[--b], d > k || (h[d].dl != e && (ba += (e - h[d].dl) * h[d].fc, h[d].fc = e), c--)
                                    }
                                }, wb = function (a, b) {
                                    var c, d, e = new Array(Da + 1), f = 0;
                                    for (c = 1; c <= Da; c++) f = f + O[c - 1] << 1, e[c] = f;
                                    for (d = 0; d <= b; d++) {
                                        var g = a[d].dl;
                                        0 != g && (a[d].fc = Hb(e[g]++, g))
                                    }
                                }, xb = function (a) {
                                    var b, c, d = a.dyn_tree, e = a.static_tree, f = a.elems, g = -1, h = f;
                                    for (Q = 0, R = Oa, b = 0; b < f; b++) 0 != d[b].fc ? (P[++Q] = g = b, S[b] = 0) : d[b].dl = 0;
                                    for (; Q < 2;) {
                                        var i = P[++Q] = g < 2 ? ++g : 0;
                                        d[i].fc = 1, S[i] = 0, ba--, null != e && (ca -= e[i].dl)
                                    }
                                    for (a.max_code = g, b = Q >> 1; b >= 1; b--) ub(d, b);
                                    do b = P[Ca], P[Ca] = P[Q--], ub(d, Ca), c = P[Ca], P[--R] = b, P[--R] = c, d[h].fc = d[b].fc + d[c].fc, S[b] > S[c] + 1 ? S[h] = S[b] : S[h] = S[c] + 1, d[b].dl = d[c].dl = h, P[Ca] = h++, ub(d, Ca); while (Q >= 2);
                                    P[--R] = P[Ca], vb(a), wb(d, g)
                                }, yb = function (a, b) {
                                    var c, d, e = -1, f = a[0].dl, g = 0, h = 7, i = 4;
                                    for (0 == f && (h = 138, i = 3), a[b + 1].dl = 65535, c = 0; c <= b; c++) d = f, f = a[c + 1].dl, ++g < h && d == f || (g < i ? K[d].fc += g : 0 != d ? (d != e && K[d].fc++, K[La].fc++) : g <= 10 ? K[Ma].fc++ : K[Na].fc++, g = 0, e = d, 0 == f ? (h = 138, i = 3) : d == f ? (h = 6, i = 3) : (h = 7, i = 4))
                                }, zb = function (a, b) {
                                    var c, d, e = -1, f = a[0].dl, g = 0, h = 7, i = 4;
                                    for (0 == f && (h = 138, i = 3), c = 0; c <= b; c++) if (d = f, f = a[c + 1].dl, !(++g < h && d == f)) {
                                        if (g < i) {
                                            do gb(d, K); while (0 != --g)
                                        } else 0 != d ? (d != e && (gb(d, K), g--), gb(La, K), Gb(g - 3, 2)) : g <= 10 ? (gb(Ma, K), Gb(g - 3, 3)) : (gb(Na, K), Gb(g - 11, 7));
                                        g = 0, e = d, 0 == f ? (h = 138, i = 3) : d == f ? (h = 6, i = 3) : (h = 7, i = 4)
                                    }
                                }, Ab = function () {
                                    var a;
                                    for (yb(G, L.max_code), yb(H, M.max_code), xb(N), a = Ka - 1; a >= 3 && 0 == K[Ya[a]].dl; a--) ;
                                    return ba += 3 * (a + 1) + 5 + 5 + 4, a
                                }, Bb = function (a, b, c) {
                                    var d;
                                    for (Gb(a - 257, 5), Gb(b - 1, 5), Gb(c - 4, 4), d = 0; d < c; d++) Gb(K[Ya[d]].dl, 3);
                                    zb(G, a - 1), zb(H, b - 1)
                                }, Cb = function (a) {
                                    var b, c, d, e;
                                    if (e = x - q, X[$] = _, xb(L), xb(M), d = Ab(), b = ba + 3 + 7 >> 3, c = ca + 3 + 7 >> 3, c <= b && (b = c), e + 4 <= b && q >= 0) {
                                        var f;
                                        for (Gb((ga << 1) + a, 3), Ib(), eb(e), eb(~e), f = 0; f < e; f++) db(k[q + f])
                                    } else c == b ? (Gb((ha << 1) + a, 3), Eb(I, J)) : (Gb((ia << 1) + a, 3), Bb(L.max_code + 1, M.max_code + 1, d + 1), Eb(G, H));
                                    tb(), 0 != a && Ib()
                                }, Db = function (a, b) {
                                    if (m[Y++] = b, 0 == a ? G[b].fc++ : (a--, G[T[b] + Ga + 1].fc++, H[hb(a)].fc++, l[Z++] = a, _ |= aa), aa <<= 1, 0 == (7 & Y) && (X[$++] = _, _ = 0, aa = 1), D > 2 && 0 == (4095 & Y)) {
                                        var c, d = 8 * Y, e = x - q;
                                        for (c = 0; c < Ja; c++) d += H[c].fc * (5 + Wa[c]);
                                        if (d >>= 3, Z < parseInt(Y / 2) && d < parseInt(e / 2)) return !0
                                    }
                                    return Y == sa - 1 || Z == ua
                                }, Eb = function (a, b) {
                                    var c, d, e, f, g = 0, h = 0, i = 0, j = 0;
                                    if (0 != Y) do 0 == (7 & g) && (j = X[i++]), d = 255 & m[g++], 0 == (1 & j) ? gb(d, a) : (e = T[d], gb(e + Ga + 1, a), f = Va[e], 0 != f && (d -= V[e], Gb(d, f)), c = l[h++], e = hb(c), gb(e, b), f = Wa[e], 0 != f && (c -= W[e], Gb(c, f))), j >>= 1; while (g < Y);
                                    gb(Ha, a)
                                }, Fb = 16, Gb = function (a, b) {
                                    p > Fb - b ? (o |= a << p, eb(o), o = a >> Fb - p, p += b - Fb) : (o |= a << p, p += b)
                                }, Hb = function (a, b) {
                                    var c = 0;
                                    do c |= 1 & a, a >>= 1, c <<= 1; while (--b > 0);
                                    return c >> 1
                                }, Ib = function () {
                                    p > 8 ? eb(o) : p > 0 && db(o), o = 0, p = 0
                                }, Jb = function () {
                                    if (0 != h) {
                                        var a, b;
                                        for (a = ab(), null == e ? e = f = a : f = f.next = a, a.len = h - i, b = 0; b < a.len; b++) a.ptr[b] = Qa[i + b];
                                        h = i = 0
                                    }
                                };
                            return {
                                deflate: function () {
                                    return c(a, 8)
                                }
                            }
                        }

                        a.exports = function (a) {
                            var e = c(35);
                            return {
                                deflate: function () {
                                    return new d(a).deflate()
                                }, deflateAsync: function (c) {
                                    var d = e.createDeflateRaw({chunkSize: 1024 * (parseInt(a.length / 1024) + 1)}),
                                        f = [], g = 0;
                                    d.on("data", function (a) {
                                        f.push(a), g += a.length
                                    }), d.on("end", function () {
                                        var a = new b(g), d = 0;
                                        a.fill(0);
                                        for (var e = 0; e < f.length; e++) {
                                            var h = f[e];
                                            h.copy(a, d), d += h.length
                                        }
                                        c && c(a)
                                    }), d.end(a)
                                }
                            }
                        }
                    }).call(b, c(6).Buffer)
                }, function (a, b, c) {
                    function d() {
                        e.call(this)
                    }

                    a.exports = d;
                    var e = c(10).EventEmitter, f = c(11);
                    f(d, e), d.Readable = c(24), d.Writable = c(64), d.Duplex = c(65), d.Transform = c(66), d.PassThrough = c(67), d.Stream = d, d.prototype.pipe = function (a, b) {
                        function c(b) {
                            a.writable && !1 === a.write(b) && j.pause && j.pause()
                        }

                        function d() {
                            j.readable && j.resume && j.resume()
                        }

                        function f() {
                            k || (k = !0, a.end())
                        }

                        function g() {
                            k || (k = !0, "function" == typeof a.destroy && a.destroy())
                        }

                        function h(a) {
                            if (i(), 0 === e.listenerCount(this, "error")) throw a
                        }

                        function i() {
                            j.removeListener("data", c), a.removeListener("drain", d), j.removeListener("end", f), j.removeListener("close", g), j.removeListener("error", h), a.removeListener("error", h), j.removeListener("end", i), j.removeListener("close", i), a.removeListener("close", i)
                        }

                        var j = this;
                        j.on("data", c), a.on("drain", d), a._isStdio || b && b.end === !1 || (j.on("end", f), j.on("close", g));
                        var k = !1;
                        return j.on("error", h), a.on("error", h), j.on("end", i), j.on("close", i), a.on("close", i), a.emit("pipe", j), a
                    }
                }, function (a, b) {
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function")
                    }

                    function e(a, b, c) {
                        a.copy(b, c)
                    }

                    var f = c(18).Buffer, g = c(59);
                    a.exports = function () {
                        function a() {
                            d(this, a), this.head = null, this.tail = null, this.length = 0
                        }

                        return a.prototype.push = function (a) {
                            var b = {data: a, next: null};
                            this.length > 0 ? this.tail.next = b : this.head = b, this.tail = b, ++this.length
                        }, a.prototype.unshift = function (a) {
                            var b = {data: a, next: this.head};
                            0 === this.length && (this.tail = b), this.head = b, ++this.length
                        }, a.prototype.shift = function () {
                            if (0 !== this.length) {
                                var a = this.head.data;
                                return 1 === this.length ? this.head = this.tail = null : this.head = this.head.next, --this.length, a
                            }
                        }, a.prototype.clear = function () {
                            this.head = this.tail = null, this.length = 0
                        }, a.prototype.join = function (a) {
                            if (0 === this.length) return "";
                            for (var b = this.head, c = "" + b.data; b = b.next;) c += a + b.data;
                            return c
                        }, a.prototype.concat = function (a) {
                            if (0 === this.length) return f.alloc(0);
                            if (1 === this.length) return this.head.data;
                            for (var b = f.allocUnsafe(a >>> 0), c = this.head, d = 0; c;) e(c.data, b, d), d += c.data.length, c = c.next;
                            return b
                        }, a
                    }(), g && g.inspect && g.inspect.custom && (a.exports.prototype[g.inspect.custom] = function () {
                        var a = g.inspect({length: this.length});
                        return this.constructor.name + " " + a
                    })
                }, function (a, b) {
                }, function (a, b, c) {
                    (function (a) {
                        function d(a, b) {
                            this._id = a, this._clearFn = b
                        }

                        var e = "undefined" != typeof a && a || "undefined" != typeof self && self || window,
                            f = Function.prototype.apply;
                        b.setTimeout = function () {
                            return new d(f.call(setTimeout, e, arguments), clearTimeout)
                        }, b.setInterval = function () {
                            return new d(f.call(setInterval, e, arguments), clearInterval)
                        }, b.clearTimeout = b.clearInterval = function (a) {
                            a && a.close()
                        }, d.prototype.unref = d.prototype.ref = function () {
                        }, d.prototype.close = function () {
                            this._clearFn.call(e, this._id)
                        }, b.enroll = function (a, b) {
                            clearTimeout(a._idleTimeoutId), a._idleTimeout = b
                        }, b.unenroll = function (a) {
                            clearTimeout(a._idleTimeoutId), a._idleTimeout = -1
                        }, b._unrefActive = b.active = function (a) {
                            clearTimeout(a._idleTimeoutId);
                            var b = a._idleTimeout;
                            b >= 0 && (a._idleTimeoutId = setTimeout(function () {
                                a._onTimeout && a._onTimeout()
                            }, b))
                        }, c(61), b.setImmediate = "undefined" != typeof self && self.setImmediate || "undefined" != typeof a && a.setImmediate || this && this.setImmediate, b.clearImmediate = "undefined" != typeof self && self.clearImmediate || "undefined" != typeof a && a.clearImmediate || this && this.clearImmediate
                    }).call(b, c(7))
                }, function (a, b, c) {
                    (function (a, b) {
                        !function (a, c) {
                            "use strict";

                            function d(a) {
                                "function" != typeof a && (a = new Function("" + a));
                                for (var b = new Array(arguments.length - 1), c = 0; c < b.length; c++) b[c] = arguments[c + 1];
                                var d = {callback: a, args: b};
                                return p[o] = d, n(o), o++
                            }

                            function e(a) {
                                delete p[a]
                            }

                            function f(a) {
                                var b = a.callback, d = a.args;
                                switch (d.length) {
                                    case 0:
                                        b();
                                        break;
                                    case 1:
                                        b(d[0]);
                                        break;
                                    case 2:
                                        b(d[0], d[1]);
                                        break;
                                    case 3:
                                        b(d[0], d[1], d[2]);
                                        break;
                                    default:
                                        b.apply(c, d)
                                }
                            }

                            function g(a) {
                                if (q) setTimeout(g, 0, a); else {
                                    var b = p[a];
                                    if (b) {
                                        q = !0;
                                        try {
                                            f(b)
                                        } finally {
                                            e(a), q = !1
                                        }
                                    }
                                }
                            }

                            function h() {
                                n = function (a) {
                                    b.nextTick(function () {
                                        g(a)
                                    })
                                }
                            }

                            function i() {
                                if (a.postMessage && !a.importScripts) {
                                    var b = !0, c = a.onmessage;
                                    return a.onmessage = function () {
                                        b = !1
                                    }, a.postMessage("", "*"), a.onmessage = c, b
                                }
                            }

                            function j() {
                                var b = "setImmediate$" + Math.random() + "$", c = function (c) {
                                    c.source === a && "string" == typeof c.data && 0 === c.data.indexOf(b) && g(+c.data.slice(b.length))
                                };
                                a.addEventListener ? a.addEventListener("message", c, !1) : a.attachEvent("onmessage", c), n = function (c) {
                                    a.postMessage(b + c, "*")
                                }
                            }

                            function k() {
                                var a = new MessageChannel;
                                a.port1.onmessage = function (a) {
                                    var b = a.data;
                                    g(b)
                                }, n = function (b) {
                                    a.port2.postMessage(b)
                                }
                            }

                            function l() {
                                var a = r.documentElement;
                                n = function (b) {
                                    var c = r.createElement("script");
                                    c.onreadystatechange = function () {
                                        g(b), c.onreadystatechange = null, a.removeChild(c), c = null
                                    }, a.appendChild(c)
                                }
                            }

                            function m() {
                                n = function (a) {
                                    setTimeout(g, 0, a)
                                }
                            }

                            if (!a.setImmediate) {
                                var n, o = 1, p = {}, q = !1, r = a.document,
                                    s = Object.getPrototypeOf && Object.getPrototypeOf(a);
                                s = s && s.setTimeout ? s : a, "[object process]" === {}.toString.call(a.process) ? h() : i() ? j() : a.MessageChannel ? k() : r && "onreadystatechange" in r.createElement("script") ? l() : m(), s.setImmediate = d, s.clearImmediate = e
                            }
                        }("undefined" == typeof self ? "undefined" == typeof a ? this : a : self)
                    }).call(b, c(7), c(8))
                }, function (a, b, c) {
                    (function (b) {
                        function c(a, b) {
                            function c() {
                                if (!e) {
                                    if (d("throwDeprecation")) throw new Error(b);
                                    d("traceDeprecation"), e = !0
                                }
                                return a.apply(this, arguments)
                            }

                            if (d("noDeprecation")) return a;
                            var e = !1;
                            return c
                        }

                        function d(a) {
                            try {
                                if (!b.localStorage) return !1
                            } catch (c) {
                                return !1
                            }
                            var d = b.localStorage[a];
                            return null != d && "true" === String(d).toLowerCase()
                        }

                        a.exports = c
                    }).call(b, c(7))
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        return this instanceof d ? void e.call(this, a) : new d(a)
                    }

                    a.exports = d;
                    var e = c(40), f = Object.create(c(15));
                    f.inherits = c(11), f.inherits(d, e), d.prototype._transform = function (a, b, c) {
                        c(null, a)
                    }
                }, function (a, b, c) {
                    a.exports = c(25)
                }, function (a, b, c) {
                    a.exports = c(9)
                }, function (a, b, c) {
                    a.exports = c(24).Transform
                }, function (a, b, c) {
                    a.exports = c(24).PassThrough
                }, function (a, b, c) {
                    "use strict";
                    (function (a, d) {
                        function e(a) {
                            if ("number" != typeof a || a < b.DEFLATE || a > b.UNZIP) throw new TypeError("Bad argument");
                            this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = !1, this.level = 0, this.memLevel = 0, this.mode = a, this.strategy = 0, this.windowBits = 0, this.write_in_progress = !1, this.pending_close = !1, this.gzip_id_bytes_read = 0
                        }

                        var f = c(41), g = c(72), h = c(73), i = c(76), j = c(79);
                        for (var k in j) b[k] = j[k];
                        b.NONE = 0, b.DEFLATE = 1, b.INFLATE = 2, b.GZIP = 3, b.GUNZIP = 4, b.DEFLATERAW = 5, b.INFLATERAW = 6, b.UNZIP = 7;
                        var l = 31, m = 139;
                        e.prototype.close = function () {
                            return this.write_in_progress ? void (this.pending_close = !0) : (this.pending_close = !1, f(this.init_done, "close before init"), f(this.mode <= b.UNZIP), this.mode === b.DEFLATE || this.mode === b.GZIP || this.mode === b.DEFLATERAW ? h.deflateEnd(this.strm) : this.mode !== b.INFLATE && this.mode !== b.GUNZIP && this.mode !== b.INFLATERAW && this.mode !== b.UNZIP || i.inflateEnd(this.strm), this.mode = b.NONE, void (this.dictionary = null))
                        }, e.prototype.write = function (a, b, c, d, e, f, g) {
                            return this._write(!0, a, b, c, d, e, f, g)
                        }, e.prototype.writeSync = function (a, b, c, d, e, f, g) {
                            return this._write(!1, a, b, c, d, e, f, g)
                        }, e.prototype._write = function (c, e, g, h, i, j, k, l) {
                            if (f.equal(arguments.length, 8), f(this.init_done, "write before init"), f(this.mode !== b.NONE, "already finalized"), f.equal(!1, this.write_in_progress, "write already in progress"), f.equal(!1, this.pending_close, "close is pending"), this.write_in_progress = !0, f.equal(!1, void 0 === e, "must provide flush value"), this.write_in_progress = !0, e !== b.Z_NO_FLUSH && e !== b.Z_PARTIAL_FLUSH && e !== b.Z_SYNC_FLUSH && e !== b.Z_FULL_FLUSH && e !== b.Z_FINISH && e !== b.Z_BLOCK) throw new Error("Invalid flush value");
                            if (null == g && (g = a.alloc(0), i = 0, h = 0), this.strm.avail_in = i, this.strm.input = g, this.strm.next_in = h, this.strm.avail_out = l, this.strm.output = j, this.strm.next_out = k, this.flush = e, c) {
                                var m = this;
                                return d.nextTick(function () {
                                    m._process(), m._after()
                                }), this
                            }
                            if (this._process(), this._checkError()) return this._afterSync()
                        }, e.prototype._afterSync = function () {
                            var a = this.strm.avail_out, b = this.strm.avail_in;
                            return this.write_in_progress = !1, [b, a]
                        }, e.prototype._process = function () {
                            var a = null;
                            switch (this.mode) {
                                case b.DEFLATE:
                                case b.GZIP:
                                case b.DEFLATERAW:
                                    this.err = h.deflate(this.strm, this.flush);
                                    break;
                                case b.UNZIP:
                                    switch (this.strm.avail_in > 0 && (a = this.strm.next_in), this.gzip_id_bytes_read) {
                                        case 0:
                                            if (null === a) break;
                                            if (this.strm.input[a] !== l) {
                                                this.mode = b.INFLATE;
                                                break
                                            }
                                            if (this.gzip_id_bytes_read = 1, a++, 1 === this.strm.avail_in) break;
                                        case 1:
                                            if (null === a) break;
                                            this.strm.input[a] === m ? (this.gzip_id_bytes_read = 2, this.mode = b.GUNZIP) : this.mode = b.INFLATE;
                                            break;
                                        default:
                                            throw new Error("invalid number of gzip magic number bytes read")
                                    }
                                case b.INFLATE:
                                case b.GUNZIP:
                                case b.INFLATERAW:
                                    for (this.err = i.inflate(this.strm, this.flush), this.err === b.Z_NEED_DICT && this.dictionary && (this.err = i.inflateSetDictionary(this.strm, this.dictionary), this.err === b.Z_OK ? this.err = i.inflate(this.strm, this.flush) : this.err === b.Z_DATA_ERROR && (this.err = b.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === b.GUNZIP && this.err === b.Z_STREAM_END && 0 !== this.strm.next_in[0];) this.reset(), this.err = i.inflate(this.strm, this.flush);
                                    break;
                                default:
                                    throw new Error("Unknown mode " + this.mode)
                            }
                        }, e.prototype._checkError = function () {
                            switch (this.err) {
                                case b.Z_OK:
                                case b.Z_BUF_ERROR:
                                    if (0 !== this.strm.avail_out && this.flush === b.Z_FINISH) return this._error("unexpected end of file"), !1;
                                    break;
                                case b.Z_STREAM_END:
                                    break;
                                case b.Z_NEED_DICT:
                                    return null == this.dictionary ? this._error("Missing dictionary") : this._error("Bad dictionary"), !1;
                                default:
                                    return this._error("Zlib error"), !1
                            }
                            return !0
                        }, e.prototype._after = function () {
                            if (this._checkError()) {
                                var a = this.strm.avail_out, b = this.strm.avail_in;
                                this.write_in_progress = !1, this.callback(b, a), this.pending_close && this.close()
                            }
                        }, e.prototype._error = function (a) {
                            this.strm.msg && (a = this.strm.msg), this.onerror(a, this.err), this.write_in_progress = !1, this.pending_close && this.close()
                        }, e.prototype.init = function (a, c, d, e, g) {
                            f(4 === arguments.length || 5 === arguments.length, "init(windowBits, level, memLevel, strategy, [dictionary])"), f(a >= 8 && a <= 15, "invalid windowBits"), f(c >= -1 && c <= 9, "invalid compression level"), f(d >= 1 && d <= 9, "invalid memlevel"), f(e === b.Z_FILTERED || e === b.Z_HUFFMAN_ONLY || e === b.Z_RLE || e === b.Z_FIXED || e === b.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(c, a, d, e, g), this._setDictionary()
                        }, e.prototype.params = function () {
                            throw new Error("deflateParams Not supported")
                        }, e.prototype.reset = function () {
                            this._reset(), this._setDictionary()
                        }, e.prototype._init = function (a, c, d, e, f) {
                            switch (this.level = a, this.windowBits = c, this.memLevel = d, this.strategy = e, this.flush = b.Z_NO_FLUSH, this.err = b.Z_OK, this.mode !== b.GZIP && this.mode !== b.GUNZIP || (this.windowBits += 16), this.mode === b.UNZIP && (this.windowBits += 32), this.mode !== b.DEFLATERAW && this.mode !== b.INFLATERAW || (this.windowBits = -1 * this.windowBits), this.strm = new g, this.mode) {
                                case b.DEFLATE:
                                case b.GZIP:
                                case b.DEFLATERAW:
                                    this.err = h.deflateInit2(this.strm, this.level, b.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
                                    break;
                                case b.INFLATE:
                                case b.GUNZIP:
                                case b.INFLATERAW:
                                case b.UNZIP:
                                    this.err = i.inflateInit2(this.strm, this.windowBits);
                                    break;
                                default:
                                    throw new Error("Unknown mode " + this.mode)
                            }
                            this.err !== b.Z_OK && this._error("Init error"), this.dictionary = f, this.write_in_progress = !1, this.init_done = !0
                        }, e.prototype._setDictionary = function () {
                            if (null != this.dictionary) {
                                switch (this.err = b.Z_OK, this.mode) {
                                    case b.DEFLATE:
                                    case b.DEFLATERAW:
                                        this.err = h.deflateSetDictionary(this.strm, this.dictionary)
                                }
                                this.err !== b.Z_OK && this._error("Failed to set dictionary")
                            }
                        }, e.prototype._reset = function () {
                            switch (this.err = b.Z_OK, this.mode) {
                                case b.DEFLATE:
                                case b.DEFLATERAW:
                                case b.GZIP:
                                    this.err = h.deflateReset(this.strm);
                                    break;
                                case b.INFLATE:
                                case b.INFLATERAW:
                                case b.GUNZIP:
                                    this.err = i.inflateReset(this.strm)
                            }
                            this.err !== b.Z_OK && this._error("Failed to reset stream")
                        }, b.Zlib = e
                    }).call(b, c(6).Buffer, c(8))
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        if (null === a || void 0 === a) throw new TypeError("Object.assign cannot be called with null or undefined");
                        return Object(a)
                    }

                    function e() {
                        try {
                            if (!Object.assign) return !1;
                            var a = new String("abc");
                            if (a[5] = "de", "5" === Object.getOwnPropertyNames(a)[0]) return !1;
                            for (var b = {}, c = 0; c < 10; c++) b["_" + String.fromCharCode(c)] = c;
                            var d = Object.getOwnPropertyNames(b).map(function (a) {
                                return b[a]
                            });
                            if ("0123456789" !== d.join("")) return !1;
                            var e = {};
                            return "abcdefghijklmnopqrst".split("").forEach(function (a) {
                                e[a] = a
                            }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, e)).join("")
                        } catch (f) {
                            return !1
                        }
                    }

                    var f = Object.getOwnPropertySymbols, g = Object.prototype.hasOwnProperty,
                        h = Object.prototype.propertyIsEnumerable;
                    a.exports = e() ? Object.assign : function (a, b) {
                        for (var c, e, i = d(a), j = 1; j < arguments.length; j++) {
                            c = Object(arguments[j]);
                            for (var k in c) g.call(c, k) && (i[k] = c[k]);
                            if (f) {
                                e = f(c);
                                for (var l = 0; l < e.length; l++) h.call(c, e[l]) && (i[e[l]] = c[e[l]])
                            }
                        }
                        return i
                    }
                }, function (a, b) {
                    a.exports = function (a) {
                        return a && "object" == typeof a && "function" == typeof a.copy && "function" == typeof a.fill && "function" == typeof a.readUInt8
                    }
                }, function (a, b) {
                    "function" == typeof Object.create ? a.exports = function (a, b) {
                        a.super_ = b, a.prototype = Object.create(b.prototype, {
                            constructor: {
                                value: a,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        })
                    } : a.exports = function (a, b) {
                        a.super_ = b;
                        var c = function () {
                        };
                        c.prototype = b.prototype, a.prototype = new c, a.prototype.constructor = a
                    }
                }, function (a, b, c) {
                    "use strict";

                    function d() {
                        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
                    }

                    a.exports = d
                }, function (a, b, c) {
                    "use strict";

                    function d(a, b) {
                        return a.msg = I[b], b
                    }

                    function e(a) {
                        return (a << 1) - (a > 4 ? 9 : 0)
                    }

                    function f(a) {
                        for (var b = a.length; --b >= 0;) a[b] = 0
                    }

                    function g(a) {
                        var b = a.state, c = b.pending;
                        c > a.avail_out && (c = a.avail_out), 0 !== c && (E.arraySet(a.output, b.pending_buf, b.pending_out, c, a.next_out), a.next_out += c, b.pending_out += c, a.total_out += c, a.avail_out -= c, b.pending -= c, 0 === b.pending && (b.pending_out = 0))
                    }

                    function h(a, b) {
                        F._tr_flush_block(a, a.block_start >= 0 ? a.block_start : -1, a.strstart - a.block_start, b), a.block_start = a.strstart, g(a.strm)
                    }

                    function i(a, b) {
                        a.pending_buf[a.pending++] = b
                    }

                    function j(a, b) {
                        a.pending_buf[a.pending++] = b >>> 8 & 255, a.pending_buf[a.pending++] = 255 & b
                    }

                    function k(a, b, c, d) {
                        var e = a.avail_in;
                        return e > d && (e = d), 0 === e ? 0 : (a.avail_in -= e, E.arraySet(b, a.input, a.next_in, e, c), 1 === a.state.wrap ? a.adler = G(a.adler, b, e, c) : 2 === a.state.wrap && (a.adler = H(a.adler, b, e, c)), a.next_in += e, a.total_in += e, e)
                    }

                    function l(a, b) {
                        var c, d, e = a.max_chain_length, f = a.strstart, g = a.prev_length, h = a.nice_match,
                            i = a.strstart > a.w_size - la ? a.strstart - (a.w_size - la) : 0, j = a.window,
                            k = a.w_mask, l = a.prev, m = a.strstart + ka, n = j[f + g - 1], o = j[f + g];
                        a.prev_length >= a.good_match && (e >>= 2), h > a.lookahead && (h = a.lookahead);
                        do if (c = b, j[c + g] === o && j[c + g - 1] === n && j[c] === j[f] && j[++c] === j[f + 1]) {
                            f += 2, c++;
                            do ; while (j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && j[++f] === j[++c] && f < m);
                            if (d = ka - (m - f), f = m - ka, d > g) {
                                if (a.match_start = b, g = d, d >= h) break;
                                n = j[f + g - 1], o = j[f + g]
                            }
                        } while ((b = l[b & k]) > i && 0 !== --e);
                        return g <= a.lookahead ? g : a.lookahead
                    }

                    function m(a) {
                        var b, c, d, e, f, g = a.w_size;
                        do {
                            if (e = a.window_size - a.lookahead - a.strstart, a.strstart >= g + (g - la)) {
                                E.arraySet(a.window, a.window, g, g, 0), a.match_start -= g, a.strstart -= g, a.block_start -= g, c = a.hash_size, b = c;
                                do d = a.head[--b], a.head[b] = d >= g ? d - g : 0; while (--c);
                                c = g, b = c;
                                do d = a.prev[--b], a.prev[b] = d >= g ? d - g : 0; while (--c);
                                e += g
                            }
                            if (0 === a.strm.avail_in) break;
                            if (c = k(a.strm, a.window, a.strstart + a.lookahead, e), a.lookahead += c, a.lookahead + a.insert >= ja) for (f = a.strstart - a.insert, a.ins_h = a.window[f], a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + 1]) & a.hash_mask; a.insert && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[f + ja - 1]) & a.hash_mask, a.prev[f & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = f, f++, a.insert--, !(a.lookahead + a.insert < ja));) ;
                        } while (a.lookahead < la && 0 !== a.strm.avail_in)
                    }

                    function n(a, b) {
                        var c = 65535;
                        for (c > a.pending_buf_size - 5 && (c = a.pending_buf_size - 5); ;) {
                            if (a.lookahead <= 1) {
                                if (m(a), 0 === a.lookahead && b === J) return ua;
                                if (0 === a.lookahead) break
                            }
                            a.strstart += a.lookahead, a.lookahead = 0;
                            var d = a.block_start + c;
                            if ((0 === a.strstart || a.strstart >= d) && (a.lookahead = a.strstart - d, a.strstart = d, h(a, !1), 0 === a.strm.avail_out)) return ua;
                            if (a.strstart - a.block_start >= a.w_size - la && (h(a, !1), 0 === a.strm.avail_out)) return ua
                        }
                        return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.strstart > a.block_start && (h(a, !1), 0 === a.strm.avail_out) ? ua : ua
                    }

                    function o(a, b) {
                        for (var c, d; ;) {
                            if (a.lookahead < la) {
                                if (m(a), a.lookahead < la && b === J) return ua;
                                if (0 === a.lookahead) break
                            }
                            if (c = 0, a.lookahead >= ja && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), 0 !== c && a.strstart - c <= a.w_size - la && (a.match_length = l(a, c)), a.match_length >= ja) if (d = F._tr_tally(a, a.strstart - a.match_start, a.match_length - ja), a.lookahead -= a.match_length, a.match_length <= a.max_lazy_match && a.lookahead >= ja) {
                                a.match_length--;
                                do a.strstart++, a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask,
                                    c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart; while (0 !== --a.match_length);
                                a.strstart++
                            } else a.strstart += a.match_length, a.match_length = 0, a.ins_h = a.window[a.strstart], a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + 1]) & a.hash_mask; else d = F._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++;
                            if (d && (h(a, !1), 0 === a.strm.avail_out)) return ua
                        }
                        return a.insert = a.strstart < ja - 1 ? a.strstart : ja - 1, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
                    }

                    function p(a, b) {
                        for (var c, d, e; ;) {
                            if (a.lookahead < la) {
                                if (m(a), a.lookahead < la && b === J) return ua;
                                if (0 === a.lookahead) break
                            }
                            if (c = 0, a.lookahead >= ja && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart), a.prev_length = a.match_length, a.prev_match = a.match_start, a.match_length = ja - 1, 0 !== c && a.prev_length < a.max_lazy_match && a.strstart - c <= a.w_size - la && (a.match_length = l(a, c), a.match_length <= 5 && (a.strategy === U || a.match_length === ja && a.strstart - a.match_start > 4096) && (a.match_length = ja - 1)), a.prev_length >= ja && a.match_length <= a.prev_length) {
                                e = a.strstart + a.lookahead - ja, d = F._tr_tally(a, a.strstart - 1 - a.prev_match, a.prev_length - ja), a.lookahead -= a.prev_length - 1, a.prev_length -= 2;
                                do ++a.strstart <= e && (a.ins_h = (a.ins_h << a.hash_shift ^ a.window[a.strstart + ja - 1]) & a.hash_mask, c = a.prev[a.strstart & a.w_mask] = a.head[a.ins_h], a.head[a.ins_h] = a.strstart); while (0 !== --a.prev_length);
                                if (a.match_available = 0, a.match_length = ja - 1, a.strstart++, d && (h(a, !1), 0 === a.strm.avail_out)) return ua
                            } else if (a.match_available) {
                                if (d = F._tr_tally(a, 0, a.window[a.strstart - 1]), d && h(a, !1), a.strstart++, a.lookahead--, 0 === a.strm.avail_out) return ua
                            } else a.match_available = 1, a.strstart++, a.lookahead--
                        }
                        return a.match_available && (d = F._tr_tally(a, 0, a.window[a.strstart - 1]), a.match_available = 0), a.insert = a.strstart < ja - 1 ? a.strstart : ja - 1, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
                    }

                    function q(a, b) {
                        for (var c, d, e, f, g = a.window; ;) {
                            if (a.lookahead <= ka) {
                                if (m(a), a.lookahead <= ka && b === J) return ua;
                                if (0 === a.lookahead) break
                            }
                            if (a.match_length = 0, a.lookahead >= ja && a.strstart > 0 && (e = a.strstart - 1, d = g[e], d === g[++e] && d === g[++e] && d === g[++e])) {
                                f = a.strstart + ka;
                                do ; while (d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && d === g[++e] && e < f);
                                a.match_length = ka - (f - e), a.match_length > a.lookahead && (a.match_length = a.lookahead)
                            }
                            if (a.match_length >= ja ? (c = F._tr_tally(a, 1, a.match_length - ja), a.lookahead -= a.match_length, a.strstart += a.match_length, a.match_length = 0) : (c = F._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++), c && (h(a, !1), 0 === a.strm.avail_out)) return ua
                        }
                        return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
                    }

                    function r(a, b) {
                        for (var c; ;) {
                            if (0 === a.lookahead && (m(a), 0 === a.lookahead)) {
                                if (b === J) return ua;
                                break
                            }
                            if (a.match_length = 0, c = F._tr_tally(a, 0, a.window[a.strstart]), a.lookahead--, a.strstart++, c && (h(a, !1), 0 === a.strm.avail_out)) return ua
                        }
                        return a.insert = 0, b === M ? (h(a, !0), 0 === a.strm.avail_out ? wa : xa) : a.last_lit && (h(a, !1), 0 === a.strm.avail_out) ? ua : va
                    }

                    function s(a, b, c, d, e) {
                        this.good_length = a, this.max_lazy = b, this.nice_length = c, this.max_chain = d, this.func = e
                    }

                    function t(a) {
                        a.window_size = 2 * a.w_size, f(a.head), a.max_lazy_match = D[a.level].max_lazy, a.good_match = D[a.level].good_length, a.nice_match = D[a.level].nice_length, a.max_chain_length = D[a.level].max_chain, a.strstart = 0, a.block_start = 0, a.lookahead = 0, a.insert = 0, a.match_length = a.prev_length = ja - 1, a.match_available = 0, a.ins_h = 0
                    }

                    function u() {
                        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = $, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new E.Buf16(2 * ha), this.dyn_dtree = new E.Buf16(2 * (2 * fa + 1)), this.bl_tree = new E.Buf16(2 * (2 * ga + 1)), f(this.dyn_ltree), f(this.dyn_dtree), f(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new E.Buf16(ia + 1), this.heap = new E.Buf16(2 * ea + 1), f(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new E.Buf16(2 * ea + 1), f(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0
                    }

                    function v(a) {
                        var b;
                        return a && a.state ? (a.total_in = a.total_out = 0, a.data_type = Z, b = a.state, b.pending = 0, b.pending_out = 0, b.wrap < 0 && (b.wrap = -b.wrap), b.status = b.wrap ? na : sa, a.adler = 2 === b.wrap ? 0 : 1, b.last_flush = J, F._tr_init(b), O) : d(a, Q)
                    }

                    function w(a) {
                        var b = v(a);
                        return b === O && t(a.state), b
                    }

                    function x(a, b) {
                        return a && a.state ? 2 !== a.state.wrap ? Q : (a.state.gzhead = b, O) : Q
                    }

                    function y(a, b, c, e, f, g) {
                        if (!a) return Q;
                        var h = 1;
                        if (b === T && (b = 6), e < 0 ? (h = 0, e = -e) : e > 15 && (h = 2, e -= 16), f < 1 || f > _ || c !== $ || e < 8 || e > 15 || b < 0 || b > 9 || g < 0 || g > X) return d(a, Q);
                        8 === e && (e = 9);
                        var i = new u;
                        return a.state = i, i.strm = a, i.wrap = h, i.gzhead = null, i.w_bits = e, i.w_size = 1 << i.w_bits, i.w_mask = i.w_size - 1, i.hash_bits = f + 7, i.hash_size = 1 << i.hash_bits, i.hash_mask = i.hash_size - 1, i.hash_shift = ~~((i.hash_bits + ja - 1) / ja), i.window = new E.Buf8(2 * i.w_size), i.head = new E.Buf16(i.hash_size), i.prev = new E.Buf16(i.w_size), i.lit_bufsize = 1 << f + 6, i.pending_buf_size = 4 * i.lit_bufsize, i.pending_buf = new E.Buf8(i.pending_buf_size), i.d_buf = 1 * i.lit_bufsize, i.l_buf = 3 * i.lit_bufsize, i.level = b, i.strategy = g, i.method = c, w(a)
                    }

                    function z(a, b) {
                        return y(a, b, $, aa, ba, Y)
                    }

                    function A(a, b) {
                        var c, h, k, l;
                        if (!a || !a.state || b > N || b < 0) return a ? d(a, Q) : Q;
                        if (h = a.state, !a.output || !a.input && 0 !== a.avail_in || h.status === ta && b !== M) return d(a, 0 === a.avail_out ? S : Q);
                        if (h.strm = a, c = h.last_flush, h.last_flush = b, h.status === na) if (2 === h.wrap) a.adler = 0, i(h, 31), i(h, 139), i(h, 8), h.gzhead ? (i(h, (h.gzhead.text ? 1 : 0) + (h.gzhead.hcrc ? 2 : 0) + (h.gzhead.extra ? 4 : 0) + (h.gzhead.name ? 8 : 0) + (h.gzhead.comment ? 16 : 0)), i(h, 255 & h.gzhead.time), i(h, h.gzhead.time >> 8 & 255), i(h, h.gzhead.time >> 16 & 255), i(h, h.gzhead.time >> 24 & 255), i(h, 9 === h.level ? 2 : h.strategy >= V || h.level < 2 ? 4 : 0), i(h, 255 & h.gzhead.os), h.gzhead.extra && h.gzhead.extra.length && (i(h, 255 & h.gzhead.extra.length), i(h, h.gzhead.extra.length >> 8 & 255)), h.gzhead.hcrc && (a.adler = H(a.adler, h.pending_buf, h.pending, 0)), h.gzindex = 0, h.status = oa) : (i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 0), i(h, 9 === h.level ? 2 : h.strategy >= V || h.level < 2 ? 4 : 0), i(h, ya), h.status = sa); else {
                            var m = $ + (h.w_bits - 8 << 4) << 8, n = -1;
                            n = h.strategy >= V || h.level < 2 ? 0 : h.level < 6 ? 1 : 6 === h.level ? 2 : 3, m |= n << 6, 0 !== h.strstart && (m |= ma), m += 31 - m % 31, h.status = sa, j(h, m), 0 !== h.strstart && (j(h, a.adler >>> 16), j(h, 65535 & a.adler)), a.adler = 1
                        }
                        if (h.status === oa) if (h.gzhead.extra) {
                            for (k = h.pending; h.gzindex < (65535 & h.gzhead.extra.length) && (h.pending !== h.pending_buf_size || (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending !== h.pending_buf_size));) i(h, 255 & h.gzhead.extra[h.gzindex]), h.gzindex++;
                            h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), h.gzindex === h.gzhead.extra.length && (h.gzindex = 0, h.status = pa)
                        } else h.status = pa;
                        if (h.status === pa) if (h.gzhead.name) {
                            k = h.pending;
                            do {
                                if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                                    l = 1;
                                    break
                                }
                                l = h.gzindex < h.gzhead.name.length ? 255 & h.gzhead.name.charCodeAt(h.gzindex++) : 0, i(h, l)
                            } while (0 !== l);
                            h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 0 === l && (h.gzindex = 0, h.status = qa)
                        } else h.status = qa;
                        if (h.status === qa) if (h.gzhead.comment) {
                            k = h.pending;
                            do {
                                if (h.pending === h.pending_buf_size && (h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), g(a), k = h.pending, h.pending === h.pending_buf_size)) {
                                    l = 1;
                                    break
                                }
                                l = h.gzindex < h.gzhead.comment.length ? 255 & h.gzhead.comment.charCodeAt(h.gzindex++) : 0, i(h, l)
                            } while (0 !== l);
                            h.gzhead.hcrc && h.pending > k && (a.adler = H(a.adler, h.pending_buf, h.pending - k, k)), 0 === l && (h.status = ra)
                        } else h.status = ra;
                        if (h.status === ra && (h.gzhead.hcrc ? (h.pending + 2 > h.pending_buf_size && g(a), h.pending + 2 <= h.pending_buf_size && (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), a.adler = 0, h.status = sa)) : h.status = sa), 0 !== h.pending) {
                            if (g(a), 0 === a.avail_out) return h.last_flush = -1, O
                        } else if (0 === a.avail_in && e(b) <= e(c) && b !== M) return d(a, S);
                        if (h.status === ta && 0 !== a.avail_in) return d(a, S);
                        if (0 !== a.avail_in || 0 !== h.lookahead || b !== J && h.status !== ta) {
                            var o = h.strategy === V ? r(h, b) : h.strategy === W ? q(h, b) : D[h.level].func(h, b);
                            if (o !== wa && o !== xa || (h.status = ta), o === ua || o === wa) return 0 === a.avail_out && (h.last_flush = -1), O;
                            if (o === va && (b === K ? F._tr_align(h) : b !== N && (F._tr_stored_block(h, 0, 0, !1), b === L && (f(h.head), 0 === h.lookahead && (h.strstart = 0, h.block_start = 0, h.insert = 0))), g(a), 0 === a.avail_out)) return h.last_flush = -1, O
                        }
                        return b !== M ? O : h.wrap <= 0 ? P : (2 === h.wrap ? (i(h, 255 & a.adler), i(h, a.adler >> 8 & 255), i(h, a.adler >> 16 & 255), i(h, a.adler >> 24 & 255), i(h, 255 & a.total_in), i(h, a.total_in >> 8 & 255), i(h, a.total_in >> 16 & 255), i(h, a.total_in >> 24 & 255)) : (j(h, a.adler >>> 16), j(h, 65535 & a.adler)), g(a), h.wrap > 0 && (h.wrap = -h.wrap), 0 !== h.pending ? O : P)
                    }

                    function B(a) {
                        var b;
                        return a && a.state ? (b = a.state.status, b !== na && b !== oa && b !== pa && b !== qa && b !== ra && b !== sa && b !== ta ? d(a, Q) : (a.state = null, b === sa ? d(a, R) : O)) : Q
                    }

                    function C(a, b) {
                        var c, d, e, g, h, i, j, k, l = b.length;
                        if (!a || !a.state) return Q;
                        if (c = a.state, g = c.wrap, 2 === g || 1 === g && c.status !== na || c.lookahead) return Q;
                        for (1 === g && (a.adler = G(a.adler, b, l, 0)), c.wrap = 0, l >= c.w_size && (0 === g && (f(c.head), c.strstart = 0, c.block_start = 0, c.insert = 0), k = new E.Buf8(c.w_size), E.arraySet(k, b, l - c.w_size, c.w_size, 0), b = k, l = c.w_size), h = a.avail_in, i = a.next_in, j = a.input, a.avail_in = l, a.next_in = 0, a.input = b, m(c); c.lookahead >= ja;) {
                            d = c.strstart, e = c.lookahead - (ja - 1);
                            do c.ins_h = (c.ins_h << c.hash_shift ^ c.window[d + ja - 1]) & c.hash_mask, c.prev[d & c.w_mask] = c.head[c.ins_h], c.head[c.ins_h] = d, d++; while (--e);
                            c.strstart = d, c.lookahead = ja - 1, m(c)
                        }
                        return c.strstart += c.lookahead, c.block_start = c.strstart, c.insert = c.lookahead, c.lookahead = 0, c.match_length = c.prev_length = ja - 1, c.match_available = 0, a.next_in = i, a.input = j, a.avail_in = h, c.wrap = g, O
                    }

                    var D, E = c(19), F = c(74), G = c(43), H = c(44), I = c(75), J = 0, K = 1, L = 3, M = 4, N = 5,
                        O = 0, P = 1, Q = -2, R = -3, S = -5, T = -1, U = 1, V = 2, W = 3, X = 4, Y = 0, Z = 2, $ = 8,
                        _ = 9, aa = 15, ba = 8, ca = 29, da = 256, ea = da + 1 + ca, fa = 30, ga = 19, ha = 2 * ea + 1,
                        ia = 15, ja = 3, ka = 258, la = ka + ja + 1, ma = 32, na = 42, oa = 69, pa = 73, qa = 91,
                        ra = 103, sa = 113, ta = 666, ua = 1, va = 2, wa = 3, xa = 4, ya = 3;
                    D = [new s(0, 0, 0, 0, n), new s(4, 4, 8, 4, o), new s(4, 5, 16, 8, o), new s(4, 6, 32, 32, o), new s(4, 4, 16, 16, p), new s(8, 16, 32, 32, p), new s(8, 16, 128, 128, p), new s(8, 32, 128, 256, p), new s(32, 128, 258, 1024, p), new s(32, 258, 258, 4096, p)], b.deflateInit = z, b.deflateInit2 = y, b.deflateReset = w, b.deflateResetKeep = v, b.deflateSetHeader = x, b.deflate = A, b.deflateEnd = B, b.deflateSetDictionary = C, b.deflateInfo = "pako deflate (from Nodeca project)"
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        for (var b = a.length; --b >= 0;) a[b] = 0
                    }

                    function e(a, b, c, d, e) {
                        this.static_tree = a, this.extra_bits = b, this.extra_base = c, this.elems = d, this.max_length = e, this.has_stree = a && a.length
                    }

                    function f(a, b) {
                        this.dyn_tree = a, this.max_code = 0, this.stat_desc = b
                    }

                    function g(a) {
                        return a < 256 ? ia[a] : ia[256 + (a >>> 7)]
                    }

                    function h(a, b) {
                        a.pending_buf[a.pending++] = 255 & b, a.pending_buf[a.pending++] = b >>> 8 & 255
                    }

                    function i(a, b, c) {
                        a.bi_valid > X - c ? (a.bi_buf |= b << a.bi_valid & 65535, h(a, a.bi_buf), a.bi_buf = b >> X - a.bi_valid, a.bi_valid += c - X) : (a.bi_buf |= b << a.bi_valid & 65535, a.bi_valid += c)
                    }

                    function j(a, b, c) {
                        i(a, c[2 * b], c[2 * b + 1])
                    }

                    function k(a, b) {
                        var c = 0;
                        do c |= 1 & a, a >>>= 1, c <<= 1; while (--b > 0);
                        return c >>> 1
                    }

                    function l(a) {
                        16 === a.bi_valid ? (h(a, a.bi_buf), a.bi_buf = 0, a.bi_valid = 0) : a.bi_valid >= 8 && (a.pending_buf[a.pending++] = 255 & a.bi_buf, a.bi_buf >>= 8, a.bi_valid -= 8)
                    }

                    function m(a, b) {
                        var c, d, e, f, g, h, i = b.dyn_tree, j = b.max_code, k = b.stat_desc.static_tree,
                            l = b.stat_desc.has_stree, m = b.stat_desc.extra_bits, n = b.stat_desc.extra_base,
                            o = b.stat_desc.max_length, p = 0;
                        for (f = 0; f <= W; f++) a.bl_count[f] = 0;
                        for (i[2 * a.heap[a.heap_max] + 1] = 0, c = a.heap_max + 1; c < V; c++) d = a.heap[c], f = i[2 * i[2 * d + 1] + 1] + 1, f > o && (f = o, p++), i[2 * d + 1] = f, d > j || (a.bl_count[f]++, g = 0, d >= n && (g = m[d - n]), h = i[2 * d], a.opt_len += h * (f + g), l && (a.static_len += h * (k[2 * d + 1] + g)));
                        if (0 !== p) {
                            do {
                                for (f = o - 1; 0 === a.bl_count[f];) f--;
                                a.bl_count[f]--, a.bl_count[f + 1] += 2, a.bl_count[o]--, p -= 2
                            } while (p > 0);
                            for (f = o; 0 !== f; f--) for (d = a.bl_count[f]; 0 !== d;) e = a.heap[--c], e > j || (i[2 * e + 1] !== f && (a.opt_len += (f - i[2 * e + 1]) * i[2 * e], i[2 * e + 1] = f), d--)
                        }
                    }

                    function n(a, b, c) {
                        var d, e, f = new Array(W + 1), g = 0;
                        for (d = 1; d <= W; d++) f[d] = g = g + c[d - 1] << 1;
                        for (e = 0; e <= b; e++) {
                            var h = a[2 * e + 1];
                            0 !== h && (a[2 * e] = k(f[h]++, h))
                        }
                    }

                    function o() {
                        var a, b, c, d, f, g = new Array(W + 1);
                        for (c = 0, d = 0; d < Q - 1; d++) for (ka[d] = c, a = 0; a < 1 << ba[d]; a++) ja[c++] = d;
                        for (ja[c - 1] = d, f = 0, d = 0; d < 16; d++) for (la[d] = f, a = 0; a < 1 << ca[d]; a++) ia[f++] = d;
                        for (f >>= 7; d < T; d++) for (la[d] = f << 7, a = 0; a < 1 << ca[d] - 7; a++) ia[256 + f++] = d;
                        for (b = 0; b <= W; b++) g[b] = 0;
                        for (a = 0; a <= 143;) ga[2 * a + 1] = 8, a++, g[8]++;
                        for (; a <= 255;) ga[2 * a + 1] = 9, a++, g[9]++;
                        for (; a <= 279;) ga[2 * a + 1] = 7, a++, g[7]++;
                        for (; a <= 287;) ga[2 * a + 1] = 8, a++, g[8]++;
                        for (n(ga, S + 1, g), a = 0; a < T; a++) ha[2 * a + 1] = 5, ha[2 * a] = k(a, 5);
                        ma = new e(ga, ba, R + 1, S, W), na = new e(ha, ca, 0, T, W), oa = new e(new Array(0), da, 0, U, Y)
                    }

                    function p(a) {
                        var b;
                        for (b = 0; b < S; b++) a.dyn_ltree[2 * b] = 0;
                        for (b = 0; b < T; b++) a.dyn_dtree[2 * b] = 0;
                        for (b = 0; b < U; b++) a.bl_tree[2 * b] = 0;
                        a.dyn_ltree[2 * Z] = 1, a.opt_len = a.static_len = 0, a.last_lit = a.matches = 0
                    }

                    function q(a) {
                        a.bi_valid > 8 ? h(a, a.bi_buf) : a.bi_valid > 0 && (a.pending_buf[a.pending++] = a.bi_buf), a.bi_buf = 0, a.bi_valid = 0
                    }

                    function r(a, b, c, d) {
                        q(a), d && (h(a, c), h(a, ~c)), G.arraySet(a.pending_buf, a.window, b, c, a.pending), a.pending += c
                    }

                    function s(a, b, c, d) {
                        var e = 2 * b, f = 2 * c;
                        return a[e] < a[f] || a[e] === a[f] && d[b] <= d[c]
                    }

                    function t(a, b, c) {
                        for (var d = a.heap[c], e = c << 1; e <= a.heap_len && (e < a.heap_len && s(b, a.heap[e + 1], a.heap[e], a.depth) && e++, !s(b, d, a.heap[e], a.depth));) a.heap[c] = a.heap[e], c = e, e <<= 1;
                        a.heap[c] = d
                    }

                    function u(a, b, c) {
                        var d, e, f, h, k = 0;
                        if (0 !== a.last_lit) do d = a.pending_buf[a.d_buf + 2 * k] << 8 | a.pending_buf[a.d_buf + 2 * k + 1], e = a.pending_buf[a.l_buf + k], k++, 0 === d ? j(a, e, b) : (f = ja[e], j(a, f + R + 1, b), h = ba[f], 0 !== h && (e -= ka[f], i(a, e, h)), d--, f = g(d), j(a, f, c), h = ca[f], 0 !== h && (d -= la[f], i(a, d, h))); while (k < a.last_lit);
                        j(a, Z, b)
                    }

                    function v(a, b) {
                        var c, d, e, f = b.dyn_tree, g = b.stat_desc.static_tree, h = b.stat_desc.has_stree,
                            i = b.stat_desc.elems, j = -1;
                        for (a.heap_len = 0, a.heap_max = V, c = 0; c < i; c++) 0 !== f[2 * c] ? (a.heap[++a.heap_len] = j = c, a.depth[c] = 0) : f[2 * c + 1] = 0;
                        for (; a.heap_len < 2;) e = a.heap[++a.heap_len] = j < 2 ? ++j : 0, f[2 * e] = 1, a.depth[e] = 0, a.opt_len--, h && (a.static_len -= g[2 * e + 1]);
                        for (b.max_code = j, c = a.heap_len >> 1; c >= 1; c--) t(a, f, c);
                        e = i;
                        do c = a.heap[1], a.heap[1] = a.heap[a.heap_len--], t(a, f, 1), d = a.heap[1], a.heap[--a.heap_max] = c, a.heap[--a.heap_max] = d, f[2 * e] = f[2 * c] + f[2 * d], a.depth[e] = (a.depth[c] >= a.depth[d] ? a.depth[c] : a.depth[d]) + 1, f[2 * c + 1] = f[2 * d + 1] = e, a.heap[1] = e++, t(a, f, 1); while (a.heap_len >= 2);
                        a.heap[--a.heap_max] = a.heap[1], m(a, b), n(f, j, a.bl_count)
                    }

                    function w(a, b, c) {
                        var d, e, f = -1, g = b[1], h = 0, i = 7, j = 4;
                        for (0 === g && (i = 138, j = 3), b[2 * (c + 1) + 1] = 65535, d = 0; d <= c; d++) e = g, g = b[2 * (d + 1) + 1], ++h < i && e === g || (h < j ? a.bl_tree[2 * e] += h : 0 !== e ? (e !== f && a.bl_tree[2 * e]++, a.bl_tree[2 * $]++) : h <= 10 ? a.bl_tree[2 * _]++ : a.bl_tree[2 * aa]++, h = 0, f = e, 0 === g ? (i = 138, j = 3) : e === g ? (i = 6, j = 3) : (i = 7, j = 4))
                    }

                    function x(a, b, c) {
                        var d, e, f = -1, g = b[1], h = 0, k = 7, l = 4;
                        for (0 === g && (k = 138, l = 3), d = 0; d <= c; d++) if (e = g, g = b[2 * (d + 1) + 1], !(++h < k && e === g)) {
                            if (h < l) {
                                do j(a, e, a.bl_tree); while (0 !== --h)
                            } else 0 !== e ? (e !== f && (j(a, e, a.bl_tree), h--), j(a, $, a.bl_tree), i(a, h - 3, 2)) : h <= 10 ? (j(a, _, a.bl_tree), i(a, h - 3, 3)) : (j(a, aa, a.bl_tree), i(a, h - 11, 7));
                            h = 0, f = e, 0 === g ? (k = 138, l = 3) : e === g ? (k = 6, l = 3) : (k = 7, l = 4)
                        }
                    }

                    function y(a) {
                        var b;
                        for (w(a, a.dyn_ltree, a.l_desc.max_code), w(a, a.dyn_dtree, a.d_desc.max_code), v(a, a.bl_desc), b = U - 1; b >= 3 && 0 === a.bl_tree[2 * ea[b] + 1]; b--) ;
                        return a.opt_len += 3 * (b + 1) + 5 + 5 + 4, b
                    }

                    function z(a, b, c, d) {
                        var e;
                        for (i(a, b - 257, 5), i(a, c - 1, 5), i(a, d - 4, 4), e = 0; e < d; e++) i(a, a.bl_tree[2 * ea[e] + 1], 3);
                        x(a, a.dyn_ltree, b - 1), x(a, a.dyn_dtree, c - 1)
                    }

                    function A(a) {
                        var b, c = 4093624447;
                        for (b = 0; b <= 31; b++, c >>>= 1) if (1 & c && 0 !== a.dyn_ltree[2 * b]) return I;
                        if (0 !== a.dyn_ltree[18] || 0 !== a.dyn_ltree[20] || 0 !== a.dyn_ltree[26]) return J;
                        for (b = 32; b < R; b++) if (0 !== a.dyn_ltree[2 * b]) return J;
                        return I
                    }

                    function B(a) {
                        pa || (o(), pa = !0), a.l_desc = new f(a.dyn_ltree, ma), a.d_desc = new f(a.dyn_dtree, na), a.bl_desc = new f(a.bl_tree, oa), a.bi_buf = 0, a.bi_valid = 0, p(a)
                    }

                    function C(a, b, c, d) {
                        i(a, (L << 1) + (d ? 1 : 0), 3), r(a, b, c, !0)
                    }

                    function D(a) {
                        i(a, M << 1, 3), j(a, Z, ga), l(a)
                    }

                    function E(a, b, c, d) {
                        var e, f, g = 0;
                        a.level > 0 ? (a.strm.data_type === K && (a.strm.data_type = A(a)), v(a, a.l_desc), v(a, a.d_desc), g = y(a), e = a.opt_len + 3 + 7 >>> 3, f = a.static_len + 3 + 7 >>> 3, f <= e && (e = f)) : e = f = c + 5, c + 4 <= e && b !== -1 ? C(a, b, c, d) : a.strategy === H || f === e ? (i(a, (M << 1) + (d ? 1 : 0), 3), u(a, ga, ha)) : (i(a, (N << 1) + (d ? 1 : 0), 3), z(a, a.l_desc.max_code + 1, a.d_desc.max_code + 1, g + 1), u(a, a.dyn_ltree, a.dyn_dtree)), p(a), d && q(a)
                    }

                    function F(a, b, c) {
                        return a.pending_buf[a.d_buf + 2 * a.last_lit] = b >>> 8 & 255, a.pending_buf[a.d_buf + 2 * a.last_lit + 1] = 255 & b, a.pending_buf[a.l_buf + a.last_lit] = 255 & c, a.last_lit++, 0 === b ? a.dyn_ltree[2 * c]++ : (a.matches++, b--, a.dyn_ltree[2 * (ja[c] + R + 1)]++, a.dyn_dtree[2 * g(b)]++), a.last_lit === a.lit_bufsize - 1
                    }

                    var G = c(19), H = 4, I = 0, J = 1, K = 2, L = 0, M = 1, N = 2, O = 3, P = 258, Q = 29, R = 256,
                        S = R + 1 + Q, T = 30, U = 19, V = 2 * S + 1, W = 15, X = 16, Y = 7, Z = 256, $ = 16, _ = 17,
                        aa = 18,
                        ba = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                        ca = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                        da = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                        ea = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], fa = 512,
                        ga = new Array(2 * (S + 2));
                    d(ga);
                    var ha = new Array(2 * T);
                    d(ha);
                    var ia = new Array(fa);
                    d(ia);
                    var ja = new Array(P - O + 1);
                    d(ja);
                    var ka = new Array(Q);
                    d(ka);
                    var la = new Array(T);
                    d(la);
                    var ma, na, oa, pa = !1;
                    b._tr_init = B, b._tr_stored_block = C, b._tr_flush_block = E, b._tr_tally = F, b._tr_align = D
                }, function (a, b, c) {
                    "use strict";
                    a.exports = {
                        2: "need dictionary",
                        1: "stream end",
                        0: "",
                        "-1": "file error",
                        "-2": "stream error",
                        "-3": "data error",
                        "-4": "insufficient memory",
                        "-5": "buffer error",
                        "-6": "incompatible version"
                    }
                }, function (a, b, c) {
                    "use strict";

                    function d(a) {
                        return (a >>> 24 & 255) + (a >>> 8 & 65280) + ((65280 & a) << 8) + ((255 & a) << 24)
                    }

                    function e() {
                        this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new s.Buf16(320), this.work = new s.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
                    }

                    function f(a) {
                        var b;
                        return a && a.state ? (b = a.state, a.total_in = a.total_out = b.total = 0, a.msg = "", b.wrap && (a.adler = 1 & b.wrap), b.mode = L, b.last = 0, b.havedict = 0, b.dmax = 32768, b.head = null, b.hold = 0, b.bits = 0, b.lencode = b.lendyn = new s.Buf32(pa), b.distcode = b.distdyn = new s.Buf32(qa), b.sane = 1, b.back = -1, D) : G
                    }

                    function g(a) {
                        var b;
                        return a && a.state ? (b = a.state, b.wsize = 0, b.whave = 0, b.wnext = 0, f(a)) : G
                    }

                    function h(a, b) {
                        var c, d;
                        return a && a.state ? (d = a.state, b < 0 ? (c = 0, b = -b) : (c = (b >> 4) + 1, b < 48 && (b &= 15)), b && (b < 8 || b > 15) ? G : (null !== d.window && d.wbits !== b && (d.window = null), d.wrap = c, d.wbits = b, g(a))) : G
                    }

                    function i(a, b) {
                        var c, d;
                        return a ? (d = new e, a.state = d, d.window = null, c = h(a, b), c !== D && (a.state = null), c) : G
                    }

                    function j(a) {
                        return i(a, sa)
                    }

                    function k(a) {
                        if (ta) {
                            var b;
                            for (q = new s.Buf32(512), r = new s.Buf32(32), b = 0; b < 144;) a.lens[b++] = 8;
                            for (; b < 256;) a.lens[b++] = 9;
                            for (; b < 280;) a.lens[b++] = 7;
                            for (; b < 288;) a.lens[b++] = 8;
                            for (w(y, a.lens, 0, 288, q, 0, a.work, {bits: 9}), b = 0; b < 32;) a.lens[b++] = 5;
                            w(z, a.lens, 0, 32, r, 0, a.work, {bits: 5}), ta = !1
                        }
                        a.lencode = q, a.lenbits = 9, a.distcode = r, a.distbits = 5
                    }

                    function l(a, b, c, d) {
                        var e, f = a.state;
                        return null === f.window && (f.wsize = 1 << f.wbits, f.wnext = 0, f.whave = 0, f.window = new s.Buf8(f.wsize)), d >= f.wsize ? (s.arraySet(f.window, b, c - f.wsize, f.wsize, 0), f.wnext = 0, f.whave = f.wsize) : (e = f.wsize - f.wnext, e > d && (e = d), s.arraySet(f.window, b, c - d, e, f.wnext), d -= e, d ? (s.arraySet(f.window, b, c - d, d, 0), f.wnext = d, f.whave = f.wsize) : (f.wnext += e, f.wnext === f.wsize && (f.wnext = 0), f.whave < f.wsize && (f.whave += e))), 0
                    }

                    function m(a, b) {
                        var c, e, f, g, h, i, j, m, n, o, p, q, r, pa, qa, ra, sa, ta, ua, va, wa, xa, ya, za, Aa = 0,
                            Ba = new s.Buf8(4), Ca = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                        if (!a || !a.state || !a.output || !a.input && 0 !== a.avail_in) return G;
                        c = a.state, c.mode === W && (c.mode = X), h = a.next_out, f = a.output, j = a.avail_out, g = a.next_in, e = a.input, i = a.avail_in, m = c.hold, n = c.bits, o = i, p = j, xa = D;
                        a:for (; ;) switch (c.mode) {
                            case L:
                                if (0 === c.wrap) {
                                    c.mode = X;
                                    break
                                }
                                for (; n < 16;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                if (2 & c.wrap && 35615 === m) {
                                    c.check = 0, Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0), m = 0, n = 0, c.mode = M;
                                    break
                                }
                                if (c.flags = 0, c.head && (c.head.done = !1), !(1 & c.wrap) || (((255 & m) << 8) + (m >> 8)) % 31) {
                                    a.msg = "incorrect header check", c.mode = ma;
                                    break
                                }
                                if ((15 & m) !== K) {
                                    a.msg = "unknown compression method", c.mode = ma;
                                    break
                                }
                                if (m >>>= 4, n -= 4, wa = (15 & m) + 8, 0 === c.wbits) c.wbits = wa; else if (wa > c.wbits) {
                                    a.msg = "invalid window size", c.mode = ma;
                                    break
                                }
                                c.dmax = 1 << wa, a.adler = c.check = 1, c.mode = 512 & m ? U : W, m = 0, n = 0;
                                break;
                            case M:
                                for (; n < 16;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                if (c.flags = m, (255 & c.flags) !== K) {
                                    a.msg = "unknown compression method", c.mode = ma;
                                    break
                                }
                                if (57344 & c.flags) {
                                    a.msg = "unknown header flags set", c.mode = ma;
                                    break
                                }
                                c.head && (c.head.text = m >> 8 & 1), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0, c.mode = N;
                            case N:
                                for (; n < 32;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                c.head && (c.head.time = m), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, Ba[2] = m >>> 16 & 255, Ba[3] = m >>> 24 & 255, c.check = u(c.check, Ba, 4, 0)), m = 0, n = 0, c.mode = O;
                            case O:
                                for (; n < 16;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                c.head && (c.head.xflags = 255 & m, c.head.os = m >> 8), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0, c.mode = P;
                            case P:
                                if (1024 & c.flags) {
                                    for (; n < 16;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    c.length = m, c.head && (c.head.extra_len = m), 512 & c.flags && (Ba[0] = 255 & m, Ba[1] = m >>> 8 & 255, c.check = u(c.check, Ba, 2, 0)), m = 0, n = 0
                                } else c.head && (c.head.extra = null);
                                c.mode = Q;
                            case Q:
                                if (1024 & c.flags && (q = c.length, q > i && (q = i), q && (c.head && (wa = c.head.extra_len - c.length, c.head.extra || (c.head.extra = new Array(c.head.extra_len)), s.arraySet(c.head.extra, e, g, q, wa)), 512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, c.length -= q), c.length)) break a;
                                c.length = 0, c.mode = R;
                            case R:
                                if (2048 & c.flags) {
                                    if (0 === i) break a;
                                    q = 0;
                                    do wa = e[g + q++], c.head && wa && c.length < 65536 && (c.head.name += String.fromCharCode(wa)); while (wa && q < i);
                                    if (512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, wa) break a
                                } else c.head && (c.head.name = null);
                                c.length = 0, c.mode = S;
                            case S:
                                if (4096 & c.flags) {
                                    if (0 === i) break a;
                                    q = 0;
                                    do wa = e[g + q++], c.head && wa && c.length < 65536 && (c.head.comment += String.fromCharCode(wa)); while (wa && q < i);
                                    if (512 & c.flags && (c.check = u(c.check, e, q, g)), i -= q, g += q, wa) break a
                                } else c.head && (c.head.comment = null);
                                c.mode = T;
                            case T:
                                if (512 & c.flags) {
                                    for (; n < 16;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    if (m !== (65535 & c.check)) {
                                        a.msg = "header crc mismatch", c.mode = ma;
                                        break
                                    }
                                    m = 0, n = 0
                                }
                                c.head && (c.head.hcrc = c.flags >> 9 & 1, c.head.done = !0), a.adler = c.check = 0, c.mode = W;
                                break;
                            case U:
                                for (; n < 32;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                a.adler = c.check = d(m), m = 0, n = 0, c.mode = V;
                            case V:
                                if (0 === c.havedict) return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, F;
                                a.adler = c.check = 1, c.mode = W;
                            case W:
                                if (b === B || b === C) break a;
                            case X:
                                if (c.last) {
                                    m >>>= 7 & n, n -= 7 & n, c.mode = ja;
                                    break
                                }
                                for (; n < 3;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                switch (c.last = 1 & m, m >>>= 1, n -= 1, 3 & m) {
                                    case 0:
                                        c.mode = Y;
                                        break;
                                    case 1:
                                        if (k(c), c.mode = ca, b === C) {
                                            m >>>= 2, n -= 2;
                                            break a
                                        }
                                        break;
                                    case 2:
                                        c.mode = _;
                                        break;
                                    case 3:
                                        a.msg = "invalid block type", c.mode = ma
                                }
                                m >>>= 2, n -= 2;
                                break;
                            case Y:
                                for (m >>>= 7 & n, n -= 7 & n; n < 32;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                if ((65535 & m) !== (m >>> 16 ^ 65535)) {
                                    a.msg = "invalid stored block lengths", c.mode = ma;
                                    break
                                }
                                if (c.length = 65535 & m, m = 0, n = 0, c.mode = Z, b === C) break a;
                            case Z:
                                c.mode = $;
                            case $:
                                if (q = c.length) {
                                    if (q > i && (q = i), q > j && (q = j), 0 === q) break a;
                                    s.arraySet(f, e, g, q, h), i -= q, g += q, j -= q, h += q, c.length -= q;
                                    break
                                }
                                c.mode = W;
                                break;
                            case _:
                                for (; n < 14;) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                if (c.nlen = (31 & m) + 257, m >>>= 5, n -= 5, c.ndist = (31 & m) + 1, m >>>= 5, n -= 5, c.ncode = (15 & m) + 4, m >>>= 4, n -= 4, c.nlen > 286 || c.ndist > 30) {
                                    a.msg = "too many length or distance symbols", c.mode = ma;
                                    break
                                }
                                c.have = 0, c.mode = aa;
                            case aa:
                                for (; c.have < c.ncode;) {
                                    for (; n < 3;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    c.lens[Ca[c.have++]] = 7 & m, m >>>= 3, n -= 3
                                }
                                for (; c.have < 19;) c.lens[Ca[c.have++]] = 0;
                                if (c.lencode = c.lendyn, c.lenbits = 7, ya = {bits: c.lenbits}, xa = w(x, c.lens, 0, 19, c.lencode, 0, c.work, ya), c.lenbits = ya.bits, xa) {
                                    a.msg = "invalid code lengths set", c.mode = ma;
                                    break
                                }
                                c.have = 0, c.mode = ba;
                            case ba:
                                for (; c.have < c.nlen + c.ndist;) {
                                    for (; Aa = c.lencode[m & (1 << c.lenbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(qa <= n);) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    if (sa < 16) m >>>= qa, n -= qa, c.lens[c.have++] = sa; else {
                                        if (16 === sa) {
                                            for (za = qa + 2; n < za;) {
                                                if (0 === i) break a;
                                                i--, m += e[g++] << n, n += 8
                                            }
                                            if (m >>>= qa, n -= qa, 0 === c.have) {
                                                a.msg = "invalid bit length repeat", c.mode = ma;
                                                break
                                            }
                                            wa = c.lens[c.have - 1], q = 3 + (3 & m), m >>>= 2, n -= 2
                                        } else if (17 === sa) {
                                            for (za = qa + 3; n < za;) {
                                                if (0 === i) break a;
                                                i--, m += e[g++] << n, n += 8
                                            }
                                            m >>>= qa, n -= qa, wa = 0, q = 3 + (7 & m), m >>>= 3, n -= 3
                                        } else {
                                            for (za = qa + 7; n < za;) {
                                                if (0 === i) break a;
                                                i--, m += e[g++] << n, n += 8
                                            }
                                            m >>>= qa, n -= qa, wa = 0, q = 11 + (127 & m), m >>>= 7, n -= 7
                                        }
                                        if (c.have + q > c.nlen + c.ndist) {
                                            a.msg = "invalid bit length repeat", c.mode = ma;
                                            break
                                        }
                                        for (; q--;) c.lens[c.have++] = wa
                                    }
                                }
                                if (c.mode === ma) break;
                                if (0 === c.lens[256]) {
                                    a.msg = "invalid code -- missing end-of-block", c.mode = ma;
                                    break
                                }
                                if (c.lenbits = 9, ya = {bits: c.lenbits}, xa = w(y, c.lens, 0, c.nlen, c.lencode, 0, c.work, ya), c.lenbits = ya.bits, xa) {
                                    a.msg = "invalid literal/lengths set", c.mode = ma;
                                    break
                                }
                                if (c.distbits = 6, c.distcode = c.distdyn, ya = {bits: c.distbits}, xa = w(z, c.lens, c.nlen, c.ndist, c.distcode, 0, c.work, ya), c.distbits = ya.bits, xa) {
                                    a.msg = "invalid distances set", c.mode = ma;
                                    break
                                }
                                if (c.mode = ca, b === C) break a;
                            case ca:
                                c.mode = da;
                            case da:
                                if (i >= 6 && j >= 258) {
                                    a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, v(a, p), h = a.next_out, f = a.output, j = a.avail_out, g = a.next_in, e = a.input, i = a.avail_in, m = c.hold, n = c.bits, c.mode === W && (c.back = -1);
                                    break
                                }
                                for (c.back = 0; Aa = c.lencode[m & (1 << c.lenbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(qa <= n);) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                if (ra && 0 === (240 & ra)) {
                                    for (ta = qa, ua = ra, va = sa; Aa = c.lencode[va + ((m & (1 << ta + ua) - 1) >> ta)], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(ta + qa <= n);) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    m >>>= ta, n -= ta, c.back += ta
                                }
                                if (m >>>= qa, n -= qa, c.back += qa, c.length = sa, 0 === ra) {
                                    c.mode = ia;
                                    break
                                }
                                if (32 & ra) {
                                    c.back = -1, c.mode = W;
                                    break
                                }
                                if (64 & ra) {
                                    a.msg = "invalid literal/length code", c.mode = ma;
                                    break
                                }
                                c.extra = 15 & ra, c.mode = ea;
                            case ea:
                                if (c.extra) {
                                    for (za = c.extra; n < za;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    c.length += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra
                                }
                                c.was = c.length, c.mode = fa;
                            case fa:
                                for (; Aa = c.distcode[m & (1 << c.distbits) - 1], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(qa <= n);) {
                                    if (0 === i) break a;
                                    i--, m += e[g++] << n, n += 8
                                }
                                if (0 === (240 & ra)) {
                                    for (ta = qa, ua = ra, va = sa; Aa = c.distcode[va + ((m & (1 << ta + ua) - 1) >> ta)], qa = Aa >>> 24, ra = Aa >>> 16 & 255, sa = 65535 & Aa, !(ta + qa <= n);) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    m >>>= ta, n -= ta, c.back += ta
                                }
                                if (m >>>= qa, n -= qa, c.back += qa, 64 & ra) {
                                    a.msg = "invalid distance code", c.mode = ma;
                                    break
                                }
                                c.offset = sa, c.extra = 15 & ra, c.mode = ga;
                            case ga:
                                if (c.extra) {
                                    for (za = c.extra; n < za;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    c.offset += m & (1 << c.extra) - 1, m >>>= c.extra, n -= c.extra, c.back += c.extra
                                }
                                if (c.offset > c.dmax) {
                                    a.msg = "invalid distance too far back", c.mode = ma;
                                    break
                                }
                                c.mode = ha;
                            case ha:
                                if (0 === j) break a;
                                if (q = p - j, c.offset > q) {
                                    if (q = c.offset - q, q > c.whave && c.sane) {
                                        a.msg = "invalid distance too far back", c.mode = ma;
                                        break
                                    }
                                    q > c.wnext ? (q -= c.wnext, r = c.wsize - q) : r = c.wnext - q, q > c.length && (q = c.length), pa = c.window
                                } else pa = f, r = h - c.offset, q = c.length;
                                q > j && (q = j), j -= q, c.length -= q;
                                do f[h++] = pa[r++]; while (--q);
                                0 === c.length && (c.mode = da);
                                break;
                            case ia:
                                if (0 === j) break a;
                                f[h++] = c.length, j--, c.mode = da;
                                break;
                            case ja:
                                if (c.wrap) {
                                    for (; n < 32;) {
                                        if (0 === i) break a;
                                        i--, m |= e[g++] << n, n += 8
                                    }
                                    if (p -= j, a.total_out += p, c.total += p, p && (a.adler = c.check = c.flags ? u(c.check, f, p, h - p) : t(c.check, f, p, h - p)), p = j, (c.flags ? m : d(m)) !== c.check) {
                                        a.msg = "incorrect data check", c.mode = ma;
                                        break
                                    }
                                    m = 0, n = 0
                                }
                                c.mode = ka;
                            case ka:
                                if (c.wrap && c.flags) {
                                    for (; n < 32;) {
                                        if (0 === i) break a;
                                        i--, m += e[g++] << n, n += 8
                                    }
                                    if (m !== (4294967295 & c.total)) {
                                        a.msg = "incorrect length check", c.mode = ma;
                                        break
                                    }
                                    m = 0, n = 0
                                }
                                c.mode = la;
                            case la:
                                xa = E;
                                break a;
                            case ma:
                                xa = H;
                                break a;
                            case na:
                                return I;
                            case oa:
                            default:
                                return G
                        }
                        return a.next_out = h, a.avail_out = j, a.next_in = g, a.avail_in = i, c.hold = m, c.bits = n, (c.wsize || p !== a.avail_out && c.mode < ma && (c.mode < ja || b !== A)) && l(a, a.output, a.next_out, p - a.avail_out) ? (c.mode = na, I) : (o -= a.avail_in, p -= a.avail_out, a.total_in += o, a.total_out += p, c.total += p, c.wrap && p && (a.adler = c.check = c.flags ? u(c.check, f, p, a.next_out - p) : t(c.check, f, p, a.next_out - p)), a.data_type = c.bits + (c.last ? 64 : 0) + (c.mode === W ? 128 : 0) + (c.mode === ca || c.mode === Z ? 256 : 0), (0 === o && 0 === p || b === A) && xa === D && (xa = J), xa)
                    }

                    function n(a) {
                        if (!a || !a.state) return G;
                        var b = a.state;
                        return b.window && (b.window = null), a.state = null, D
                    }

                    function o(a, b) {
                        var c;
                        return a && a.state ? (c = a.state, 0 === (2 & c.wrap) ? G : (c.head = b, b.done = !1, D)) : G
                    }

                    function p(a, b) {
                        var c, d, e, f = b.length;
                        return a && a.state ? (c = a.state, 0 !== c.wrap && c.mode !== V ? G : c.mode === V && (d = 1, d = t(d, b, f, 0), d !== c.check) ? H : (e = l(a, b, f, f)) ? (c.mode = na, I) : (c.havedict = 1, D)) : G
                    }

                    var q, r, s = c(19), t = c(43), u = c(44), v = c(77), w = c(78), x = 0, y = 1, z = 2, A = 4, B = 5,
                        C = 6, D = 0, E = 1, F = 2, G = -2, H = -3, I = -4, J = -5, K = 8, L = 1, M = 2, N = 3, O = 4,
                        P = 5, Q = 6, R = 7, S = 8, T = 9, U = 10, V = 11, W = 12, X = 13, Y = 14, Z = 15, $ = 16,
                        _ = 17, aa = 18, ba = 19, ca = 20, da = 21, ea = 22, fa = 23, ga = 24, ha = 25, ia = 26,
                        ja = 27, ka = 28, la = 29, ma = 30, na = 31, oa = 32, pa = 852, qa = 592, ra = 15, sa = ra,
                        ta = !0;
                    b.inflateReset = g, b.inflateReset2 = h, b.inflateResetKeep = f, b.inflateInit = j, b.inflateInit2 = i, b.inflate = m, b.inflateEnd = n, b.inflateGetHeader = o, b.inflateSetDictionary = p, b.inflateInfo = "pako inflate (from Nodeca project)"
                }, function (a, b, c) {
                    "use strict";
                    var d = 30, e = 12;
                    a.exports = function (a, b) {
                        var c, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C;
                        c = a.state, f = a.next_in, B = a.input, g = f + (a.avail_in - 5), h = a.next_out, C = a.output, i = h - (b - a.avail_out), j = h + (a.avail_out - 257), k = c.dmax, l = c.wsize, m = c.whave, n = c.wnext, o = c.window, p = c.hold, q = c.bits, r = c.lencode, s = c.distcode, t = (1 << c.lenbits) - 1, u = (1 << c.distbits) - 1;
                        a:do {
                            q < 15 && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), v = r[p & t];
                            b:for (; ;) {
                                if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, 0 === w) C[h++] = 65535 & v; else {
                                    if (!(16 & w)) {
                                        if (0 === (64 & w)) {
                                            v = r[(65535 & v) + (p & (1 << w) - 1)];
                                            continue b
                                        }
                                        if (32 & w) {
                                            c.mode = e;
                                            break a
                                        }
                                        a.msg = "invalid literal/length code", c.mode = d;
                                        break a
                                    }
                                    x = 65535 & v, w &= 15, w && (q < w && (p += B[f++] << q, q += 8), x += p & (1 << w) - 1, p >>>= w, q -= w), q < 15 && (p += B[f++] << q, q += 8, p += B[f++] << q, q += 8), v = s[p & u];
                                    c:for (; ;) {
                                        if (w = v >>> 24, p >>>= w, q -= w, w = v >>> 16 & 255, !(16 & w)) {
                                            if (0 === (64 & w)) {
                                                v = s[(65535 & v) + (p & (1 << w) - 1)];
                                                continue c
                                            }
                                            a.msg = "invalid distance code", c.mode = d;
                                            break a
                                        }
                                        if (y = 65535 & v, w &= 15, q < w && (p += B[f++] << q, q += 8, q < w && (p += B[f++] << q, q += 8)), y += p & (1 << w) - 1, y > k) {
                                            a.msg = "invalid distance too far back", c.mode = d;
                                            break a
                                        }
                                        if (p >>>= w, q -= w, w = h - i, y > w) {
                                            if (w = y - w, w > m && c.sane) {
                                                a.msg = "invalid distance too far back", c.mode = d;
                                                break a
                                            }
                                            if (z = 0, A = o, 0 === n) {
                                                if (z += l - w, w < x) {
                                                    x -= w;
                                                    do C[h++] = o[z++]; while (--w);
                                                    z = h - y, A = C
                                                }
                                            } else if (n < w) {
                                                if (z += l + n - w, w -= n, w < x) {
                                                    x -= w;
                                                    do C[h++] = o[z++]; while (--w);
                                                    if (z = 0, n < x) {
                                                        w = n, x -= w;
                                                        do C[h++] = o[z++]; while (--w);
                                                        z = h - y, A = C
                                                    }
                                                }
                                            } else if (z += n - w, w < x) {
                                                x -= w;
                                                do C[h++] = o[z++]; while (--w);
                                                z = h - y, A = C
                                            }
                                            for (; x > 2;) C[h++] = A[z++], C[h++] = A[z++], C[h++] = A[z++], x -= 3;
                                            x && (C[h++] = A[z++], x > 1 && (C[h++] = A[z++]))
                                        } else {
                                            z = h - y;
                                            do C[h++] = C[z++], C[h++] = C[z++], C[h++] = C[z++], x -= 3; while (x > 2);
                                            x && (C[h++] = C[z++], x > 1 && (C[h++] = C[z++]))
                                        }
                                        break
                                    }
                                }
                                break
                            }
                        } while (f < g && h < j);
                        x = q >> 3, f -= x, q -= x << 3, p &= (1 << q) - 1, a.next_in = f, a.next_out = h, a.avail_in = f < g ? 5 + (g - f) : 5 - (f - g), a.avail_out = h < j ? 257 + (j - h) : 257 - (h - j), c.hold = p, c.bits = q
                    }
                }, function (a, b, c) {
                    "use strict";
                    var d = c(19), e = 15, f = 852, g = 592, h = 0, i = 1, j = 2,
                        k = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                        l = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                        m = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
                        n = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
                    a.exports = function (a, b, c, o, p, q, r, s) {
                        var t, u, v, w, x, y, z, A, B, C = s.bits, D = 0, E = 0, F = 0, G = 0, H = 0, I = 0, J = 0,
                            K = 0, L = 0, M = 0, N = null, O = 0, P = new d.Buf16(e + 1), Q = new d.Buf16(e + 1),
                            R = null, S = 0;
                        for (D = 0; D <= e; D++) P[D] = 0;
                        for (E = 0; E < o; E++) P[b[c + E]]++;
                        for (H = C, G = e; G >= 1 && 0 === P[G]; G--) ;
                        if (H > G && (H = G), 0 === G) return p[q++] = 20971520, p[q++] = 20971520, s.bits = 1, 0;
                        for (F = 1; F < G && 0 === P[F]; F++) ;
                        for (H < F && (H = F), K = 1, D = 1; D <= e; D++) if (K <<= 1, K -= P[D], K < 0) return -1;
                        if (K > 0 && (a === h || 1 !== G)) return -1;
                        for (Q[1] = 0, D = 1; D < e; D++) Q[D + 1] = Q[D] + P[D];
                        for (E = 0; E < o; E++) 0 !== b[c + E] && (r[Q[b[c + E]]++] = E);
                        if (a === h ? (N = R = r, y = 19) : a === i ? (N = k, O -= 257, R = l, S -= 257, y = 256) : (N = m, R = n, y = -1), M = 0, E = 0, D = F, x = q, I = H, J = 0, v = -1, L = 1 << H, w = L - 1, a === i && L > f || a === j && L > g) return 1;
                        for (; ;) {
                            z = D - J, r[E] < y ? (A = 0, B = r[E]) : r[E] > y ? (A = R[S + r[E]], B = N[O + r[E]]) : (A = 96, B = 0), t = 1 << D - J, u = 1 << I, F = u;
                            do u -= t, p[x + (M >> J) + u] = z << 24 | A << 16 | B | 0; while (0 !== u);
                            for (t = 1 << D - 1; M & t;) t >>= 1;
                            if (0 !== t ? (M &= t - 1, M += t) : M = 0, E++, 0 === --P[D]) {
                                if (D === G) break;
                                D = b[c + r[E]]
                            }
                            if (D > H && (M & w) !== v) {
                                for (0 === J && (J = H), x += F, I = D - J, K = 1 << I; I + J < G && (K -= P[I + J], !(K <= 0));) I++, K <<= 1;
                                if (L += 1 << I, a === i && L > f || a === j && L > g) return 1;
                                v = M & w, p[v] = H << 24 | I << 16 | x - q | 0
                            }
                        }
                        return 0 !== M && (p[x + M] = D - J << 24 | 64 << 16 | 0), s.bits = H, 0
                    }
                }, function (a, b, c) {
                    "use strict";
                    a.exports = {
                        Z_NO_FLUSH: 0,
                        Z_PARTIAL_FLUSH: 1,
                        Z_SYNC_FLUSH: 2,
                        Z_FULL_FLUSH: 3,
                        Z_FINISH: 4,
                        Z_BLOCK: 5,
                        Z_TREES: 6,
                        Z_OK: 0,
                        Z_STREAM_END: 1,
                        Z_NEED_DICT: 2,
                        Z_ERRNO: -1,
                        Z_STREAM_ERROR: -2,
                        Z_DATA_ERROR: -3,
                        Z_BUF_ERROR: -5,
                        Z_NO_COMPRESSION: 0,
                        Z_BEST_SPEED: 1,
                        Z_BEST_COMPRESSION: 9,
                        Z_DEFAULT_COMPRESSION: -1,
                        Z_FILTERED: 1,
                        Z_HUFFMAN_ONLY: 2,
                        Z_RLE: 3,
                        Z_FIXED: 4,
                        Z_DEFAULT_STRATEGY: 0,
                        Z_BINARY: 0,
                        Z_TEXT: 1,
                        Z_UNKNOWN: 2,
                        Z_DEFLATED: 8
                    }
                }, function (a, b, c) {
                    function d(a) {
                        function b(a, b, c, d, e, f) {
                            this.status = 0, this.root = null, this.maxbit = 0;
                            var g, h, i, j = [], k = [], l = [], m = [],
                                n = {extra: 0, bitcnt: 0, lbase: 0, next: null};
                            i = this.root = null;
                            for (var o = 0; o < 17; o++) k[o] = 0, l[o] = 0, j[o] = 0;
                            for (o = 0; o < 288; o++) m[o] = 0;
                            g = b > 256 ? a[256] : 16;
                            for (var p = -1; ++p < b;) k[a[p]]++;
                            if (k[0] != b) {
                                for (var q = 1; q <= 16 && 0 == k[q]; q++) ;
                                var r = q;
                                for (o = 16; 0 != o && 0 == k[o]; o--) ;
                                var s = o;
                                f < q && (f = q);
                                for (var t = 1 << q; q < o; q++, t <<= 1) if ((t -= k[q]) < 0) return this.status = 2, void (this.maxbit = f);
                                if ((t -= k[o]) < 0) return this.status = 2, void (this.maxbit = f);
                                k[o] += t, j[1] = q = 0, p = 1;
                                for (var u = 2; --o > 0;) j[u++] = q += k[p++];
                                p = 0, o = 0;
                                do (q = a[p++]) && (m[j[q]++] = o); while (++o < b);
                                b = j[s], j[0] = o = 0, p = 0;
                                for (var v = -1, w = l[0] = 0, x = null, y = 0, z = []; r <= s; r++) for (var A = k[r]; A-- > 0;) {
                                    for (; r > w + l[1 + v];) {
                                        if (w += l[1 + v], v++, y = (y = s - w) > f ? f : y, (h = 1 << (q = r - w)) > A + 1) for (h -= A + 1, u = r; ++q < y && !((h <<= 1) <= k[++u]);) h -= k[u];
                                        for (w + q > g && w < g && (q = g - w), y = 1 << q, l[1 + v] = q, x = []; x.length < y;) x.push({
                                            extra: 0,
                                            bitcnt: 0,
                                            lbase: 0,
                                            next: null
                                        });
                                        i = null == i ? this.root = {next: null, list: null} : i.next = {
                                            next: null,
                                            list: null
                                        }, i.next = null, i.list = x, z[v] = x, v > 0 && (j[v] = o, n.bitcnt = l[v], n.extra = 16 + q, n.next = x, q = (o & (1 << w) - 1) >> w - l[v], z[v - 1][q].extra = n.extra, z[v - 1][q].bitcnt = n.bitcnt, z[v - 1][q].lbase = n.lbase, z[v - 1][q].next = n.next)
                                    }
                                    for (n.bitcnt = r - w, p >= b ? n.extra = 99 : m[p] < c ? (n.extra = m[p] < 256 ? 16 : 15, n.lbase = m[p++]) : (n.extra = e[m[p] - c], n.lbase = d[m[p++] - c]), h = 1 << r - w, q = o >> w; q < y; q += h) x[q].extra = n.extra, x[q].bitcnt = n.bitcnt, x[q].lbase = n.lbase, x[q].next = n.next;
                                    for (q = 1 << r - 1; 0 != (o & q); q >>= 1) o ^= q;
                                    for (o ^= q; (o & (1 << w) - 1) != j[v];) w -= l[v], v--
                                }
                                this.maxbit = l[1], this.status = 0 != t && 1 != s ? 1 : 0
                            }
                        }

                        function c(b) {
                            for (; v < b;) u |= a[A++] << v, v += 8;
                            return u
                        }

                        function d(a) {
                            return v -= a, u >>= a
                        }

                        function f(b) {
                            for (; v < b;) u |= a[A++] << v, v += 8;
                            var c = u & B[b];
                            return u >>= b, v -= b, c
                        }

                        function g(a, b, e) {
                            var g, h;
                            if (0 == e) return 0;
                            for (var i = 0; ;) {
                                for (h = m.list[c(o) & B[o]], g = h.extra; g > 16;) {
                                    if (99 == g) return -1;
                                    d(h.bitcnt), g -= 16, h = h.next[c(g) & B[g]], g = h.extra
                                }
                                if (d(h.bitcnt), 16 != g) {
                                    if (15 == g) break;
                                    for (y = h.lbase + f(g), h = n.list[c(p) & B[p]], g = h.extra; g > 16;) {
                                        if (99 == g) return -1;
                                        d(h.bitcnt), g -= 16, h = h.next[c(g) & B[g]], g = h.extra
                                    }
                                    for (d(h.bitcnt), z = s - h.lbase - f(g); y > 0 && i < e;) y--, z &= q - 1, s &= q - 1, a[b + i++] = r[s++] = r[z++];
                                    if (i == e) return e
                                } else if (s &= q - 1, a[b + i++] = r[s++] = h.lbase, i == e) return e
                            }
                            return w = -1, i
                        }

                        function h(a, b, c) {
                            d(7 & v);
                            var e = f(16);
                            if (e != (65535 & ~f(16))) return -1;
                            for (y = e, e = 0; y > 0 && e < c;) y--, s &= q - 1, a[b + e++] = r[s++] = f(8);
                            return 0 == y && (w = -1), e
                        }

                        function i(a, c, d) {
                            var e = 0;
                            if (null == t) {
                                for (var f = [], h = 0; h < 144; h++) f[h] = 8;
                                for (; h < 256; h++) f[h] = 9;
                                for (; h < 280; h++) f[h] = 7;
                                for (; h < 288; h++) f[h] = 8;
                                l = 7;
                                var i = new b(f, 288, 257, C, D, l);
                                if (0 != i.status) return -1;
                                for (t = i.root, l = i.maxbit, h = 0; h < 30; h++) f[h] = 5;
                                if (e = 5, i = new b(f, 30, 0, E, F, e), i.status > 1) return t = null, -1;
                                k = i.root, e = i.maxbit
                            }
                            return m = t, n = k, o = l, p = e, g(a, c, d)
                        }

                        function j(a, e, h) {
                            for (var i = new Array(572), j = 0; j < 572; j++) i[j] = 0;
                            var k = 257 + f(5), l = 1 + f(5), q = 4 + f(4);
                            if (k > 286 || l > 30) return -1;
                            for (var r = 0; r < q; r++) i[G[r]] = f(3);
                            for (; r < 19; r++) i[G[r]] = 0;
                            o = 7;
                            var s = new b(i, 19, 19, null, null, o);
                            if (0 != s.status) return -1;
                            m = s.root, o = s.maxbit;
                            for (var t = k + l, u = 0, v = 0; u < t;) {
                                var w = m.list[c(o) & B[o]];
                                if (r = w.bitcnt, d(r), r = w.lbase, r < 16) i[u++] = v = r; else if (16 == r) {
                                    if (r = 3 + f(2), u + r > t) return -1;
                                    for (; r-- > 0;) i[u++] = v
                                } else if (17 == r) {
                                    if (r = 3 + f(3), u + r > t) return -1;
                                    for (; r-- > 0;) i[u++] = 0;
                                    v = 0
                                } else {
                                    if (r = 11 + f(7), u + r > t) return -1;
                                    for (; r-- > 0;) i[u++] = 0;
                                    v = 0
                                }
                            }
                            if (o = 9, s = new b(i, k, 257, C, D, o), 0 == o && (s.status = 1), 0 != s.status) return -1;
                            for (m = s.root, o = s.maxbit, u = 0; u < l; u++) i[u] = i[u + k];
                            return p = 6, s = new b(i, l, 0, E, F, p), n = s.root, p = s.maxbit, 0 == p && k > 257 || 0 != s.status ? -1 : g(a, e, h)
                        }

                        var k, l, m, n, o, p, q = 32768, r = new e(65536), s = 0, t = null, u = 0, v = 0, w = -1,
                            x = !1, y = 0, z = 0, A = 0,
                            B = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535],
                            C = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                            D = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 99, 99],
                            E = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577],
                            F = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                            G = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                        return {
                            inflate: function (a) {
                                m = null;
                                for (var b, c = a.length, d = 0; d < c;) {
                                    if (x && w == -1) return;
                                    if (y > 0) {
                                        if (0 != w) for (; y > 0 && d < c;) y--, z &= q - 1, s &= q - 1, a[d++] = r[s++] = r[z++]; else {
                                            for (; y > 0 && d < c;) y--, s &= q - 1, a[d++] = r[s++] = f(8);
                                            0 == y && (w = -1)
                                        }
                                        if (d == c) return
                                    }
                                    if (w == -1) {
                                        if (x) break;
                                        x = 0 != f(1), w = f(2), m = null, y = 0
                                    }
                                    switch (w) {
                                        case 0:
                                            b = h(a, d, c - d);
                                            break;
                                        case 1:
                                            b = null != m ? g(a, d, c - d) : i(a, d, c - d);
                                            break;
                                        case 2:
                                            b = null != m ? g(a, d, c - d) : j(a, d, c - d);
                                            break;
                                        default:
                                            b = -1
                                    }
                                    if (b == -1) return;
                                    d += b
                                }
                            }
                        }
                    }

                    var e = c(6).Buffer;
                    a.exports = function (a) {
                        var b = c(35);
                        return {
                            inflateAsync: function (c) {
                                var d = b.createInflateRaw(), f = [], g = 0;
                                d.on("data", function (a) {
                                    f.push(a), g += a.length
                                }), d.on("end", function () {
                                    var a = new e(g), b = 0;
                                    a.fill(0);
                                    for (var d = 0; d < f.length; d++) {
                                        var h = f[d];
                                        h.copy(a, b), b += h.length
                                    }
                                    c && c(a)
                                }), d.end(a)
                            }, inflate: function (b) {
                                var c = {x: new d(a)};
                                c.x.inflate(b), delete c.x
                            }
                        }
                    }
                }, function (a, b, c) {
                    (function (b) {
                        var d = c(31), e = c(34), f = c(14);
                        a.exports = function (a, g) {
                            function h() {
                                k = {}, j = new Array(p.diskEntries);
                                for (var a = p.offset, b = 0; b < j.length; b++) {
                                    var c = a, e = new d(o);
                                    e.header = o.slice(c, c += f.Constants.CENHDR), e.entryName = o.slice(c, c += e.header.fileNameLength), e.header.extraLength && (e.extra = o.slice(c, c += e.header.extraLength)), e.header.commentLength && (e.comment = o.slice(c, c + e.header.commentLength)), a += e.header.entryHeaderSize, j[b] = e, k[e.entryName] = e
                                }
                            }

                            function i() {
                                var a = o.length - f.Constants.ENDHDR, b = Math.max(0, a - 65535), c = -1;
                                for (a; a >= b; a--) if (80 == o[a] && o.readUInt32LE(a) == f.Constants.ENDSIG) {
                                    c = a;
                                    break
                                }
                                if (!~c) throw f.Errors.INVALID_FORMAT;
                                p.loadFromBinary(o.slice(c, c + f.Constants.ENDHDR)), p.commentLength && (l = o.slice(c + f.Constants.ENDHDR)), h()
                            }

                            var j = [], k = {}, l = new b(0), m = "", n = c(16), o = null, p = new e.MainHeader;
                            return g == f.Constants.FILE ? (m = a, o = n.readFileSync(m), i()) : g == f.Constants.BUFFER && (o = a, i()), {
                                get entries() {
                                    return j
                                }, get comment() {
                                    return l.toString()
                                }, set comment(a) {
                                    p.commentLength = a.length, l = a
                                }, getEntry: function (a) {
                                    return k[a] || null
                                }, setEntry: function (a) {
                                    j.push(a), k[a.entryName] = a, p.totalEntries = j.length
                                }, deleteEntry: function (a) {
                                    var b = k[a];
                                    if (b && b.isDirectory) {
                                        var c = this;
                                        this.getEntryChildren(b).forEach(function (b) {
                                            b.entryName != a && c.deleteEntry(b.entryName)
                                        })
                                    }
                                    j.splice(j.indexOf(b), 1), delete k[a], p.totalEntries = j.length
                                }, getEntryChildren: function (a) {
                                    if (a.isDirectory) {
                                        var b = [], c = a.entryName, d = c.length;
                                        return j.forEach(function (a) {
                                            a.entryName.substr(0, d) == c && b.push(a)
                                        }), b
                                    }
                                    return []
                                }, compressToBuffer: function () {
                                    j.length > 1 && j.sort(function (a, b) {
                                        var c = a.entryName.toLowerCase(), d = b.entryName.toLowerCase();
                                        return c < d ? -1 : c > d ? 1 : 0
                                    });
                                    var a = 0, c = [], d = [], e = 0;
                                    p.size = 0, p.offset = 0, j.forEach(function (f) {
                                        f.header.offset = e;
                                        var g = f.getCompressedData(), h = f.header.dataHeaderToBinary(),
                                            i = new b(f.entryName + f.extra.toString()),
                                            j = h.length + i.length + g.length;
                                        e += j, c.push(h), c.push(i), c.push(g);
                                        var k = f.packHeader();
                                        d.push(k), p.size += k.length, a += j + k.length
                                    }), a += p.mainHeaderSize, p.offset = e, e = 0;
                                    var g = new b(a);
                                    c.forEach(function (a) {
                                        a.copy(g, e), e += a.length
                                    }), d.forEach(function (a) {
                                        a.copy(g, e), e += a.length
                                    });
                                    var h = p.toBinary();
                                    return l && l.copy(h, f.Constants.ENDHDR), h.copy(g, e), g
                                }, toAsyncBuffer: function (a, c, d, e) {
                                    j.length > 1 && j.sort(function (a, b) {
                                        var c = a.entryName.toLowerCase(), d = b.entryName.toLowerCase();
                                        return c > d ? -1 : c < d ? 1 : 0
                                    });
                                    var g = 0, h = [], i = [], k = 0;
                                    p.size = 0, p.offset = 0;
                                    var m = function (c) {
                                        var j, m = arguments.callee;
                                        if (c.length) {
                                            var j = c.pop(), n = j.entryName + j.extra.toString();
                                            d && d(n), j.getCompressedDataAsync(function (d) {
                                                e && e(n), j.header.offset = k;
                                                var o = j.header.dataHeaderToBinary(), q = new b(n),
                                                    r = o.length + q.length + d.length;
                                                k += r, h.push(o), h.push(q), h.push(d);
                                                var s = j.packHeader();
                                                if (i.push(s), p.size += s.length, g += r + s.length, c.length) m(c); else {
                                                    g += p.mainHeaderSize, p.offset = k, k = 0;
                                                    var t = new b(g);
                                                    h.forEach(function (a) {
                                                        a.copy(t, k), k += a.length
                                                    }), i.forEach(function (a) {
                                                        a.copy(t, k), k += a.length
                                                    });
                                                    var u = p.toBinary();
                                                    l && l.copy(u, f.Constants.ENDHDR), u.copy(t, k), a(t)
                                                }
                                            })
                                        }
                                    };
                                    m(j)
                                }
                            }
                        }
                    }).call(b, c(6).Buffer)
                }, function (module, exports, __webpack_require__) {
                    (function (process, global, module) {
                        var __WEBPACK_AMD_DEFINE_RESULT__,
                            _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) {
                                return typeof a
                            } : function (a) {
                                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                            };
                        !function () {
                            "use strict";

                            function Md5(a) {
                                if (a) blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0, this.blocks = blocks, this.buffer8 = buffer8; else if (ARRAY_BUFFER) {
                                    var b = new ArrayBuffer(68);
                                    this.buffer8 = new Uint8Array(b), this.blocks = new Uint32Array(b)
                                } else this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                                this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = 0, this.finalized = this.hashed = !1, this.first = !0
                            }

                            var ERROR = "input is invalid type",
                                WINDOW = "object" === ("undefined" == typeof window ? "undefined" : _typeof(window)),
                                root = WINDOW ? window : {};
                            root.JS_MD5_NO_WINDOW && (WINDOW = !1);
                            var WEB_WORKER = !WINDOW && "object" === ("undefined" == typeof self ? "undefined" : _typeof(self)),
                                NODE_JS = !root.JS_MD5_NO_NODE_JS && "object" === ("undefined" == typeof process ? "undefined" : _typeof(process)) && process.versions && process.versions.node;
                            NODE_JS ? root = global : WEB_WORKER && (root = self);
                            var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && "object" === _typeof(module) && module.exports,
                                AMD = __webpack_require__(84),
                                ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
                                HEX_CHARS = "0123456789abcdef".split(""), EXTRA = [128, 32768, 8388608, -2147483648],
                                SHIFT = [0, 8, 16, 24],
                                OUTPUT_TYPES = ["hex", "array", "digest", "buffer", "arrayBuffer", "base64"],
                                BASE64_ENCODE_CHAR = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split(""),
                                blocks = [], buffer8;
                            if (ARRAY_BUFFER) {
                                var buffer = new ArrayBuffer(68);
                                buffer8 = new Uint8Array(buffer), blocks = new Uint32Array(buffer)
                            }
                            !root.JS_MD5_NO_NODE_JS && Array.isArray || (Array.isArray = function (a) {
                                return "[object Array]" === Object.prototype.toString.call(a)
                            }), !ARRAY_BUFFER || !root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function (a) {
                                return "object" === ("undefined" == typeof a ? "undefined" : _typeof(a)) && a.buffer && a.buffer.constructor === ArrayBuffer
                            });
                            var createOutputMethod = function (a) {
                                return function (b) {
                                    return new Md5((!0)).update(b)[a]()
                                }
                            }, createMethod = function () {
                                var a = createOutputMethod("hex");
                                NODE_JS && (a = nodeWrap(a)), a.create = function () {
                                    return new Md5
                                }, a.update = function (b) {
                                    return a.create().update(b)
                                };
                                for (var b = 0; b < OUTPUT_TYPES.length; ++b) {
                                    var c = OUTPUT_TYPES[b];
                                    a[c] = createOutputMethod(c)
                                }
                                return a
                            }, nodeWrap = function nodeWrap(method) {
                                var crypto = eval("require('crypto')"), Buffer = eval("require('buffer').Buffer"),
                                    nodeMethod = function (a) {
                                        if ("string" == typeof a) return crypto.createHash("md5").update(a, "utf8").digest("hex");
                                        if (null === a || void 0 === a) throw ERROR;
                                        return a.constructor === ArrayBuffer && (a = new Uint8Array(a)), Array.isArray(a) || ArrayBuffer.isView(a) || a.constructor === Buffer ? crypto.createHash("md5").update(new Buffer(a)).digest("hex") : method(a)
                                    };
                                return nodeMethod
                            };
                            Md5.prototype.update = function (a) {
                                if (!this.finalized) {
                                    var b, c = "undefined" == typeof a ? "undefined" : _typeof(a);
                                    if ("string" !== c) {
                                        if ("object" !== c) throw ERROR;
                                        if (null === a) throw ERROR;
                                        if (ARRAY_BUFFER && a.constructor === ArrayBuffer) a = new Uint8Array(a); else if (!(Array.isArray(a) || ARRAY_BUFFER && ArrayBuffer.isView(a))) throw ERROR;
                                        b = !0
                                    }
                                    for (var d, e, f = 0, g = a.length, h = this.blocks, i = this.buffer8; f < g;) {
                                        if (this.hashed && (this.hashed = !1, h[0] = h[16], h[16] = h[1] = h[2] = h[3] = h[4] = h[5] = h[6] = h[7] = h[8] = h[9] = h[10] = h[11] = h[12] = h[13] = h[14] = h[15] = 0), b) if (ARRAY_BUFFER) for (e = this.start; f < g && e < 64; ++f) i[e++] = a[f]; else for (e = this.start; f < g && e < 64; ++f) h[e >> 2] |= a[f] << SHIFT[3 & e++]; else if (ARRAY_BUFFER) for (e = this.start; f < g && e < 64; ++f) d = a.charCodeAt(f), d < 128 ? i[e++] = d : d < 2048 ? (i[e++] = 192 | d >> 6, i[e++] = 128 | 63 & d) : d < 55296 || d >= 57344 ? (i[e++] = 224 | d >> 12, i[e++] = 128 | d >> 6 & 63, i[e++] = 128 | 63 & d) : (d = 65536 + ((1023 & d) << 10 | 1023 & a.charCodeAt(++f)), i[e++] = 240 | d >> 18, i[e++] = 128 | d >> 12 & 63, i[e++] = 128 | d >> 6 & 63, i[e++] = 128 | 63 & d); else for (e = this.start; f < g && e < 64; ++f) d = a.charCodeAt(f), d < 128 ? h[e >> 2] |= d << SHIFT[3 & e++] : d < 2048 ? (h[e >> 2] |= (192 | d >> 6) << SHIFT[3 & e++], h[e >> 2] |= (128 | 63 & d) << SHIFT[3 & e++]) : d < 55296 || d >= 57344 ? (h[e >> 2] |= (224 | d >> 12) << SHIFT[3 & e++], h[e >> 2] |= (128 | d >> 6 & 63) << SHIFT[3 & e++], h[e >> 2] |= (128 | 63 & d) << SHIFT[3 & e++]) : (d = 65536 + ((1023 & d) << 10 | 1023 & a.charCodeAt(++f)), h[e >> 2] |= (240 | d >> 18) << SHIFT[3 & e++], h[e >> 2] |= (128 | d >> 12 & 63) << SHIFT[3 & e++], h[e >> 2] |= (128 | d >> 6 & 63) << SHIFT[3 & e++], h[e >> 2] |= (128 | 63 & d) << SHIFT[3 & e++]);
                                        this.lastByteIndex = e, this.bytes += e - this.start, e >= 64 ? (this.start = e - 64, this.hash(), this.hashed = !0) : this.start = e
                                    }
                                    return this
                                }
                            }, Md5.prototype.finalize = function () {
                                if (!this.finalized) {
                                    this.finalized = !0;
                                    var a = this.blocks, b = this.lastByteIndex;
                                    a[b >> 2] |= EXTRA[3 & b], b >= 56 && (this.hashed || this.hash(), a[0] = a[16], a[16] = a[1] = a[2] = a[3] = a[4] = a[5] = a[6] = a[7] = a[8] = a[9] = a[10] = a[11] = a[12] = a[13] = a[14] = a[15] = 0), a[14] = this.bytes << 3, this.hash()
                                }
                            }, Md5.prototype.hash = function () {
                                var a, b, c, d, e, f, g = this.blocks;
                                this.first ? (a = g[0] - 680876937, a = (a << 7 | a >>> 25) - 271733879 << 0, d = (-1732584194 ^ 2004318071 & a) + g[1] - 117830708, d = (d << 12 | d >>> 20) + a << 0, c = (-271733879 ^ d & (a ^ -271733879)) + g[2] - 1126478375, c = (c << 17 | c >>> 15) + d << 0, b = (a ^ c & (d ^ a)) + g[3] - 1316259209, b = (b << 22 | b >>> 10) + c << 0) : (a = this.h0, b = this.h1, c = this.h2, d = this.h3, a += (d ^ b & (c ^ d)) + g[0] - 680876936, a = (a << 7 | a >>> 25) + b << 0, d += (c ^ a & (b ^ c)) + g[1] - 389564586, d = (d << 12 | d >>> 20) + a << 0, c += (b ^ d & (a ^ b)) + g[2] + 606105819, c = (c << 17 | c >>> 15) + d << 0, b += (a ^ c & (d ^ a)) + g[3] - 1044525330, b = (b << 22 | b >>> 10) + c << 0), a += (d ^ b & (c ^ d)) + g[4] - 176418897, a = (a << 7 | a >>> 25) + b << 0, d += (c ^ a & (b ^ c)) + g[5] + 1200080426, d = (d << 12 | d >>> 20) + a << 0, c += (b ^ d & (a ^ b)) + g[6] - 1473231341, c = (c << 17 | c >>> 15) + d << 0, b += (a ^ c & (d ^ a)) + g[7] - 45705983, b = (b << 22 | b >>> 10) + c << 0, a += (d ^ b & (c ^ d)) + g[8] + 1770035416, a = (a << 7 | a >>> 25) + b << 0, d += (c ^ a & (b ^ c)) + g[9] - 1958414417, d = (d << 12 | d >>> 20) + a << 0, c += (b ^ d & (a ^ b)) + g[10] - 42063, c = (c << 17 | c >>> 15) + d << 0, b += (a ^ c & (d ^ a)) + g[11] - 1990404162, b = (b << 22 | b >>> 10) + c << 0, a += (d ^ b & (c ^ d)) + g[12] + 1804603682, a = (a << 7 | a >>> 25) + b << 0, d += (c ^ a & (b ^ c)) + g[13] - 40341101, d = (d << 12 | d >>> 20) + a << 0, c += (b ^ d & (a ^ b)) + g[14] - 1502002290, c = (c << 17 | c >>> 15) + d << 0, b += (a ^ c & (d ^ a)) + g[15] + 1236535329, b = (b << 22 | b >>> 10) + c << 0, a += (c ^ d & (b ^ c)) + g[1] - 165796510, a = (a << 5 | a >>> 27) + b << 0, d += (b ^ c & (a ^ b)) + g[6] - 1069501632, d = (d << 9 | d >>> 23) + a << 0, c += (a ^ b & (d ^ a)) + g[11] + 643717713, c = (c << 14 | c >>> 18) + d << 0, b += (d ^ a & (c ^ d)) + g[0] - 373897302, b = (b << 20 | b >>> 12) + c << 0, a += (c ^ d & (b ^ c)) + g[5] - 701558691, a = (a << 5 | a >>> 27) + b << 0, d += (b ^ c & (a ^ b)) + g[10] + 38016083, d = (d << 9 | d >>> 23) + a << 0, c += (a ^ b & (d ^ a)) + g[15] - 660478335, c = (c << 14 | c >>> 18) + d << 0, b += (d ^ a & (c ^ d)) + g[4] - 405537848, b = (b << 20 | b >>> 12) + c << 0, a += (c ^ d & (b ^ c)) + g[9] + 568446438, a = (a << 5 | a >>> 27) + b << 0, d += (b ^ c & (a ^ b)) + g[14] - 1019803690, d = (d << 9 | d >>> 23) + a << 0, c += (a ^ b & (d ^ a)) + g[3] - 187363961, c = (c << 14 | c >>> 18) + d << 0, b += (d ^ a & (c ^ d)) + g[8] + 1163531501, b = (b << 20 | b >>> 12) + c << 0, a += (c ^ d & (b ^ c)) + g[13] - 1444681467, a = (a << 5 | a >>> 27) + b << 0, d += (b ^ c & (a ^ b)) + g[2] - 51403784, d = (d << 9 | d >>> 23) + a << 0, c += (a ^ b & (d ^ a)) + g[7] + 1735328473, c = (c << 14 | c >>> 18) + d << 0, b += (d ^ a & (c ^ d)) + g[12] - 1926607734, b = (b << 20 | b >>> 12) + c << 0, e = b ^ c, a += (e ^ d) + g[5] - 378558, a = (a << 4 | a >>> 28) + b << 0, d += (e ^ a) + g[8] - 2022574463, d = (d << 11 | d >>> 21) + a << 0, f = d ^ a, c += (f ^ b) + g[11] + 1839030562, c = (c << 16 | c >>> 16) + d << 0, b += (f ^ c) + g[14] - 35309556, b = (b << 23 | b >>> 9) + c << 0, e = b ^ c, a += (e ^ d) + g[1] - 1530992060, a = (a << 4 | a >>> 28) + b << 0, d += (e ^ a) + g[4] + 1272893353, d = (d << 11 | d >>> 21) + a << 0, f = d ^ a, c += (f ^ b) + g[7] - 155497632, c = (c << 16 | c >>> 16) + d << 0, b += (f ^ c) + g[10] - 1094730640, b = (b << 23 | b >>> 9) + c << 0, e = b ^ c, a += (e ^ d) + g[13] + 681279174, a = (a << 4 | a >>> 28) + b << 0, d += (e ^ a) + g[0] - 358537222, d = (d << 11 | d >>> 21) + a << 0, f = d ^ a, c += (f ^ b) + g[3] - 722521979, c = (c << 16 | c >>> 16) + d << 0, b += (f ^ c) + g[6] + 76029189, b = (b << 23 | b >>> 9) + c << 0, e = b ^ c, a += (e ^ d) + g[9] - 640364487, a = (a << 4 | a >>> 28) + b << 0, d += (e ^ a) + g[12] - 421815835, d = (d << 11 | d >>> 21) + a << 0, f = d ^ a, c += (f ^ b) + g[15] + 530742520, c = (c << 16 | c >>> 16) + d << 0, b += (f ^ c) + g[2] - 995338651, b = (b << 23 | b >>> 9) + c << 0, a += (c ^ (b | ~d)) + g[0] - 198630844, a = (a << 6 | a >>> 26) + b << 0, d += (b ^ (a | ~c)) + g[7] + 1126891415, d = (d << 10 | d >>> 22) + a << 0,c += (a ^ (d | ~b)) + g[14] - 1416354905,c = (c << 15 | c >>> 17) + d << 0,b += (d ^ (c | ~a)) + g[5] - 57434055,b = (b << 21 | b >>> 11) + c << 0,a += (c ^ (b | ~d)) + g[12] + 1700485571,a = (a << 6 | a >>> 26) + b << 0,d += (b ^ (a | ~c)) + g[3] - 1894986606,d = (d << 10 | d >>> 22) + a << 0,c += (a ^ (d | ~b)) + g[10] - 1051523,c = (c << 15 | c >>> 17) + d << 0,b += (d ^ (c | ~a)) + g[1] - 2054922799,b = (b << 21 | b >>> 11) + c << 0,a += (c ^ (b | ~d)) + g[8] + 1873313359,a = (a << 6 | a >>> 26) + b << 0,d += (b ^ (a | ~c)) + g[15] - 30611744,d = (d << 10 | d >>> 22) + a << 0,c += (a ^ (d | ~b)) + g[6] - 1560198380,c = (c << 15 | c >>> 17) + d << 0,b += (d ^ (c | ~a)) + g[13] + 1309151649,b = (b << 21 | b >>> 11) + c << 0,a += (c ^ (b | ~d)) + g[4] - 145523070,a = (a << 6 | a >>> 26) + b << 0,d += (b ^ (a | ~c)) + g[11] - 1120210379,d = (d << 10 | d >>> 22) + a << 0,c += (a ^ (d | ~b)) + g[2] + 718787259,c = (c << 15 | c >>> 17) + d << 0,b += (d ^ (c | ~a)) + g[9] - 343485551,b = (b << 21 | b >>> 11) + c << 0,this.first ? (this.h0 = a + 1732584193 << 0, this.h1 = b - 271733879 << 0, this.h2 = c - 1732584194 << 0, this.h3 = d + 271733878 << 0, this.first = !1) : (this.h0 = this.h0 + a << 0, this.h1 = this.h1 + b << 0, this.h2 = this.h2 + c << 0, this.h3 = this.h3 + d << 0)
                            }, Md5.prototype.hex = function () {
                                this.finalize();
                                var a = this.h0, b = this.h1, c = this.h2, d = this.h3;
                                return HEX_CHARS[a >> 4 & 15] + HEX_CHARS[15 & a] + HEX_CHARS[a >> 12 & 15] + HEX_CHARS[a >> 8 & 15] + HEX_CHARS[a >> 20 & 15] + HEX_CHARS[a >> 16 & 15] + HEX_CHARS[a >> 28 & 15] + HEX_CHARS[a >> 24 & 15] + HEX_CHARS[b >> 4 & 15] + HEX_CHARS[15 & b] + HEX_CHARS[b >> 12 & 15] + HEX_CHARS[b >> 8 & 15] + HEX_CHARS[b >> 20 & 15] + HEX_CHARS[b >> 16 & 15] + HEX_CHARS[b >> 28 & 15] + HEX_CHARS[b >> 24 & 15] + HEX_CHARS[c >> 4 & 15] + HEX_CHARS[15 & c] + HEX_CHARS[c >> 12 & 15] + HEX_CHARS[c >> 8 & 15] + HEX_CHARS[c >> 20 & 15] + HEX_CHARS[c >> 16 & 15] + HEX_CHARS[c >> 28 & 15] + HEX_CHARS[c >> 24 & 15] + HEX_CHARS[d >> 4 & 15] + HEX_CHARS[15 & d] + HEX_CHARS[d >> 12 & 15] + HEX_CHARS[d >> 8 & 15] + HEX_CHARS[d >> 20 & 15] + HEX_CHARS[d >> 16 & 15] + HEX_CHARS[d >> 28 & 15] + HEX_CHARS[d >> 24 & 15]
                            }, Md5.prototype.toString = Md5.prototype.hex, Md5.prototype.digest = function () {
                                this.finalize();
                                var a = this.h0, b = this.h1, c = this.h2, d = this.h3;
                                return [255 & a, a >> 8 & 255, a >> 16 & 255, a >> 24 & 255, 255 & b, b >> 8 & 255, b >> 16 & 255, b >> 24 & 255, 255 & c, c >> 8 & 255, c >> 16 & 255, c >> 24 & 255, 255 & d, d >> 8 & 255, d >> 16 & 255, d >> 24 & 255]
                            }, Md5.prototype.array = Md5.prototype.digest, Md5.prototype.arrayBuffer = function () {
                                this.finalize();
                                var a = new ArrayBuffer(16), b = new Uint32Array(a);
                                return b[0] = this.h0, b[1] = this.h1, b[2] = this.h2, b[3] = this.h3, a
                            }, Md5.prototype.buffer = Md5.prototype.arrayBuffer, Md5.prototype.base64 = function () {
                                for (var a, b, c, d = "", e = this.array(), f = 0; f < 15;) a = e[f++], b = e[f++], c = e[f++], d += BASE64_ENCODE_CHAR[a >>> 2] + BASE64_ENCODE_CHAR[63 & (a << 4 | b >>> 4)] + BASE64_ENCODE_CHAR[63 & (b << 2 | c >>> 6)] + BASE64_ENCODE_CHAR[63 & c];
                                return a = e[f], d += BASE64_ENCODE_CHAR[a >>> 2] + BASE64_ENCODE_CHAR[a << 4 & 63] + "=="
                            };
                            var exports = createMethod();
                            COMMON_JS ? module.exports = exports : (root.md5 = exports, AMD && (__WEBPACK_AMD_DEFINE_RESULT__ = function () {
                                return exports
                            }.call(exports, __webpack_require__, exports, module), !(void 0 !== __WEBPACK_AMD_DEFINE_RESULT__ && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))))
                        }()
                    }).call(exports, __webpack_require__(8), __webpack_require__(7), __webpack_require__(83)(module))
                }, function (a, b) {
                    a.exports = function (a) {
                        return a.webpackPolyfill || (a.deprecate = function () {
                        }, a.paths = [], a.children || (a.children = []), Object.defineProperty(a, "loaded", {
                            enumerable: !0,
                            get: function () {
                                return a.l
                            }
                        }), Object.defineProperty(a, "id", {
                            enumerable: !0, get: function () {
                                return a.i
                            }
                        }), a.webpackPolyfill = 1), a
                    }
                }, function (a, b) {
                    (function (b) {
                        a.exports = b
                    }).call(b, {})
                }, function (a, b) {
                    var c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (a) {
                        return typeof a
                    } : function (a) {
                        return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                    }, d = function (a) {
                        var b, d = a.constructor === Array ? [] : {};
                        if ("object" !== ("undefined" == typeof a ? "undefined" : c(a))) return a;
                        if (window.JSON) b = JSON.stringify(a), d = JSON.parse(b); else for (var e in a) d[e] = "object" === c(a[e]) ? cloneObj(a[e]) : a[e];
                        return d
                    };
                    a.exports.deepcopy = d
                }, function (a, b, c) {
                    function d(a) {
                        function b(d) {
                            if (c[d]) return c[d].exports;
                            var e = c[d] = {i: d, l: !1, exports: {}};
                            return a[d].call(e.exports, e, e.exports, b), e.l = !0, e.exports
                        }

                        var c = {};
                        b.m = a, b.c = c, b.i = function (a) {
                            return a
                        }, b.d = function (a, c, d) {
                            b.o(a, c) || Object.defineProperty(a, c, {configurable: !1, enumerable: !0, get: d})
                        }, b.r = function (a) {
                            Object.defineProperty(a, "__esModule", {value: !0})
                        }, b.n = function (a) {
                            var c = a && a.__esModule ? function () {
                                return a["default"]
                            } : function () {
                                return a
                            };
                            return b.d(c, "a", c), c
                        }, b.o = function (a, b) {
                            return Object.prototype.hasOwnProperty.call(a, b)
                        }, b.p = "/", b.oe = function (a) {
                            throw a
                        };
                        var d = b(b.s = ENTRY_MODULE);
                        return d["default"] || d
                    }

                    function e(a) {
                        return (a + "").replace(/[.?*+^$[\]\\(){}|-]/g, "\\$&")
                    }

                    function f(a) {
                        return !isNaN(1 * a)
                    }

                    function g(a, b, d) {
                        var g = {};
                        g[d] = [];
                        var h = b.toString(), i = h.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/);
                        if (!i) return g;
                        for (var l, m = i[1], n = new RegExp("(\\\\n|\\W)" + e(m) + k, "g"); l = n.exec(h);) "dll-reference" !== l[3] && g[d].push(l[3]);
                        for (n = new RegExp("\\(" + e(m) + '\\("(dll-reference\\s(' + j + '))"\\)\\)' + k, "g"); l = n.exec(h);) a[l[2]] || (g[d].push(l[1]), a[l[2]] = c(l[1]).m), g[l[2]] = g[l[2]] || [], g[l[2]].push(l[4]);
                        for (var o = Object.keys(g), p = 0; p < o.length; p++) for (var q = 0; q < g[o[p]].length; q++) f(g[o[p]][q]) && (g[o[p]][q] = 1 * g[o[p]][q]);
                        return g
                    }

                    function h(a) {
                        var b = Object.keys(a);
                        return b.reduce(function (b, c) {
                            return b || a[c].length > 0
                        }, !1)
                    }

                    function i(a, b) {
                        for (var c = {main: [b]}, d = {main: []}, e = {main: {}}; h(c);) for (var f = Object.keys(c), i = 0; i < f.length; i++) {
                            var j = f[i], k = c[j], l = k.pop();
                            if (e[j] = e[j] || {}, !e[j][l] && a[j][l]) {
                                e[j][l] = !0, d[j] = d[j] || [], d[j].push(l);
                                for (var m = g(a, a[j][l], j), n = Object.keys(m), o = 0; o < n.length; o++) c[n[o]] = c[n[o]] || [], c[n[o]] = c[n[o]].concat(m[n[o]])
                            }
                        }
                        return d
                    }

                    var j = "[\\.|\\-|\\+|\\w|/|@]+", k = "\\(\\s*(/\\*.*?\\*/)?\\s*.*?(" + j + ").*?\\)";
                    a.exports = function (a, b) {
                        b = b || {};
                        var e = {main: c.m}, f = b.all ? {main: Object.keys(e.main)} : i(e, a), g = "";
                        Object.keys(f).filter(function (a) {
                            return "main" !== a
                        }).forEach(function (a) {
                            for (var b = 0; f[a][b];) b++;
                            f[a].push(b), e[a][b] = "(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })", g = g + "var " + a + " = (" + d.toString().replace("ENTRY_MODULE", JSON.stringify(b)) + ")({" + f[a].map(function (b) {
                                return "" + JSON.stringify(b) + ": " + e[a][b].toString()
                            }).join(",") + "});\n"
                        }), g = g + "new ((" + d.toString().replace("ENTRY_MODULE", JSON.stringify(a)) + ")({" + f.main.map(function (a) {
                            return "" + JSON.stringify(a) + ": " + e.main[a].toString()
                        }).join(",") + "}))(self);";
                        var h = new window.Blob([g], {type: "text/javascript"});
                        if (b.bare) return h;
                        var j = window.URL || window.webkitURL || window.mozURL || window.msURL,
                            k = j.createObjectURL(h), l = new window.Worker(k);
                        return l.objectURL = k, l
                    }
                }, function (a, b, c) {
                    "use strict";
                    Object.defineProperty(b, "__esModule", {value: !0});
                    var d = c(46), e = c(3), f = (c(0), c(10)), g = c.n(f), h = (c(21), c(26), c(47)),
                        i = function (a) {
                            a.demuxerShell = new h.a(a);
                            var b = new g.a;
                            b.trigger = function (a) {
                                for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; e < c; e++) d[e - 1] = arguments[e];
                                b.emit.apply(b, [a, a].concat(d))
                            }, b.off = function (a) {
                                for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; e < c; e++) d[e - 1] = arguments[e];
                                b.removeListener.apply(b, [a].concat(d))
                            };
                            var c = function (b, c) {
                                a.postMessage({event: b, data: c})
                            };
                            a.demuxerShell && a.demuxerShell.openDemuxerTimer(), a.addEventListener("message", function (e) {
                                var f = e.data;
                                switch (f.cmd) {
                                    case"init":
                                        var g = JSON.parse(f.config);
                                        a.demuxer = new d.a(b, f.typeSupported, g, f.vendor), a.demuxerShell && a.demuxerShell.setDemuxer(a.demuxer), c("init", null);
                                        break;
                                    case"demux":
                                        a.demuxerShell && (f.shouldLoadData ? a.demuxerShell.loadData(f) : a.demuxerShell.demuxer.push(f.data, f.decryptdata, f.initSegment, f.audioCodec, f.videoCodec, f.timeOffset, f.discontinuity, f.trackSwitch, f.contiguous, f.duration, f.accurateTimeOffset, f.defaultInitPTS, f.extendInfo));
                                        break;
                                    case"clear":
                                        a.demuxerShell && a.demuxerShell.clearData(f)
                                }
                            }), b.on(e.a.FRAG_DECRYPTED, c), b.on(e.a.FRAG_PARSING_INIT_SEGMENT, c), b.on(e.a.FRAG_PARSED, c), b.on(e.a.ERROR, c), b.on(e.a.FRAG_PARSING_METADATA, c), b.on(e.a.FRAG_PARSING_USERDATA, c), b.on(e.a.INIT_PTS_FOUND, c), b.on(e.a.FRAG_PARSING_DATA, function (b, c) {
                                var d = [], e = {event: b, data: c};
                                c.data1 && (e.data1 = c.data1.buffer, d.push(c.data1.buffer), delete c.data1), c.data2 && (e.data2 = c.data2.buffer, d.push(c.data2.buffer), delete c.data2), a.postMessage(e, d)
                            })
                        };
                    b["default"] = i
                }, function (a, b) {
                    String.prototype.endsWith || !function () {
                        "use strict";
                        var a = function () {
                            try {
                                var a = {}, b = Object.defineProperty, c = b(a, a, a) && b
                            } catch (d) {
                            }
                            return c
                        }(), b = {}.toString, c = function (a) {
                            if (null == this) throw TypeError();
                            var c = String(this);
                            if (a && "[object RegExp]" == b.call(a)) throw TypeError();
                            var d = c.length, e = String(a), f = e.length, g = d;
                            if (arguments.length > 1) {
                                var h = arguments[1];
                                void 0 !== h && (g = h ? Number(h) : 0, g != g && (g = 0))
                            }
                            var i = Math.min(Math.max(g, 0), d), j = i - f;
                            if (j < 0) return !1;
                            for (var k = -1; ++k < f;) if (c.charCodeAt(j + k) != e.charCodeAt(k)) return !1;
                            return !0
                        };
                        a ? a(String.prototype, "endsWith", {
                            value: c,
                            configurable: !0,
                            writable: !0
                        }) : String.prototype.endsWith = c
                    }()
                }])["default"]
            })
        }).call(exports, __webpack_require__(130).Buffer)
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(284)
    }, 49: function (a, b) {
        !function (a) {
            function b() {
            }

            function c(a) {
                g = [a]
            }

            function d(a, b, c) {
                return a && a.apply(b.context || b, c)
            }

            function e(a) {
                return /\?/.test(a) ? "&" : "?"
            }

            function f(f) {
                function n(a) {
                    X++ || (Y(), S && (A[U] = {s: [a]}), O && (a = O.apply(f, [a])), d(L, f, [a, v, f]), d(N, f, [f, v]))
                }

                function F(a) {
                    X++ || (Y(), S && a != w && (A[U] = a), d(M, f, [f, a]), d(N, f, [f, a]))
                }

                f = a.extend({}, C, f);
                var G, H, I, J, K, L = f.success, M = f.error, N = f.complete, O = f.dataFilter,
                    P = f.callbackParameter, Q = f.callback, R = f.cache, S = f.pageCache, T = f.charset, U = f.url,
                    V = f.data, W = f.timeout, X = 0, Y = b;
                return y && y(function (a) {
                    a.done(L).fail(M), L = a.resolve, M = a.reject
                }).promise(f), f.abort = function () {
                    !X++ && Y()
                }, d(f.beforeSend, f, [f]) === !1 || X ? f : (U = U || j, V = V ? "string" == typeof V ? V : a.param(V, f.traditional) : j, U += V ? e(U) + V : j, P && (U += e(U) + encodeURIComponent(P) + "=?"), !R && !S && (U += e(U) + "_" + (new Date).getTime() + "="), U = U.replace(/=\?(&|$)/, "=" + Q + "$1"), S && (G = A[U]) ? G.s ? n(G.s[0]) : F(G) : (x[Q] = c, I = a(u)[0], I.id = m + B++, T && (I[i] = T), D && D.version() < 11.6 ? (J = a(u)[0]).text = "document.getElementById('" + I.id + "')." + p + "()" : I[h] = h, E && (I.htmlFor = I.id, I.event = o), I[q] = I[p] = I[r] = function (a) {
                    if (!I[s] || !/i/.test(I[s])) {
                        try {
                            I[o] && I[o]()
                        } catch (b) {
                        }
                        a = g, g = 0, a ? n(a[0]) : F(k)
                    }
                }, I.src = U, Y = function (a) {
                    K && clearTimeout(K), I[r] = I[q] = I[p] = null, z[t](I), J && z[t](J)
                }, z[l](I, H = z.firstChild), J && z[l](J, H), K = W > 0 && setTimeout(function () {
                    F(w)
                }, W)), f)
            }

            var g, h = "async", i = "charset", j = "", k = "error", l = "insertBefore", m = "_jqjsp", n = "on",
                o = n + "click", p = n + k, q = n + "load", r = n + "readystatechange", s = "readyState",
                t = "removeChild", u = "<script>", v = "success", w = "timeout", x = window, y = a.Deferred,
                z = a("head")[0] || document.documentElement, A = {}, B = 0, C = {callback: m, url: location.href},
                D = x.opera, E = !!a("<div>").html("<!--[if IE]><i><![endif]-->").find("i").length;
            f.setup = function (b) {
                a.extend(C, b)
            }, a.jsonp = f
        }(Txplayer.$)
    }, 68: function (a, b) {
        var c = {unstarted: -1, ended: 0, playing: 1, paused: 2, buffering: 3, cued: 4, stop: 5}, d = {
            msd: "\u6d41\u7545180P",
            sd: "\u6807\u6e05270P",
            hd: "\u9ad8\u6e05480P",
            shd: "\u8d85\u6e05720P",
            fhd: "\u84dd\u51491080P",
            uhd: "4K"
        };
        a.exports = {playerstate: c, definitionMap: d}
    }, 69: function (a, b) {
        function c(a) {
            var b = {
                getinfo: ["http://h5vv.video.qq.com/getinfo?callback=?", "https://h5vv.video.qq.com/getinfo?callback=?"],
                edugetvinfo: ["http://sv.video.qq.com/edugetvinfo?callback=?", "https://sv.video.qq.com/edugetvinfo?callback=?"],
                mvgetinfo: ["http://sv.video.qq.com/mvgetinfo?callback=?", "https://sv.video.qq.com/mvgetinfo?callback=?"],
                getinfoInews: ["http://h5wx.video.qq.com/getinfo?callback=?", "https://h5wx.video.qq.com/getinfo?callback=?"],
                getvinfo: ["http://h5vv.video.qq.com/getvinfo?callback=?", "https://h5vv.video.qq.com/getvinfo?callback=?"],
                getkey: ["http://h5vv.video.qq.com/getkey?callback=?", "https://h5vv.video.qq.com/getkey?callback=?"],
                mvgetkey: ["http://sv.video.qq.com/mvgetkey?callback=?", "https://sv.video.qq.com/mvgetkey?callback=?"],
                getkeyInews: ["http://h5wx.video.qq.com/getkey?callback=?", "https://h5wx.video.qq.com/getkey?callback=?"],
                zb: ["http://info.zb.video.qq.com/?callback=?", "https://info.zb.video.qq.com/?callback=?"],
                rmd_mobile: ["http://like.video.qq.com/fcgi-bin/rmd_mobile?callback=?", "https://like.video.qq.com/fcgi-bin/rmd_mobile?callback=?"],
                like: ["http://like.video.qq.com/fcgi-bin/like?", "https://like.video.qq.com/fcgi-bin/like?"],
                dataout_ex: ["http://sns.video.qq.com/fcgi-bin/dlib/dataout_ex?", "https://sns.video.qq.com/fcgi-bin/dlib/dataout_ex?"],
                get_dtype: ["http://h5vv.video.qq.com/getdtype?", "https://h5vv.video.qq.com/getdtype?"]
            };
            return "https:" === window.location.protocol ? b[a][1] : b[a][0]
        }

        function d(a) {
            return e = Txplayer.$, this.context = a.context, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = f.AppHelper, h = [{
            reg: function () {
                return !!this.cfg.noAuth
            }, request: function (a) {
                var b = this;
                a.resolve({param: {vids: b.cfg.vid, defaultfmt: b.cfg.fmt}})
            }
        }, {
            reg: function () {
                var a;
                return a = f.isInIframe() ? f.getHostname(document.referrer) : window.location.hostname, !!(a && a.indexOf("weishi.qq.com") > -1)
            }, request: function (a) {
                a.resolve({param: {platform: "110701", sdtfrom: "v7015"}})
            }
        }, {
            reg: function () {
                return !(!this.cfg.eduext && !this.cfg.authext || location.href.indexOf("campus.qq.com") !== -1)
            }, request: function (a) {
                var b = this;
                a.resolve({
                    cgi: c("edugetvinfo"),
                    param: {
                        eduext: b.cfg.eduext,
                        platform: f.mobile ? "261001" : "260201",
                        vid: b.cfg.vid,
                        defn: b.cfg.fmt
                    }
                })
            }
        }, {
            reg: function () {
                var a = window.location.hostname;
                return f.isInIframe() && (a = f.getHostname(document.referrer)), "kuaibao.qq.com" === a || "m.gamefeeds.qq.com" === a
            }, request: function (a) {
                var b = this;
                a.resolve({cgi: c("getinfo"), param: {platform: "570701", vid: b.cfg.vid, sdtfrom: "v7152"}})
            }
        }, {
            reg: function () {
                return 1 === this.cfg.classType
            }, request: function (a) {
                var b = this;
                a.resolve({cgi: c("edugetvinfo"), param: {platform: 221001, vid: b.cfg.vid, defn: b.cfg.fmt}})
            }
        }, {
            reg: function () {
                if (window !== top && "v.qq.com" === location.hostname && "/iframe/player.html" === location.pathname) {
                    var a = f.getParams(location.href);
                    if (a && a.cKey && a.encryptVer && a.platform) return this.params = a, !0
                }
                return !1
            }, request: function (a) {
                var b, d = this, e = {
                    cgi: c("getinfo"),
                    param: {
                        encryptVer: d.params.encryptVer,
                        platform: d.params.platform,
                        cKey: d.params.cKey,
                        vids: d.cfg.vid,
                        defaultfmt: d.cfg.fmt
                    }
                };
                try {
                    b = window.parent.location.href
                } catch (f) {
                }
                b && (e.param.wxrefer = b), a.resolve(e)
            }
        }, {
            reg: function () {
                return !(!f.browser.mqq || "xiaoqu.qq.com" !== window.location.hostname && "buluo.qq.com" !== window.location.hostname)
            }, request: function (a) {
                if (!window.getBrowserSignature) return void a.reject();
                var b = this;
                window.getBrowserSignature(b.cfg.vid, function (c) {
                    var d;
                    if (c && c.data) try {
                        var e = JSON.parse(c.data);
                        e && e.result && e.result.token && (d = e.result.token)
                    } catch (g) {
                    }
                    d ? a.resolve({
                        param: {
                            cKey: d,
                            encryptVer: "6.4",
                            platform: f.os.ios ? "170408" : "170308",
                            vids: b.cfg.vid,
                            defaultfmt: b.cfg.fmt
                        }
                    }) : a.reject()
                })
            }
        }, {
            reg: function () {
                return "qzs.qq.com" == window.location.hostname && (window.location.href.indexOf("//qzs.qq.com/open/mobile") > -1 || window.location.href.indexOf("//qzs.qq.com/open/yyb/") > -1)
            }, request: function (a) {
                a.resolve({param: {platform: "2730701", sdtfrom: "v7002"}})
            }
        }, {
            reg: function () {
                return "post.mp.qq.com" === window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "4080701", sdtfrom: "v7016"}})
            }
        }, {
            reg: function () {
                return "viewlite.inews.qq.com" == window.location.hostname || "rl.inews.qq.com" == window.location.hostname || "album.sparta.html5.qq.com" == window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "5750701", sdtfrom: "v7003"}})
            }
        }, {
            reg: function () {
                return !!(window.location.hostname && window.location.hostname.indexOf("lexiangla.com") > -1)
            }, request: function (a) {
                a.resolve({param: {platform: "3570701", sdtfrom: "v7005"}})
            }
        }, {
            reg: function () {
                return !(!f.browser.mqqbrowser || f.browser.mqq || f.browser.wechat || f.browser.qqdownloader || window !== top)
            }, request: function (a) {
                var b, d, h = this,
                    i = "undefined" != typeof h.cfg.svr_time ? h.cfg.svr_time + "" : parseInt(+new Date / 1e3) + "",
                    j = function () {
                        var b, d, e = {vid: h.cfg.vid};
                        e.timestamp = i, f.os.ios ? (b = window.x5.ios.getBrowserSignature, d = f.os.ipad ? e : "vid:" + e.vid + "[" + e.timestamp + "]") : (b = window.x5.android.getBrowserSignature, d = "vid:" + e.vid + "[" + e.timestamp + "]"), b(d, function (b) {
                            var d;
                            "object" == typeof b && b.key && b.ver && b.platform ? (d = {
                                cgi: c("getvinfo"),
                                param: {
                                    cKey: b.key,
                                    encryptVer: b.ver,
                                    platform: b.platform,
                                    vid: h.cfg.vid,
                                    defn: h.cfg.fmt,
                                    cgiType: "getvinfo"
                                }
                            }, a.resolve(d)) : "object" == typeof b && b.data ? (d = {
                                cgi: c("getvinfo"),
                                param: {
                                    cKey: b.data,
                                    encryptVer: "4.0",
                                    platform: "161001",
                                    vid: h.cfg.vid,
                                    defn: h.cfg.fmt,
                                    cgiType: "getvinfo"
                                }
                            }, a.resolve(d)) : "string" == typeof b ? (d = {
                                cgi: c("getvinfo"),
                                param: {
                                    cKey: b,
                                    encryptVer: "4.0",
                                    platform: "161001",
                                    vid: h.cfg.vid,
                                    defn: h.cfg.fmt,
                                    cgiType: "getvinfo"
                                }
                            }, a.resolve(d)) : a.reject()
                        }, function () {
                            a.reject()
                        })
                    };
                b = window.x5 && window.x5.ios && "function" === e.type(window.x5.ios.getBrowserSignature), d = window.x5 && "function" === e.type(window.x5.getBrowserSignature), b || d ? j() : g.loadMqqBrowserAPI().done(function () {
                    b = window.x5 && window.x5.ios && "function" === e.type(window.x5.ios.getBrowserSignature), d = window.x5 && "function" === e.type(window.x5.getBrowserSignature), b || d ? j() : a.reject()
                }).fail(function () {
                    a.reject()
                })
            }
        }, {
            reg: function () {
                return !!f.browser.kuaibao
            }, request: function (a) {
                var b, c, d, e = this, g = e.cfg.vid,
                    h = "undefined" != typeof e.cfg.svr_time ? e.cfg.svr_time + "" : parseInt(+new Date / 1e3) + "",
                    i = "TVP_KUAIBAO_CB_" + h.substr(-4, 4);
                if (window.top !== window) {
                    try {
                        var j = window.top.location.href;
                        j && (b = window.top, c = b.document)
                    } catch (k) {
                        d = !0
                    }
                    if (d) return void a.reject()
                } else b = window, c = b.document;
                b[i] = function (b) {
                    var c;
                    try {
                        c = JSON.parse(b)
                    } catch (d) {
                    }
                    if (c && c.key && c.ver && c.platform && c.sdtfrom) {
                        var f = {
                            param: {
                                cKey: c.key,
                                encryptVer: c.ver,
                                platform: c.platform,
                                sdtfrom: c.sdtfrom,
                                vid: e.cfg.vid,
                                defaultfmt: "mp4",
                                clip: 4
                            }
                        };
                        a.resolve(f)
                    } else a.reject()
                };
                var l = function () {
                    var a = {
                            method: "getCKey",
                            types: ["string", "string", "string"],
                            args: [g, h, i],
                            instanceName: "TencentNewsScriptControllerJsInterface"
                        }, b = "jsbridge://get_with_json_data?json=" + encodeURIComponent(JSON.stringify(a)) + "&_t=" + h,
                        c = new Image;
                    c.src = b
                }, m = function () {
                    var a = function () {
                        b.getBrowserSignature(g, h, i)
                    };
                    "function" == typeof b.getBrowserSignature ? (a(), c.addEventListener("TencentNewsJSInjectionComplete", function () {
                        a()
                    })) : c.addEventListener("TencentNewsJSInjectionComplete", function () {
                        a()
                    })
                };
                f.os.ios ? m() : f.os.android ? l() : a.reject()
            }
        }, {
            reg: function () {
                return !(!f.browser.qqnews || f.browser.qqnewsAd)
            }, request: function (a) {
                var b, c, d, g = this, h = g.cfg.vid,
                    i = "undefined" != typeof g.cfg.svr_time ? g.cfg.svr_time + "" : parseInt(+new Date / 1e3) + "",
                    j = "TVP_KUAIBAO_CB_" + i.substr(-4, 4);
                if (window.top !== window) {
                    try {
                        var k = window.top.location.href;
                        k && (b = window.top, c = b.document)
                    } catch (l) {
                        d = !0
                    }
                    if (d) return void a.reject()
                } else b = window, c = b.document;
                b[j] = function (b) {
                    var c;
                    try {
                        c = JSON.parse(b)
                    } catch (d) {
                    }
                    if (c && c.key && c.ver && c.platform && c.sdtfrom) {
                        var e = {
                            param: {
                                cKey: c.key,
                                encryptVer: c.ver,
                                platform: c.platform,
                                sdtfrom: c.sdtfrom,
                                vid: g.cfg.vid,
                                defaultfmt: "mp4",
                                clip: 4
                            }
                        };
                        a.resolve(e)
                    } else a.reject()
                };
                var m = function () {
                    var a = function () {
                        window.TencentNews.invoke("getCKey", h, i, j)
                    };
                    window.TencentNews && window.TencentNews.invoke ? a() : e.getScript("//mat1.gtimg.com/www/js/newsapp/jsapi/news.js?_tsid=1", function () {
                        window.TencentNews && window.TencentNews.invoke && a()
                    })
                }, n = function () {
                    var a = function () {
                        b.getBrowserSignature(h, i, j)
                    };
                    "function" == typeof b.getBrowserSignature ? (a(), c.addEventListener("TencentNewsJSInjectionComplete", function () {
                        a()
                    })) : c.addEventListener("TencentNewsJSInjectionComplete", function () {
                        a()
                    })
                };
                f.os.ios ? n() : f.os.android ? m() : a.reject()
            }
        }, {
            reg: function () {
                return !(!f.browser.douban && !f.browser.liebao)
            }, request: function (a) {
                var b, c = this,
                    d = "undefined" != typeof c.cfg.svr_time ? c.cfg.svr_time + "" : parseInt(+new Date / 1e3) + "",
                    e = function () {
                        if (!window.getBrowserSignature) return void a.reject();
                        try {
                            b = window.getBrowserSignature(c.cfg.vid, d)
                        } catch (e) {
                        }
                        if (b && b.key && b.ver && b.platform) {
                            var f = {
                                param: {
                                    cKey: b.key,
                                    encryptVer: b.ver,
                                    platform: b.platform,
                                    vid: c.cfg.vid,
                                    defaultfmt: c.cfg.fmt
                                }
                            };
                            a.resolve(f)
                        } else a.reject()
                    };
                e()
            }
        }, {
            reg: function () {
                return !(!f.browser.mqq || "mqqcartoon" !== f.getUrlParam("openS"))
            }, request: function (a) {
                var b = this,
                    d = "undefined" != typeof b.cfg.svr_time ? b.cfg.svr_time + "" : parseInt(+new Date / 1e3) + "";
                e.getScript("http://imgcache.qq.com/club/client/comic/release/js/util/qqComicVideoAuth.js?t=" + d, function () {
                    "function" === e.type(window.getBrowserSignature) ? window.getBrowserSignature(b.cfg.vid, function (d) {
                        if (d && d !== -1) {
                            var e = {
                                cgi: c("getvinfo"),
                                param: {cKey: d, encryptVer: "6.4", platform: "170101", vid: b.cfg.vid, defn: b.cfg.fmt}
                            };
                            a.resolve(e)
                        }
                    }) : a.reject()
                })
            }
        }, {
            reg: function () {
                return f.isNews()
            }, request: function (a) {
                a.resolve({param: {platform: "20701"}})
            }
        }, {
            reg: function () {
                return f.isNewsPlugin()
            }, request: function (a) {
                a.resolve({param: {platform: "5430701", sdtfrom: "v7013"}})
            }
        }, {
            reg: function () {
                return "yoo.qq.com" === window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "4450701", sdtfrom: "v7158"}})
            }
        }, {
            reg: function () {
                function a(a, b) {
                    var c = a.replace(/\?/g, ".").replace(/#/g, "\\d").replace(/\*+/g, ".*");
                    return new RegExp("^" + c + "$", "i").test(b)
                }

                var b = ["lol.qq.com", "lolm.qq.com", "lole.qq.com", "lpl.qq.com"],
                    c = ["*.lol.qq.com", "*.lolm.qq.com", "*.lole.qq.com", "*.lpl.qq.com"];
                if (b.indexOf(window.location.hostname) > -1) return !0;
                for (var d = 0, e = c.length; d < e; d++) if (a(c[d], window.location.hostname)) return !0;
                return !1
            }, request: function (a) {
                a.resolve({param: {platform: "5290701", sdtfrom: "v7012"}})
            }
        }, {
            reg: function () {
                return "qc.vip.qq.com" == window.location.hostname || "cdn.vip.qq.com" == window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "4860701", sdtfrom: "v7159"}})
            }
        }, {
            reg: function () {
                return "h5.maobing.qq.com" == window.location.hostname || "h5test.maobing.qq.com" == window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "5020701", sdtfrom: "v7161"}})
            }
        }, {
            reg: function () {
                return "tool.helper.qq.com" === window.location.hostname || "pre.tool.helper.qq.com" === window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "5600701", sdtfrom: "v7019"}})
            }
        }, {
            reg: function () {
                return "xian.qq.com" === window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "5610701", sdtfrom: "v7021"}})
            }
        }, {
            reg: function () {
                return "m.v.qq.com" != window.location.hostname && "v.qq.com" != window.location.hostname
            }, request: function (a) {
                a.resolve({param: {platform: "4810701", sdtfrom: "v7157"}})
            }
        }];
        d.prototype = {
            init: function () {
                return this.exportsModuleApis(), this.reg_request
            }, reg_request: function (a, b) {
                var c = this;
                c.cfg = a, c.cfg2 = b;
                var d = e.Deferred(), f = !1;
                return e(h).each(function (a, b) {
                    return "function" !== e.type(b.reg) || ("function" !== e.type(b.request) || (!b.reg.call(c) || (f = !0, b.request.call(c, d), !1)))
                }), f || d.reject(), setTimeout(function () {
                    d.reject()
                }, 6e3), d
            }, exportsModuleApis: function () {
                var a = this;
                this.context.msg.setData("isInAuthRuleList", function (b, c) {
                    var d = !1;
                    a.cfg = {}, a.cfg2 = {}, e(h).each(function (b, c) {
                        return "function" !== e.type(c.reg) || (!c.reg.call(a) || (d = !0, !1))
                    }), c.data = d
                })
            }
        }, a.exports = d
    }, 108: function (a, b) {
        a.exports = {
            RFID: "TxpCreativePlayer-rfid",
            AD_EVENT: {
                AD_ORDER_DATA_READY: "onAdOrderDataReady",
                AD_ORDER_PPB_DATA_READY: "ppbAdDataReady",
                AD_ORDER_PDF_DATA_READY: "pdfAdDataReady",
                VIDEO_AD_LAYER_SHOW: "adVideoShow",
                VIDEO_AD_LAYER_HIDE: "adVideoHide"
            },
            PLAYER_STATE: {NOT_START: -1, END: 0, PLAYING: 1, PAUSE: 2, LOADING: 3},
            AD_TYPE: {
                LD: "LD",
                HT: "HT",
                ZC: "ZC",
                ZT: "ZT",
                KB: "KB",
                PSJ: "PSJ",
                PPB: "PPB",
                PVL: "PVL",
                ZI: "ZI",
                BS: "BS",
                PDF: "PDF",
                VIDEO_MARK: "PSJ|BS|ZI|ZC|CZC|VIN|PHLS",
                PHLS: "PHLS",
                CZC: "CZC"
            },
            LD_AD_REG: /LD|KB/,
            VIDEO_AD_REG: /LD|KB|ZC|HT/
        }
    }, 117: function (a, b, c) {
        function d(a) {
            e = Txplayer.util, f = Txplayer.$, this.context = a, this.dataset = {
                hasRequest: !1,
                retryTime: 0
            }, this.dataset.url = "//mark.l.qq.com/fcgi-bin/get_video_mark_all", 1 == e.getUrlParam("debugvideomark") && (this.dataset.url = "//testmark.l.qq.com/fcgi-bin/get_video_mark_all"), this.context.config.usePreviewDomain && (this.dataset.url = "//mark.cm.com/fcgi-bin/get_video_mark_all"), this.init(), f.jsonp || c(49)
        }

        var e, f, g = c(108).AD_TYPE, h = d.prototype, i = 1;
        h.init = function () {
            this.addEventListeners()
        }, h.addEventListeners = function () {
            var a = this;
            this.dataset.eventList = {}, this.dataset.eventList[e.getUniqueMsgKey("vidChange")] = function (b, c) {
                a.dataset.request && "function" === f.type(a.dataset.request.abort) && a.dataset.request.abort(), a.dataset.hasRequest = !1, a.dataset.retryTime = 0
            }, this.dataset.eventList[e.getUniqueMsgKey("beforeVideoRePlay")] = function () {
                a.dataset.request && "function" === f.type(a.dataset.request.abort) && a.dataset.request.abort(), a.dataset.hasRequest = !1, a.dataset.retryTime = 0
            }, f.each(this.dataset.eventList, function (b, c) {
                a.context.msg.on(b, c)
            })
        }, h.requestVideoMark = function () {
            var a = this, b = this.context.dataset.vid;
            if ((this.context.config.usePreviewDomain || "v.qq.com" === location.hostname && this.context.config.official) && !this.dataset.hasRequest) {
                this.dataset.hasRequest = !0;
                var c = "txplayer_get_video_mark_all", d = this.context.adApi.getAdRequestParam("VIDEO_MARK");
                d.url = encodeURIComponent(d.url), d.refer = encodeURIComponent(d.refer), d.vptag = encodeURIComponent(d.vptag), d.anchor = 1, this.context.dataset.adExtras.adsid && (d.session_id = this.context.dataset.adExtras.adsid);
                var h = {idlist: b, pr: 1, otype: "json", strAdParam: e.param(d), callback: c};
                if (this.context.dataset.adExtras && this.context.dataset.adExtras.adpinfo) {
                    var j = null;
                    try {
                        j = JSON.parse(this.context.dataset.adExtras.adpinfo)
                    } catch (k) {
                        e.v4log("get_video_mark_all: adpinfo parse err")
                    }
                    if (j && j.plugin_info && j.plugin_info.length > 0) {
                        var l = {ad_segments: []};
                        j.plugin_info.forEach(function (a) {
                            2 === +a.optype && l.ad_segments.push({start_time: a.ad_time, duration: a.ad_dura})
                        }), h.adsegments = JSON.stringify(l)
                    }
                }
                this.context.dataset.cid && (h.cid = this.context.dataset.cid), this.context.dataset.columnId && (h.lid = this.context.dataset.columnId);
                var m = (new Date).getTime(), n = {}, o = +new Date;
                this.dataset.request = f.jsonp({
                    url: this.dataset.url,
                    data: h,
                    callback: c,
                    timeout: 6e3
                }).done(function (b) {
                    n.adcost = +new Date - o, n.requestOk = !0;
                    var c = b && b.errorno;
                    if (b && 0 == b.errorno) {
                        var d = b.results[0], e = d.admark || {};
                        e.requestOk = !0;
                        var f = d.fields || [];
                        if (0 === Object.keys(e).length) a.dataset.retryTime < i ? (a.dataset.retryTime++, a.dataset.hasRequest = !1, a.requestVideoMark()) : (n.errorCode = 2102, a.reportVideoMarkError(n)); else {
                            var h = a.filterVideoBuyPoint(f);
                            a._handleData(h), e.fields = f, e.adtype = g.VIDEO_MARK, e.adcost = (new Date).getTime() - m, a.context.msg.broadcast("onAdOrderDataReady", e)
                        }
                    } else {
                        if (20005 == c) return;
                        a.dataset.retryTime < i ? (a.dataset.retryTime++, a.dataset.hasRequest = !1, a.requestVideoMark()) : (n.errorCode = 2102, a.reportVideoMarkError(n))
                    }
                }).fail(function (b) {
                    n.adcost = +new Date - o, n.requestOk = !1, a.dataset.retryTime < i ? (a.dataset.retryTime++, a.dataset.hasRequest = !1, a.requestVideoMark()) : (n.adcost >= 6e3 ? n.errorCode = 2101 : n.errorCode = 2102, a.reportVideoMarkError(n))
                })
            }
        }, h.filterVideoBuyPoint = function (a) {
            var b = [];
            try {
                b = a[0].videotag[0].ts.t[0]
            } catch (c) {
            }
            if (0 === b.length) return this._setVideoMarkForPage([]), a;
            var d = b.filter(function (a) {
                return 768 != a.cate
            });
            return this._setVideoMarkForPage(d), a[0].videotag[0].ts.t[0] = d, a
        }, h.reportVideoMarkError = function (a) {
            this.context.msg.broadcast("adPluginMsg", {
                name: "reportAd",
                adtype: g.VIDEO_MARK,
                reportData: {info: !0, data: {adcost: a.adcost, errorCode: a.errorCode, adtype: g.VIDEO_MARK}}
            }), Txplayer.util.localLog("GET_VIDEO_MARK_DATA_ERROR", a)
        }, h._handleData = function (a) {
            var b = [], c = {}, d = this;
            try {
                b = a[0].videotag[0].ts.t[0]
            } catch (g) {
                Txplayer.util.localLog("PARSE_VIDEO_MARK_DATA_ERROR", g)
            }
            f.each(b, function (a, b) {
                b = b || {};
                var d = b.cate;
                "undefined" !== f.type(b.cate) && (c[d] || (c[d] = []), c[d].push(b))
            }), f.each(c, function (a, b) {
                try {
                    d.context.msg.broadcast("getVideoMarkDataReady." + a, b)
                } catch (c) {
                    e.showError("getVideoMark.handleData.Error." + a, c)
                }
            })
        }, h._setVideoMarkForPage = function (a) {
            var b = a && a.length ? a : [];
            if ("function" == typeof window.__tenvideo_setPlayerAction) {
                var c = {cmd: 10, action: "list", data: b};
                window.__tenvideo_setPlayerAction(c)
            }
        }, a.exports = d
    }, 138: function (a, b) {
        function c() {
            throw new Error("setTimeout has not been defined")
        }

        function d() {
            throw new Error("clearTimeout has not been defined")
        }

        function e(a) {
            if (k === setTimeout) return setTimeout(a, 0);
            if ((k === c || !k) && setTimeout) return k = setTimeout, setTimeout(a, 0);
            try {
                return k(a, 0)
            } catch (b) {
                try {
                    return k.call(null, a, 0)
                } catch (b) {
                    return k.call(this, a, 0)
                }
            }
        }

        function f(a) {
            if (l === clearTimeout) return clearTimeout(a);
            if ((l === d || !l) && clearTimeout) return l = clearTimeout, clearTimeout(a);
            try {
                return l(a)
            } catch (b) {
                try {
                    return l.call(null, a)
                } catch (b) {
                    return l.call(this, a)
                }
            }
        }

        function g() {
            p && n && (p = !1, n.length ? o = n.concat(o) : q = -1, o.length && h())
        }

        function h() {
            if (!p) {
                var a = e(g);
                p = !0;
                for (var b = o.length; b;) {
                    for (n = o, o = []; ++q < b;) n && n[q].run();
                    q = -1, b = o.length
                }
                n = null, p = !1, f(a)
            }
        }

        function i(a, b) {
            this.fun = a, this.array = b
        }

        function j() {
        }

        var k, l, m = a.exports = {};
        !function () {
            try {
                k = "function" == typeof setTimeout ? setTimeout : c
            } catch (a) {
                k = c
            }
            try {
                l = "function" == typeof clearTimeout ? clearTimeout : d
            } catch (a) {
                l = d
            }
        }();
        var n, o = [], p = !1, q = -1;
        m.nextTick = function (a) {
            var b = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var c = 1; c < arguments.length; c++) b[c - 1] = arguments[c];
            o.push(new i(a, b)), 1 !== o.length || p || e(h)
        }, i.prototype.run = function () {
            this.fun.apply(null, this.array)
        }, m.title = "browser", m.browser = !0, m.env = {}, m.argv = [], m.version = "", m.versions = {}, m.on = j, m.addListener = j, m.once = j, m.off = j, m.removeListener = j, m.removeAllListeners = j, m.emit = j, m.prependListener = j, m.prependOnceListener = j, m.listeners = function (a) {
            return []
        }, m.binding = function (a) {
            throw new Error("process.binding is not supported")
        }, m.cwd = function () {
            return "/"
        }, m.chdir = function (a) {
            throw new Error("process.chdir is not supported")
        }, m.umask = function () {
            return 0
        }
    }, 146: function (a, b) {
        var c = {};
        c[445] = c[444] = "\u7f51\u7edc\u8fde\u63a5\u4f3c\u4e4e\u51fa\u73b0\u95ee\u9898\uff0c", c[10001] = c[1] = c[2] = c[3] = c[4] = c[5] = c[30] = c[40] = c[41] = c[42] = c[50] = c[68] = "\u89c6\u9891\u83b7\u53d6\u9014\u4e2d\u51fa\u73b0\u95ee\u9898\uff0c", c.defaultMsg = c[51] = c[52] = c[61] = c[62] = c[63] = c[65] = c[66] = c[69] = c[71] = c[73] = c[74] = c[76] = c[77] = c[81] = c[82] = c[86] = c["80.10"] = c[94] = "\u8fd9\u4e2a\u89c6\u9891\u88ab\u5916\u661f\u4eba\u52ab\u8d70\uff0c\u6682\u65f6\u770b\u4e0d\u4e86\u4e86~", c[64] = c[100] = "\u5f88\u9057\u61be\uff0c\u5bf9\u6b64\u89c6\u9891\u7684\u8bbf\u95ee\u6682\u65f6\u53d7\u9650", c[80.3] = c["80.10"] = c[80.11] = c[84] = "\u6b64\u89c6\u9891\u5305\u542b\u654f\u611f\u4fe1\u606f\uff0c\u5df2\u88ab\u7ba1\u7406\u5458\u6349\u62ff~", c[80] = c[83] = "\u6682\u65f6\u6ca1\u6709\u83b7\u5f97\u8be5\u89c6\u9891\u7248\u6743\uff0c\u52aa\u529b\u4e3a\u60a8\u4e89\u53d6\u4e2d~", c[80.1] = "\u5f88\u62b1\u6b49\uff0c\u7531\u4e8e\u7248\u6743\u9650\u5236\uff0c\u60a8\u6240\u5728\u7684\u5730\u533a\u6682\u65f6\u65e0\u6cd5\u64ad\u653e\u8be5\u89c6\u9891", c[80.2] = "\u5f88\u62b1\u6b49\uff0c\u8be5\u89c6\u9891\u6682\u65e0\u64ad\u653e\u7248\u6743", c[80.7] = c[80.9] = "\u6682\u65f6\u6ca1\u6709\u83b7\u5f97\u8be5\u89c6\u9891\u7248\u6743\uff0c\u52aa\u529b\u4e3a\u60a8\u4e89\u53d6\u4e2d~", c[69.4] = c[80.14] = c[-11111] = "\u5e94\u7248\u6743\u65b9\u8981\u6c42\u672c\u7247\u91c7\u7528\u52a0\u5bc6\u683c\u5f0f\uff0c\u6b64\u6d4f\u89c8\u5668\u6682\u4e0d\u652f\u6301\u64ad\u653e", c.adblock = "\u64ad\u653e\u5185\u5bb9\u88abadblock\u8bef\u62e6\u622a\u4e86\uff0c\u8bf7\u60a8\u5173\u95ed\u63d2\u4ef6\uff0c\u6216\u4f7f\u7528\u4e0b\u5217\u65b9\u5f0f\u89c2\u770b\uff1a", c.getPlatformErrorCode = function (a, b, c) {
            var d = "-", e = "-", f = "-";
            return c = c || "00", d = Txplayer.util.os.mac ? "62" : Txplayer.util.os.windows ? "61" : "66", "getinfo" === a ? e = "101" : "getkey" === a ? e = "102" : "ad" === a ? e = "215" : "player" === a && (e = "200"), "neterror" === b ? f = "140" : "cgiInnerError" === b ? (f = "13", c && (c = "" + c), 2 === c.length && (c = "0" + c)) : "h5video" === b ? f = "111" : "aderror" === b && (f = "150"), Txplayer.util.localLog && Txplayer.util.localLog("VIDEO_ERROR", {
                platform: d,
                type: e,
                module: f,
                code: c
            }), d + e + "." + f + c
        }, a.exports = c
    }, 247: function (a, b) {
        function c(a) {
            this.options = e(a), this.resizeListened = !1, this.initDom()
        }

        function d(a) {
            return d.dialog ? (d.dialog.initDom(a), d.dialog) : (d.dialog = new c(a), d.dialog)
        }

        function e(a) {
            "[object Object]" != Object.prototype.toString.call(a) && (a = {});
            var b = {};
            for (var c in h) h.hasOwnProperty(c) && (b[c] = h[c]);
            for (var d in a) a.hasOwnProperty(d) && (b[d] = a[d]);
            return b
        }

        var f = Txplayer.util, g = Txplayer.$, h = {
                type: "trial_watch", context: null, showClose: !0, content: "", open: function () {
                }, close: function () {
                }
            },
            i = '<txp class="${overlayClass}" display-id="14"><txp class="txp_overlay_content"><txp class="txp_close ${closeClass}"><svg class="txp_icon txp_icon_close" version="1.1" viewBox="0 0 16 16" width="16" height="16"><use class="txp_svg_symbol txp_svg_close" xlink:href="#txp_svg_close"></use></svg></txp>${content}</txp></txp>';
        c.prototype.initDom = function (a) {
            a && (this.options = e(a));
            var b = this.options;
            this.$dom && (this.delEvent(), this.$dom.remove()), this.$target = b.target;
            var c = this.overlayClass = "txp_overlay_" + b.type, d = this.soverlayClass = c + "_s",
                h = {overlayClass: c, content: b.content || "", closeClass: b.showClose ? " " : "txp_none"};
            this.domStr = f.tpl(i, h), this.$dom = g(this.domStr), this.$dom.attr("id", "txp-" + b.type + "-dialog");
            var j = this.$target.width();
            j < 700 ? (this.$dom.addClass(d), this.$dom.find(".brspace").html("<br>")) : (this.$dom.removeClass(d), this.$dom.find(".brspace").text("\uff0c")), this.$target.append(this.$dom), this.$closeBtn = this.$dom.find(".txp_close"), this.initEvent()
        }, c.prototype.initEvent = function () {
            var a = this;
            this.options.showClose && this.$closeBtn.on("click", function () {
                a.close()
            }), this.options.context && !this.resizeListened && this.options.context.msg.on("resize", function (b) {
                a.resizeListened = !0;
                var c = b.width;
                b.height;
                c < 700 ? (a.$dom.addClass(a.soverlayClass), a.$dom.find(".brspace").html("<br>")) : (a.$dom.removeClass(a.soverlayClass), a.$dom.find(".brspace").text("\uff0c"))
            })
        }, c.prototype.delEvent = function () {
            this.options.showClose && this.$closeBtn.off("click")
        }, c.prototype.open = function () {
            this.$dom.removeClass("txp_none"), this.status = 1, this.options.open()
        }, c.prototype.close = function (a) {
            this.status = 0, this.$dom.addClass("txp_none"), a || this.options.close()
        }, c.prototype.destroy = function () {
            this.delEvent(), this.status && this.close();
            var a = this, b = setTimeout(function () {
                a.$dom.remove(), clearTimeout(b), b = null
            }, 1e3)
        }, d.dialog = null, a.exports = d
    }, 284: function (a, b, c) {
        function d(a) {
            f = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = c(285), f = Txplayer.$, g = Txplayer.util, h = (c(146), c(69)), i = c(117);
        d.prototype = {
            init: function () {
                var a = this;
                return this.auth = new h({context: this.context}), this.getVideoMark = new i(this.context), this.dataset.hasVideoPlayed = !1, this.context.dataset.urlIndex = 0, ["vid", "cid", "columnId", "title", "nextVid", "tpid", "authext", "eduext", "authfrom", "isNeedPay", "autoplay", "skipPrelude", "connectionPlayTime", "playStartTime"].forEach(function (b) {
                    a.context.dataset[b] = a.context.config[b]
                }), "string" === f.type(this.context.config.volume) && /^\d+$/.test(this.context.config.volume) && (this.context.config.volume = parseInt(this.context.config.volume)), "number" !== f.type(this.context.config.volume) || this.context.config.volume > 100 || this.context.config.volume < 0 ? void g.showError("context.config.volume\u5fc5\u987b\u4e3a 0~100 ") : (this.context.dataset.volume = this.context.config.volume, this.context.config.duration && this.context.config.playEndTime && (this.context.dataset.playEndTime = parseInt(this.context.config.duration) - this.context.config.playEndTime, this.context.dataset.playEndTime < 0 && (this.context.dataset.playEndTime = null)), this.context.msg.broadcast("setVolume", {
                    volume: this.context.dataset.volume,
                    showTips: !1
                }), g.isSupportSafariHls(this.context.dataset.platform) && (this.context.dataset.useHls = !0), a.context.dataset.hasChromeHlsPlugin && (this.context.dataset.useChromeHls = !0, this.context.dataset.useHls = !0), this.context.getinfo = new e(this.context), this.addEventListener(), this.exportsModuleApis(), g.v4log("v4HdPlayerControl-init"), void (this.context.dataset.autoplay && this.playControl({
                    nextVid: this.context.dataset.nextVid,
                    vid: this.context.dataset.vid,
                    connectionPlayTime: this.context.dataset.connectionPlayTime,
                    playStartTime: this.context.dataset.playStartTime
                })))
            }, addEventListener: function () {
                this.dealAdMsgMoudle(), this.dealFilmMsgMoudle()
            }, exportsModuleApis: function () {
                this.initUserApis(), this.initPrivateMsg(), this.initDataApis()
            }
        }, g.extend(d.prototype, c(290)), g.extend(d.prototype, c(292)), g.extend(d.prototype, c(293)), g.extend(d.prototype, c(294)), g.extend(d.prototype, c(295)), g.extend(d.prototype, c(296)), g.extend(d.prototype, c(298)), g.extend(d.prototype, c(299)), Txplayer.register("v4HdPlayerControl", d)
    }, 285: function (a, b, c) {
        function d(a) {
            var b = function () {
            };
            return b.prototype = a, new b
        }

        function e(a) {
            f = Txplayer.$, h.call(this, a)
        }

        var f = Txplayer.$, g = Txplayer.util, h = c(286), i = "POST";
        e.prototype = d(h.prototype), e.prototype.constructor = e, e.prototype.requestGetinfo = function (a) {
            return this.context.dataset.requestNewGetinfoError || 1 == g.getUrlParam("debuggetinfo") ? this.requestOldGetinfo(a) : this.requestNewGetinfo(a)
        }, e.prototype.requestGetkey = function (a) {
            return this.context.dataset.requestNewGetinfoError ? this.requestOldGetVkey(a) : this.requestNewGetVkey(a)
        }, e.prototype.requestInsertAd = function (a) {
            return a && (a.method = i), this.requestPostCgi("insertAd", a).defer
        }, e.prototype.requestPauseAd = function (a) {
            return a && (a.method = i), this.requestPostCgi("pauseAd", a).defer
        }, e.prototype.requestEndingAd = function (a) {
            return a && (a.method = i), this.requestPostCgi("endingAd", a).defer
        }, e.prototype.requestPpbAd = function (a) {
            return a && (a.method = i), this.requestPostCgi("ppbAd", a).defer
        }, e.prototype.requestPdfAd = function (a) {
            return a && (a.method = i), this.requestPostCgi("pdfAd", a).defer
        }, e.prototype.requestIvbAd = function (a) {
            return a && (a.method = i), this.requestPostCgi("ivbAd", a).defer
        }, e.prototype.requestYaliuAd = function (a) {
            return a && (a.method = i), this.requestPostCgi("yaliuAd", a).defer
        }, e.prototype.requestPostCgi = function (a, b) {
            var c = {};
            c = "vinfoad" == a ? this.dataset.svDomain ? {
                buid: "vinfoad_sv",
                adparam: f.param(b.adparam),
                vinfoparam_sv: f.param(b.vinfoparam)
            } : {
                buid: "vinfoad",
                adparam: f.param(b.adparam),
                vinfoparam: f.param(b.vinfoparam)
            } : "vinfo" == a ? this.dataset.svDomain ? {
                buid: "onlyvinfo_sv",
                vinfoparam_sv: f.param(b.vinfoparam)
            } : {
                buid: "onlyvinfo",
                vinfoparam: f.param(b.vinfoparam)
            } : "getkey" == a ? this.dataset.svDomain ? {
                buid: "onlyvkey_sv",
                vkeyparam_sv: f.param(b.vkeyparam)
            } : {buid: "onlyvkey", vkeyparam: f.param(b.vkeyparam)} : {buid: "onlyad", adparam: f.param(b)};
            var d = b.domain ? b.domain : "vd.l.qq.com";
            1 == g.getUrlParam("debugvideomark") && (d = "testvd.l.qq.com");
            var e = f.Deferred(), h = +new Date, j = b.method || "POST";
            "GET" === j && (i = j), Txplayer.util.v4log("6072 beforeRequest", h);
            var k = f.ajax({
                method: j,
                type: j,
                url: "//" + d + "/proxyhttp",
                crossDomain: !0,
                xhrFields: {withCredentials: !0},
                timeout: 8e3,
                dataType: "POST" === j ? "json" : "jsonp",
                contentType: "POST" === j ? "text/plain" : "application/javascript",
                data: "POST" === j ? JSON.stringify(c) : c
            }).done(function (a) {
                var b = +new Date;
                if (Txplayer.util.v4log("6072 afterRequest", b), 0 == a.errCode) try {
                    if ("onlyad" == c.buid) {
                        var d = JSON.parse(a.ad);
                        d.requestOk = !0, d.adcost = b - h, e.resolve(d)
                    } else "vinfoad" == c.buid ? ("{}" == a.vinfo && e.reject(a, "dataerr"), e.resolve(JSON.parse(a.vinfo), a.ad)) : "vinfoad_sv" == c.buid ? ("{}" == a.vinfo && e.reject(a, "dataerr"), e.resolve(JSON.parse(a.vinfo), a.ad)) : "onlyvinfo" == c.buid ? ("{}" == a.vinfo && e.reject(a, "dataerr"), e.resolve(JSON.parse(a.vinfo))) : "onlyvinfo_sv" == c.buid ? ("{}" == a.vinfo && e.reject(a, "dataerr"), e.resolve(JSON.parse(a.vinfo))) : "onlyvkey" == c.buid ? ("{}" == a.vkey && e.reject(a, "dataerr"), e.resolve(JSON.parse(a.vkey))) : "onlyvkey_sv" == c.buid && ("{}" == a.vkey && e.reject(a, "dataerr"), e.resolve(JSON.parse(a.vkey)))
                } catch (f) {
                    e.reject(a, "dataerr")
                } else e.reject(a)
            }).fail(function (a, b) {
                a = a || {};
                var c = new Date;
                a.adcost = c - h, a.requestOk = !1, e.reject(a, b)
            });
            return {request: k, defer: e}
        }, e.prototype.requestRollVideoInfo = function (a) {
            var b = this;
            return this.requestRollInfo(a).done(function (a) {
                if (a.hasnlink) {
                    if (b.context.dataset.hasnlink = !0, ["LD", "ZC", "HT"].indexOf(b.context.dataset.currentAdType) > -1) return;
                    if (b.context.dataset.hasShowEndAdditionTip) return void (b.context.dataset.fvpint = 0);
                    b.context.msg.broadcast("showAdditionTip", {duration: a.vlinktd, type: "normal"})
                }
                a.nextpint ? b.context.dataset.fvpint = 1e3 * a.nextpint : b.context.dataset.fvpint = 0
            }).fail(function (a) {
                b.context.dataset.fvpint = 6e5
            })
        }, a.exports = e
    }, 286: function (a, b, c) {
        function d(a) {
            j = Txplayer.$;
            this.context = a, this.dataset = {}, this.context && this.context.dataset && this.context.dataset.businessId && (this.context.dataset.authext || this.context.dataset.authfrom) && ("11" == this.context.dataset.businessId || this.context.dataset.businessId >= 200) && (this.dataset.svDomain = !0);
            var b = "object" == typeof window.WebAssembly;
            if (l.browser.chrome && l.compareVersion(l.browser.chrome.version, "62.0") <= 0 && (b = !1), b && !h && (h = j.Deferred(), Txplayer.ckeyModule = {
                locateFile: function (a) {
                    return "//vm.gtimg.cn/tencentvideo/txp/js/" + a + "?v=" + Txplayer.dataset.ts
                },
                print: Txplayer.util.v4log.bind(Txplayer.util, "ckey9"),
                printErr: Txplayer.util.v4log.bind(Txplayer.util, "ckey9"),
                monitorRunDependencies: function (a) {
                    a <= 0 && setTimeout(function () {
                        f = g.cwrap("getckey", "string", ["number", "string", "string", "string", "string", "number"]), h.resolve()
                    }, 0)
                },
                onAbort: function (a) {
                    Txplayer.util.v4log("init ckey9xModule: ", a), h.reject()
                }
            }, !g)) try {
                g = c(289)
            } catch (d) {
                Txplayer.util.v4log("import ckey9xModule: ", d ? d.message : "error"), h.reject()
            }
        }

        function e(a) {
            var b;
            f ? (a.encryptVer = "9.1", b = f(a.platform, a.appVer, a.vids || a.vid, "", a.guid, a.tm)) : (a.encryptVer = "8.1", b = i(a.vids || a.vid, a.tm, a.appVer, a.guid, a.platform)), a.cKey = b || ""
        }

        var f, g, h, i = c(287), j = Txplayer.$, k = c(288), l = Txplayer.util,
            m = ["30", "40", "41", "42", "50", "64", "85", "445"], n = ["vd.l.qq.com", "vi.l.qq.com"],
            o = "pxy.video.qq.com", p = ["l.cm.com", "l.cm.com"], q = "testvd.l.qq.com", r = !1;
        d.prototype = {
            checkGetInfoData: function (a) {
                return a && "o" == a.s ? 1 : 0
            }, checkGetinfoRetCode: function (a) {
                var b, c, d = 0;
                return a && a.s ? "o" !== a.s ? (d = a.em || 50, c = a.exem) : a.vl && a.vl.vi && j.isArray(a.vl.vi) && 0 !== a.vl.cnt ? b = a.vl.vi[0] : d = 68 : d = 50, 0 !== d || 5 === b.fst && j.isPlainObject(b.ul) && j.isArray(b.ul.ui) && 0 !== b.ul.ui.length ? 0 === d && 2 !== b.st && (8 != b.st ? d = 62 : (d = 83, c = b.ch)) : d = 62, {
                    exVal: c,
                    iRetCode: d,
                    vi: b
                }
            }, getRequestUrl: function (a) {
                a = a || {};
                var b, c = {}, d = ["vv.video.qq.com", "av.video.qq.com", "bkvv.video.qq.com", "h5vv.video.qq.com"];
                return c.domain = d[a.retryTimes], "vv.video.qq.com" == c.domain && this.dataset.svDomain && (c.domain = "sv.video.qq.com"), "http:" === location.protocol ? c.protocol = "http:" : c.protocol = "https:", "geth5info" === a.type ? c.path = "/geth5info?" : "getkey" === a.type ? c.path = "/geth5key?" : "pollvinfo" === a.type && (c.path = "/pollvinfo?"), b = c.protocol + "//" + c.domain + c.path, a.disableCallback || (b += "callback=?&"), b
            }, getInfoConfig: function (a, b) {
                var c = "";
                try {
                    c = location.href.replace(location.search, ""), l.isInIframe() && (c = l.removeUrlParams(top.location.href || ""))
                } catch (d) {
                }
                var f = window != top ? l.removeUrlParams(document.referrer || "") : document.location.host;
                c = l.getUrlParam("debugehost") || c;
                var g = {
                    charge: 0,
                    defaultfmt: "auto",
                    otype: "vinfoad" == a ? "ojson" : "json",
                    guid: this.context.dataset.guid,
                    flowid: this.context.dataset.flowid,
                    platform: this.context.dataset.platform,
                    sdtfrom: this.context.dataset.sdtfrom,
                    defnpayver: 1,
                    appVer: Txplayer.dataset.ver,
                    host: location.host,
                    ehost: c,
                    refer: f,
                    sphttps: "https:" === location.protocol ? 1 : 0,
                    tm: b.tm ? b.tm : l.getTimeStampStr(),
                    spwm: 4
                };
                g.logintoken = this.context.dataset.txplayerAuth.getInfo(!0), "nintendo" === this.context.config.playerType && (g.clip = 4), this.context.dataset.unid && (g.unid = this.context.dataset.unid), this.context.dataset.authfrom && (g.auth_from = this.context.dataset.authfrom), this.context.dataset.authext && (g.auth_ext = this.context.dataset.authext);
                var h = j.extend(g, b);
                if (this.context.config && "function" === j.type(this.context.config.getUserType)) try {
                    var i = this.context.config.getUserType();
                    2 != i && 10 != i && +l.getData("gp-cacdc") >= 4 && (h.defn = "sd")
                } catch (d) {
                }
                return b.show1080p || (h.defnpayver = 0), "auto" != h.defn && h.defn ? h.defsrc = 2 : h.defsrc = 1, e(h), this.context.dataset.useP2P && (h.fp2p = 1), this.context.dataset.IsSupportVideoIn && (h.spadseg = 3), this.context.dataset.adExtras && (h.adsid = this.context.dataset.adExtras.adsid || "", h.adpinfo = this.context.dataset.adExtras.adpinfo || ""), h
            }, getinfoOnError: function (a, b) {
                a = a || {}, "444" == a.code ? a.timeout ? a.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "03") : a.dataerr ? a.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "04") : a.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "01") : a.code ? a.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "cgiInnerError", a.code) : (a.code = "444", a.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "04")), a.errCode && a.exem && (a.errCode += "." + a.exem), b.reject(a)
            }, getinfoReport: function (a, b, c, d) {
                var e = +new Date, f = {endTime: e, startTime: c, getinfoURL: b, costTime: e - c};
                a && "object" === j.type(a) ? (f.err = "error", f = j.extend(f, a)) : a && "string" === j.type(a) && (f.err = a, "timeout" == a && (f.code = 600)), "string" === j.type(a) ? "timeout" == a ? f.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "03") : f.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "neterror", "01") : a && a.code && (f.errCode = Txplayer.v4errcode.getPlatformErrorCode("getinfo", "cgiInnerError", a.code)), d && (f.isLastRetry = 1), f.errCode && f.exem && (f.errCode += "." + f.exem), this.context.msg.broadcast("getinfoFinish", f)
            }, dealGetinfoData: function (a, b, c) {
                var d, e, f, g = this, h = g.checkGetInfoData(a);
                if (1 === h) {
                    if (d = g.checkGetinfoRetCode(a), 83 != d.iRetCode && 0 !== d.iRetCode) return Txplayer.util.v4log("getinfo\u8fd4\u56de\u9519\u8bef\u7801\u9519\u8bef ", {iRetCode: d.iRetCode}), void g.getinfoOnError(a, b);
                    a.iRetCode = d.iRetCode, g.dataset.getinfoData = a;
                    try {
                        g.context.dataset.reportClip = d.vi.fc || d.vi.cl.fc, g.context.dataset.reportStatus = d.vi.vst, g.context.dataset.reportType = d.vi.type, g.context.dataset.reportTestId = a.tstid, g.context.dataset.reportUsrIP = a.ip, g.context.dataset.cdnID = d.vi.ul.ui[0].vt, g.context.dataset.originalHwRate = (d.vi.vh / d.vi.vw).toFixed(3)
                    } catch (i) {
                    }
                    return e = k.getPcVideoMp4Url(a, g.context), "array" === j.type(e) && e.length && (f = 1 == a.dltype ? e[0].urlArray[0].url + "&vkey=" + d.vi.fvkey : e[0].urlArray && e[0].urlArray[0] && e[0].urlArray[0].url), g.context.dataset.dltype = a.dltype, 8 === g.context.dataset.dltype && e && e[0] && !e[0].m3u8 && (g.context.dataset.dltype = 3), b.resolve(f, e, k.getDefinitionListFromData(a), a, c ? c : {}), g.context.msg.broadcast("reportGetinfo", {
                        filename: d.vi.fn,
                        cdnIp: Txplayer.util.getHostNameByUrl(d.vi.ul.ui[0].url),
                        cdnId: d.vi.ul.ui[0].vt,
                        vkey: 1 == a.dltype ? d.vi.fvkey : ""
                    }), null
                }
                return {exem: a.exem, code: a.em, curTime: a.curTime}
            }, requestBefore: function (a) {
                var b = j.Deferred(), c = this, d = [b].concat(Array.prototype.slice.call(arguments, 1));
                return h ? h.done(function () {
                    a.apply(c, d)
                }).fail(function () {
                    f = null, a.apply(c, d)
                }) : a.apply(c, d), b
            }, requestNewGetinfo: function (a) {
                return this.requestBefore(this.requestNewGetinfoImpl, a)
            }, requestNewGetinfoImpl: function (a, b) {
                function c(p) {
                    p && p.tm && (b.tm = p.tm, g = f.getInfoConfig("vinfoad", b), 3 == s && (s += 1)), p && p.ckeyRetry && (delete b.tm, g = f.getInfoConfig("vinfoad", b)), p && p.domainRetry && h++;
                    var v = p && p.domain || n[h % 2];
                    1 == l.getUrlParam("debugvideomark") && (v = q);
                    var w = p && p.method || "POST";
                    r && (w = "GET");
                    var x = +new Date, y = "//" + v + "/proxyhttp/" + d + "&" + j.param(g), z = k >= s;
                    (k > 0 || b.onlyGetinfo && !b.fhdswitch) && (g.sphls = 1, g.spgzip = "", g.dlver = ""), k++, f.context.msg.broadcast("getinfoStart", {
                        getinfoURL: y,
                        time: +new Date
                    }), v === o && (e.finaltry = 1);
                    var A = +new Date;
                    Txplayer.util.v4log("6072 before.defer: ", A), Txplayer.util.v4log("requestGetinfo", g), Txplayer.util.v4log("requestAd", e);
                    var B = f.requestPostCgi(d, {vinfoparam: g, adparam: e, domain: v, method: w});
                    i = B.request;
                    var C = B.defer;
                    C.done(function (b, d) {
                        var e = +new Date;
                        Txplayer.util.v4log("6072 _defer.done: ", e, b, d);
                        var g = {};
                        try {
                            g = JSON.parse(d)
                        } catch (h) {
                        }
                        g.orginStr = d, g.adcost = e - A, g.retryTimes = k, g.domain = v, Txplayer.util.v4log("6072 adcost: ", g.adcost), g.requestOk = !0;
                        var i = f.dealGetinfoData(b, a, g);
                        f.getinfoReport(i, y, x, z), i && (i.code ? z || j.inArray(i.code + "", m) == -1 ? f.getinfoOnError(i, a) : 85 == i.code ? c(i.exem == -3 && i.curTime ? {tm: i.curTime} : {ckeyRetry: !0}) : c() : z ? f.getinfoOnError({}, a) : c({domainRetry: !0}))
                    }).fail(function (b, d) {
                        var e = +new Date;
                        b.adcost = e - A, b.requestOk = !1, u.push(e - A), d && "abort" === d || (f.getinfoReport(d, y, x, z), z ? !t && k >= s && u.every(function (a) {
                            return a <= 500
                        }) ? (c({domain: o}), t = !0) : r ? f.getinfoOnError({
                            code: 444,
                            timeout: "timeout" === d,
                            dataerr: "dataerr" === d,
                            costTime: +new Date - x
                        }, a) : (c({domain: n[0], method: "GET"}), r = !0) : c({domainRetry: !0}))
                    })
                }

                var d, e, f = this, g = this.getInfoConfig("vinfoad", b), h = 0;
                b.onlyGetinfo ? (d = "vinfo", e = "") : (d = "vinfoad", e = f.context.adApi && f.context.adApi.getAdRequestParam() || {});
                var i, k = 0, s = 3, t = !1, u = [];
                return f.context.config.usePreviewDomain && (n = p), c(), this.context.msg.off("vidChange.requestGetinfo").on("vidChange.requestGetinfo", function () {
                    i && i.abort && i.abort()
                }), this.context.msg.off("seekStart.requestGetinfo").on("seekStart.requestGetinfo", function () {
                    i && i.abort && i.abort()
                }), this.context.msg.off("userStopVideo.requestGetinfo").on("userStopVideo.requestGetinfo", function () {
                    i && i.abort && i.abort()
                }), a
            }, requestOldGetinfo: function (a) {
                return this.requestBefore(this.requestOldGetinfoImpl, a)
            }, requestOldGetinfoImpl: function (a, b) {
                function c(h) {
                    var i = h && h.cgi ? h.cgi : f.getRequestUrl({type: "geth5info", retryTimes: g}), k = +new Date;
                    h && h.tm && (b.tm = h.tm, e = f.getInfoConfig("getinfo", b));
                    var l = i + "&" + j.param(e), n = g >= 3;
                    g++, f.context.msg.broadcast("getinfoStart", {getinfoURL: l, time: k}), d = j.jsonp({
                        url: i,
                        data: e,
                        timeout: 6e3,
                        callback: Txplayer.util.getJsonpCallbackName("getinfo")
                    }).done(function (b) {
                        var d = f.dealGetinfoData(b, a);
                        f.getinfoReport(d, l, k, n), d && (d.code ? n || j.inArray(d.code + "", m) == -1 ? f.getinfoOnError(d, a) : c(85 == d.code && d.exem == -3 && d.curTime ? {
                            tm: d.curTime,
                            cgi: i
                        } : {cgi: i}) : n ? f.getinfoOnError({}, a) : c())
                    }).fail(function (b, d) {
                        d && "abort" === d || (f.getinfoReport(d, l, k, n), n ? f.getinfoOnError({
                            code: 444,
                            timeout: "timeout" === d,
                            costTime: +new Date - k
                        }, a) : c())
                    })
                }

                var d, e = this.getInfoConfig("getinfo", b), f = this, g = 0;
                return c(), this.context.msg.off("vidChange.requestGetinfo").on("vidChange.requestGetinfo", function () {
                    d && d.abort && d.abort()
                }), this.context.msg.off("seekStart.requestGetinfo").on("seekStart.requestGetinfo", function () {
                    d && d.abort && d.abort()
                }), this.context.msg.off("userStopVideo.requestGetinfo").on("userStopVideo.requestGetinfo", function () {
                    d && d.abort && d.abort()
                }), a
            }, getKeyConfig: function (a, b, c) {
                function d(a) {
                    for (var b = 0, c = a.length; b < c; b++) if (1 == a[b].sl) return a[b].id;
                    return -1
                }

                var f = "";
                try {
                    f = location.href.replace(location.search, ""), l.isInIframe() && (f = top.location.href.replace(top.location.search, ""))
                } catch (g) {
                }
                var h = l.getUrlParam("debugehost") || l.removeUrlParams(f), i = {
                    otype: b ? "ojson" : "json",
                    vid: a.vid,
                    format: d(this.dataset.getinfoData.fl.fi),
                    filename: a.newFileName,
                    platform: this.context.dataset.platform,
                    appVer: Txplayer.dataset.ver,
                    vt: a.vt,
                    sdtfrom: this.context.dataset.sdtfrom,
                    guid: this.context.dataset.guid,
                    flowid: this.context.dataset.flowid,
                    charge: a.isNeedPay ? 1 : 0,
                    linkver: 2,
                    lnk: this.context.dataset.getinfoJSON.vl.vi[0].lnk,
                    tm: c ? c : l.getTimeStampStr(),
                    refer: f,
                    ehost: h
                };
                return i.logintoken = this.context.dataset.txplayerAuth.getInfo(!0), this.context.dataset.unid && (i.unid = this.context.dataset.unid), this.context.dataset.authfrom && (i.auth_from = this.context.dataset.authfrom), this.context.dataset.authext && (i.auth_ext = this.context.dataset.authext), e(i), i
            }, getKeyErrorCode: function (a) {
                a = a || {}, !a.err && a.em && (a.err = "error"), !a.code && a.em && (a.code = a.em);
                var b = "";
                return "error" === a ? b = Txplayer.v4errcode.getPlatformErrorCode("getkey", "neterror", "01") : "timeout" === a ? b = Txplayer.v4errcode.getPlatformErrorCode("getkey", "neterror", "03") : "dataerr" === a ? b = Txplayer.v4errcode.getPlatformErrorCode("getkey", "neterror", "04") : a.errCode ? b = a.errCode : "timeout" === a.err ? b = Txplayer.v4errcode.getPlatformErrorCode("getkey", "neterror", "03") : "no key" !== a.err || a.hasOwnProperty("code") ? a.err && !a.hasOwnProperty("code") ? b = Txplayer.v4errcode.getPlatformErrorCode("getkey", "neterror", "01") : a.err && a.hasOwnProperty("code") && (b = Txplayer.v4errcode.getPlatformErrorCode("getkey", "cgiInnerError", a.code + "")) : b = Txplayer.v4errcode.getPlatformErrorCode("getkey", "neterror", "04"), b && a.exem && (b += "." + a.exem), b
            }, getkeyReport: function (a, b, c, d) {
                var e = this, f = +new Date,
                    g = {endTime: f, startTime: b, getkeyURL: c, costTime: f - b, isLastRetry: d};
                a && "object" === j.type(a) ? (g.err = "error", g = j.extend(g, a), a.em && (g.code = a.em)) : a && "string" === j.type(a) && (g.err = a, "timeout" == a && (g.code = 600)), g.errCode = e.getKeyErrorCode(a), e.context.msg.broadcast("getkeyFinish", g)
            }, requestOldGetVkey: function (a) {
                return this.requestBefore(this.requestOldGetVkeyImpl, a)
            }, requestOldGetVkeyImpl: function (a, b) {
                var c, d = this, e = 0, f = this.getRequestUrl({type: "getkey", retryTimes: e}),
                    g = this.getKeyConfig(b, !1), h = function (b) {
                        if (b = b || {}, b.code && j.inArray(b.code + "", m) == -1) return void a.reject(b);
                        var i = e > d.context.config.keyRetryTimes;
                        if (i) return b.code || (b.code = 445), void a.reject(b);
                        e++;
                        var k = +new Date;
                        d.context.msg.broadcast("getkeyStart"), c = j.jsonp({
                            url: b.url || f,
                            data: g,
                            timeout: 6e3,
                            callback: Txplayer.util.getJsonpCallbackName("getkey")
                        }).done(function (c) {
                            c && c.key ? (a.resolve(c.key), d.getkeyReport(null, k, f + "&" + j.param(g), i)) : (!c.code && b.em && (c.code = b.em), c.key || (c.err = "no key"), d.getkeyReport(c, k, f + "&" + j.param(g), i), c.errCode = d.getKeyErrorCode(c), h(c))
                        }).fail(function (a, b) {
                            b && "abort" === b || (d.getkeyReport(b, k, f + "&" + j.param(g), i), h({
                                code: 445,
                                errCode: d.getKeyErrorCode(b),
                                url: d.getRequestUrl({type: "getkey", retryTimes: e}),
                                timeout: "timeout" === b
                            }))
                        })
                    };
                return h(), this.context.msg.off("vidChange.requestOldGetVkey").on("vidChange.requestOldGetVkey", function () {
                    c && c.abort && c.abort()
                }), this.context.msg.off("userStopVideo.requestOldGetVkey").on("userStopVideo.requestOldGetVkey", function () {
                    c && c.abort && c.abort()
                }), a
            }, requestNewGetVkey: function (a) {
                return this.requestBefore(this.requestNewGetVkeyImpl, a)
            }, requestNewGetVkeyImpl: function (a, b) {
                var c, d = this, e = 0, f = this.getKeyConfig(b, !0), g = 0, h = d.context.config.keyRetryTimes, i = !1,
                    k = [], l = function (p) {
                        if (p = p || {}, p.code && j.inArray(p.code + "", m) == -1) return void a.reject(p);
                        var q = e > h;
                        if (q && !p.lastDomain) return p.code || (p.code = 445), void a.reject(p);
                        p && p.domainRetry && g++, p.ckeyRetry && (f = d.getKeyConfig(b, !0, p.curTime));
                        var s = p && p.domain || n[g % 2], t = p && p.method || "POST";
                        r && (t = "GET"), e++;
                        var u = +new Date, v = "//" + s + "/proxyhttp/getkey&" + j.param(f);
                        d.context.msg.broadcast("getkeyStart");
                        var w = +new Date, x = d.requestPostCgi("getkey", {vkeyparam: f, domain: s, method: t});
                        c = x.request;
                        var y = x.defer;
                        y.done(function (b) {
                            b && b.key ? (a.resolve(b.key), d.getkeyReport(null, u, v, q)) : (!b.code && b.em && (b.code = b.em), 85 == b.code && (b.hasOwnProperty("exem") && (b.exem = b.exem), b.exem == -3 && (h = 3 == h ? 4 : h), b.curTime && (b.curTime = b.curTime), b.ckeyRetry = !0), b.err || (b.err = "no key"), d.getkeyReport(b, u, v, q), b.errCode = d.getKeyErrorCode(b), b.code || "no key" != b.err || (b.domainRetry = !0), Txplayer.util.v4log("\u91cd\u8bd5getkey\uff0c\u540e\u53f0\u6709\u8fd4\u56de\u6570\u636e\uff1a" + JSON.stringify(b)), l(b))
                        }).fail(function (a, b) {
                            return k.push(+new Date - w), b && "abort" === b ? void Txplayer.util.v4log("\u91cd\u8bd5getkey\uff0c\u6240\u6709\u8bf7\u6c42\u90fd\u5931\u8d25\u4e86\uff0cabort\uff0cerr: " + b) : void (!i && e > h && k.every(function (a) {
                                return a <= 500
                            }) ? (Txplayer.util.v4log("\u91cd\u8bd5getkey\uff0c\u6240\u6709\u7684\u8bf7\u6c42\u90fd\u5931\u8d25\u4e86,500ms\u4ee5\u5185, err: " + b), l({domain: o}), i = !0) : r ? (Txplayer.util.v4log("\u91cd\u8bd5getkey\uff0c\u5176\u4ed6\u573a\u666f, err: " + b), d.getkeyReport(b, u, v, q), l({
                                code: 445,
                                errCode: d.getKeyErrorCode(b || "error"),
                                timeout: "timeout" === b,
                                domainRetry: !0
                            })) : (Txplayer.util.v4log("\u91cd\u8bd5getkey\uff0c\u6ca1\u6709\u7528\u8fc7GET\u8bf7\u6c42\uff0c\u5207\u6362\u5230GET\u8bf7\u6c42, err: " + b), l({
                                domain: n[0],
                                lastDomain: !0,
                                method: "GET"
                            }), r = !0))
                        })
                    };
                return l(), this.context.msg.off("vidChange.requestOldGetVkey").on("vidChange.requestOldGetVkey", function () {
                    c && c.abort && c.abort()
                }), this.context.msg.off("userStopVideo.requestOldGetVkey").on("userStopVideo.requestOldGetVkey", function () {
                    c && c.abort && c.abort()
                }), a
            }, requestRollInfo: function (a) {
                return this.requestBefore(this.requestRollInfoImpl, a)
            }, requestRollInfoImpl: function (a, b) {
                function c(c) {
                    var g = c && c.cgi ? c.cgi : f.getRequestUrl({type: "pollvinfo", retryTimes: 0});
                    c && c.tm && (b.tm = c.tm, e = f.getInfoConfig("getinfo", b)), e.jsonp = 1, e.vid = f.context.dataset.vid, d = j.jsonp({
                        url: g,
                        data: e,
                        timeout: 6e3,
                        callback: Txplayer.util.getJsonpCallbackName("pollvinfo")
                    }).done(function (b) {
                        a.resolve(b)
                    }).fail(function (b, c) {
                        a.reject(c)
                    })
                }

                var d, e = this.getInfoConfig("getinfo", b), f = this;
                return c(), this.context.msg.off("vidChange.requestRollInfo").on("vidChange.requestRollInfo", function () {
                    d && d.abort && d.abort()
                }), this.context.msg.off("seekStart.requestRollInfo").on("seekStart.requestRollInfo", function () {
                    d && d.abort && d.abort()
                }), this.context.msg.off("userStopVideo.requestRollInfo").on("userStopVideo.requestRollInfo", function () {
                    d && d.abort && d.abort()
                }), a
            }
        }, a.exports = d
    }, 287: function (a, b) {
        var c = function () {
            function a(a) {
                return b.call(this, ia + 2097 + 8214 - 15822, a)
            }

            function b(c) {
                for (var d = "", e = -8432 + ka + 12979; e < "\u090a".length; e++) d += String.fromCharCode(la + ma + na - 50 ^ "\u090a".charCodeAt(e));
                for (var f = "", g = 0; g < "\u07ad".length; g++) f += String.fromCharCode(I + 3326 + 4681 ^ "\u07ad".charCodeAt(g));
                for (var k = "", l = 0; l < "\u04a0".length; l++) k += String.fromCharCode(oa + Q + m + 8449 ^ "\u04a0".charCodeAt(l));
                for (var n = "", p = 0; p < "\u0d07".length; p++) n += String.fromCharCode(G + -5316 + 8904 ^ "\u0d07".charCodeAt(p));
                for (var r = "", A = pa + 3628 + qa - 16465; A < "\u05ff".length; A++) r += String.fromCharCode(146 + na + -1434 - 5788 ^ "\u05ff".charCodeAt(A));
                for (var C = "", D = -1434 + ra + 11308; D < "\u08a8".length; D++) C += String.fromCharCode(2260 ^ "\u08a8".charCodeAt(D));
                for (var N = "", O = 0; O < "\u0b36".length; O++) N += String.fromCharCode(2890 ^ "\u0b36".charCodeAt(O));
                for (var P = "", T = sa + 6246; T < "\u01a8\u01a2\u01f6\u01a6\u01f6\u01a7\u01f5\u01f1\u01a7\u01a4".length; T++) P += String.fromCharCode(-5316 + da + ta + 358 ^ "\u01a8\u01a2\u01f6\u01a6\u01f6\u01a7\u01f5\u01f1\u01a7\u01a4".charCodeAt(T));
                for (var U = "", V = ua + 146 + 4448 - 6833; V < "\u0a78".length; V++) U += String.fromCharCode(2564 ^ "\u0a78".charCodeAt(V));
                for (var W = "", ia = va + 4448 + 4019; ia < "\u084c".length; ia++) W += String.fromCharCode(2096 ^ "\u084c".charCodeAt(ia));
                for (var gb = "", hb = wa + -3155 + -9555 + 13665; hb < "\u0676".length; hb++) gb += String.fromCharCode(E + -3155 + 6442 ^ "\u0676".charCodeAt(hb));
                for (var ib = "", jb = xa + 2579; jb < "\u0a88".length; jb++) ib += String.fromCharCode(K + 9851 - 9876 ^ "\u0a88".charCodeAt(jb));
                for (var kb = "", lb = 0; lb < "\u0227".length; lb++) kb += String.fromCharCode(da + 4223 ^ "\u0227".charCodeAt(lb));
                for (var mb = "", nb = 0; nb < "\u043e".length; nb++) mb += String.fromCharCode(ya + E + 9851 - 4347 ^ "\u043e".charCodeAt(nb));
                for (var ob = "", pb = 0; pb < "\u07e1".length; pb++) ob += String.fromCharCode(za + S + fa - 4523 ^ "\u07e1".charCodeAt(pb));
                for (var qb = "", rb = -215 + L + F + 6127; rb < "\u0305".length; rb++) qb += String.fromCharCode(889 ^ "\u0305".charCodeAt(rb));
                for (var sb = "", tb = Aa + -6842 + 7201; tb < "".length; tb++) sb += String.fromCharCode(z + Ba + 3363 ^ "".charCodeAt(tb));
                for (var ub = "", vb = ba + Ca + Da - 4446; vb < "".length; vb++) ub += String.fromCharCode(aa + y + 4989 ^ "".charCodeAt(vb));
                for (var wb = "", xb = -7878 + $ + y + 16828; xb < "".length; xb++) wb += String.fromCharCode(3628 + Ea + 2321 ^ "".charCodeAt(xb));
                for (var yb = "", zb = Fa + Ga + Ha - 10082; zb < "\xb4\xb9\xb2\xaf".length; zb++) yb += String.fromCharCode(Ia + 5817 - 5364 ^ "\xb4\xb9\xb2\xaf".charCodeAt(zb));
                for (var Ab = "", Bb = Z + u + -1665 - 4436; Bb < "\u06d8\u06d5\u06de\u06c3".length; Bb++) Ab += String.fromCharCode(Ja + 146 + -4109 + 529 ^ "\u06d8\u06d5\u06de\u06c3".charCodeAt(Bb));
                for (var Cb = "", Db = Ka + 9456 - 19159; Db < "\u0668\u0669\u0668\u0663".length; Db++) Cb += String.fromCharCode(1542 ^ "\u0668\u0669\u0668\u0663".charCodeAt(Db));
                for (var Eb = "", Fb = ea + ha + X + 3846; Fb < "\xc1\xcc".length; Fb++) Eb += String.fromCharCode(168 ^ "\xc1\xcc".charCodeAt(Fb));
                for (var Gb = "", Hb = ga + 7940; Hb < "\u06c6\u06cb\u06d4".length; Hb++) Gb += String.fromCharCode(1698 ^ "\u06c6\u06cb\u06d4".charCodeAt(Hb));
                for (var Ib = "", Jb = 0, Kb = "\u0b36\u0b0b\u0b51\u0b5e\u0b08\u0b0d\u0b0d\u0b51\u0b59\u0b36"; Jb < Kb.length; Jb++) Ib += String.fromCharCode(9964 + La + -1265 - 7812 ^ Kb.charCodeAt(Jb));
                for (var Lb = "", Mb = 0; Mb < "\u05d9\u05c7\u05c0\u05ca\u05c1\u05d9".length; Mb++) Lb += String.fromCharCode(1454 ^ "\u05d9\u05c7\u05c0\u05ca\u05c1\u05d9".charCodeAt(Mb));
                switch (c) {
                    case 0:
                        var Nb = [];
                        window[Lb] === window ? Nb.push(o + M + Ma - 12906) : Nb.push(Na + 5538);
                        try {
                            var Ob = Ib + Math.floor(1e7 * Math.random()), Pb = document.createElement(Gb);
                            Pb.setAttribute(Eb, Ob), Pb.style.La = Cb, (document.body || document.getElementsByTagName(Ab)[0]).appendChild(Pb), document.getElementById(Ob) ? Nb.push(0) : Nb.push(1), (document.body || document.getElementsByTagName(yb)[Oa + h + Pa - 8151]).removeChild(Pb)
                        } catch (Qb) {
                            Nb.push(-1361 + Qa + 1879)
                        }
                        return Nb.join(wb);
                    case 1:
                        var Rb = arguments[x + 5347],
                            Sb = new fb.a.f.init([1332468387, -1641050960, Ra + R + 2136881301, -1629555948], ya + 2689),
                            Tb = new fb.a.f.init([Sa + w + 22041281, Y + Ta + 1457907509, 776125350, -(-7878 + _ + -5975 + 1942018983)], Ua + 4647);
                        return fb.Ga.$(Rb, Sb, {ra: Tb, ba: fb.ba.la, qa: fb.na.ma}).xa.toString().toUpperCase();
                    case Va + Wa - 5967:
                        return (_b = arguments[Xa + -1708 + Ya + 5932]) ? _b.length > 8011 + H - 16329 ? _b.substr(6968 + Za - 7677, 48) : _b : ub;
                    case 3:
                        var Ub = window.document.URL, Vb = window.navigator.userAgent.toLowerCase(), Wb = sb;
                        window.document.referrer.length > -11220 + $a + 18473 && (Wb = window.document.referrer);
                        try {
                            Wb.length == _a - 8815 && opener.location.href.length > 0 && (Wb = opener.location.href)
                        } catch (Xb) {
                        }
                        var Yb = window.navigator.appCodeName, Zb = window.navigator.appName,
                            $b = window.navigator.platform;
                        return Ub = a(Ub), Wb = a(Wb), Ub + qb + (Vb = a(Vb)) + ob + Wb + mb + Yb + kb + Zb + ib + $b;
                    case ab + J + ca - 11490:
                        var _b = arguments[1], ac = bb + -1434 - 689;
                        if (_b.length == s + ca + cb - 13491) return ac;
                        for (i = db + 1003 + 4059 - 782; i < _b.length; i++) char = _b.charCodeAt(i), ac = (ac << 8276 + j - 10445) - ac + char, ac &= ac;
                        return ac;
                    case eb + 8945:
                        var bc = gb + arguments[B + i + 8787] + W + arguments[2] + U + P + N + arguments[3] + C + arguments[t + z + q - 3244] + r + arguments[y + Na + -1658 + 11280] + n + function () {
                            return b.call(this, ja - 5974)
                        }() + k + function () {
                            return b.call(this, 0)
                        }() + f;
                        return function (a) {
                            return b.call(this, 1, a)
                        }(d + (ac = function (a) {
                            return b.call(this, v + 1735, a)
                        }(bc)) + bc)
                }
            }

            var c, d, e, f, g, h = 1836, i = -8290, j = 2174, k = -957, l = -2285, m = 3198, n = -9220, o = 5906,
                p = 8126, q = -3571, r = -213, s = 2249, t = -693, u = -327, v = -1731, w = 1765, x = -5346, y = -4080,
                z = 7512, A = 4359, B = -496, C = -4191, D = 2007, E = -1741, F = 700, G = -137, H = 8366, I = -6006,
                J = 9095, K = 2829, L = -6612, M = 2907, N = -450, O = -4002, P = 9852, Q = -3683, R = 8972, S = 5031,
                T = -1124, U = 847, V = -2667, W = -1169, X = 3738, Y = 4510, Z = 6428, $ = -4870, _ = -5763, aa = -132,
                ba = 9425, ca = 9587, da = -3620, ea = -955, fa = 9508, ga = -7940, ha = -6629, ia = 5513, ja = 5977,
                ka = -4547, la = -3840, ma = -2175, na = 8487, oa = -6720, pa = 6747, qa = 6090, ra = -9874, sa = -6246,
                ta = 9031, ua = 2239, va = -8467, wa = -955, xa = -2579, ya = -2673, za = -8067, Aa = -359, Ba = -7307,
                Ca = 291, Da = -5270, Ea = -3336, Fa = -1623, Ga = 7936, Ha = 3769, Ia = -239, Ja = 5156, Ka = 9703,
                La = 2034, Ma = 4093, Na = -5537, Oa = -657, Pa = 6972, Qa = -517, Ra = 5772, Sa = -3763, Ta = 8444,
                Ua = -4631, Va = -1401, Wa = 7370, Xa = -1755, Ya = -2468, Za = 709, $a = -7253, _a = 8815, ab = -7188,
                bb = 2123, cb = 1655, db = -4280, eb = -8940, fb = fb || function (a, b) {
                    var c = {}, d = c.a = {}, e = function () {
                    }, f = d.b = {
                        c: function (a) {
                            for (var b = "", c = 0; c < "\u0945\u0942\u0945\u0958".length; c++) b += String.fromCharCode(h + 9807 - 9295 ^ "\u0945\u0942\u0945\u0958".charCodeAt(c));
                            e.prototype = this;
                            var d = new e;
                            return a && d.d(a), d.hasOwnProperty(b) || (d.init = function () {
                                d.$super.init.apply(this, arguments)
                            }), d.init.prototype = d, d.$super = this, d
                        }, create: function () {
                            var a = this.c();
                            return a.init.apply(a, arguments), a
                        }, init: function () {
                        }, d: function (a) {
                            for (var b = "", c = 0; c < "\u037e\u0365\u0359\u037e\u0378\u0363\u0364\u036d".length; c++) b += String.fromCharCode(778 ^ "\u037e\u0365\u0359\u037e\u0378\u0363\u0364\u036d".charCodeAt(c));
                            for (var d in a) a.hasOwnProperty(d) && (this[d] = a[d]);
                            a.hasOwnProperty(b) && (this.toString = a.toString)
                        }, e: function () {
                            return this.init.prototype.c(this)
                        }
                    }, g = d.f = f.c({
                        init: function (a, b) {
                            a = this.g = a || [], this.h = void 0 != b ? b : (-2630 + i + 10924) * a.length
                        }, toString: function (a) {
                            return (a || q).i(this)
                        }, concat: function (a) {
                            var b = this.g, c = a.g, d = this.h;
                            if (a = a.h, this.j(), d % (j + -269 + -4213 + 2312)) for (var e = 0; e < a; e++) b[d + e >>> 2] |= (c[e >>> 2] >>> 24 - e % 4 * 8 & 255) << 24 - (d + e) % (-9975 + j + -4490 + 12295) * 8; else if (65535 < c.length) for (e = 0; e < a; e += 4) b[d + e >>> 2] = c[e >>> k + 959]; else b.push.apply(b, c);
                            return this.h += a, this
                        }, j: function () {
                            var b = this.g, c = this.h;
                            b[c >>> 8517 + h + -2630 - 7721] &= h + 8309 + -4849 + 4294961999 << 32 - (h + -8270 + 6442) * (c % 4), b.length = a.ceil(c / 4)
                        }, e: function () {
                            var a = f.e.call(this);
                            return a.g = this.g.slice(0), a
                        }, random: function (b) {
                            for (var c = [], d = 0; d < b; d += 4) c.push(4294967296 * a.random() | -8555 + l + 376 + 10464);
                            return new g.init(c, b)
                        }
                    }), p = c.k = {}, q = p.l = {
                        i: function (a) {
                            for (var b = "", c = 0; c < "".length; c++) b += String.fromCharCode(368 ^ "".charCodeAt(c));
                            var d = a.g;
                            a = a.h;
                            for (var e = [], f = 0; f < a; f++) {
                                var g = d[f >>> 2] >>> 24 - f % (m + 5624 - 8818) * 8 & 255;
                                e.push((g >>> 4).toString(16)), e.push((15 & g).toString(16))
                            }
                            return e.join(b)
                        }, parse: function (a) {
                            for (var b = a.length, c = [], d = 0; d < b; d += 2) c[d >>> n + 9223] |= parseInt(a.substr(d, 2), 16) << 24 - d % 8 * 4;
                            return new g.init(c, b / 2)
                        }
                    }, r = p.m = {
                        i: function (a) {
                            for (var b = "", c = 0; c < "".length; c++) b += String.fromCharCode(2238 ^ "".charCodeAt(c));
                            var d = a.g;
                            a = a.h;
                            for (var e = [], f = 0; f < a; f++) e.push(String.fromCharCode(d[f >>> 2] >>> 8383 + k - 7402 - f % 4 * 8 & 255));
                            return e.join(b)
                        }, parse: function (a) {
                            for (var b = a.length, c = [], d = o - 5906; d < b; d++) c[d >>> 2] |= (255 & a.charCodeAt(d)) << 24 - d % 4 * 8;
                            return new g.init(c, b)
                        }
                    }, s = p.n = {
                        i: function (a) {
                            for (var b = "", c = 0, d = "\xd8\xf4\xf9\xf3\xfa\xe7\xf8\xf0\xf1\xb5\xc0\xc1\xd3\xb8\xad\xb5\xf1\xf4\xe1\xf4"; c < d.length; c++) b += String.fromCharCode(149 ^ d.charCodeAt(c));
                            try {
                                return decodeURIComponent(escape(r.i(a)))
                            } catch (e) {
                                throw Error(b)
                            }
                        }, parse: function (a) {
                            return r.parse(unescape(encodeURIComponent(a)))
                        }
                    }, t = d.o = f.c({
                        p: function () {
                            this.q = new g.init, this.r = h - 1836
                        }, s: function (a) {
                            for (var b = "", c = 0; c < "\u0fa7\u0fa0\u0fa6\u0fbd\u0fba\u0fb3".length; c++) b += String.fromCharCode(4052 ^ "\u0fa7\u0fa0\u0fa6\u0fbd\u0fba\u0fb3".charCodeAt(c));
                            b == typeof a && (a = s.parse(a)), this.q.concat(a), this.r += a.h
                        }, t: function (b) {
                            var c = this.q, d = c.g, e = c.h, f = this.u, h = e / (4 * f);
                            if (b = (h = b ? a.ceil(h) : a.max((0 | h) - this.v, 0)) * f, e = a.min(4 * b, e), b) {
                                for (var i = 0; i < b; i += f) this.w(d, i);
                                i = d.splice(0, b), c.h -= e
                            }
                            return new g.init(i, e)
                        }, e: function () {
                            var a = f.e.call(this);
                            return a.q = this.q.e(), a
                        }, v: 0
                    });
                    d.x = t.c({
                        y: f.c(), init: function (a) {
                            this.y = this.y.c(a), this.p()
                        }, p: function () {
                            t.p.call(this), this.z()
                        }, A: function (a) {
                            return this.s(a), this.t(), this
                        }, B: function (a) {
                            return a && this.s(a), this.C()
                        }, u: 16, D: function (a) {
                            return function (b, c) {
                                return new a.init(c).B(b)
                            }
                        }, F: function (a) {
                            return function (b, c) {
                                return new u.HMAC.init(a, c).B(b)
                            }
                        }
                    });
                    var u = c.G = {};
                    return c
                }(Math);
            return function () {
                for (var a = "", b = 0, c = "\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xfb\xff\xed"; b < c.length; b++) a += String.fromCharCode(208 ^ c.charCodeAt(b));
                var d = fb, e = d.a.f;
                d.k.H = {
                    i: function (a) {
                        for (var b = "", c = 0; c < "".length; c++) b += String.fromCharCode(4077 ^ "".charCodeAt(c));
                        var d = a.g, e = a.h, f = this.I;
                        a.j(), a = [];
                        for (var g = 0; g < e; g += 3) for (var h = (d[g >>> 2] >>> 24 - g % 4 * 8 & 255) << p + -9200 + 1090 | (d[g + (l + 7275 - 4989) >>> 2] >>> 24 - (g + 1) % 4 * 8 & 255) << 8 | d[g + 2 >>> 2] >>> q + 3595 - (g + 2) % 4 * 8 & 255, i = 0; 4 > i && g + .75 * i < e; i++) a.push(f.charAt(h >>> 6 * (3 - i) & 63));
                        if (d = f.charAt(64)) for (; a.length % 4;) a.push(d);
                        return a.join(b)
                    }, parse: function (a) {
                        var b = a.length, c = this.I;
                        (d = c.charAt(64)) && -1 != (d = a.indexOf(d)) && (b = d);
                        for (var d = [], f = 0, g = 0; g < b; g++) if (g % 4) {
                            var h = c.indexOf(a.charAt(g - 1)) << g % (r + 1860 + 5724 - 7367) * 2,
                                i = c.indexOf(a.charAt(g)) >>> 6 - g % 4 * 2;
                            d[f >>> p + -6116 + 4162 - 6170] |= (h | i) << 24 - f % 4 * 8, f++
                        }
                        return e.create(d, f)
                    }, I: a
                }
            }(), function (a) {
                function b(a, b, c, d, e, h, i) {
                    return f.call(this, 2727 + g + 2727 - 7318, a, b, c, d, e, h, i)
                }

                function c(a, b, c, d, e, h, i) {
                    return f.call(this, g + -3418 + 1555, a, b, c, d, e, h, i)
                }

                function d(a, b, c, d, e, h, j) {
                    return f.call(this, g + i + -406 + 4647, a, b, c, d, e, h, j)
                }

                function e(a, b, c, d, e, g, h) {
                    return f.call(this, k + 1320 + 1320 - 1680, a, b, c, d, e, g, h)
                }

                function f(a) {
                    switch (a) {
                        case 0:
                            var b = arguments[1], c = arguments[ea + 7592 + 7592 - 20100],
                                d = arguments[ga + ha - 7012], e = arguments[fa + ia + 1567],
                                f = arguments[-1789 + ja - 503], g = arguments[ka + la + l + 20776];
                            return ((b = b + (c & d | ~c & e) + f + arguments[7]) << g | b >>> 32 - g) + c;
                        case ma + Y + 11708:
                            return b = arguments[na + 7051], c = arguments[A + 4673 + P - 18882], d = arguments[ca + J + n - 6198], e = arguments[Q + R + S - 10316], f = arguments[T + C + Z + 12875], g = arguments[6], ((b = b + (c & e | d & ~e) + f + arguments[7]) << g | b >>> -9475 + oa + J + 1645 - g) + c;
                        case $ + 460:
                            return b = arguments[D + v - 275], c = arguments[O + U + 3157], d = arguments[pa + -6801 + 14678], e = arguments[ca + _ - 7393], f = arguments[ba + qa + 36 - 3310], g = arguments[p + K - 10949], ((b = b + (c ^ d ^ e) + f + arguments[7]) << g | b >>> 32 - g) + c;
                        case ra + sa + V + 2160:
                            return b = arguments[1], c = arguments[7592 + W + 4673 - 11094], d = arguments[D + aa - 2931], e = arguments[5298 + N + -4862 + 18], f = arguments[ta - 4630], g = arguments[K + -6978 + 4155], ((b = b + (d ^ (c | ~e)) + f + arguments[r + 220]) << g | b >>> -8328 + da + -2734 + 15298 - g) + c
                    }
                }

                for (var g = 1864, i = -6103, X = -5750, Y = -5616, Z = -7555, $ = -458, _ = 1071, aa = 927, ba = -2568, ca = 6326, da = -4204, ea = 4918, fa = 7574, ga = 6160, ha = 855, ia = -9137, ja = 2297, ka = -9619, la = -8866, ma = -6091, na = -7050, oa = -1233, pa = -7874, qa = 5847, ra = 5062, sa = -4552, ta = 4635, ua = fb, va = (xa = ua.a).f, wa = xa.x, xa = ua.G, ya = [], za = g - 1864; -12185 + l + 14534 > za; za++) ya[za] = (i + -7357 + X + 4294986506) * a.abs(a.sin(za + (-7343 + l + X + 15379))) | 0;
                xa = xa.J = wa.c({
                    z: function () {
                        this.K = new va.init([1732584193, 4023233417, 2562383102, 9348 + q + 7556 + 271720545])
                    }, w: function (a, f) {
                        for (var l = 4921 + i + 1182; 16 > l; l++) {
                            var n = a[P = f + l];
                            a[P] = 16711935 & (n << 5017 + g + 4620 - 11493 | n >>> Y + 5640) | 4278255360 & (n << 24 | n >>> 8)
                        }
                        l = this.K.g;
                        var q, O, P = a[f + 0], Q = (n = a[f + 1], a[f + (s - 2247)]), R = a[f + 3], S = a[f + 4],
                            T = a[f + 5], U = a[f + (Y + s + 5624 - 2251)], V = a[f + 7], W = a[f + 8], ea = a[f + 9],
                            fa = a[f + 10], ga = a[f + 11], ha = a[f + 12], ia = a[f + (i + j + 3942)], ja = a[f + 14],
                            ka = a[f + (14808 + i - 8690)], la = l[-1465 + h - 371],
                            ma = e(ma = e(ma = e(ma = e(ma = d(ma = d(ma = d(ma = d(ma = c(ma = c(ma = c(ma = c(ma = b(ma = b(ma = b(ma = b(ma = l[1], O = b(O = l[2], q = b(q = l[3], la = b(la, ma, O, q, P, 7, ya[-2964 + p - 5162]), ma, O, n, 12, ya[1]), la, ma, Q, 5903 + Y - 270, ya[2]), q, la, R, 22, ya[3]), O = b(O, q = b(q, la = b(la, ma, O, q, S, 7, ya[4]), ma, O, T, 12, ya[5]), la, ma, U, 17, ya[6]), q, la, V, 22, ya[7]), O = b(O, q = b(q, la = b(la, ma, O, q, W, 7, ya[8]), ma, O, ea, 12, ya[9]), la, ma, fa, 4264 + Y + 1369, ya[-3423 + t + 4126]), q, la, ga, 22, ya[11]), O = b(O, q = b(q, la = b(la, ma, O, q, ha, o - 5899, ya[12]), ma, O, ia, 12, ya[t + -2344 + 3050]), la, ma, ja, 17, ya[1227 + Z + 6342]), q, la, ka, -8569 + r + 8804, ya[$ + -1821 + 806 + 1488]), O = c(O, q = c(q, la = c(la, ma, O, q, n, i + -1310 + Y + 13034, ya[16]), ma, O, U, 9, ya[g + u + -7697 + 6177]), la, ma, ga, v + -5305 + 7539 - 489, ya[18]), q, la, P, w + -571 + 6443 - 7617, ya[19]), O = c(O, q = c(q, la = c(la, ma, O, q, T, 5, ya[_ - 1051]), ma, O, fa, 9, ya[21]), la, ma, ka, 14, ya[x + X + -8178 + 19296]), q, la, S, 20, ya[-11385 + y + 15488]), O = c(O, q = c(q, la = c(la, ma, O, q, ea, 5, ya[24]), ma, O, ja, 9, ya[25]), la, ma, R, -912 + z + A - 10945, ya[aa - 901]), q, la, W, 12598 + ba - 10010, ya[27]), O = c(O, q = c(q, la = c(la, ma, O, q, ia, 5, ya[-4202 + ca - 2096]), ma, O, Q, 9, ya[29]), la, ma, V, B + Y + ca - 200, ya[30]), q, la, ha, ba + 9955 - 7367, ya[7539 + p + 42 - 15676]), O = d(O, q = d(q, la = d(la, ma, O, q, T, 4, ya[32]), ma, O, W, g - 1853, ya[33]), la, ma, ga, B + 9362 - 8850, ya[34]), q, la, ja, t + 716, ya[35]), O = d(O, q = d(q, la = d(la, ma, O, q, n, -5345 + C + 9540, ya[36]), ma, O, S, 11, ya[37]), la, ma, V, 16, ya[38]), q, la, fa, 23, ya[39]), O = d(O, q = d(q, la = d(la, ma, O, q, ia, Y + $ + D + 4071, ya[40]), ma, O, P, E + 1752, ya[41]), la, ma, R, 16, ya[42]), q, la, U, 23, ya[43]), O = d(O, q = d(q, la = d(la, ma, O, q, ea, 4, ya[44]), ma, O, ha, 11, ya[45]), la, ma, ka, y + 4096, ya[46]), q, la, Q, k + 8387 + -9793 + 2386, ya[47]), O = e(O, q = e(q, la = e(la, ma, O, q, P, X + F + 5056, ya[G + 185]), ma, O, V, z - 7502, ya[49]), la, ma, ja, 4376 + H + 3667 - 16394, ya[50]), q, la, T, I + -983 + 7010, ya[51]), O = e(O, q = e(q, la = e(la, ma, O, q, ha, 42 + s + 656 - 2941, ya[52]), ma, O, R, 10, ya[53]), la, ma, fa, 2553 + J + -8569 - 3064, ya[54]), q, la, n, 21, ya[3412 + x + 1989]), O = e(O, q = e(q, la = e(la, ma, O, q, W, 6, ya[56]), ma, O, ka, 2260 + $ - 1792, ya[-6071 + K + 3299]), la, ma, U, 15, ya[-990 + da + 5252]), q, la, ia, 4121 + m - 7298, ya[59]), O = e(O, q = e(q, la = e(la, ma, O, q, S, 6, ya[L + 6672]), ma, O, ga, 10, ya[61]), la, ma, Q, 15, ya[62]), q, la, ea, 21, ya[63]);
                        l[M - 2907] = l[0] + la | 0, l[1] = l[1] + ma | 0, l[2] = l[2] + O | 0, l[3] = l[3] + q | -11860 + N + 12310
                    }, C: function () {
                        var b = this.q, c = b.g, d = (6876 + $ + -335 - 6075) * this.r, e = 8 * b.h;
                        c[e >>> 8761 + ea + 1268 - 14942] |= 128 << C + 4215 - e % 32;
                        var f = a.floor(d / 4294967296);
                        for (c[15 + (e + 64 >>> 9 << O + 4006)] = 16711935 & (f << 8 | f >>> 24) | 4278255360 & (f << 24 | f >>> 8), c[14 + (e + (D + -6251 + 4308) >>> 9 << 4)] = 16711935 & (d << 8 | d >>> 24) | 4278255360 & (d << 24 | d >>> 8), b.h = 4 * (c.length + 1), this.t(), c = (b = this.K).g, d = 0; 4 > d; d++) e = c[d], c[d] = 16711935 & (e << 8 | e >>> 24) | 4278255360 & (e << 24 | e >>> 2244 + fa + 2814 - 12624);
                        return b
                    }, e: function () {
                        var a = wa.e.call(this);
                        return a.K = this.K.e(), a
                    }
                }), ua.J = wa.D(xa), ua.L = wa.F(xa)
            }(Math), e = (c = (d = fb).a).b, f = c.f, g = (c = d.G).M = e.c({
                y: e.c({N: 4, O: c.J, P: 1}),
                init: function (a) {
                    this.y = this.y.c(a)
                },
                Q: function (a, b) {
                    for (var c = (h = this.y).O.create(), d = f.create(), e = d.g, g = h.N, h = h.P; e.length < g;) {
                        i && c.A(i);
                        var i = c.A(a).B(b);
                        c.p();
                        for (var j = 1; j < h; j++) i = c.B(i), c.p();
                        d.concat(i)
                    }
                    return d.h = 4 * g, d
                }
            }), d.M = function (a, b, c) {
                return g.create(c).Q(a, b)
            }, fb.a.R || function (a) {
                var b = (o = fb).a, c = b.b, d = b.f, e = b.o, f = o.k.H, g = o.G.M, h = b.R = e.c({
                    y: c.c(), S: function (a, b) {
                        return this.create(this.T, a, b)
                    }, U: function (a, b) {
                        return this.create(this.V, a, b)
                    }, init: function (a, b, c) {
                        this.y = this.y.c(c), this.W = a, this.X = b, this.p()
                    }, p: function () {
                        e.p.call(this), this.z()
                    }, Y: function (a) {
                        return this.s(a), this.t()
                    }, B: function (a) {
                        return a && this.s(a), this.C()
                    }, N: w - 1761, Z: 4, T: 1, V: 2, D: function (a) {
                        return {
                            $: function (b, c, d) {
                                for (var e = "", f = 0; f < "\u01e0\u01e7\u01e1\u01fa\u01fd\u01f4".length; f++) e += String.fromCharCode(403 ^ "\u01e0\u01e7\u01e1\u01fa\u01fd\u01f4".charCodeAt(f));
                                return (e == typeof c ? p : n).$(a, b, c, d)
                            }, _: function (b, c, d) {
                                for (var e = "", f = 0; f < "\u08d8\u08df\u08d9\u08c2\u08c5\u08cc".length; f++) e += String.fromCharCode(2219 ^ "\u08d8\u08df\u08d9\u08c2\u08c5\u08cc".charCodeAt(f));
                                return (e == typeof c ? p : n)._(a, b, c, d)
                            }
                        }
                    }
                });
                b.aa = h.c({
                    C: function () {
                        return this.t(!0)
                    }, u: 1
                });
                var i = o.ba = {}, j = function (a, b, c) {
                    var d = this.ca;
                    d ? this.ca = void 0 : d = this.da;
                    for (var e = 0; e < c; e++) a[b + e] ^= d[e]
                }, l = (b.ea = c.c({
                    S: function (a, b) {
                        return this.fa.create(a, b)
                    }, U: function (a, b) {
                        return this.ga.create(a, b)
                    }, init: function (a, b) {
                        this.ha = a, this.ca = b
                    }
                })).c();
                l.fa = l.c({
                    ia: function (a, b) {
                        var c = this.ha, d = c.u;
                        j.call(this, a, b, d), c.ja(a, b), this.da = a.slice(b, b + d)
                    }
                }), l.ga = l.c({
                    ia: function (a, b) {
                        var c = this.ha, d = c.u, e = a.slice(b, b + d);
                        c.ka(a, b), j.call(this, a, b, d), this.da = e
                    }
                }), i = i.la = l, l = (o.na = {}).ma = {
                    na: function (a, b) {
                        for (var c, e = (c = (c = 4 * b) - a.h % c) << 24 | c << 16 | c << 8 | c, f = [], g = 6180 + K + -1259 - 7750; g < c; g += X + 6428 - 10162) f.push(e);
                        c = d.create(f, c), a.concat(c)
                    }, oa: function (a) {
                        a.h -= 255 & a.g[a.h - 1 >>> 2]
                    }
                }, b.pa = h.c({
                    y: h.y.c({ba: i, qa: l}),
                    p: function () {
                        h.p.call(this);
                        var a = (b = this.y).ra, b = b.ba;
                        if (this.W == this.T) var c = b.S; else c = b.U, this.v = 1;
                        this.sa = c.call(b, this, a && a.g)
                    }, w: function (a, b) {
                        this.sa.ia(a, b)
                    }, C: function () {
                        var a = this.y.qa;
                        if (this.W == this.T) {
                            a.na(this.q, this.u);
                            var b = this.t(!0)
                        } else b = this.t(!0), a.oa(b);
                        return b
                    }, u: V + -6989 + -3440 + 13100
                });
                var m = b.ta = c.c({
                    init: function (a) {
                        this.d(a)
                    }, toString: function (a) {
                        return (a || this.ua).i(this)
                    }
                }), n = (i = (o.wa = {}).va = {
                    i: function (a) {
                        var b = a.xa;
                        return ((a = a.ya) ? d.create([1398893684, 6475 + D + 1701068349]).concat(a).concat(b) : b).toString(f)
                    }, parse: function (a) {
                        var b = (a = f.parse(a)).g;
                        if (1398893684 == b[0] && 1701076831 == b[1]) {
                            var c = d.create(b.slice(2, 4));
                            b.splice(0, 4), a.h -= 16
                        }
                        return m.create({xa: a, ya: c})
                    }
                }, b.za = c.c({
                    y: c.c({wa: i}), $: function (a, b, c, d) {
                        d = this.y.c(d);
                        var e = a.S(c, d);
                        return b = e.B(b), e = e.y, m.create({
                            xa: b,
                            Aa: c,
                            ra: e.ra,
                            Ba: a,
                            ba: e.ba,
                            qa: e.qa,
                            u: a.u,
                            ua: d.wa
                        })
                    }, _: function (a, b, c, d) {
                        return d = this.y.c(d), b = this.Ca(b, d.wa), a.U(c, d).B(b.xa)
                    }, Ca: function (a, b) {
                        for (var c = "", d = -8390 + Y + 3880; d < "\u0815\u0812\u0814\u080f\u0808\u0801".length; d++) c += String.fromCharCode(2150 ^ "\u0815\u0812\u0814\u080f\u0808\u0801".charCodeAt(d));
                        return c == typeof a ? b.parse(a, this) : a
                    }
                })), o = (o.Da = {}).va = {
                    Ea: function (a, b, c, e) {
                        return e || (e = d.random(k + 4678 + -4737 + 1024)), a = g.create({N: b + c}).Q(a, e), c = d.create(a.g.slice(b), 4 * c), a.h = 4 * b, m.create({
                            Aa: a,
                            ra: c,
                            ya: e
                        })
                    }
                }, p = b.Fa = n.c({
                    y: n.y.c({Da: o}), $: function (a, b, c, d) {
                        return c = (d = this.y.c(d)).Da.Ea(c, a.N, a.Z), d.ra = c.ra, (a = n.$.call(this, a, b, c.Aa, d)).d(c), a
                    }, _: function (a, b, c, d) {
                        return d = this.y.c(d), b = this.Ca(b, d.wa), c = d.Da.Ea(c, a.N, a.Z, b.ya), d.ra = c.ra, n._.call(this, a, b, c.Aa, d)
                    }
                })
            }(), function () {
                for (var a = fb, b = a.a.pa, c = a.G, d = [], e = [], f = [], g = [], i = [], j = [], k = [], l = [], m = [], n = [], o = [], q = U + 2043 + -9216 + 6326; 256 > q; q++) o[q] = 128 > q ? q << 1 : q << Z + 4353 - 10780 ^ -4619 + $ + 9772;
                var t = 0, u = 13770 + V - 11103;
                for (q = 8146 + s + s - 12644; 256 > q; q++) {
                    var v = (v = u ^ u << 1 ^ u << h + 7286 + 7286 - 16406 ^ u << 3 ^ u << X + 2744 - 6478) >>> 8 ^ 255 & v ^ 7286 + _ + -803 - 621;
                    d[t] = v, e[v] = t;
                    var x = o[t], y = o[x], z = o[y], A = 257 * o[v] ^ 16843008 * v;
                    f[t] = A << 24 | A >>> 8, g[t] = A << 8146 + L - 1518 | A >>> 16, i[t] = A << -7226 + B + -8993 + 16723 | A >>> 24, j[t] = A, A = 16843009 * z ^ 65537 * y ^ (12950 + aa - 12561) * x ^ (ba + 6038 + ca + 16817958) * t, k[v] = A << 24 | A >>> W + 1177, l[v] = A << 16 | A >>> 16, m[v] = A << H + da - 4738 | A >>> 24, n[v] = A, t ? (t = x ^ o[o[o[z ^ x]]], u ^= o[o[u]]) : t = u = 1
                }
                var C = [0, 1, da + 1538 + -9246 + 11330, ea + -8064 + -6326 + 15349, 8, -7197 + fa - 2295, 32, 64, 128, 27, 54];
                c = c.Ga = b.c({
                    z: function () {
                        for (var a = (c = this.X).g, b = c.h / 4, c = 4 * ((this.Ha = b + 6) + 1), e = this.Ia = [], f = 0; f < c; f++) if (f < b) e[f] = a[f]; else {
                            var g = e[f - 1];
                            f % b ? 6 < b && 4 == f % b && (g = d[g >>> 24] << 24 | d[g >>> 16 & 255] << 16 | d[g >>> 8 & 255] << 8 | d[255 & g]) : (g = d[(g = g << 8 | g >>> 24) >>> 24] << 24 | d[g >>> 16 & 255] << 16 | d[g >>> 8 & ga + 8195] << 8 | d[255 & g], g ^= C[f / b | 0] << 24), e[f] = e[f - b] ^ g
                        }
                        for (a = this.Ja = [], b = 0; b < c; b++) f = c - b, g = b % 4 ? e[f] : e[f - 4], a[b] = 4 > b || 4 >= f ? g : k[d[g >>> 24]] ^ l[d[g >>> 16 & 255]] ^ m[d[g >>> 8 & 255]] ^ n[d[255 & g]]
                    }, ja: function (a, b) {
                        this.Ka(a, b, this.Ia, f, g, i, j, d)
                    }, ka: function (a, b) {
                        var c = a[b + 1];
                        a[b + 1] = a[b + 3], a[b + 3] = c, this.Ka(a, b, this.Ja, k, l, m, n, e), c = a[b + 1], a[b + 1] = a[b + 3], a[b + 3] = c
                    }, Ka: function (a, b, c, d, e, f, g, h) {
                        for (var i = this.Ha, j = a[b] ^ c[0], k = a[b + 1] ^ c[1], l = a[b + 2] ^ c[6782 + r + 2889 - 9456], m = a[b + 3] ^ c[3], n = 4, o = 1; o < i; o++) {
                            var q = d[j >>> 24] ^ e[k >>> 16 & 255] ^ f[l >>> 8 & 255] ^ g[255 & m] ^ c[n++],
                                s = d[k >>> 24] ^ e[l >>> 16 & 255] ^ f[m >>> 8 & 255] ^ g[255 & j] ^ c[n++],
                                t = d[l >>> 24] ^ e[m >>> 16 & 255] ^ f[j >>> 8 & w - 1510] ^ g[255 & k] ^ c[n++];
                            m = d[m >>> 24] ^ e[j >>> 16 & 255] ^ f[k >>> -3930 + Q + 7621 & 255] ^ g[255 & l] ^ c[n++], j = q, k = s, l = t
                        }
                        q = (h[j >>> 24] << 24 | h[k >>> 16 & 255] << 16 | h[l >>> 8 & 255] << 8 | h[255 & m]) ^ c[n++], s = (h[k >>> 24] << 24 | h[l >>> 16 & 255] << 16 | h[m >>> 8 & 255] << 8 | h[255 & j]) ^ c[n++], t = (h[l >>> 24] << 24 | h[m >>> 16 & 255] << 16 | h[j >>> 8 & 255] << 8 | h[255 & k]) ^ c[n++], m = (h[m >>> 24] << 9424 + ha + -1219 - 1552 | h[j >>> 16 & 255] << 16 | h[k >>> 8 & 255] << 8 | h[255 & l]) ^ c[n++], a[b] = q, a[b + 1] = s, a[b + (-5365 + p - 2759)] = t, a[b + 3] = m
                    }, N: 8
                }), a.Ga = b.D(c)
            }(), function (a, c, d, e, f) {
                return b.call(this, 5, a, c, d, e, f)
            }
        }();
        a.exports = c
    }, 288: function (a, b, c) {
        var d = c(68).definitionMap;
        a.exports = {
            getDefinitionListFromData: function (a) {
                var b = Txplayer.$, c = [], e = location.hostname;
                if (top !== window) try {
                    e = top.location.hostname
                } catch (f) {
                }
                if ("o" === a.s && a.fl && a.fl.fi && "array" === b.type(a.fl.fi) && a.fl.fi.length && a.fl.fi[0]) for (var g = 0, h = a.fl.fi.length; g < h; g++) a.fl.fi[g].name in d && ("fhd" == a.fl.fi[g].name && "fhd" != a.fl.fi[g].name || c.push({
                    name: a.fl.fi[g].name,
                    cname: a.fl.fi[g].cname,
                    sl: a.fl.fi[g].sl,
                    format: a.fl.fi[g].id,
                    lmt: a.fl.fi[g].lmt,
                    fs: a.fl.fi[g].fs,
                    br: a.fl.fi[g].br
                }));
                return c
            }, getPcVideoMp4Url: function (a, b) {
                function c(a) {
                    var b = [];
                    return 8 === a.dltype && "o" === a.s && a.vl && a.vl.vi && a.vl.vi.length && a.vl.vi[0] && a.vl.vi[0].ul && (b.m3u8 = a.vl.vi[0].ul.m3u8), (3 === a.dltype || 8 === a.dltype) && "o" === a.s && a.vl && a.vl.vi && a.vl.vi.length && a.vl.vi[0] && a.vl.vi[0].ul && a.vl.vi[0].ul.ui && a.vl.vi[0].ul.ui.length && k.each(a.vl.vi[0].ul.ui, function (c, d) {
                        d.url && d.hls && d.hls.pt ? b.push(d.url + d.hls.pt) : 8 === a.dltype && b.push(d.url)
                    }), b
                }

                function d(a, b) {
                    if (0 === b) return a;
                    var c = a.lastIndexOf("."), d = a.substr(0, c) + "." + b + a.substring(c);
                    return d
                }

                function e(a) {
                    var b = a.indexOf("."), c = a.substr(b);
                    return c
                }

                function f(a, c, d, e) {
                    for (var f = [], g = {}, h = {}, i = a.ui.length, j = 0; j < i; j++) g = a.ui[j], h = {}, g.url && (g.url && g.url.indexOf(c + ".flv") === -1 && g.url.indexOf(c + ".mp4") === -1 ? h.url = g.url + d : h.url = g.url, g.vt && (h.vt = parseInt(g.vt)), h.url.indexOf("sdtfrom") === -1 && (h.url.indexOf("?") > -1 ? h.url += "&sdtfrom=" + b.dataset.sdtfrom : h.url += "?sdtfrom=" + b.dataset.sdtfrom, h.url += "&guid=" + b.dataset.guid), f.push(h));
                    return f
                }

                var g, h, i, j, k = Txplayer.$, l = a.vl, m = l.vi, n = m[0], o = [], p = n.fn;
                if (3 == a.dltype || 8 === a.dltype) {
                    g = {}, g.vid = n.lnk, g.width = parseInt(n.vw), g.height = parseInt(n.vh), g.bytesTotal = parseInt(n.fs), g.byteRate = n.br, g.filename = n.fn, h = n.fn, g.newFileName = h, g.fileNameSuffix = e(h);
                    var q = c(a);
                    g.urlArray = [], j = q.length;
                    for (var r = 0; r < j; r++) g.urlArray.push({url: q[r]});
                    return g.vt = n.ul.ui[0].vt, g.duration = parseInt(n.td, 10), g.m3u8 = q.m3u8, o.push(g), o
                }
                if (j = n.cl.fc, !n.cl.ci && n.fvkey && n.fn && n.ul && n.ul.ui && n.ul.ui.length) return g = {}, g.vid = n.lnk, g.width = parseInt(n.vw), g.height = parseInt(n.vh), g.bytesTotal = parseInt(n.fs), g.byteRate = n.br, g.filename = n.fn, h = n.fn, g.newFileName = h, g.fileNameSuffix = e(h), g.urlArray = f(n.ul, n.lnk, h, g.fileNameSuffix), g.vt = n.ul.ui[0].vt, g.duration = parseInt(n.td, 10), o.push(g), o;
                if (n.cl.ci && j === n.cl.ci.length) {
                    for (var s = 0; s < j; s++) i = n.cl.ci[s], g = {}, g.vid = n.lnk, g.width = parseInt(n.vw), g.height = parseInt(n.vh), g.bytesTotal = parseInt(i.cs), g.duration = parseFloat(i.cd), g.byteRate = n.br, g.filename = n.fn, h = d(p, s + 1), g.newFileName = h, g.fileNameSuffix = e(h), g.urlArray = f(n.ul, n.lnk, h, g.fileNameSuffix), g.vt = n.ul.ui[0].vt, o.push(g);
                    return o
                }
            }
        }
    }, 289: function (a, b, c) {
        (function (b) {
            function c(a) {
                return ua.locateFile ? ua.locateFile(a, Aa) : Aa + a
            }

            function d(a) {
                g(!Pa);
                var b = Oa;
                return Oa = Oa + a + 15 & -16, g(Oa < db, "not enough memory for static allocation - increase TOTAL_MEMORY"), b
            }

            function e(a, b) {
                b || (b = Da);
                var c = a = Math.ceil(a / b) * b;
                return c
            }

            function f(a) {
                f.shown || (f.shown = {}), f.shown[a] || (f.shown[a] = 1, Ca(a))
            }

            function g(a, b) {
                a || sa("Assertion failed: " + b)
            }

            function h(a) {
                var b = ua["_" + a];
                return g(b, "Cannot call unknown function " + a + ", make sure it is exported"), b
            }

            function i(a, b, c, d, e) {
                function f(a) {
                    return "string" === b ? k(a) : "boolean" === b ? Boolean(a) : a
                }

                var i = h(a), j = [], l = 0;
                if (g("array" !== b, 'Return type should not be "array".'), d) for (var m = 0; m < d.length; m++) {
                    var n = $a[c[m]];
                    n ? (0 === l && (l = Ub()), j[m] = n(d[m])) : j[m] = d[m]
                }
                var o = i.apply(null, j);
                return o = f(o), 0 !== l && Tb(l), o
            }

            function j(a, b, c, d) {
                return function () {
                    return i(a, b, c, arguments, d)
                }
            }

            function k(a, b) {
                if (0 === b || !a) return "";
                for (var c, d = 0, e = 0; ;) {
                    if (g(a + e < db), c = Ga[a + e >> 0], d |= c, 0 == c && !b) break;
                    if (e++, b && e == b) break
                }
                b || (b = e);
                var f = "";
                if (d < 128) {
                    for (var h, i = 1024; b > 0;) h = String.fromCharCode.apply(String, Ga.subarray(a, a + Math.min(b, i))), f = f ? f + h : h, a += i, b -= i;
                    return f
                }
                return m(a)
            }

            function l(a, b) {
                for (var c = b; a[c];) ++c;
                if (c - b > 16 && a.subarray && _a) return _a.decode(a.subarray(b, c));
                for (var d, e, f, g, h, i, j = ""; ;) {
                    if (d = a[b++], !d) return j;
                    if (128 & d) if (e = 63 & a[b++], 192 != (224 & d)) if (f = 63 & a[b++], 224 == (240 & d) ? d = (15 & d) << 12 | e << 6 | f : (g = 63 & a[b++], 240 == (248 & d) ? d = (7 & d) << 18 | e << 12 | f << 6 | g : (h = 63 & a[b++], 248 == (252 & d) ? d = (3 & d) << 24 | e << 18 | f << 12 | g << 6 | h : (i = 63 & a[b++], d = (1 & d) << 30 | e << 24 | f << 18 | g << 12 | h << 6 | i))), d < 65536) j += String.fromCharCode(d); else {
                        var k = d - 65536;
                        j += String.fromCharCode(55296 | k >> 10, 56320 | 1023 & k)
                    } else j += String.fromCharCode((31 & d) << 6 | e); else j += String.fromCharCode(d)
                }
            }

            function m(a) {
                return l(Ga, a)
            }

            function n(a, b, c, d) {
                if (!(d > 0)) return 0;
                for (var e = c, f = c + d - 1, g = 0; g < a.length; ++g) {
                    var h = a.charCodeAt(g);
                    if (h >= 55296 && h <= 57343) {
                        var i = a.charCodeAt(++g);
                        h = 65536 + ((1023 & h) << 10) | 1023 & i
                    }
                    if (h <= 127) {
                        if (c >= f) break;
                        b[c++] = h
                    } else if (h <= 2047) {
                        if (c + 1 >= f) break;
                        b[c++] = 192 | h >> 6, b[c++] = 128 | 63 & h
                    } else if (h <= 65535) {
                        if (c + 2 >= f) break;
                        b[c++] = 224 | h >> 12, b[c++] = 128 | h >> 6 & 63, b[c++] = 128 | 63 & h
                    } else if (h <= 2097151) {
                        if (c + 3 >= f) break;
                        b[c++] = 240 | h >> 18, b[c++] = 128 | h >> 12 & 63, b[c++] = 128 | h >> 6 & 63, b[c++] = 128 | 63 & h
                    } else if (h <= 67108863) {
                        if (c + 4 >= f) break;
                        b[c++] = 248 | h >> 24, b[c++] = 128 | h >> 18 & 63, b[c++] = 128 | h >> 12 & 63, b[c++] = 128 | h >> 6 & 63, b[c++] = 128 | 63 & h
                    } else {
                        if (c + 5 >= f) break;
                        b[c++] = 252 | h >> 30, b[c++] = 128 | h >> 24 & 63, b[c++] = 128 | h >> 18 & 63, b[c++] = 128 | h >> 12 & 63, b[c++] = 128 | h >> 6 & 63, b[c++] = 128 | 63 & h
                    }
                }
                return b[c] = 0, c - e
            }

            function o(a, b, c) {
                return g("number" == typeof c, "stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"), n(a, Ga, b, c)
            }

            function p(a) {
                for (var b = 0, c = 0; c < a.length; ++c) {
                    var d = a.charCodeAt(c);
                    d >= 55296 && d <= 57343 && (d = 65536 + ((1023 & d) << 10) | 1023 & a.charCodeAt(++c)), d <= 127 ? ++b : b += d <= 2047 ? 2 : d <= 65535 ? 3 : d <= 2097151 ? 4 : d <= 67108863 ? 5 : 6
                }
                return b
            }

            function q(a) {
                return f("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling"), a
            }

            function r(a) {
                var b = /__Z[\w\d_]+/g;
                return a.replace(b, function (a) {
                    var b = q(a);
                    return a === b ? a : b + " [" + a + "]"
                })
            }

            function s() {
                var a = new Error;
                if (!a.stack) {
                    try {
                        throw new Error(0)
                    } catch (b) {
                        a = b
                    }
                    if (!a.stack) return "(no stack trace available)"
                }
                return a.stack.toString()
            }

            function t() {
                var a = s();
                return ua.extraStackTrace && (a += "\n" + ua.extraStackTrace()), r(a)
            }

            function u(a, b) {
                return a % b > 0 && (a += b - a % b), a
            }

            function v(a) {
                ua.buffer = Ea = a
            }

            function w() {
                ua.HEAP8 = Fa = new Int8Array(Ea), ua.HEAP16 = Ha = new Int16Array(Ea), ua.HEAP32 = Ja = new Int32Array(Ea), ua.HEAPU8 = Ga = new Uint8Array(Ea), ua.HEAPU16 = Ia = new Uint16Array(Ea), ua.HEAPU32 = Ka = new Uint32Array(Ea), ua.HEAPF32 = La = new Float32Array(Ea), ua.HEAPF64 = Ma = new Float64Array(Ea)
            }

            function x() {
                g(0 == (3 & Sa)), Ka[(Sa >> 2) - 1] = 34821223, Ka[(Sa >> 2) - 2] = 2310721022
            }

            function y() {
                if (34821223 == Ka[(Sa >> 2) - 1] && 2310721022 == Ka[(Sa >> 2) - 2] || sa("Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x" + Ka[(Sa >> 2) - 2].toString(16) + " " + Ka[(Sa >> 2) - 1].toString(16)), 1668509029 !== Ja[0]) throw"Runtime error: The application has corrupted its heap memory area (address zero)!"
            }

            function z(a) {
                sa("Stack overflow! Attempted to allocate " + a + " bytes on the stack, but stack has only " + (Sa - Ub() + a) + " bytes available!")
            }

            function A() {
                sa("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + db + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")
            }

            function B() {
                A()
            }

            function C() {
                return db
            }

            function D(a) {
                for (; a.length > 0;) {
                    var b = a.shift();
                    if ("function" != typeof b) {
                        var c = b.func;
                        "number" == typeof c ? void 0 === b.arg ? ua.dynCall_v(c) : ua.dynCall_vi(c, b.arg) : c(void 0 === b.arg ? null : b.arg)
                    } else b()
                }
            }

            function E() {
                if (ua.preRun) for ("function" == typeof ua.preRun && (ua.preRun = [ua.preRun]); ua.preRun.length;) I(ua.preRun.shift());
                D(eb)
            }

            function F() {
                y(), ib || (ib = !0, D(fb))
            }

            function G() {
                y(), D(gb)
            }

            function H() {
                if (y(), ua.postRun) for ("function" == typeof ua.postRun && (ua.postRun = [ua.postRun]); ua.postRun.length;) J(ua.postRun.shift());
                D(hb)
            }

            function I(a) {
                eb.unshift(a)
            }

            function J(a) {
                hb.unshift(a)
            }

            function K(a, b) {
                g(a.length >= 0, "writeArrayToMemory array must have a length (should be an array or typed array)"), Fa.set(a, b)
            }

            function L(a) {
                kb++, ua.monitorRunDependencies && ua.monitorRunDependencies(kb), a ? (g(!nb[a]), nb[a] = 1, null === lb && "undefined" != typeof setInterval && (lb = setInterval(function () {
                    if (Xa) return clearInterval(lb), void (lb = null);
                    var a = !1;
                    for (var b in nb) a || (a = !0, Ca("still waiting on run dependencies:")), Ca("dependency: " + b);
                    a && Ca("(end of list)")
                }, 1e4))) : Ca("warning: run dependency added without ID")
            }

            function M(a) {
                if (kb--, ua.monitorRunDependencies && ua.monitorRunDependencies(kb), a ? (g(nb[a]), delete nb[a]) : Ca("warning: run dependency removed without ID"), 0 == kb && (null !== lb && (clearInterval(lb), lb = null), mb)) {
                    var b = mb;
                    mb = null, b()
                }
            }

            function N(a) {
                return String.prototype.startsWith ? a.startsWith(pb) : 0 === a.indexOf(pb)
            }

            function O() {
                function a(a) {
                    var b = ua.buffer;
                    a.byteLength < b.byteLength && Ca("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here");
                    var c = new Int8Array(b), d = new Int8Array(a);
                    d.set(c), v(a), w()
                }

                function b() {
                    try {
                        if (ua.wasmBinary) return new Uint8Array(ua.wasmBinary);
                        if (ua.readBinary) return ua.readBinary(h);
                        throw"both async and sync fetching of the wasm failed"
                    } catch (a) {
                        sa(a)
                    }
                }

                function d() {
                    return ua.wasmBinary || !wa && !xa || "function" != typeof fetch ? new Promise(function (a, c) {
                        a(b())
                    }) : fetch(h, {credentials: "same-origin"}).then(function (a) {
                        if (!a.ok) throw"failed to load wasm binary file at '" + h + "'";
                        return a.arrayBuffer()
                    })["catch"](function () {
                        return b()
                    })
                }

                function e(b, c, e) {
                    function f(b, c) {
                        l = b.exports, l.memory && a(l.memory), ua.asm = l, ua.usingWasm = !0, M("wasm-instantiate")
                    }

                    function h(a) {
                        g(ua === m, "the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"), m = null, f(a.instance, a.module)
                    }

                    function i(a) {
                        d().then(function (a) {
                            return WebAssembly.instantiate(a, k)
                        }).then(a, function (a) {
                            Ca("failed to asynchronously prepare wasm: " + a), sa(a)
                        })
                    }

                    if ("object" != typeof WebAssembly) return sa("No WebAssembly support found. Build with -s WASM=0 to target JavaScript instead."), Ca("no native wasm support detected"), !1;
                    if (!(ua.wasmMemory instanceof WebAssembly.Memory)) return Ca("no native wasm Memory in use"), !1;
                    if (c.memory = ua.wasmMemory, k.global = {
                        NaN: NaN,
                        Infinity: 1 / 0
                    }, k["global.Math"] = Math, k.env = c, L("wasm-instantiate"), ua.instantiateWasm) try {
                        return ua.instantiateWasm(k, f)
                    } catch (j) {
                        return Ca("Module.instantiateWasm callback failed with error: " + j), !1
                    }
                    var m = ua;
                    return i(h), {}
                }

                var f = "ckey.wast", h = "ckey.wasm", i = "ckey.temp.asm.js";
                N(f) || (f = c(f)), N(h) || (h = c(h)), N(i) || (i = c(i));
                var j = 65536, k = {global: null, env: null, asm2wasm: Va, parent: ua}, l = null;
                ua.asmPreload = ua.asm;
                var m = ua.reallocBuffer, n = function (a) {
                    var b = ua.usingWasm ? ab : bb;
                    a = u(a, b);
                    var c = ua.buffer, d = c.byteLength;
                    if (ua.usingWasm) try {
                        var e = ua.wasmMemory.grow((a - d) / j);
                        return e !== -1 ? ua.buffer = ua.wasmMemory.buffer : null
                    } catch (f) {
                        return null
                    }
                };
                ua.reallocBuffer = function (a) {
                    return "asmjs" === o ? m(a) : n(a)
                };
                var o = "";
                ua.asm = function (a, b, c) {
                    if (!b.table) {
                        var d = ua.wasmTableSize;
                        void 0 === d && (d = 1024);
                        var f = ua.wasmMaxTableSize;
                        "object" == typeof WebAssembly && "function" == typeof WebAssembly.Table ? void 0 !== f ? b.table = new WebAssembly.Table({
                            initial: d,
                            maximum: f,
                            element: "anyfunc"
                        }) : b.table = new WebAssembly.Table({
                            initial: d,
                            element: "anyfunc"
                        }) : b.table = new Array(d), ua.wasmTable = b.table
                    }
                    b.memoryBase || (b.memoryBase = ua.STATIC_BASE), b.tableBase || (b.tableBase = 0);
                    var h;
                    return h = e(a, b, c), g(h, "no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: http://kripken.github.io/emscripten-site/docs/compiling/WebAssembly.html#binaryen-methods"), h
                };
                ua.asm
            }

            function P() {
                function a(a) {
                    return a ? a.length > 48 ? a.substr(0, 48) : a : ""
                }

                function b() {
                    var b = document.URL, c = window.navigator.userAgent.toLowerCase(), d = "";
                    document.referrer.length > 0 && (d = document.referrer);
                    try {
                        0 == d.length && opener.location.href.length > 0 && (d = opener.location.href)
                    } catch (e) {
                    }
                    var f = window.navigator.appCodeName, g = window.navigator.appName, h = window.navigator.platform;
                    return b = a(b), d = a(d), c = a(c), b + "|" + c + "|" + d + "|" + f + "|" + g + "|" + h
                }

                var c = b(), d = p(c) + 1, e = Pb(d);
                return o(c, e, d + 1), e
            }

            function Q() {
                return !!Q.uncaught_exception
            }

            function R(a) {
                throw sb.last || (sb.last = a), a + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."
            }

            function S() {
                var a = sb.last;
                if (!a) return 0 | (Rb(0), 0);
                var b = sb.infos[a], c = b.type;
                if (!c) return 0 | (Rb(0), a);
                var d = Array.prototype.slice.call(arguments);
                ua.___cxa_is_pointer_type(c);
                S.buffer || (S.buffer = Pb(4)), Ja[S.buffer >> 2] = a, a = S.buffer;
                for (var e = 0; e < d.length; e++) if (d[e] && ua.___cxa_can_catch(d[e], c, a)) return a = Ja[a >> 2], b.adjusted = a, 0 | (Rb(d[e]), a);
                return a = Ja[a >> 2], 0 | (Rb(c), a)
            }

            function T() {
            }

            function U() {
            }

            function V(a, b) {
                tb.varargs = b;
                try {
                    var c = tb.getStreamFromFD(), d = (tb.get(), tb.get()), e = tb.get(), f = tb.get(), g = d;
                    return ob.llseek(c, g, f), Ja[e >> 2] = c.position, c.getdents && 0 === g && 0 === f && (c.getdents = null), 0
                } catch (h) {
                    return "undefined" != typeof ob && h instanceof ob.ErrnoError || sa(h), -h.errno
                }
            }

            function W() {
                var a = ua._fflush;
                a && a(0);
                var b = tb.buffers;
                b[1].length && tb.printChar(1, 10), b[2].length && tb.printChar(2, 10)
            }

            function X(a, b) {
                tb.varargs = b;
                try {
                    for (var c = tb.get(), d = tb.get(), e = tb.get(), f = 0, g = 0; g < e; g++) {
                        for (var h = Ja[d + 8 * g >> 2], i = Ja[d + (8 * g + 4) >> 2], j = 0; j < i; j++) tb.printChar(c, Ga[h + j]);
                        f += i
                    }
                    return f
                } catch (k) {
                    return "undefined" != typeof ob && k instanceof ob.ErrnoError || sa(k), -k.errno
                }
            }

            function Y(a, b) {
                tb.varargs = b;
                try {
                    return 0
                } catch (c) {
                    return "undefined" != typeof ob && c instanceof ob.ErrnoError || sa(c), -c.errno
                }
            }

            function Z(a, b) {
                tb.varargs = b;
                try {
                    var c = tb.getStreamFromFD();
                    return ob.close(c), 0
                } catch (d) {
                    return "undefined" != typeof ob && d instanceof ob.ErrnoError || sa(d), -d.errno
                }
            }

            function $() {
            }

            function _() {
                ua.abort()
            }

            function aa(a, b, c) {
                return Ga.set(Ga.subarray(b, b + c), a), a
            }

            function ba(a) {
                return ua.___errno_location ? Ja[ua.___errno_location() >> 2] = a : Ca("failed to set errno from JS"), a
            }

            function ca(a) {
                Ca("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)"), Ca("Build with ASSERTIONS=2 for more info."), sa(a)
            }

            function da(a) {
                Ca("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)"), Ca("Build with ASSERTIONS=2 for more info."), sa(a)
            }

            function ea(a) {
                Ca("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)"), Ca("Build with ASSERTIONS=2 for more info."), sa(a)
            }

            function fa(a) {
                Ca("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)"), Ca("Build with ASSERTIONS=2 for more info."), sa(a)
            }

            function ga(a) {
                Ca("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)"), Ca("Build with ASSERTIONS=2 for more info."), sa(a)
            }

            function ha(a) {
                Ca("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)"), Ca("Build with ASSERTIONS=2 for more info."), sa(a)
            }

            function ia(a) {
                Ca("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)"), Ca("Build with ASSERTIONS=2 for more info."), sa(a)
            }

            function ja(a, b) {
                var c = Ub();
                try {
                    return ua.dynCall_ii(a, b)
                } catch (d) {
                    if (Tb(c), "number" != typeof d && "longjmp" !== d) throw d;
                    ua.setThrew(1, 0)
                }
            }

            function ka(a, b, c, d) {
                var e = Ub();
                try {
                    return ua.dynCall_iiii(a, b, c, d)
                } catch (f) {
                    if (Tb(e), "number" != typeof f && "longjmp" !== f) throw f;
                    ua.setThrew(1, 0)
                }
            }

            function la(a) {
                var b = Ub();
                try {
                    ua.dynCall_v(a)
                } catch (c) {
                    if (Tb(b), "number" != typeof c && "longjmp" !== c) throw c;
                    ua.setThrew(1, 0)
                }
            }

            function ma(a, b) {
                var c = Ub();
                try {
                    ua.dynCall_vi(a, b)
                } catch (d) {
                    if (Tb(c), "number" != typeof d && "longjmp" !== d) throw d;
                    ua.setThrew(1, 0)
                }
            }

            function na(a, b, c, d, e) {
                var f = Ub();
                try {
                    ua.dynCall_viiii(a, b, c, d, e)
                } catch (g) {
                    if (Tb(f), "number" != typeof g && "longjmp" !== g) throw g;
                    ua.setThrew(1, 0)
                }
            }

            function oa(a, b, c, d, e, f) {
                var g = Ub();
                try {
                    ua.dynCall_viiiii(a, b, c, d, e, f)
                } catch (h) {
                    if (Tb(g), "number" != typeof h && "longjmp" !== h) throw h;
                    ua.setThrew(1, 0)
                }
            }

            function pa(a, b, c, d, e, f, g) {
                var h = Ub();
                try {
                    ua.dynCall_viiiiii(a, b, c, d, e, f, g)
                } catch (i) {
                    if (Tb(h), "number" != typeof i && "longjmp" !== i) throw i;
                    ua.setThrew(1, 0)
                }
            }

            function qa(a) {
                this.name = "ExitStatus", this.message = "Program terminated with exit(" + a + ")", this.status = a
            }

            function ra(a) {
                function b() {
                    ua.calledRun || (ua.calledRun = !0, Xa || (F(), G(), ua.onRuntimeInitialized && ua.onRuntimeInitialized(), g(!ua._main, 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'), H()))
                }

                a = a || ua.arguments, kb > 0 || (x(), E(), kb > 0 || ua.calledRun || (ua.setStatus ? (ua.setStatus("Running..."), setTimeout(function () {
                    setTimeout(function () {
                        ua.setStatus("")
                    }, 1), b()
                }, 1)) : b(), y()))
            }

            function sa(a) {
                ua.onAbort && ua.onAbort(a), void 0 !== a ? (Ba(a), Ca(a), a = JSON.stringify(a)) : a = "", Xa = !0, Ya = 1;
                var b = "", c = "abort(" + a + ") at " + t() + b;
                throw Vb && Vb.forEach(function (b) {
                    c = b(c, a)
                }), c
            }

            var ta, ua = "undefined" != typeof Txplayer.ckeyModule ? Txplayer.ckeyModule : {}, va = {};
            for (ta in ua) ua.hasOwnProperty(ta) && (va[ta] = ua[ta]);
            ua.arguments = [], ua.thisProgram = "./this.program", ua.quit = function (a, b) {
                throw b
            }, ua.preRun = [], ua.postRun = [];
            var wa = !1, xa = !1, ya = !1, za = !1;
            if (wa = "object" == typeof window, xa = "function" == typeof importScripts, ya = "object" == typeof b && !0 && !wa && !xa, za = !wa && !ya && !xa, ua.ENVIRONMENT) throw new Error("Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)");
            var Aa = "";
            if (!wa && !xa) throw new Error("environment detection error");
            ua.read = function (a) {
                var b = new XMLHttpRequest;
                return b.open("GET", a, !1), b.send(null), b.responseText
            }, xa && (ua.readBinary = function (a) {
                var b = new XMLHttpRequest;
                return b.open("GET", a, !1), b.responseType = "arraybuffer", b.send(null), new Uint8Array(b.response)
            }), ua.readAsync = function (a, b, c) {
                var d = new XMLHttpRequest;
                d.open("GET", a, !0), d.responseType = "arraybuffer", d.onload = function () {
                    return 200 == d.status || 0 == d.status && d.response ? void b(d.response) : void c()
                }, d.onerror = c, d.send(null)
            }, ua.setWindowTitle = function (a) {
                document.title = a
            };
            var Ba = ua.print || ("undefined" != typeof console ? void 0 : "undefined" != typeof print ? print : null),
                Ca = ua.printErr || ("undefined" != typeof printErr ? printErr : "undefined" != typeof console && void 0 || Ba);
            for (ta in va) va.hasOwnProperty(ta) && (ua[ta] = va[ta]);
            va = void 0, g("undefined" == typeof ua.memoryInitializerPrefixURL, "Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"), g("undefined" == typeof ua.pthreadMainPrefixURL, "Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"), g("undefined" == typeof ua.cdInitializerPrefixURL, "Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"), g("undefined" == typeof ua.filePackagePrefixURL, "Module.filePackagePrefixURL option was removed, use Module.locateFile instead");
            var Da = 16;
            Ub = Tb = Sb = Rb = Qb = function () {
                sa("cannot use the stack before compiled code is ready to run, and has provided stack access")
            };
            var Ea, Fa, Ga, Ha, Ia, Ja, Ka, La, Ma, Na, Oa, Pa, Qa, Ra, Sa, Ta, Ua, Va = {
                    "f64-rem": function (a, b) {
                        return a % b
                    }, "debugger": function () {
                    }
                }, Wa = (new Array(0), 1024), Xa = !1, Ya = 0, Za = {
                    stackSave: function () {
                        Ub()
                    }, stackRestore: function () {
                        Tb()
                    }, arrayToC: function (a) {
                        var b = Sb(a.length);
                        return K(a, b), b
                    }, stringToC: function (a) {
                        var b = 0;
                        if (null !== a && void 0 !== a && 0 !== a) {
                            var c = (a.length << 2) + 1;
                            b = Sb(c), o(a, b, c)
                        }
                        return b
                    }
                }, $a = {string: Za.stringToC, array: Za.arrayToC},
                _a = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0,
                ab = ("undefined" != typeof TextDecoder ? new TextDecoder("utf-16le") : void 0, 65536), bb = 16777216;
            Na = Oa = Qa = Ra = Sa = Ta = Ua = 0, Pa = !1;
            var cb = ua.TOTAL_STACK || 5242880, db = ua.TOTAL_MEMORY || 16777216;
            if (db < cb && Ca("TOTAL_MEMORY should be larger than TOTAL_STACK, was " + db + "! (TOTAL_STACK=" + cb + ")"), g("undefined" != typeof Int32Array && "undefined" != typeof Float64Array && void 0 !== Int32Array.prototype.subarray && void 0 !== Int32Array.prototype.set, "JS engine does not provide full typed array support"), ua.buffer ? (Ea = ua.buffer, g(Ea.byteLength === db, "provided buffer should be " + db + " bytes, but it is " + Ea.byteLength)) : ("object" == typeof WebAssembly && "function" == typeof WebAssembly.Memory ? (g(db % ab === 0), ua.wasmMemory = new WebAssembly.Memory({
                initial: db / ab,
                maximum: db / ab
            }), Ea = ua.wasmMemory.buffer) : Ea = new ArrayBuffer(db), g(Ea.byteLength === db), ua.buffer = Ea), w(), Ja[0] = 1668509029, Ha[1] = 25459, 115 !== Ga[2] || 99 !== Ga[3]) throw"Runtime error: expected the system to be little-endian!";
            var eb = [], fb = [], gb = [], hb = [], ib = !1, jb = !1;
            g(Math.imul && Math.fround && Math.clz32 && Math.trunc, "this is a legacy browser, build with LEGACY_VM_SUPPORT");
            var kb = (Math.abs, Math.cos, Math.sin, Math.tan, Math.acos, Math.asin, Math.atan, Math.atan2, Math.exp, Math.log, Math.sqrt, Math.ceil, Math.floor, Math.pow, Math.imul, Math.fround, Math.round, Math.min, Math.max, Math.clz32, Math.trunc, 0),
                lb = null, mb = null, nb = {};
            ua.preloadedImages = {}, ua.preloadedAudios = {};
            var ob = {
                error: function () {
                    sa("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with  -s FORCE_FILESYSTEM=1")
                }, init: function () {
                    ob.error()
                }, createDataFile: function () {
                    ob.error()
                }, createPreloadedFile: function () {
                    ob.error()
                }, createLazyFile: function () {
                    ob.error()
                }, open: function () {
                    ob.error()
                }, mkdev: function () {
                    ob.error()
                }, registerDevice: function () {
                    ob.error()
                }, analyzePath: function () {
                    ob.error()
                }, loadFilesFromDB: function () {
                    ob.error()
                }, ErrnoError: function () {
                    ob.error()
                }
            };
            ua.FS_createDataFile = ob.createDataFile, ua.FS_createPreloadedFile = ob.createPreloadedFile;
            var pb = "data:application/octet-stream;base64,";
            O();
            Na = Wa, Oa = Na + 6928, fb.push();
            var qb = 6928;
            ua.STATIC_BASE = Na, ua.STATIC_BUMP = qb;
            var rb = Oa;
            Oa += 16, g(rb % 8 == 0);
            var sb = {
                last: 0, caught: [], infos: {}, deAdjust: function (a) {
                    if (!a || sb.infos[a]) return a;
                    for (var b in sb.infos) {
                        var c = +b, d = sb.infos[c];
                        if (d.adjusted === a) return c
                    }
                    return a
                }, addRef: function (a) {
                    if (a) {
                        var b = sb.infos[a];
                        b.refcount++
                    }
                }, decRef: function (a) {
                    if (a) {
                        var b = sb.infos[a];
                        g(b.refcount > 0), b.refcount--, 0 !== b.refcount || b.rethrown || (b.destructor && ua.dynCall_vi(b.destructor, a), delete sb.infos[a], ___cxa_free_exception(a))
                    }
                }, clearRef: function (a) {
                    if (a) {
                        var b = sb.infos[a];
                        b.refcount = 0
                    }
                }
            }, tb = {
                buffers: [null, [], []], printChar: function (a, b) {
                    var c = tb.buffers[a];
                    g(c), 0 === b || 10 === b ? ((1 === a ? Ba : Ca)(l(c, 0)), c.length = 0) : c.push(b)
                }, varargs: 0, get: function (a) {
                    tb.varargs += 4;
                    var b = Ja[tb.varargs - 4 >> 2];
                    return b
                }, getStr: function () {
                    var a = k(tb.get());
                    return a
                }, get64: function () {
                    var a = tb.get(), b = tb.get();
                    return g(a >= 0 ? 0 === b : b === -1), a
                }, getZero: function () {
                    g(0 === tb.get())
                }
            };
            Ua = d(4), Qa = Ra = e(Oa), Sa = Qa + cb, Ta = e(Sa), Ja[Ua >> 2] = Ta, Pa = !0, g(Ta < db, "TOTAL_MEMORY not big enough for stack");
            ua.wasmTableSize = 99, ua.wasmMaxTableSize = 99, ua.asmGlobalArg = {}, ua.asmLibraryArg = {
                abort: sa,
                assert: g,
                enlargeMemory: B,
                getTotalMemory: C,
                abortOnCannotGrowMemory: A,
                abortStackOverflow: z,
                nullFunc_ii: ca,
                nullFunc_iiii: da,
                nullFunc_v: ea,
                nullFunc_vi: fa,
                nullFunc_viiii: ga,
                nullFunc_viiiii: ha,
                nullFunc_viiiiii: ia,
                invoke_ii: ja,
                invoke_iiii: ka,
                invoke_v: la,
                invoke_vi: ma,
                invoke_viiii: na,
                invoke_viiiii: oa,
                invoke_viiiiii: pa,
                __ZSt18uncaught_exceptionv: Q,
                ___cxa_find_matching_catch: S,
                ___gxx_personality_v0: T,
                ___lock: U,
                ___resumeException: R,
                ___setErrNo: ba,
                ___syscall140: V,
                ___syscall146: X,
                ___syscall54: Y,
                ___syscall6: Z,
                ___unlock: $,
                _abort: _,
                _emscripten_memcpy_big: aa,
                _get_unicode_str: P,
                flush_NO_FILESYSTEM: W,
                DYNAMICTOP_PTR: Ua,
                tempDoublePtr: rb,
                STACKTOP: Ra,
                STACK_MAX: Sa
            };
            var ub = ua.asm(ua.asmGlobalArg, ua.asmLibraryArg, Ea), vb = ub.___cxa_can_catch;
            ub.___cxa_can_catch = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), vb.apply(null, arguments)
            };
            var wb = ub.___cxa_is_pointer_type;
            ub.___cxa_is_pointer_type = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), wb.apply(null, arguments)
            };
            var xb = ub.___em_js__get_unicode_str;
            ub.___em_js__get_unicode_str = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), xb.apply(null, arguments)
            };
            var yb = ub.___errno_location;
            ub.___errno_location = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), yb.apply(null, arguments)
            };
            var zb = ub._ckeytest;
            ub._ckeytest = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), zb.apply(null, arguments)
            };
            var Ab = ub._fflush;
            ub._fflush = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Ab.apply(null, arguments)
            };
            var Bb = ub._free;
            ub._free = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Bb.apply(null, arguments)
            };
            var Cb = ub._getckey;
            ub._getckey = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Cb.apply(null, arguments)
            };
            var Db = ub._llvm_bswap_i16;
            ub._llvm_bswap_i16 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Db.apply(null, arguments)
            };
            var Eb = ub._llvm_bswap_i32;
            ub._llvm_bswap_i32 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Eb.apply(null, arguments)
            };
            var Fb = ub._malloc;
            ub._malloc = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Fb.apply(null, arguments)
            };
            var Gb = ub._memmove;
            ub._memmove = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Gb.apply(null, arguments)
            };
            var Hb = ub._sbrk;
            ub._sbrk = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"),
                    g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Hb.apply(null, arguments)
            };
            var Ib = ub.establishStackSpace;
            ub.establishStackSpace = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Ib.apply(null, arguments)
            };
            var Jb = ub.getTempRet0;
            ub.getTempRet0 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Jb.apply(null, arguments)
            };
            var Kb = ub.setTempRet0;
            ub.setTempRet0 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Kb.apply(null, arguments)
            };
            var Lb = ub.setThrew;
            ub.setThrew = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Lb.apply(null, arguments)
            };
            var Mb = ub.stackAlloc;
            ub.stackAlloc = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Mb.apply(null, arguments)
            };
            var Nb = ub.stackRestore;
            ub.stackRestore = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Nb.apply(null, arguments)
            };
            var Ob = ub.stackSave;
            ub.stackSave = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), Ob.apply(null, arguments)
            }, ua.asm = ub;
            var Pb = (ua.___cxa_can_catch = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.___cxa_can_catch.apply(null, arguments)
            }, ua.___cxa_is_pointer_type = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.___cxa_is_pointer_type.apply(null, arguments)
            }, ua.___em_js__get_unicode_str = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.___em_js__get_unicode_str.apply(null, arguments)
            }, ua.___errno_location = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.___errno_location.apply(null, arguments)
            }, ua._ckeytest = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._ckeytest.apply(null, arguments)
            }, ua._fflush = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._fflush.apply(null, arguments)
            }, ua._free = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._free.apply(null, arguments)
            }, ua._getckey = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._getckey.apply(null, arguments)
            }, ua._llvm_bswap_i16 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._llvm_bswap_i16.apply(null, arguments)
            }, ua._llvm_bswap_i32 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._llvm_bswap_i32.apply(null, arguments)
            }, ua._malloc = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._malloc.apply(null, arguments)
            }), Qb = (ua._memcpy = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._memcpy.apply(null, arguments)
            }, ua._memmove = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._memmove.apply(null, arguments)
            }, ua._memset = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._memset.apply(null, arguments)
            }, ua._sbrk = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm._sbrk.apply(null, arguments)
            }, ua.establishStackSpace = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.establishStackSpace.apply(null, arguments)
            }, ua.getTempRet0 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.getTempRet0.apply(null, arguments)
            }), Rb = (ua.runPostSets = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.runPostSets.apply(null, arguments)
            }, ua.setTempRet0 = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.setTempRet0.apply(null, arguments)
            }), Sb = (ua.setThrew = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.setThrew.apply(null, arguments)
            }, ua.stackAlloc = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.stackAlloc.apply(null, arguments)
            }), Tb = ua.stackRestore = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.stackRestore.apply(null, arguments)
            }, Ub = ua.stackSave = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.stackSave.apply(null, arguments)
            };
            ua.dynCall_ii = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.dynCall_ii.apply(null, arguments)
            }, ua.dynCall_iiii = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.dynCall_iiii.apply(null, arguments)
            }, ua.dynCall_v = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.dynCall_v.apply(null, arguments)
            }, ua.dynCall_vi = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.dynCall_vi.apply(null, arguments)
            }, ua.dynCall_viiii = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.dynCall_viiii.apply(null, arguments)
            }, ua.dynCall_viiiii = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.dynCall_viiiii.apply(null, arguments)
            }, ua.dynCall_viiiiii = function () {
                return g(ib, "you need to wait for the runtime to be ready (e.g. wait for main() to be called)"), g(!jb, "the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)"), ua.asm.dynCall_viiiiii.apply(null, arguments)
            };
            ua.asm = ub, ua.intArrayFromString || (ua.intArrayFromString = function () {
                sa("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.intArrayToString || (ua.intArrayToString = function () {
                sa("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.ccall = i, ua.cwrap = j, ua.setValue || (ua.setValue = function () {
                sa("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.getValue || (ua.getValue = function () {
                sa("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.allocate || (ua.allocate = function () {
                sa("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.getMemory || (ua.getMemory = function () {
                sa("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.Pointer_stringify || (ua.Pointer_stringify = function () {
                sa("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.AsciiToString || (ua.AsciiToString = function () {
                sa("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stringToAscii || (ua.stringToAscii = function () {
                sa("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.UTF8ArrayToString || (ua.UTF8ArrayToString = function () {
                sa("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.UTF8ToString || (ua.UTF8ToString = function () {
                sa("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stringToUTF8Array || (ua.stringToUTF8Array = function () {
                sa("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stringToUTF8 || (ua.stringToUTF8 = function () {
                sa("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.lengthBytesUTF8 || (ua.lengthBytesUTF8 = function () {
                sa("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.UTF16ToString || (ua.UTF16ToString = function () {
                sa("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stringToUTF16 || (ua.stringToUTF16 = function () {
                sa("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.lengthBytesUTF16 || (ua.lengthBytesUTF16 = function () {
                sa("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.UTF32ToString || (ua.UTF32ToString = function () {
                sa("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stringToUTF32 || (ua.stringToUTF32 = function () {
                sa("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.lengthBytesUTF32 || (ua.lengthBytesUTF32 = function () {
                sa("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.allocateUTF8 || (ua.allocateUTF8 = function () {
                sa("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stackTrace || (ua.stackTrace = function () {
                sa("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.addOnPreRun || (ua.addOnPreRun = function () {
                sa("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.addOnInit || (ua.addOnInit = function () {
                sa("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.addOnPreMain || (ua.addOnPreMain = function () {
                sa("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.addOnExit || (ua.addOnExit = function () {
                sa("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.addOnPostRun || (ua.addOnPostRun = function () {
                sa("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.writeStringToMemory || (ua.writeStringToMemory = function () {
                sa("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.writeArrayToMemory || (ua.writeArrayToMemory = function () {
                sa("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.writeAsciiToMemory || (ua.writeAsciiToMemory = function () {
                sa("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.addRunDependency || (ua.addRunDependency = function () {
                sa("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.removeRunDependency || (ua.removeRunDependency = function () {
                sa("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.ENV || (ua.ENV = function () {
                sa("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.FS || (ua.FS = function () {
                sa("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.FS_createFolder || (ua.FS_createFolder = function () {
                sa("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.FS_createPath || (ua.FS_createPath = function () {
                sa("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.FS_createDataFile || (ua.FS_createDataFile = function () {
                sa("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.FS_createPreloadedFile || (ua.FS_createPreloadedFile = function () {
                sa("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.FS_createLazyFile || (ua.FS_createLazyFile = function () {
                sa("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.FS_createLink || (ua.FS_createLink = function () {
                sa("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.FS_createDevice || (ua.FS_createDevice = function () {
                sa("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.FS_unlink || (ua.FS_unlink = function () {
                sa("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you")
            }), ua.GL || (ua.GL = function () {
                sa("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.staticAlloc || (ua.staticAlloc = function () {
                sa("'staticAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.dynamicAlloc || (ua.dynamicAlloc = function () {
                sa("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.warnOnce || (ua.warnOnce = function () {
                sa("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.loadDynamicLibrary || (ua.loadDynamicLibrary = function () {
                sa("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.loadWebAssemblyModule || (ua.loadWebAssemblyModule = function () {
                sa("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.getLEB || (ua.getLEB = function () {
                sa("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.getFunctionTables || (ua.getFunctionTables = function () {
                sa("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.alignFunctionTables || (ua.alignFunctionTables = function () {
                sa("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.registerFunctions || (ua.registerFunctions = function () {
                sa("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.addFunction || (ua.addFunction = function () {
                sa("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.removeFunction || (ua.removeFunction = function () {
                sa("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.getFuncWrapper || (ua.getFuncWrapper = function () {
                sa("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.prettyPrint || (ua.prettyPrint = function () {
                sa("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.makeBigInt || (ua.makeBigInt = function () {
                sa("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.dynCall || (ua.dynCall = function () {
                sa("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.getCompilerSetting || (ua.getCompilerSetting = function () {
                sa("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stackSave || (ua.stackSave = function () {
                sa("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stackRestore || (ua.stackRestore = function () {
                sa("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.stackAlloc || (ua.stackAlloc = function () {
                sa("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.establishStackSpace || (ua.establishStackSpace = function () {
                sa("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.print || (ua.print = function () {
                sa("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.printErr || (ua.printErr = function () {
                sa("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
            }), ua.ALLOC_NORMAL || Object.defineProperty(ua, "ALLOC_NORMAL", {
                get: function () {
                    sa("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                }
            }), ua.ALLOC_STACK || Object.defineProperty(ua, "ALLOC_STACK", {
                get: function () {
                    sa("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                }
            }), ua.ALLOC_STATIC || Object.defineProperty(ua, "ALLOC_STATIC", {
                get: function () {
                    sa("'ALLOC_STATIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                }
            }), ua.ALLOC_DYNAMIC || Object.defineProperty(ua, "ALLOC_DYNAMIC", {
                get: function () {
                    sa("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                }
            }), ua.ALLOC_NONE || Object.defineProperty(ua, "ALLOC_NONE", {
                get: function () {
                    sa("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)")
                }
            }), qa.prototype = new Error, qa.prototype.constructor = qa;
            mb = function Wb() {
                ua.calledRun || ra(), ua.calledRun || (mb = Wb)
            }, ua.run = ra;
            var Vb = [];
            if (ua.abort = sa, ua.preInit) for ("function" == typeof ua.preInit && (ua.preInit = [ua.preInit]); ua.preInit.length > 0;) ua.preInit.pop()();
            ua.noExitRuntime = !0, ra(), a.exports = ua
        }).call(b, c(138))
    }, 290: function (a, b, c) {
        var d = Txplayer.util, e = c(291);
        a.exports = {
            playControl: function (a) {
                var b = Txplayer.$, c = this;
                if (c.context.dataset.playerWidth = c.context.dataset.$playermod.width(), c.context.dataset.playerHeight = c.context.dataset.$playermod.height(), "string" === b.type(a) ? a = {vid: a} : "undefined" === b.type(a) && (a = {}), a.vid || (a.vid = this.context.dataset.vid), !a.vid || 11 !== a.vid.length) throw new Error("vid is illegal");
                if (this.context.dataset.canPlayTime && this.context.dataset.currentTime >= this.context.dataset.canPlayTime && a.vid === this.context.dataset.vid) return void (this.context.dataset.getinfoJSON && 4 == this.context.dataset.getinfoJSON.exem ? this.showDujiaDialog() : this.showUIVipGuide("trial"));
                if (1 !== this.context.dataset.playState && !this.context.dataset.isPlayingAd || a.vid !== this.context.dataset.vid) {
                    if (a.vid == this.context.dataset.vid) {
                        if (this.dataset.hasVideoPlayed) return void this.context.msg.broadcast("play");
                        if (this.context.dataset.playList && this.context.dataset.playList.length) return void this.context.msg.broadcast("setFocusVideoUrl", b.extend({}, this.context.dataset.playList[0], {autoplay: !0}))
                    }
                    a.autoplay = !0, this.checkLanguageSwitch(a), a.hasOwnProperty("cid") && (this.context.dataset.cid = a.cid), a.hasOwnProperty("triggerplay") && (this.context.config.triggerplay = a.triggerplay), a.hasOwnProperty("columnId") && (this.context.dataset.columnId = a.columnId), a.hasOwnProperty("autoplay") && (this.context.dataset.autoplay = a.autoplay), a.hasOwnProperty("isNeedPay") && (this.context.dataset.isNeedPay = a.isNeedPay), a.hasOwnProperty("nextVid") && (this.context.dataset.nextVid = a.nextVid), a.hasOwnProperty("showBullet") && (this.context.config.showBullet = a.showBullet || this.context.config.showBullet || !1), a.hasOwnProperty("playEndTime") && a.playEndTime && a.hasOwnProperty("duration") ? (this.context.config.playEndTime = parseInt(a.playEndTime), this.context.dataset.playEndTime = parseInt(a.duration) - parseInt(a.playEndTime), this.context.dataset.playEndTime < 0 && (this.context.dataset.playEndTime = null)) : a.hasOwnProperty("vid") && a.vid !== this.context.dataset.vid && (this.context.dataset.playEndTime = null, this.context.config.playEndTime = 0), a.hasOwnProperty("trailerMode") && a.trailerMode ? this.context.dataset.trailerMode = !0 : this.context.dataset.trailerMode = !1, this.context.dataset.connectionPlayTime = a.connectionPlayTime ? a.connectionPlayTime : 0, a.connectionPlayTime && this.context.config.duration && Math.abs(+a.connectionPlayTime - +this.context.config.duration) < 1 && (this.context.dataset.connectionPlayTime = a.connectionPlayTime = 0), this.context.dataset.playStartTime = a.playStartTime ? a.playStartTime : 0, delete c.context.dataset.hlsLoadStartTime, this.context.dataset.connectionPlayType = a.hasOwnProperty("connectionPlayType") ? a.connectionPlayType : 0, a.hasOwnProperty("connectionPlayType") || a.vid === this.context.dataset.vid || (this.context.dataset.connectionPlayType = 3), a.hasOwnProperty("title") && (this.context.dataset.title = d.xss(a.title)), a.authext && (this.context.dataset.authext = a.authext), a.eduext && (this.context.dataset.eduext = a.eduext), this.context.dataset.isAnNewPlayAction = !!a.isAnNewPlayAction, this.dataset.hasVideoPlayed = !1, this.dataset.hasLoadVideoUrl = !1;
                    var f = this.context.dataset.vid;
                    a.hasOwnProperty("vid") && this.setVid(a.vid), this.context.msg.broadcast("beforeVideoPlay", this.context.dataset.vid, f), this.initNextVid();
                    var g = {};
                    g.playStartTime = c.getSkipPreludeTime(), g.connectionPlayTime = c.context.dataset.connectionPlayTime, d.v4log("main-playcontrol:loadVideoUrls", g), "nintendo" === c.context.config.playerType ? (c.context.config.browserDisableAutoPlay = !1, c.loadVideoUrls(g)) : e.video().then(function (a) {
                        if (a.result === !0) c.context.config.browserDisableAutoPlay = !1, c.loadVideoUrls(g); else {
                            var b = a.error && a.error.name;
                            if (/NotAllow/i.test(b) && d.browser.safari) return;
                            c.context.config.autoPlayInMute && (c.context.config.browserDisableAutoPlay = !0, c.context.userApi.setVolume(0), c.context.userApi.mute(), c.loadVideoUrls(g))
                        }
                    })
                }
            }, initNextVid: function () {
                var a = this;
                "array" == Txplayer.$.type(Txplayer.dataset.isReadyPlugins) && Txplayer.dataset.isReadyPlugins.indexOf("UiPlayNext") != -1 ? this.context.msg.broadcast("setNextVid", {nextVid: this.context.dataset.nextVid}) : this.context.msg.on("pluginReady", function (b) {
                    "UiPlayNext" == b.name && a.context.msg.broadcast("setNextVid", {nextVid: a.context.dataset.nextVid})
                })
            }, setVid: function (a) {
                if (a && a !== this.context.dataset.vid) {
                    d.showInfo("HdPlayerControl.onVidChange", {currentVid: this.context.dataset.vid, nextVid: a});
                    var b = this.context.dataset.vid;
                    this.context.dataset.vid = a, this.context.msg.broadcast("vidChange", a, b), this.context.dataset.hasCallSetVid = !0;
                    try {
                        this.context.userMsg.broadcast("vidChange", a, b)
                    } catch (c) {
                    }
                    this.updatePlayerId()
                }
            }, updatePlayerId: function () {
                this.context.dataset.playerId = d.createGUID(), this.context.dataset.flowid = this.context.dataset.playerId + "_" + this.context.dataset.platform
            }, pauseControl: function () {
                this.context.dataset.disableHotKey || this.context.dataset.isPlayingAd || this.context.msg.broadcast("pause")
            }
        }
    }, 291: function (a, b) {
        function c(a) {
            return Object.assign({muted: !1, timeout: 2e3, inline: !1}, a)
        }

        function d(a, b) {
            var c = a.muted, d = a.timeout, e = a.inline, f = b(), g = f.element, h = f.source, i = void 0, j = void 0,
                k = void 0;
            if (g.muted = c, c === !0 && g.setAttribute("muted", "muted"), e === !0 && g.setAttribute("playsinline", "playsinline"), g.src = h, "undefined" != typeof window.Promise) return new window.Promise(function (a) {
                i = g.play(), j = setTimeout(function () {
                    k(!1, new Error("Timeout " + d + " ms has been reached"))
                }, d), k = function (b) {
                    var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    clearTimeout(j), a({result: b, error: c})
                }, void 0 !== i ? i.then(function () {
                    return k(!0)
                })["catch"](function (a) {
                    return k(!1, a)
                }) : k(!0)
            });
            var l = Txplayer.$.Deferred();
            return i = g.play(), j = setTimeout(function () {
                k(!1, new Error("Timeout " + d + " ms has been reached"))
            }, d), k = function (a) {
                var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                clearTimeout(j), l.resolve({result: a, error: b})
            }, void 0 !== i ? i.then(function () {
                return k(!0)
            })["catch"](function (a) {
                return k(!1, a)
            }) : setTimeout(function () {
                k(!0)
            }), l
        }

        function e(a) {
            return a = c(a), d(a, function () {
                return {element: document.createElement("video"), source: URL.createObjectURL(h)}
            })
        }

        function f(a) {
            return a = c(a), d(a, function () {
                return {element: document.createElement("audio"), source: URL.createObjectURL(g)}
            })
        }

        "function" != typeof Object.assign && Object.defineProperty(Object, "assign", {
            value: function (a, b) {
                "use strict";
                if (null == a) throw new TypeError("Cannot convert undefined or null to object");
                for (var c = Object(a), d = 1; d < arguments.length; d++) {
                    var e = arguments[d];
                    if (null != e) for (var f in e) Object.prototype.hasOwnProperty.call(e, f) && (c[f] = e[f])
                }
                return c
            }, writable: !0, configurable: !0
        });
        var g = new Blob([new Uint8Array([255, 227, 24, 196, 0, 0, 0, 3, 72, 1, 64, 0, 0, 4, 132, 16, 31, 227, 192, 225, 76, 255, 67, 12, 255, 221, 27, 255, 228, 97, 73, 63, 255, 195, 131, 69, 192, 232, 223, 255, 255, 207, 102, 239, 255, 255, 255, 101, 158, 206, 70, 20, 59, 255, 254, 95, 70, 149, 66, 4, 16, 128, 0, 2, 2, 32, 240, 138, 255, 36, 106, 183, 255, 227, 24, 196, 59, 11, 34, 62, 80, 49, 135, 40, 0, 253, 29, 191, 209, 200, 141, 71, 7, 255, 252, 152, 74, 15, 130, 33, 185, 6, 63, 255, 252, 195, 70, 203, 86, 53, 15, 255, 255, 247, 103, 76, 121, 64, 32, 47, 255, 34, 227, 194, 209, 138, 76, 65, 77, 69, 51, 46, 57, 55, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 255, 227, 24, 196, 73, 13, 153, 210, 100, 81, 135, 56, 0, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170])], {type: "audio/mpeg"}),
            h = new Blob([new Uint8Array([0, 0, 0, 28, 102, 116, 121, 112, 105, 115, 111, 109, 0, 0, 2, 0, 105, 115, 111, 109, 105, 115, 111, 50, 109, 112, 52, 49, 0, 0, 0, 8, 102, 114, 101, 101, 0, 0, 2, 239, 109, 100, 97, 116, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 33, 16, 5, 32, 164, 27, 255, 192, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 167, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 2, 194, 109, 111, 111, 118, 0, 0, 0, 108, 109, 118, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 232, 0, 0, 0, 47, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 236, 116, 114, 97, 107, 0, 0, 0, 92, 116, 107, 104, 100, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 101, 100, 116, 115, 0, 0, 0, 28, 101, 108, 115, 116, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 47, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 100, 109, 100, 105, 97, 0, 0, 0, 32, 109, 100, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 68, 0, 0, 8, 0, 85, 196, 0, 0, 0, 0, 0, 45, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0, 0, 0, 1, 15, 109, 105, 110, 102, 0, 0, 0, 16, 115, 109, 104, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 100, 105, 110, 102, 0, 0, 0, 28, 100, 114, 101, 102, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1, 0, 0, 0, 211, 115, 116, 98, 108, 0, 0, 0, 103, 115, 116, 115, 100, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 87, 109, 112, 52, 97, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 16, 0, 0, 0, 0, 172, 68, 0, 0, 0, 0, 0, 51, 101, 115, 100, 115, 0, 0, 0, 0, 3, 128, 128, 128, 34, 0, 2, 0, 4, 128, 128, 128, 20, 64, 21, 0, 0, 0, 0, 1, 244, 0, 0, 1, 243, 249, 5, 128, 128, 128, 2, 18, 16, 6, 128, 128, 128, 1, 2, 0, 0, 0, 24, 115, 116, 116, 115, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 28, 115, 116, 115, 99, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 28, 115, 116, 115, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 115, 0, 0, 1, 116, 0, 0, 0, 20, 115, 116, 99, 111, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 44, 0, 0, 0, 98, 117, 100, 116, 97, 0, 0, 0, 90, 109, 101, 116, 97, 0, 0, 0, 0, 0, 0, 0, 33, 104, 100, 108, 114, 0, 0, 0, 0, 0, 0, 0, 0, 109, 100, 105, 114, 97, 112, 112, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 105, 108, 115, 116, 0, 0, 0, 37, 169, 116, 111, 111, 0, 0, 0, 29, 100, 97, 116, 97, 0, 0, 0, 1, 0, 0, 0, 0, 76, 97, 118, 102, 53, 54, 46, 52, 48, 46, 49, 48, 49])], {
                type: "video/mp4"
            }), i = {audio: f, video: e};
        a.exports = i
    }, 292: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            seekTo: function (a) {
                function b() {
                    i === j.index ? e.context.msg.broadcast("setFocusVideoCurrentTime", {
                        time: f - j.prevDurtion,
                        autoplay: !0
                    }) : e.context.dataset.playList[j.index] && (g = e.context.dataset.playList[j.index], g.autoplay = !0, g.currentTime = f - j.prevDurtion, g.updateIndex = j.index, e.context.msg.broadcast("setFocusVideoUrl", g))
                }

                var d = Txplayer.$, e = this;
                if ("object" === d.type(a) && a.showTips && (this.dataset.seekToSyncFlag = !0), !this.context.dataset.isPlayingAd) {
                    if (0 === this.context.dataset.playState) return void c.showError("\u64ad\u653e\u5df2\u7ed3\u675f\uff0c\u4e0d\u80fdseek");
                    if (this.context.dataset.playState === -1) return void c.showError("\u64ad\u653e\u72b6\u6001\u672a\u521d\u59cb\u5316\uff0c\u4e0d\u80fdseek", "seekTo");
                    if (!this.context.dataset.disableHotKey) {
                        var f, g, h, i, j, k, l, m, n = this.context.dataset.currentTime,
                            o = "object" !== d.type(a) || !a.hasOwnProperty("connectionPlayTime") && !a.hasOwnProperty("playStartTime") && !a.hasOwnProperty("historyTime") && !a.hasOwnProperty("showTips") && !a.hasOwnProperty("doNotReport");
                        if (a && "object" === d.type(a) && (a.time && "string" == typeof a.time && /^\d+$/.test(a.time) && (a.time = Number(a.time)), a.connectionPlayTime && "string" == typeof a.connectionPlayTime && /^\d+$/.test(a.connectionPlayTime) && (a.connectionPlayTime = Number(a.connectionPlayTime)), a.playStartTime && "string" == typeof a.playStartTime && /^\d+$/.test(a.playStartTime) && (a.playStartTime = Number(a.playStartTime))), "object" === d.type(a) ? f = "number" === d.type(a.time) ? a.time : "number" === d.type(a.connectionPlayTime) ? a.connectionPlayTime : "number" === d.type(a.playStartTime) ? a.playStartTime : null : "number" === d.type(a) && (f = a, a = {}), "number" !== d.type(f)) return void c.error("seekTo\u53c2\u6570\u9519: \u53c2\u6570\u5fc5\u987b\u4e3anumber(" + f + ")");
                        if (f < 0 && (f = 0), "number" === d.type(f) && f <= this.context.dataset.duration && ("number" !== d.type(this.context.dataset.canPlayTime) || f <= this.context.dataset.canPlayTime) && this.updateCurrentTime(f, "seekTo"), h = this.context.dataset.duration, f > h) return void c.showError("seekTo\u53c2\u6570\u9519\u8bef: seekTime[" + f + "]\u4e0d\u80fd\u8d85\u8fc7\u89c6\u9891\u7684\u65f6\u957f[" + h + "]", "");
                        "number" == d.type(this.context.dataset.canPlayTime) && f > this.context.dataset.canPlayTime && (f = this.context.dataset.canPlayTime - 1), j = this.getVideoSeekToInfo(f), i = this.context.dataset.playListIndex, k = +new Date, this.context.dataset.isVideoSeeking = !0, c.v4log("seekStart ", {isVideoSeeking: this.context.dataset.isVideoSeeking}), this.context.msg.broadcast("seekStart", {
                            type: "film",
                            seekTime: f,
                            seekIndex: j.index,
                            seekStartTime: k,
                            currentTimeWhenSeekStart: n,
                            isUserAction: o
                        });
                        try {
                            this.context.userMsg.broadcast("seekStart", {
                                type: "film",
                                seekTime: f,
                                seekIndex: j.index,
                                seekStartTime: k,
                                currentTimeWhenSeekStart: n,
                                isUserAction: o
                            })
                        } catch (p) {
                        }
                        this.context.msg.off("videoSeeked.seekTo"), this.context.msg.once("videoSeeked.seekTo", function () {
                            l = +new Date, m = e.context.dataset.currentTime, e.context.msg.broadcast("seekEnd", {
                                seekStartTime: k,
                                seekEndTime: l,
                                seekTime: f,
                                currentTimeWhenSeekStart: n,
                                currentTimeWhenSeekEnd: m,
                                isUserAction: o
                            });
                            try {
                                e.context.userMsg.broadcast("seekEnd", {
                                    type: "film",
                                    seekStartTime: k,
                                    seekEndTime: l,
                                    seekTime: f,
                                    currentTimeWhenSeekStart: n,
                                    currentTimeWhenSeekEnd: m,
                                    isUserAction: o
                                })
                            } catch (a) {
                            }
                            Math.abs(f - m) > 5 && (e.context.dataset.retrySeekTo = !0, b())
                        }), e.context.msg.broadcast("pause"), b(), a.seekTime = f, e.context.msg.broadcast("showUiSeekTip", a), a.bulletid && e.context.msg.broadcast("barrageSeekTime", {
                            bulletid: a.bulletid,
                            time: f
                        })
                    }
                }
            }
        }
    }, 293: function (a, b) {
        function c() {
            var a = this, b = Txplayer.util;
            this.context.msg.on("onAdOrderDataReady", function (a) {
            }), this.context.msg.on("loadingAdStart", function (c) {
                if (b.v4log("loadingAdStart \u524d\u5e16\u5f00\u59cb\u64ad\u653e"), !a.context.dataset.hasLoadingAdStart) {
                    a.context.dataset.hasLoadingAdStart = !0, a.context.msg.broadcast("adVideoShow"), a.context.msg.broadcast("filmVideoHide", "loadingad");
                    try {
                        a.context.userMsg.broadcast("adStart", {type: "loadingad"}), a.context.msg.broadcast("adStart", {type: "loadingad"})
                    } catch (d) {
                    }
                }
            }), this.context.msg.on("loadingAdLoadComplete", function (c) {
                b.v4log("loadingAdLoadComplete \u524d\u5e16\u5168\u90e8\u4e0b\u8f7d\u5b8c\u6210 "), a.context.msg.broadcast("play", {
                    isPreloadFirstFilm: !0,
                    autoplay: !1
                }), a.context.dataset.isPreloadFilm = !0
            }), this.context.msg.on("loadingAdEnd", function (c) {
                b.v4log("loadingAdEnd \u524d\u5e16\u64ad\u653e\u7ed3\u675f"), a.context.msg.broadcast("adVideoHide"), a.context.msg.broadcast("filmVideoShow", "loadingad");
                try {
                    a.context.userMsg.broadcast("adEnd", {type: "loadingad"}), a.context.msg.broadcast("adEnd", {type: "loadingad"})
                } catch (d) {
                }
            }), this.context.msg.on("insertAdStart", function (c) {
                b.v4log("insertAdStart"), a.context.msg.broadcast("adVideoShow"), a.context.msg.broadcast("filmVideoHide", "insertad");
                try {
                    a.context.userMsg.broadcast("adStart", {type: "insertad"}), a.context.msg.broadcast("adStart", {type: "insertad"})
                } catch (d) {
                }
            }), this.context.msg.on("insertAdEnd", function (c) {
                b.v4log("insertAdEnd"), a.context.msg.broadcast("adVideoHide"), a.context.msg.broadcast("filmVideoShow", "insertad");
                try {
                    a.context.userMsg.broadcast("adEnd", {type: "insertad"}), a.context.msg.broadcast("adEnd", {type: "insertad"})
                } catch (d) {
                }
            }), this.context.msg.on("endingAdStart", function (c) {
                b.v4log("endingAdStart"), a.context.msg.broadcast("adVideoShow"), a.context.msg.broadcast("filmVideoHide", "endingad");
                try {
                    a.context.userMsg.broadcast("adStart", {type: "endingad"}), a.context.msg.broadcast("adStart", {type: "endingad"})
                } catch (d) {
                }
            }), this.context.msg.on("endingAdEnd", function (c) {
                if (!a.context.dataset.isFilmEnded) return b.v4log("isEndingAdEnded"), void (a.context.dataset.isEndingAdEnded = !0);
                b.v4log("endingAdEnd"), a.context.msg.broadcast("adVideoHide"), a.context.msg.broadcast("filmVideoShow", "endingad"), setTimeout(function () {
                    a.context.msg.broadcast("videoEnd", {
                        index: a.context.dataset.playListIndex,
                        playListType: "endingad",
                        isTheLastFilm: !0,
                        isAllEnd: !0,
                        from: "endingAdEnd"
                    });
                    try {
                        a.context.userMsg.broadcast("videoEnd", {isTheLastFilm: !0, isAllEnd: !0})
                    } catch (b) {
                    }
                }, 0);
                try {
                    a.context.userMsg.broadcast("adEnd", {type: "endingad"}), a.context.msg.broadcast("adEnd", {type: "endingad"})
                } catch (d) {
                }
            }), this.context.msg.on("pauseAdStart", function (b) {
                a.context.msg.broadcast("adVideoShow")
            }), this.context.msg.on("pauseAdEnd", function (b) {
                a.context.msg.broadcast("adVideoHide")
            }), this.context.msg.on("pvlAdStart", function (b) {
                a.context.msg.broadcast("loadingImageAdUrlReady", {url: b})
            })
        }

        a.exports = {dealAdMsgMoudle: c}
    }, 294: function (a, b) {
        function c() {
            var a = this;
            a.context.msg.on(d.getUniqueMsgKey("beforeVideoPlay"), function (b, c) {
                a.context.dataset.urlIndex = 0, a.context.dataset.getinfoJSON = null, a.context.dataset.requestNewGetinfoError = !1, a.context.dataset.filmVideoData = [], a.context.dataset.duration = null, a.context.dataset.disableHotKey = !1, a.context.dataset.hasLoadingAdStart = !1, a.updateCurrentTime(0, "beforeVideoPlay"), a.dataset.seekToSyncFlag = !1, a.context.msg.off("videoPlaying.loadAndSeekSync"), a.context.msg.off("getVideoUrlSuccess.loadVideoUrls"), a.context.msg.off("videoPlaying.showUiSeekTip")
            }), a.context.msg.on(d.getUniqueMsgKey("beforeVideoRePlay"), function (b, c) {
                a.dataset.hasVideoPlayed = !1, a.context.dataset.hasLoadingAdStart = !1, a.updateCurrentTime(0, "beforeVideoRePlay")
            }), this.context.msg.on(d.getUniqueMsgKey("videoPlaying"), function (b) {
                "film" === a.context.dataset.currentPlayListType && (a.dataset.hasVideoPlayed = !0)
            }), this.context.msg.on(d.getUniqueMsgKey("videoEnd"), function (b) {
                b.isTheLastFilm && "film" === b.playListType && (a.context.msg.off("videoSeeked.seekTo"), a.dataset.hasVideoPlayed = !1, a.context.dataset.getinfoJSON = null)
            }), this.context.msg.on("userStopVideo", function (b) {
                a.dataset.hasVideoPlayed = !1
            }), a.context.msg.on(d.getUniqueMsgKey("videoTimeUpdateWithHlsAd"), function (b) {
                if (b && "film" === b.playListType) {
                    var c = a.calcCurrentTime();
                    if (c && b && b.videoTag && b.videoTag.currentTime && a.updateCurrentTime(c, "onSectionTimeupdate"), a.context.dataset.canPlayTime) {
                        if (c && c >= a.context.dataset.canPlayTime && (a.context.dataset.getinfoJSON && 4 == a.context.dataset.getinfoJSON.exem ? a.showDujiaDialog() : a.showUIVipGuide("trial")), b && b.videoTag && Math.floor(b.videoTag.duration) !== a.context.dataset.canPlayTime) {
                            var d = a.context.dataset.canPlayTime - b.videoTag.duration;
                            d > 0 && d <= 3 && (a.context.dataset.canPlayTime = Math.floor(b.videoTag.duration))
                        }
                        a.showUnOfficialLimitTips()
                    }
                }
            }), a.context.msg.on(d.getUniqueMsgKey("videoPlaying"), function (b) {
                if (b && "film" === b.playListType && a.context.dataset.canPlayTime) {
                    var c = a.calcCurrentTime();
                    c && a.updateCurrentTime(c, "onSectionPlaying"), c && c >= a.context.dataset.canPlayTime && (a.context.dataset.getinfoJSON && 4 == a.context.dataset.getinfoJSON.exem ? a.showDujiaDialog() : a.showUIVipGuide("trial"))
                }
            }), a.context.msg.on(d.getUniqueMsgKey("seekStart"), function (b) {
                b && "film" === b.type && a.context.dataset.canPlayTime && b && b.seekTime && b.seekTime >= a.dataset.canPlayTime && (a.context.dataset.getinfoJSON && 4 == a.context.dataset.getinfoJSON.exem ? a.showDujiaDialog() : a.showUIVipGuide("trial"))
            }), a.context.msg.on(d.getUniqueMsgKey("videoEnd"), function (b) {
                b && "film" === b.playListType && a.context.dataset.canPlayTime && a.context.dataset.currentTime > a.context.dataset.canPlayTime && (a.updateCurrentTime(a.context.dataset.canPlayTime, "videoEnd"), a.context.dataset.getinfoJSON && 4 == a.context.dataset.getinfoJSON.exem ? a.showDujiaDialog() : a.showUIVipGuide("trial"))
            }), a.context.msg.on(d.getUniqueMsgKey("beforeVideoPlay"), function (b, c) {
                if (a.context.dataset.hasChromeHlsPlugin) {
                    a.context.dataset.useChromeHls = !0, a.context.dataset.useHls = !0;
                    var e = ["html5hd", "safarihls", "chromehls"], f = a.context.config.playerType;
                    e.indexOf(f) > -1 && (a.context.config.playerType = "chromehls")
                }
                d.isSupportSafariHls(a.context.dataset.platform) && (a.context.dataset.useHls = !0), a.context.dataset.hasCallShowUIVipGuide = !1
            }), this.context.msg.on(d.getUniqueMsgKey("videoInterruptByError"), function () {
                a.dataset.getVkeyErrorData && 83 === a.dataset.getVkeyErrorData.code ? a.context.dataset.getinfoJSON && 4 == a.context.dataset.getinfoJSON.exem ? a.showDujiaDialog() : a.showUIVipGuide("trial") : a.dataset.getVideoInfoErrorData && 91 === a.dataset.getVideoInfoErrorData.code && (a.showUIVipGuide("switchDef"), a.context.dataset.isDefinitionSwitching = !1)
            }), a.context.msg.on(d.getUniqueMsgKey("chromehlsErrorSwitchToHtml5hd"), function (b, c) {
                a.context.msg.broadcast("reportChromeHlsError", b.code), a.context.dataset.useHls = !1, a.context.dataset.useChromeHls = !1, delete a.context.dataset.hlsLoadStartTime;
                var d = ["html5hd", "safarihls", "chromehls"], e = a.context.config.playerType;
                d.indexOf(e) > -1 && (a.context.config.playerType = "html5hd");
                var f = {autoplay: !0};
                f.playStartTime = a.getSkipPreludeTime(), f.connectionPlayTime = a.context.dataset.connectionPlayTime, f.onlyGetinfo = !0, a.context.dataset.isDefinitionSwitching && a.context.dataset.definition && (f.defn = a.context.dataset.definition), a.context.dataset.isPlayingAd ? a.context.msg.once("loadingAdEnd", function () {
                    a.loadVideoUrls(f)
                }) : a.loadVideoUrls(f)
            }), a.context.msg.on(d.getUniqueMsgKey("chromehlsErrorSwitchToChromehls"), function (b, c) {
                a.context.msg.broadcast("reportChromeHlsError", b.code);
                var d = {autoplay: !0};
                d.playStartTime = a.getSkipPreludeTime(), d.connectionPlayTime = a.context.dataset.connectionPlayTime, d.onlyGetinfo = !0, a.context.dataset.isDefinitionSwitching && a.context.dataset.definition && (d.defn = a.context.dataset.definition), a.loadVideoUrls(d)
            }), a.context.msg.on(d.getUniqueMsgKey("chromehlsCkeyTimeout"), function () {
                if ("undefined" == typeof a.context.dataset.ckeytimeoutRetryCount && (a.context.dataset.ckeytimeoutRetryCount = 0), a.context.dataset.ckeytimeoutRetryCount < 20) {
                    a.context.dataset.ckeytimeoutRetryCount++;
                    var b = {onlyGetinfo: !0};
                    a.updateVideoUrls(b)
                }
            }), a.context.msg.on(d.getUniqueMsgKey("getVideoUrlSuccess"), function () {
                var b = {width: a.context.dataset.videoWidth, height: a.context.dataset.videoHeight};
                if (b.width && b.height) {
                    var c = a.context.dataset.$playermod.width(), d = a.context.dataset.$playermod.height(),
                        e = b.width * (d / b.height), f = b.height * (c / b.width);
                    e < c && e >= c - 20 ? a.context.dataset.$videomod.addClass("txp_video_fit_cover") : f < d && f >= d - 20 ? a.context.dataset.$videomod.addClass("txp_video_fit_cover") : a.context.dataset.$videomod.removeClass("txp_video_fit_cover")
                }
            });
            var b = function () {
                var b = {
                    otype: "json",
                    market_id: 1,
                    platform: 2,
                    unix_time: +new Date,
                    ip: a.context.dataset.reportUsrIP,
                    user_agent: navigator.userAgent,
                    qq: d.getQQFromCookie(),
                    wx_openid: d.cookie.get("vuserid"),
                    refer: document.referrer,
                    url: location.href
                };
                Txplayer.$.jsonp({
                    url: "//ncgi.video.qq.com/fcgi-bin/get_guid_http_to_jce?callback=?",
                    data: b,
                    callback: Txplayer.util.getJsonpCallbackName("get_guid")
                }).done(function (b) {
                    b && 0 == b.err_code && b.guid ? (a.context.dataset.unid = b.guid, d.setData(Txplayer.dataset.localStorageKey.unid, b.guid)) : a.dataset.hasRequestUnid = !1
                }).fail(function () {
                    a.dataset.hasRequestUnid = !1
                })
            };
            a.context.msg.on(d.getUniqueMsgKey("videoPlaying"), function (c) {
                if (c && "film" === c.playListType) {
                    if (a.context.dataset.unid) return;
                    var e = d.getData(Txplayer.dataset.localStorageKey.unid);
                    if (e) return void (a.context.dataset.unid || (a.context.dataset.unid = e));
                    if (a.dataset.hasRequestUnid) return;
                    a.dataset.hasRequestUnid = !0, b()
                }
            }), a.context.msg.on(d.getUniqueMsgKey("videoPlaying"), function (b) {
                b && "film" === b.playListType && a.getVideoMark && a.getVideoMark.requestVideoMark()
            }), a.context.msg.on(d.getUniqueMsgKey("showLoginGuide"), function (b) {
                a.context.dataset.disableHotKey = !0, a.context.msg.broadcast("pause"), a.context.msg.broadcast("hideUiTips"), Txplayer.util.v4log("showLoginGuide", {connectionPlayTime: a.context.dataset.currentTime});
                try {
                    a.context.userMsg.broadcast("showLoginGuide", {connectionPlayTime: a.context.dataset.currentTime})
                } catch (c) {
                }
                a.context.dataset.isBrowserFullscreen && a.context.msg.broadcast("exitBrowserFullscreen"), a.context.dataset.isWindowFullscreen && a.context.msg.broadcast("exitWindowFullscreen")
            }), a.context.msg.on(d.getUniqueMsgKey("startRollVideoInfo"), function (b) {
                a.context.dataset.rollVideoInfoTimer && clearTimeout(a.context.dataset.rollVideoInfoTimer);
                var c = a.context.dataset.fvpint;
                b && c && (a.context.dataset.rollVideoInfoTimer = setTimeout(function () {
                    a.context.getinfo.requestRollVideoInfo(b).always(function () {
                        a.context.msg.broadcast("startRollVideoInfo", b)
                    })
                }, c))
            }), a.context.msg.on(d.getUniqueMsgKey("vidChange"), function () {
                a.context.dataset.rollVideoInfoTimer && clearTimeout(a.context.dataset.rollVideoInfoTimer), a.context.dataset.hasShowEndAdditionTip = !1, a.context.dataset.hasnlink = !1
            }), a.context.msg.on(d.getUniqueMsgKey("videoEnd"), function () {
                a.context.dataset.rollVideoInfoTimer && clearTimeout(a.context.dataset.rollVideoInfoTimer), a.context.dataset.hasShowEndAdditionTip = !1, a.context.dataset.hasnlink = !1
            }), a.context.msg.on(d.getUniqueMsgKey("smallWindowModeChange"), function (b) {
                b.isSmallWindow && a.context.msg.broadcast("hideUiTips")
            }), a.context.msg.on(d.getUniqueMsgKey("videoTimeUpdate"), function (b) {
                var c = a.calcCurrentTime(), d = c / a.context.dataset.duration;
                if (d >= .98 && a.context.dataset.hasnlink) {
                    if (a.context.dataset.hasShowEndAdditionTip) return;
                    if (["LD", "ZC", "HT"].indexOf(a.context.dataset.currentAdType) > -1) return;
                    a.context.dataset.hasShowEndAdditionTip = !0, a.context.msg.broadcast("showAdditionTip", {
                        duration: b.vlinktd,
                        type: "end"
                    })
                }
            })
        }

        var d = Txplayer.util;
        a.exports = {dealFilmMsgMoudle: c}
    }, 295: function (a, b) {
        a.exports = {
            initUserApis: function () {
                this.dataset.moduleApis = {}, this.dataset.moduleApis.seekTo = this.seekTo.bind(this), this.dataset.moduleApis.play = this.playControl.bind(this), this.dataset.moduleApis.pause = this.pauseControl.bind(this), this.dataset.moduleApis.getVid = this.getVid.bind(this), this.dataset.moduleApis.getCid = this.getCid.bind(this), this.dataset.moduleApis.getColumnId = this.getColumnId.bind(this), this.dataset.moduleApis.isSmallWindowMode = this.isSmallWindowMode.bind(this), this.dataset.moduleApis.setPlayerVipStatus = this.setPlayerVipStatus.bind(this), this.dataset.moduleApis.getDuration = this.getDuration.bind(this), this.dataset.moduleApis.getFileSize = this.getFileSize.bind(this), this.dataset.moduleApis.getVideoSize = this.getVideoSize.bind(this), this.dataset.moduleApis.getCurrentTime = this.getCurrentTime.bind(this), this.dataset.moduleApis.getCurrentTimeWithHlsAd = this.getCurrentTimeWithHlsAd.bind(this), this.dataset.moduleApis.getBufferedTime = this.getBufferedTime.bind(this), this.dataset.moduleApis.seekRight = this.seekRight.bind(this), this.dataset.moduleApis.seekLeft = this.seekLeft.bind(this), this.dataset.moduleApis.togglePlayPause = this.togglePlayPause.bind(this), this.dataset.moduleApis.getUserPayStatus = this.getUserPayStatus.bind(this), this.dataset.moduleApis.getVideoType = this.getVideoType.bind(this), this.dataset.moduleApis.getPlayerType = this.getPlayerType.bind(this), this.dataset.moduleApis.setSmallWindowMode = this.setSmallWindowMode.bind(this), this.dataset.moduleApis.getDefinitionList = this.getDefinitionList.bind(this), this.dataset.moduleApis.callPlayerExtendMethod = this.callPlayerExtendMethod.bind(this), this.dataset.moduleApis.closeLoginGuide = this.closeLoginGuide.bind(this), Txplayer.$.extend(this.context.userApi, this.dataset.moduleApis)
            }, initPrivateMsg: function () {
                var a = this;
                this.dataset.privateApis = {}, this.dataset.privateApis.playControl = this.playControl.bind(this), this.dataset.privateApis.pauseControl = this.pauseControl.bind(this), this.dataset.privateApis.seekTo = this.seekTo.bind(this), this.dataset.privateApis.retryUrlsWhenErr = this.retryUrlsWhenErr.bind(this), this.dataset.privateApis.loadVideoUrls = this.loadVideoUrls.bind(this), Txplayer.$.each(this.dataset.privateApis, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }, initDataApis: function () {
                var a = this;
                this.dataset.dataApis = {}, this.dataset.dataApis.getVideoSeekToInfo = function (b, c) {
                    c.data = a.getVideoSeekToInfo(b)
                }, Txplayer.$.each(this.dataset.dataApis, function (b, c) {
                    a.context.msg.setData(b, c)
                })
            }
        }
    }, 296: function (a, b, c) {
        var d = Txplayer.util, e = c(146), f = (Txplayer.$, c(297));
        a.exports = {
            requestVideoUrlsByVid: function (a) {
                a = a || {};
                var b = {
                    vid: this.context.dataset.vid,
                    defn: this.context.dataset.historyDefinition || "",
                    charge: this.context.dataset.isNeedPay ? 1 : 0,
                    fhdswitch: a.fhdswitch ? 1 : 0,
                    show1080p: this.context.config.show1080p ? 1 : 0,
                    isHLS: 0
                }, c = this, g = {};
                if (Txplayer.$.extend(b, a), this.context.dataset.useHls === !0 && "false" != d.getUrlParam("ishls") && !this.context.dataset.closeHLS) {
                    var h = {isHLS: 1, dtype: 3, sphls: 1, spgzip: "", dlver: ""},
                        i = !d.inNewIframe() && ("v.qq.com" === location.hostname || "film.qq.com" === location.hostname),
                        j = i && "0" === d.getUrlParam("useNewHls");
                    i && !j && (h.sphls = 2, h.spgzip = 1, h.dlver = 2), Txplayer.$.extend(b, h)
                }
                var k = new Date;
                f.sptEme() && d.browser.safari ? b.drm = 16 : d.isSupportEme && (b.drm = 32), b.hdcp = d.isSupportHDCP ? 1 : 0, b.spau = 1, b.spaudio = 15, b.defn = b.defn.replace("auto-", ""), this.context.getinfo.requestGetinfo(b).done(function (e, h, i, j, k) {
                    function l() {
                        if (j.preview || 1 !== j.exem && 83 !== j.iRetCode) {
                            if (1 == j.dltype) {
                                c.context.msg.broadcast("destroyHlsPlayer", {msg: "backend does not suppoert hls, dltype=1"}), c.context.dataset.useHls = !1, c.context.dataset.useChromeHls = !1;
                                var f = ["html5hd", "safarihls", "chromehls"], i = c.context.config.playerType;
                                f.indexOf(i) > -1 && (c.context.config.playerType = "html5hd")
                            }
                            d.v4log("broadcast-getVideoUrlSuccess", a), c.context.msg.broadcast("getVideoUrlSuccess", e, h[0]), b.onlyGetinfo && !a.requestNewGetinfoError || (d.v4log("broadcast-onAdOrderDataReady", ""), k.adtype = "LD", c.context.msg.broadcast("onAdOrderDataReady", k))
                        } else g = {code: 83, trailTime: 0};
                        g && g.hasOwnProperty("trailTime") && !g.trailTime ? c.showUIVipGuide("trial") : (g && g.hasOwnProperty("code") && 83 === g.code || c.context.dataset.trailerMode) && (d.v4log("\u8be5\u7247\u652f\u6301\u8bd5\u770b", g), 4 == j.exem ? c.context.msg.broadcast("showUIDujiaTip", g) : c.context.msg.broadcast("showUIVipTip", g))
                    }

                    d.v4log("requestGetinfo-done", j), h && (c.context.dataset.filmVideoData = h, c.context.dataset.definitionList = i, Txplayer.$(c.context.dataset.definitionList).each(function (a, b) {
                        1 === b.sl && (c.context.dataset.currentDefinitionRate = b.br, c.context.dataset.definition = b.name, c.context.dataset.currentDefinitionFormat = b.format)
                    })), c.context.dataset.getinfoJSON = j, c.context.dataset.duration = c.getDuration(), c.context.dataset.originDuration = c.context.dataset.duration, c.dataset.getVideoInfoErrorData = null, c.context.dataset.userPayStatus = c.getUserPayStatus(), c.context.dataset.filesize = c.getFileSize(), c.context.dataset.canPlayTime = null, j && j.preview && (1 == j.exem || 2 == j.exem || 4 == j.exem || 83 == j.iRetCode) && (c.context.dataset.canPlayTime = j.preview, g = {
                        code: 83,
                        trailTime: j.preview
                    }), j && j.vl && j.vl.vi && "object" === Txplayer.$.type(j.vl.vi[0]) && (c.context.dataset.lnkVid = j.vl.vi[0].lnk, c.context.dataset.videoWidth = j.vl.vi[0].vw, c.context.dataset.videoHeight = j.vl.vi[0].vh, c.context.dataset.tpid = j.vl.vi[0].videotype, c.context.dataset.ckey = j.vl.vi[0].fvkey, c.context.dataset.fvideo = j.vl.vi[0].fvideo, c.context.dataset.fvpint = j.vl.vi[0].fvpint ? 1e3 * j.vl.vi[0].fvpint : 6e5, c.context.dataset.adExtras = j.vl.vi[0].ad || {}, d.v4log("requestGetinfo-done-adExtras", c.context.dataset.adExtras)), "1" == c.context.dataset.fvideo && c.context.msg.broadcast("startRollVideoInfo", {
                        config: b,
                        fvpint: c.context.dataset.fvpint
                    });
                    var m, n = j && j.fl && j.fl.fi && j.fl.fi || [], o = j && j.al && j.al.ai && j.al.ai[0],
                        p = o && o.keyid || "";
                    p = p.split("."), p = p.length > 1 ? p[1] : "", n.forEach(function (a) {
                        1 == a.sl && (m = a.id, c.context.dataset.drm = a.drm || 0)
                    });
                    var q = !1;
                    if (d.browser.safari && 4 === c.context.dataset.drm && j && j.vl && j.vl.vi && "object" === Txplayer.$.type(j.vl.vi[0]) && j.vl.vi[0].ckc) {
                        q = !0;
                        var r = c.context.dataset.fairplay;
                        r || (r = new f, c.context.dataset.fairplay = r), r.init(c.context, j, l, {
                            ckc: j.vl.vi[0].ckc,
                            fmt: m,
                            afmt: p
                        })
                    } else if (5 == c.context.dataset.drm && j && j.vl && j.vl.vi && "object" === Txplayer.$.type(j.vl.vi[0]) && j.vl.vi[0].ckc) {
                        if (!d.isSupportEme || !c.context.dataset.useChromeHls) return void (c.context.dataset.isDefinitionSwitching && c.context.dataset.vid === j.vl.vi[0].vid ? c.context.msg.broadcast("switchDrmDefinitionError", {
                            type: "hls",
                            code: -11111,
                            errCode: "-11111.1",
                            exem: -1
                        }) : c.context.msg.broadcast("error", {
                            type: "hls",
                            errCode: "-11111.1",
                            code: -11111,
                            exem: -1
                        }));
                        var s = j.vl.vi[0].ckc;
                        c.context.dataset.emeEnabled = !0;
                        var t = ["vid=" + c.context.dataset.vid, "fmt=" + m, "afmt=" + p, "ip=" + j.ip, "platform=" + c.context.dataset.platform, "uin=" + d.getUin(), "openid=" + d.cookie.get("openid"), "version=1"];
                        s = s.replace(/\|$/, ""), c.context.dataset.ckc = s.indexOf("?") > -1 ? s + "&" + t.join("&") : s + "?" + t.join("&")
                    } else c.context.dataset.emeEnabled = !1, c.context.dataset.ckc = "";
                    q || l()
                }).fail(function (f) {
                    d.v4log("requestGetinfo-Fail", f);
                    var g = new Date, h = g - k;
                    if (h > 32e3 && (h = 32e3), f && 1001 == f.code) {
                        d.v4log("\u5408\u5e76\u63a5\u53e3\u5931\u8d25 \u5355\u72ec\u8bf7\u6c42\u63a5\u53e3", f), a.onlyGetinfo = !0, a.requestNewGetinfoError = !0, c.context.dataset.requestNewGetinfoError = !0, c.requestVideoUrlsByVid(a);
                        var i = window.performance && window.performance.now() || 0;
                        return void c.context.msg.broadcast("reportAdInfo", {
                            version: Txplayer.appVersion,
                            adtype: "LD",
                            step: 1,
                            step_duration: h,
                            step_code: f.code,
                            step_index: 1,
                            firstview_duration: parseInt(i, 10)
                        })
                    }
                    if (b.onlyGetinfo && !a.requestNewGetinfoError || (d.v4log("broadcast-onAdOrderDataReady", ""), c.context.msg.broadcast("onAdOrderDataReady", {
                        videoErrorCode: f.code,
                        adtype: "LD",
                        requestOk: !1,
                        adcost: g - k
                    })), f && 91 === f.code) c.dataset.getVideoInfoErrorData = f, c.context.msg.broadcast("videoInterruptByError"); else if (f && 96 == f.code) c.context.msg.broadcast("showLoginGuide"); else if (f && "76" === f.code && "hls" === f.type) c.context.dataset.useHls = !1, c.requestVideoUrlsByVid(a); else {
                        var j = e[f.code] || e.defaultMsg;
                        "80" == f.code && d.inArray(["1", "2", "3", "7", "9", "10", "11", "14"], "" + f.exem) > -1 && (j = e["80." + f.exem]), c.context.msg.broadcast("error", {
                            errCode: f.errCode,
                            code: f.code,
                            msg: j,
                            type: "cgi",
                            exem: f.exem
                        });
                        try {
                            c.context.userMsg.broadcast("error", {
                                flowId: c.context.dataset.flowid,
                                errCode: f.errCode,
                                code: f.code,
                                msg: j,
                                type: "cgi",
                                exem: f.exem
                            })
                        } catch (l) {
                        }
                    }
                })
            }, requestVideoNextPartKey: function (a, b, c) {
                if (b = b || 0, !this.context.dataset.filmVideoData) return !1;
                var d = this;
                return c = c ? c : Txplayer.$.Deferred(), a.isNeedPay = this.context.dataset.isNeedPay, this.context.getinfo.requestGetkey(a).done(function (e) {
                    return d.dataset.getVkeyErrorData = null, e ? void c.resolve(a.urlArray[b].url + "&vkey=" + e) : void c.reject()
                }).fail(function (f) {
                    if (f && "1001" == f.code) return d.context.dataset.requestNewGetinfoError = !0, void d.requestVideoNextPartKey(a, b, c);
                    if (!d.context.dataset.canPlayTime || 83 !== f.code) {
                        d.dataset.getVkeyErrorData = f, d.context.msg.broadcast("error", {
                            code: f.code,
                            errCode: f.errCode,
                            msg: e[f.code] || e.defaultMsg,
                            type: "cgi"
                        });
                        try {
                            d.context.userMsg.broadcast("error", {
                                flowId: d.context.dataset.flowid,
                                code: f.code,
                                errCode: f.errCode,
                                msg: e[f.code] || e.defaultMsg,
                                type: "cgi"
                            })
                        } catch (g) {
                        }
                        c.reject(f)
                    }
                }), c
            }, updateVideoUrls: function (a) {
                a = a || {};
                var b = this;
                this.context.msg.once("getVideoUrlSuccess.updateVideoUrls", function (a, c) {
                    c = c || {};
                    var d = [];
                    c.urlArray && c.urlArray.length > 0 && (d = c.urlArray.map(function (a) {
                        return a.url
                    })), b.context.msg.broadcast("setChromeHlsData", {
                        k: "keytimeout",
                        v: {
                            keyid: "hls." + b.context.dataset.getinfoJSON.vl.vi[0].lnk + "." + b.context.dataset.currentDefinitionFormat,
                            m3u8url: d
                        }
                    })
                });
                var c = Txplayer.$.extend({}, {
                    vid: a.vid,
                    charge: a.charge,
                    defn: a.defn,
                    fhdswitch: a.fhdswitch,
                    onlyGetinfo: a.onlyGetinfo
                });
                this.requestVideoUrlsByVid(c)
            }, loadVideoUrls: function (a) {
                a = a || {}, this.dataset.hasLoadVideoUrl = !0;
                var b, c = this;
                d.v4log("loadVideoUrls", a);
                var e = function (a) {
                    if (d.v4log("seekToSync", {
                        playState: c.context.dataset.playState,
                        seekToSyncFlag: c.dataset.seekToSyncFlag
                    }), c.context.dataset.playState === -1) c.context.msg.on("videoPlaying.loadAndSeekSync", function (b) {
                        "film" == b.playListType && (c.dataset.seekToSyncFlag || (a(), c.context.msg.off("videoPlaying.loadAndSeekSync")))
                    }); else {
                        if (c.dataset.seekToSyncFlag) return;
                        a()
                    }
                };
                this.context.msg.once("getVideoUrlSuccess.loadVideoUrls", function (b, f) {
                    if (f = f || {}, !c.context.dataset.filmVideoData) return void d.showError("onGetVideoUrlSuccess\u5931\u8d25", "\u627e\u4e0d\u5230\u64ad\u653eurl\u5217\u8868");
                    var g = [];
                    c.context.dataset.useHls === !0 ? g.push({
                        url: b,
                        filesize: c.context.dataset.filmVideoData[0].bytesTotal,
                        byteRate: c.context.dataset.filmVideoData[0].byteRate,
                        vid: c.context.dataset.vid,
                        m3u8: f && f.m3u8
                    }) : Txplayer.$(c.context.dataset.filmVideoData).each(function (a, e) {
                        return 0 === a && b ? void g.push({
                            url: b,
                            filesize: e.bytesTotal,
                            vid: c.context.dataset.vid,
                            data: e
                        }) : void g.push({
                            _url: e.urlArray,
                            data: e,
                            filesize: e.bytesTotal,
                            vid: c.context.dataset.vid,
                            getUrlSync: function () {
                                var a = Txplayer.$.Deferred();
                                return c.requestVideoNextPartKey(this.data, c.context.dataset.urlIndex).done(function (b) {
                                    d.showInfo("getUrlSync.done", b), a.resolve(b)
                                }).fail(function (b) {
                                    d.showError("getUrlSync.fail", b), a.reject(b)
                                }), a
                            }
                        })
                    });
                    var h = {data: g};
                    return a.repalcePlayList && (h.repalcePlayList = !0), a.clear && (h.clear = !0), d.v4log("addUrls2Player", ""), c.context.msg.broadcast("addUrls2Player", h), d.v4log("videoListChange", ""), c.context.msg.broadcast("videoListChange", b, g), c.context.dataset.useChromeHls && (c.context.dataset.hlsLoadStartTime = a.connectionPlayTime ? a.connectionPlayTime : a.playStartTime, c.context.dataset.hlsLoadStartTime = +c.context.dataset.hlsLoadStartTime), d.v4log("options.autoplay", {
                        autoplay: a.autoplay || "",
                        noHdAdPlugin: c.context.dataset.noHdAdPlugin || ""
                    }), a.autoplay ? (c.context.dataset.autoplay = !0, c.context.msg.broadcast("play")) : c.context.dataset.noHdAdPlugin && !a.fhdswitch && (d.v4log("noHdAdPlugin-play", a), c.context.dataset.autoplay = !0, c.context.msg.broadcast("play")), c.context.dataset.autoplay && c.context.dataset.requestNewGetinfoError && !a.fhdswitch && (d.v4log("requestNewGetinfoError", {}), c.context.msg.broadcast("play")), c.context.dataset.useChromeHls ? (c.context.msg.off("videoPlaying.showUiSeekTip"), void c.context.msg.on("videoPlaying.showUiSeekTip", function (b) {
                        b && "film" == b.playListType && (delete c.context.dataset.hlsLoadStartTime, c.context.msg.off("videoPlaying.showUiSeekTip"), a.type = "chromehls", c.context.msg.broadcast("showUiSeekTip", a))
                    })) : void (a.connectionPlayTime ? e(function () {
                        c.context.dataset.isSkippingTime = !0, c.seekTo({connectionPlayTime: a.connectionPlayTime})
                    }) : a.playStartTime && e(function () {
                        c.context.dataset.isSkippingTime = !0, c.seekTo({playStartTime: a.playStartTime})
                    }))
                }), b = Txplayer.$.extend({}, {
                    vid: a.vid,
                    charge: a.charge,
                    defn: a.defn,
                    fhdswitch: a.fhdswitch,
                    onlyGetinfo: a.onlyGetinfo
                }), c.requestVideoUrlsByVid(b)
            }
        }
    }, 297: function (a, b) {
        function c(a) {
            return String.fromCharCode.apply(null, new Uint16Array(a.buffer))
        }

        function d(a) {
            for (var b = "=".repeat((4 - a.length % 4) % 4), c = (a + b).replace(/\-/g, "+").replace(/_/g, "/"), d = window.atob(c), e = new Uint8Array(d.length), f = 0; f < d.length; ++f) e[f] = d.charCodeAt(f);
            return e
        }

        function e(a) {
            for (var b = "", c = new Uint8Array(a), d = c.byteLength, e = 0; e < d; e++) b += String.fromCharCode(c[e]);
            return window.btoa(b)
        }

        function f(a) {
            for (var b = a.length, c = new ArrayBuffer(2 * b), d = new Uint16Array(c), e = 0; e < b; e++) d[e] = a.charCodeAt(e);
            return d
        }

        function g(a, b, c) {
            "string" == typeof b && (b = f(b));
            var d = a.byteLength + 4 + b.byteLength + 4 + c.byteLength, e = 0, g = new ArrayBuffer(d),
                h = new DataView(g), i = new Uint8Array(g, e, a.byteLength);
            i.set(a), e += i.byteLength, h.setUint32(e, b.byteLength, !0), e += 4;
            var j = new Uint16Array(g, e, b.length);
            j.set(b), e += j.byteLength, h.setUint32(e, c.byteLength, !0), e += 4;
            var k = new Uint8Array(g, e, c.byteLength);
            return k.set(c), new Uint8Array(g, 0, g.byteLength)
        }

        function h() {
            this.evtMap = {
                webkitneedkey: this.onVideoWebkitNeedKey.bind(this),
                certificateError: this.onCertificateError.bind(this),
                certificateOk: this.onCertificateOk.bind(this),
                webkitkeyadded: this.onKeySessionWebkitKeyAdded.bind(this),
                webkitkeyerror: this.onKeySessionWebkitKeyError.bind(this),
                webkitkeymessage: this.onKeySessionWebkitKeyMessage.bind(this)
            }
        }

        var i = Txplayer.util, j = "com.apple.fps.1_0", k = Txplayer.$;
        h.prototype.onKeySessionWebkitKeyAdded = function () {
            i.v4log("[fairplay]", "onKeySessionWebkitKeyAdded()"), i.v4log("[fairplay]", "Decryption key was added to the session.")
        }, h.prototype.onKeySessionWebkitKeyError = function (a) {
            i.v4log("[fairplay]", "onKeySessionWebkitKeyError()", a ? a.message : ""), this.riseError("error", 3)
        }, h.prototype.onKeySessionWebkitKeyMessage = function (a) {
            i.v4log("[fairplay]", "onKeySessionWebkitKeyMessage()");
            var b = a.target, c = a.message;
            this.fetchLicense(b, c)
        }, h.prototype.fetchLicense = function (a, b) {
            i.v4log("[fairplay]", "fetchLicense()"), this.licenseRequestParam.spc = e(b);
            var c = this;
            this.licenseRequest = k.ajax({
                url: this.context.dataset.ckc,
                data: this.licenseRequestParam,
                type: "POST",
                dataType: "json"
            }).done(function (b) {
                b && 0 === +b.code && b.ckc ? a.update(d(b.ckc)) : c.riseError("error", 6)
            }).fail(function (a) {
                c.riseError("error", 5)
            })
        }, h.prototype.onCertificateOk = function (a) {
            if (i.v4log("[fairplay]", "onCertificateOk()"), this.certRequest && (this.certificate = new Uint8Array(this.certRequest.response), this.certRequest.removeEventListener("error", this.evtMap.certificateError), this.certRequest.removeEventListener("load", this.evtMap.certificateOk), this.certRequest = null), !this.certificate) throw new Error("missing certificate");
            this.getVideoUrlSuccHandler()
        }, h.prototype.onCertificateError = function (a) {
            i.v4log("[fairplay]", "onCertificateError()"), this.certRequest && (this.certRequest.removeEventListener("error", this.evtMap.certificateError), this.certRequest.removeEventListener("load", this.evtMap.certificateOk), this.certRequest = null), this.riseError("error", 4)
        }, h.prototype.onVideoWebkitNeedKey = function (a) {
            i.v4log("[fairplay]", "onVideoWebkitNeedKey()"), this.$focusVideo.removeEventListener("webkitneedkey", this.evtMap.webkitneedkey);
            var b = c(a.initData), d = b.split("skd://")[1].split("?")[0], e = g(a.initData, d, this.certificate);
            this.keySession = this.createKeySession(e), this.keySession.contentId = d, this.keySession.addEventListener("webkitkeyadded", this.evtMap.webkitkeyadded), this.keySession.addEventListener("webkitkeyerror", this.evtMap.webkitkeyerror), this.keySession.addEventListener("webkitkeymessage", this.evtMap.webkitkeymessage)
        }, h.prototype.createKeySession = function (a) {
            if (i.v4log("[fairplay]", "createKeySession()"), !this.$focusVideo.webkitKeys) {
                if (!window.WebKitMediaKeys.isTypeSupported(j, "video/mp4")) throw new Error("Key System not supported");
                this.$focusVideo.webkitSetMediaKeys(new window.WebKitMediaKeys(j))
            }
            if (!this.$focusVideo.webkitKeys) throw new Error("Could not create MediaKeys");
            var b = this.$focusVideo.webkitKeys.createSession("video/mp4", a);
            if (!b) throw new Error("Could not create key session");
            return b
        }, h.sptEme = function () {
            if (!window.WebKitMediaKeys) return !1;
            var a = window.WebKitMediaKeys.isTypeSupported(j, "video/mp4");
            return !!a
        }, h.prototype.init = function (a, b, c, d) {
            this.reset(),
                this.context = a, this.getinfoJSON = b, this.getVideoUrlSuccHandler = c, this.extraParam = d;
            var e = this.extraParam.ckc, f = this.extraParam.fmt, g = this.getinfoJSON.vl.vi[0].vid,
                j = this.getinfoJSON.vl.vi[0].lnk;
            if (h.sptEme()) {
                this.context.config.playerType = "safarihls", this.context.dataset.useChromeHls = !1, this.context.dataset.useHls = !0;
                var k = e.split("|");
                if (k && k.length >= 2) {
                    this.context.dataset.ckc = k[0], this.context.dataset.certUrl = k[1], this.licenseRequestParam = {
                        assetId: j || g,
                        spc: "",
                        vid: this.context.dataset.vid,
                        fmt: f,
                        ip: this.getinfoJSON.ip,
                        platform: this.context.dataset.platform,
                        uin: i.getUin(),
                        openid: i.cookie.get("openid"),
                        guid: this.context.dataset.guid,
                        version: 1,
                        iosVersion: "11.0"
                    };
                    var l = this.context.dataset.$videomod.find("video");
                    this.$focusVideo = l[0].isFocus ? l[0] : l[1], this.$focusVideo.addEventListener("webkitneedkey", this.evtMap.webkitneedkey), this.certificate ? this.onCertificateOk() : this.fetchCertificate()
                } else this.riseError("error", 2)
            } else this.context.dataset.isDefinitionSwitching && this.context.dataset.vid === g ? this.riseError("switchDrmDefinitionError") : this.riseError()
        }, h.prototype.riseError = function (a, b) {
            a = a || "error", b = b || 1, this.context.msg.broadcast(a, {
                type: "hls",
                errCode: "-11111." + b,
                code: -11111,
                exem: -1 * b
            })
        }, h.prototype.fetchCertificate = function () {
            i.v4log("[fairplay]", "fetchCertificate()"), this.certRequest = new XMLHttpRequest, this.certRequest.responseType = "arraybuffer", this.certRequest.addEventListener("error", this.evtMap.certificateError), this.certRequest.addEventListener("load", this.evtMap.certificateOk), this.certRequest.open("GET", this.context.dataset.certUrl, !0), this.certRequest.send()
        }, h.prototype.reset = function () {
            this.certRequest && (this.certRequest.removeEventListener("error", this.evtMap.certificateError), this.certRequest.removeEventListener("load", this.evtMap.certificateOk), this.certRequest.abort(), this.certRequest = null), this.licenseRequest && (this.licenseRequest.abort && this.licenseRequest.abort(), this.licenseRequest = null), this.$focusVideo && (this.$focusVideo.removeEventListener("webkitneedkey", this.evtMap.webkitneedkey), this.$focusVideo = null), this.keySession && (this.keySession.removeEventListener("webkitkeyadded", this.evtMap.webkitkeyadded), this.keySession.removeEventListener("webkitkeyerror", this.evtMap.webkitkeyerror), this.keySession.removeEventListener("webkitkeymessage", this.evtMap.webkitkeymessage))
        }, h.prototype.destroy = function () {
            this.reset(), this.context.dataset.fairplay = null, this.context = null, this.getVideoUrlSuccHandler = null, this.certificate = null, this.licenseRequestParam = null, this.keySession = null
        }, a.exports = h
    }, 298: function (a, b, c) {
        var d = Txplayer.util;
        Txplayer.$, c(247);
        a.exports = {
            calcCurrentTime: function () {
                if ("film" != this.context.dataset.currentPlayListType) return 0;
                var a = this.context.dataset.playListIndex;
                this.context.dataset.filmVideoData && a >= this.context.dataset.filmVideoData.length && (a = 0);
                var b = 0;
                return Txplayer.$(this.context.dataset.filmVideoData).each(function (c, d) {
                    return !(c >= a) && void (b += d.duration)
                }), b += parseInt(this.context.dataset.videoCurrentTime), parseInt(b)
            }, updateCurrentTime: function (a, b) {
                "number" === Txplayer.$.type(a) && (this.context.dataset.currentTime = parseInt(d.getHlsAdOffsetTime(a, this.context), 10), this.context.dataset.currentTimeWithHlsAd = parseInt(a, 10))
            }, getVideoSeekToInfo: function (a) {
                var b = 0, c = 0;
                this.context.dataset.useHls || Txplayer.$(this.context.dataset.filmVideoData).each(function (d, e) {
                    if (c = d, b += e.duration, b > a) return b -= e.duration, !1
                });
                var d = {index: c, prevDurtion: b};
                return d
            }, showUIVipGuide: function (a) {
                if (!this.context.dataset.hasCallShowUIVipGuide) {
                    this.context.dataset.hasCallShowUIVipGuide = !0;
                    var b = this;
                    setTimeout(function () {
                        b.context.dataset.hasCallShowUIVipGuide = !1
                    }, 3e3);
                    var c = {
                        trial: {trialFinish: !0},
                        switchDef: {switchDefinitionFail: !0, defn: this.context.dataset.targetDefn}
                    };
                    this.pauseControl(), d.v4log("showUIVipGuide", c[a]), this.context.msg.broadcast("showUIVipGuide", c[a]);
                    try {
                        this.context.userMsg.broadcast("showUIVipGuide", c[a])
                    } catch (e) {
                    }
                    this.context.dataset.isBrowserFullscreen && this.context.msg.broadcast("exitBrowserFullscreen"), this.context.dataset.isWindowFullscreen && this.context.msg.broadcast("exitWindowFullscreen")
                }
            }, showDujiaDialog: function () {
            }, showUnOfficialLimitTips: function () {
                if ((!this.context.config.official || "nintendo" === this.context.config.playerType) && this.context.dataset.canPlayTime && 4 != this.context.dataset.getinfoJSON.exem) {
                    var a = Txplayer.util.getTxVideoPageURLByVid(this.context.dataset.vid, 0),
                        b = this.context.dataset.canPlayTime || 0, c = Math.floor(b / 60), d = b - 60 * c;
                    this.context.msg.broadcast("showUnOfficialLimitTips", {min: c, sec: d, href: a})
                }
            }, getSkipPreludeTime: function () {
                var a;
                return a = this.context.dataset.skipPrelude ? parseInt(this.context.dataset.playStartTime) : 0
            }, checkLanguageSwitch: function (a) {
                var b = d.getSessionData(Txplayer.dataset.sessionStorageKey.languageSwitch), c = "";
                try {
                    if (b && (b = b.split("|") || [], b.length > 0)) {
                        var e = b[0], f = (b[1], b[2]), g = (new Date).getTime();
                        g - f < 3e4 ? e === a.vid && (c = "page_langSwitch") : d.delSessionData(Txplayer.dataset.sessionStorageKey.languageSwitch)
                    }
                    var h = this.context.dataset.adext || "";
                    c ? 0 === h.length ? h = c : h.indexOf("page_langSwitch") === -1 && (h = h + "|" + c) : h = h.replace(/\|?page\_langSwitch/g, ""), this.context.dataset.adext = h
                } catch (i) {
                }
            }, getDuration: function () {
                var a = 0;
                return this.context.dataset.getinfoJSON && this.context.dataset.getinfoJSON.vl && this.context.dataset.getinfoJSON.vl.vi && this.context.dataset.getinfoJSON.vl.vi[0] && this.context.dataset.getinfoJSON.vl.vi[0].td && (a = parseFloat(this.context.dataset.getinfoJSON.vl.vi[0].td)), parseFloat(a)
            }, getFileSize: function () {
                if (!this.context.dataset.filmVideoData || "array" !== Txplayer.$.type(this.context.dataset.filmVideoData)) return 0;
                var a = 0;
                return Txplayer.$(this.context.dataset.filmVideoData).each(function (b, c) {
                    a += parseInt(c.bytesTotal)
                }), parseInt(a / 1024)
            }, getVideoSize: function () {
                return {width: this.context.dataset.videoWidth, height: this.context.dataset.videoHeight}
            }, getVideoType: function () {
                return this.context.config.videoType
            }, getPlayerType: function () {
                return this.context.config.playerType
            }, getCurrentTime: function () {
                return this.context.dataset.currentTime || 0
            }, getCurrentTimeWithHlsAd: function () {
                return this.context.dataset.currentTimeWithHlsAd || 0
            }, getBufferedTime: function () {
                return this.context.dataset.bufferedTime || 0
            }, getVid: function () {
                return this.context.dataset.vid
            }, getCid: function () {
                return this.context.dataset.cid
            }, getColumnId: function () {
                return this.context.dataset.columnId
            }, isSmallWindowMode: function () {
                return !!this.context.dataset.isSmallWindowMode
            }, callPlayerExtendMethod: function () {
                var a = Array.prototype.slice.call(arguments, 0), b = a.shift();
                if (b) switch (a.length) {
                    case 1:
                        try {
                            this.context.msg.broadcast(b, a[0])
                        } catch (c) {
                        }
                        break;
                    case 2:
                        try {
                            this.context.msg.broadcast(b, a[0], a[1])
                        } catch (c) {
                        }
                        break;
                    default:
                        try {
                            this.context.msg.broadcast(b, a)
                        } catch (c) {
                        }
                }
            }, setPlayerVipStatus: function (a) {
                this.context.config.show1080p = !!a
            }, getDefinitionList: function () {
                return []
            }, seekRight: function (a) {
                var b = 5;
                "number" === Txplayer.$.type(a) && (b = a);
                var c = this.context.dataset.duration;
                if (c) {
                    var d = this.getCurrentTimeWithHlsAd();
                    d += b, d > c || this.seekTo(d)
                }
            }, seekLeft: function (a) {
                var b = 5;
                "number" === Txplayer.$.type(a) && (b = a);
                var c = this.context.dataset.duration;
                if (c) {
                    var d = this.getCurrentTimeWithHlsAd();
                    d -= b, d < 0 || this.seekTo(d)
                }
            }, togglePlayPause: function () {
                this.context.dataset.disableHotKey || (1 === this.context.dataset.playState ? (this.pauseControl(), this.context.msg.broadcast("userPausePlayer")) : (this.playControl(), this.context.msg.broadcast("userPlayPlayer")))
            }, getUserPayStatus: function () {
                var a = null;
                return this.context.dataset.getinfoJSON && this.context.dataset.getinfoJSON.vl && this.context.dataset.getinfoJSON.vl.vi && this.context.dataset.getinfoJSON.vl.vi.length && this.context.dataset.getinfoJSON.vl.vi[0] && (a = this.context.dataset.getinfoJSON.vl.vi[0].ch), a
            }, setSmallWindowMode: function (a) {
                this.context.dataset.isSmallWindowMode = !!a, this.context.msg.broadcast("smallWindowModeChange", {isSmallWindow: !!a})
            }, closeLoginGuide: function (a) {
                if (Txplayer.util.v4log("closeLoginGuide", a), this.context.dataset.disableHotKey = !1, a) if (a.success) if (a.isVip) {
                    this.context.msg.broadcast("definitionChange", "shd");
                    try {
                        this.context.userMsg.broadcast("definitionChange", {definition: "shd"})
                    } catch (b) {
                    }
                } else this.context.msg.broadcast("definitionChange", "shd"), this.context.msg.broadcast("set720pWhenLogin"); else this.context.msg.broadcast("closeLoginGuide"), this.context.msg.broadcast("play")
            }
        }
    }, 299: function (a, b) {
        var c = Txplayer.util;
        a.exports = {
            retryUrlsWhenErr: function (a) {
                c.v4log("retryUrlsWhenErr", a);
                var b = this, d = a.currentTime, e = a.index;
                if (b.context.dataset.urlIndex++, b.context.dataset.filmVideoData && !(e >= b.context.dataset.filmVideoData.length)) if (b.context.dataset.urlIndex >= b.context.dataset.filmVideoData[e].urlArray.length && (b.context.dataset.urlIndex = 0), b.context.dataset.useHls === !0) a.isFocus ? b.context.msg.broadcast("setFocusVideoUrl", {
                    url: b.context.dataset.filmVideoData[e].urlArray[b.context.dataset.urlIndex].url,
                    currentTime: d,
                    autoplay: !0
                }) : b.context.msg.broadcast("setPreloadVideoUrl", {
                    url: b.context.dataset.filmVideoData[e].urlArray[b.context.dataset.urlIndex].url,
                    currentTime: d,
                    autoplay: !1
                }); else {
                    if (c.browser.ie && 0 == b.context.dataset.playState) return;
                    a.isFocus && b.requestVideoNextPartKey(b.context.dataset.filmVideoData[e], b.context.dataset.urlIndex).done(function (a) {
                        b.context.msg.broadcast("setFocusVideoUrl", {url: a, currentTime: d, autoplay: !0})
                    })
                }
            }
        }
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(19)
    }, 19: function (a, b) {
        function c(a) {
            d = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var d = Txplayer.$;
        Txplayer.util;
        c.prototype = {
            init: function () {
                this.addEventListeners()
            }, reset: function () {
                delete this.dataset.fileData, delete this.dataset.fileSize, delete this.dataset.prevBuffer, delete this.dataset.buffer
            }, updateSpeed: function (a) {
                this.dataset.hasOwnProperty("speeds") || (this.dataset.speeds = []), "number" == typeof a && (a > 12288 && (a = 12e3), this.context.dataset.videoDownloadSpeed = a, this.dataset.speeds.push(a));
                var b = 10;
                this.dataset.speeds.length > b && this.dataset.speeds.splice(0, this.dataset.speeds.length - b);
                var c = {speed: this.dataset.speed, average: this.getAverSpeed()};
                this.context.msg.broadcast("downloadSpeedUpdate", c)
            }, getAverSpeed: function () {
                if (!this.dataset.hasOwnProperty("speeds")) return 0;
                var a = 0, b = 0;
                return this.dataset.speeds && this.dataset.speeds.length && (d.each(this.dataset.speeds, function (b, c) {
                    a += parseInt(c)
                }), b = parseInt(a / this.dataset.speeds.length)), b
            }, calcMp4: function () {
                if (!this.context.dataset.disableCalcDownloadSpeed && !this.dataset.isStop && this.dataset.video && this.dataset.fileData && this.dataset.fileData.filesize) {
                    this.dataset.fileData.filesize = parseInt(this.dataset.fileData.filesize);
                    var a = this;
                    if (a.dataset.video.buffered.length && (a.dataset.buffer = a.dataset.video.buffered.end(a.dataset.video.buffered.length - 1), a.dataset.fileSize = a.dataset.fileData.filesize / 1024, a.dataset.duration = a.dataset.fileData.data && a.dataset.fileData.data.duration || a.dataset.video.duration, a.dataset.duration = parseFloat(a.dataset.duration), a.dataset.duration)) {
                        if (parseInt(a.dataset.buffer) >= parseInt(a.dataset.duration)) return a.dataset.speed = 0, void a.stop();
                        if (a.dataset.hasOwnProperty("prevBuffer") || (a.dataset.prevBuffer = 0), a.dataset.bufferUpdateTime = +new Date, a.dataset.bufferIncrease = a.dataset.buffer - a.dataset.prevBuffer, a.dataset.bufferIncrease <= 0) return a.dataset.speed = 0, void a.updateSpeed(a.dataset.speed);
                        a.dataset.bufferUpdateCostTime = a.dataset.bufferUpdateTime - a.dataset.prevBufferUpdateTime, a.dataset.updateFileSize = a.dataset.fileSize * (a.dataset.bufferIncrease / a.dataset.duration), a.dataset.speed = a.dataset.updateFileSize / (a.dataset.bufferUpdateCostTime / 1e3), a.dataset.speed = parseInt(a.dataset.speed), isNaN(a.dataset.speed) || a.updateSpeed(a.dataset.speed), a.dataset.prevBufferUpdateTime = a.dataset.bufferUpdateTime, a.dataset.prevBuffer = a.dataset.buffer
                    }
                }
            }, calcHLS: function (a) {
                if (!this.context.dataset.disableCalcDownloadSpeed && !this.dataset.isStop && a && a.loaded) {
                    if (this.dataset.prevBuffer || (this.dataset.prevBuffer = 0), this.dataset.bufferIncrease = a.loaded - this.dataset.prevBuffer, this.dataset.bufferUpdateTime = +new Date, this.dataset.bufferIncrease <= 0) return this.dataset.prevBufferUpdateTime = this.dataset.bufferUpdateTime, this.dataset.prevBuffer = a.loaded, void (this.context.dataset.videoDownloadSpeed = 0);
                    this.dataset.bufferUpdateCostTime = this.dataset.bufferUpdateTime - this.dataset.prevBufferUpdateTime, this.dataset.bufferUpdateCostTime < 0 || (this.dataset.speed = this.dataset.bufferIncrease / 1024 / (this.dataset.bufferUpdateCostTime / 1e3), this.dataset.speed = parseInt(this.dataset.speed), isNaN(this.dataset.speed) || this.updateSpeed(this.dataset.speed), this.dataset.prevBufferUpdateTime = this.dataset.bufferUpdateTime, this.dataset.prevBuffer = a.loaded)
                }
            }, getRealDownloadSpeedWhenNetFree: function () {
                var a = {}, b = this;
                setInterval(function () {
                    var c = b.context.dataset.videoDownloadSpeed;
                    a.hasOwnProperty(c) ? "number" != typeof a[c] ? a[c] = 1 : (a[c]++, 4 === a[c] && (b.context.dataset.videoDownloadSpeed = 0, a = {})) : (a = {}, a[c] = 1)
                }, 500)
            }, addEventListeners: function () {
                var a = this;
                this.context.msg.on("adLoadProgress", function (b) {
                    b && b.speed && (a.context.dataset.videoDownloadSpeed = +b.speed)
                }), this.context.msg.on("videoPlay", function (b) {
                    b && b.videoTag && (0 == b.videoTag.buffered.length && (a.reset(), a.dataset.prevBufferUpdateTime = +new Date), a.dataset.video = b.videoTag, a.dataset.fileData = a.context.dataset.playList[a.context.dataset.playListIndex])
                }), this.context.msg.on("error.download-monitor", function (b) {
                    b && b.type && a.stop()
                }), "chromehls" === this.context.config.playerType && this.context.msg.on("hlsProgress", function (b) {
                    a.dataset.isStop || a.calcHLS(b)
                }), this.context.msg.on("videoPlay.download-monitor", function () {
                    "chromehls" != a.context.config.playerType && a.startTimer()
                }), a.getRealDownloadSpeedWhenNetFree()
            }, startTimer: function () {
                if (!this.dataset.calcTimer) {
                    var a = this;
                    this.dataset.calcTimer = setInterval(function () {
                        a.calcMp4()
                    }, 100)
                }
            }, stop: function () {
                this.dataset.isStop = !0, this.dataset.startTimer && clearInterval(this.dataset.startTimer)
            }
        }, Txplayer.register("DownloadMonitor", c)
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(304)
    }, 209: function (a, b, c) {
        function d(a) {
            var b = "qqlivechannel=channel1." + a;
            if (Txplayer.util.browser.ie) {
                var c = new Date;
                c.setTime(c.getTime() + 864e5), document.cookie = b + ";path=/;expires=" + c.toGMTString()
            } else {
                var d = Txplayer.$("<input>");
                Txplayer.$("body").append(d), d.css({
                    position: "absolute",
                    left: "-9999px"
                }), d.val(b), d.css({top: Txplayer.$(window).scrollTop() + "px"}), d.get(0).focus(), d.get(0).setSelectionRange(0, b.length), document.queryCommandSupported && document.queryCommandSupported("copy") && document.execCommand("copy", !0), d.remove()
            }
        }

        var e = c(210);
        a.exports = function (a) {
            if (a.support && a.sso) {
                try {
                    d(a.atag)
                } catch (b) {
                }
                e(function (b) {
                    b && b.exist().done(function () {
                        b.open(a.sso), a.success && a.success()
                    }).fail(function () {
                        a.error && a.error()
                    })
                })
            }
        }
    }, 210: function (a, b) {
        var c = [], d = !1, e = 0;
        a.exports = function (a) {
            if (e) return void a(e);
            if (c.push(a), !d) {
                if (d = !0, "qq.com" != document.domain) throw new Error("document.domain is not qq.com");
                var b = document.createElement("iframe");
                b.src = "javascript:'<script>window.onload=function(){document.write(\\'<script>document.domain=\\\"qq.com\\\";<\\\\/script>\\');document.close();};</script>'", b.style.cssText = "display:none;", document.body.appendChild(b), b.getClient = function (a) {
                    e = a;
                    for (var b = c.shift(); b;) b && b(a), b = c.shift()
                }, b.src = "//v.qq.com/iframe/client.html"
            }
        }
    }, 304: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = (Txplayer.apiList, c(305)), h = c(209), i = c(210), j = c(306);
        d.prototype = {
            init: function () {
                this.write(), this.addEventListerner(), this.exportsModuleApis()
            }, write: function () {
                var a = {
                    error: "txp-ui-error",
                    errorMsg: "txp-ui-error-msg",
                    errorRefresh: "txp-ui-error-refresh",
                    changePlayer: "txp-ui-error-changeplayer",
                    openNewPage: "txp-ui-error-newpage",
                    errorCode: "txp-ui-error-code",
                    errorTip: "txp-ui-error-tip",
                    clientTitle: "txp-ui-error-client-title",
                    clientSpan: "txp-ui-error-client-span",
                    clientBtn: "txp-ui-error-client-btn",
                    whenCoolOpen: "txp-ui-error-when-coolopen",
                    qqbrowserBtn: "txp-ui-error-qqbrowser-btn",
                    playBtn: "txp-ui-error-play-btn"
                }, b = e.tmpl(g, a);
                this.context.dataset.$playermod.append(b), this.dataset.$error = this.context.dataset.$playermod.find('[data-role="' + a.error + '"]'), this.dataset.$errorMsg = this.context.dataset.$playermod.find('[data-role="' + a.errorMsg + '"]'), this.dataset.$errorRefresh = this.context.dataset.$playermod.find('[data-role="' + a.errorRefresh + '"]'), this.dataset.$changePlayer = this.context.dataset.$playermod.find('[data-role="' + a.changePlayer + '"]'), this.dataset.$openNewPage = this.context.dataset.$playermod.find('[data-role="' + a.openNewPage + '"]'), this.dataset.$errorCode = this.context.dataset.$playermod.find('[data-role="' + a.errorCode + '"]'), this.dataset.$errorTip = this.context.dataset.$playermod.find('[data-role="' + a.errorTip + '"]'), this.dataset.$clientTitle = this.context.dataset.$playermod.find('[data-role="' + a.clientTitle + '"]'), this.dataset.$clientSpan = this.context.dataset.$playermod.find('[data-role="' + a.clientSpan + '"]'), this.dataset.$clientBtn = this.context.dataset.$playermod.find('[data-role="' + a.clientBtn + '"]'), this.dataset.$coolOpenSpan = this.context.dataset.$playermod.find('[data-role="' + a.whenCoolOpen + '"]'), this.dataset.$qqbrowserBtn = this.context.dataset.$playermod.find('[data-role="' + a.qqbrowserBtn + '"]'), this.dataset.$playBtn = this.context.dataset.$playermod.find('[data-role="' + a.playBtn + '"]'), this.dataset.errorTipSrc = {
                    offline: {
                        src: "//i.gtimg.cn/qqlive/images/20170712/error_tip2.png",
                        srcset: "//i.gtimg.cn/qqlive/images/20170712/error_tip2@2x.png 2x"
                    },
                    ufo: {
                        src: "//i.gtimg.cn/qqlive/images/20170712/error_tip1.png",
                        srcset: "//i.gtimg.cn/qqlive/images/20170712/error_tip1@2x.png 2x"
                    }
                }, this.dataset.isCoolOpen = "coolOpen" === this.context.config.playerType
            }, remove: function () {
                this.dataset.$error.remove()
            }, hide: function () {
                this.dataset.$error.addClass(Txplayer.dataset.hideClass)
            }, getData: function () {
                var a = f.getData(Txplayer.dataset.localStorageKey.userSetting);
                try {
                    a = JSON.parse(a)
                } catch (b) {
                    a = {}
                }
                return a
            }, setData: function (a, b) {
                var c = this.getData(Txplayer.dataset.localStorageKey.userSetting);
                c[a] = b, f.setData(Txplayer.dataset.localStorageKey.userSetting, JSON.stringify(c))
            }, report: function (a, b) {
                this.context.msg.broadcast("reportUsrAction", {usr_action: a, usr_action_detail: b || ""})
            }, showErrorUiTips: function (a) {
                var b = this;
                f.v4log("showErrorUiTips", a), a && "object" === e.type(a.msg) && (a.msg = a.msg.defaultMsg);
                var c = a.code + "", d = this.context.dataset.flowid;
                if (c && c.indexOf("_") > -1 && (c = c.split("_")[0]), a && e.inArray(c, ["83"]) > -1 && "function" === e.type(this.context.config.showOpenVIPGuide)) return this.context.config.showOpenVIPGuide(), void (this.context.dataset.isBrowserFullscreen && this.context.msg.broadcast("exitBrowserFullscreen"));
                if (this.dataset.$error.removeClass(Txplayer.dataset.hideClass), this.context.dataset.$playermod.width() < 560 ? this.dataset.$errorCode.text("[ \u9519\u8bef\u7801:" + (a.errCode || "") + " ]") : this.dataset.$errorCode.text("[ \u9519\u8bef\u7801:" + (a.errCode || "") + ", " + d + " ]"), e.inArray(a.code + "", ["1", "2", "3", "4", "5", "444", "445", "10001", "30", "40", "41", "42", "50", "68"]) > -1) {
                    var g = a.msg;
                    4 != a.code || f.isSupportMP4() || (g = "\u5f53\u524d\u6d4f\u89c8\u5668\u4e0d\u652f\u6301H5\u64ad\u653e\u5668"), this.dataset.$errorMsg.html(g);
                    var h;
                    h = e.inArray(a.code + "", ["444", "445"]) > -1 ? this.dataset.errorTipSrc.offline : this.dataset.errorTipSrc.ufo;
                    var k = !1;
                    try {
                        k = parent.window._TxpIframeInQzoneIfrme
                    } catch (l) {
                    }
                    f.inNewIframe() && k ? this.dataset.$changePlayer.addClass(Txplayer.dataset.hideClass) : this.dataset.$changePlayer.removeClass(Txplayer.dataset.hideClass)
                } else this.dataset.$changePlayer.addClass(Txplayer.dataset.hideClass), this.dataset.$errorRefresh.addClass(Txplayer.dataset.hideClass), this.dataset.$errorMsg.html(a.msg || Txplayer.v4errcode.defaultMsg), h = this.dataset.errorTipSrc.ufo;
                var m = this.context.dataset.$playermod || Txplayer.$ && Txplayer.$("#" + this.context.config.containerId),
                    n = m.find(".txp_player");
                (this.dataset.isCoolOpen || this.context.config.useMiniSkin || n.hasClass("txp_player_mini") || !this.context.config.showHTML5Switch) && (this.dataset.$changePlayer.addClass(Txplayer.dataset.hideClass), this.dataset.$coolOpenSpan.removeClass(Txplayer.dataset.hideClass));
                var o = ["ke.qq.com", "fudao.qq.com"];
                (f.os.mac || o.indexOf(location.host) > -1) && this.dataset.$clientTitle.addClass(Txplayer.dataset.hideClass), this.dataset.$errorTip.attr({
                    src: h.src,
                    srcset: h.srcset
                });
                var p = this.dataset.errorcodeStr = a.code + "." + a.exem;
                "80.14" !== p && "69.4" !== p && a.code != -11111 || (f.os.mac ? (this.dataset.$clientTitle.removeClass(Txplayer.dataset.hideClass), this.dataset.$clientSpan.text("\u8bf7\u4f7f\u7528Mac\u5ba2\u6237\u7aef\u89c2\u770b ")) : this.dataset.$clientSpan.text("\u8bf7\u4f7f\u7528PC\u5ba2\u6237\u7aef\u89c2\u770b "));
                var q = "";
                if (a.code == -11111 || "80.14" === p || "69.4" === p) {
                    a.code == -11111 && window.TxpCreativePlayer && window.TxpCreativePlayer.adBlockEnabled && this.context.dataset.emeEnabled ? (b.report("playererror-drm-error", "blocked"), this.dataset.$errorMsg.html(Txplayer.v4errcode.adblock)) : (b.report("playererror-drm-error", "not_support"), "80.14" === p || "69.4" === p ? this.dataset.$errorMsg.html(Txplayer.v4errcode[p]) : this.dataset.$errorMsg.html(Txplayer.v4errcode[a.code])), q = f.os.mac ? "Mac\u5ba2\u6237\u7aef\u89c2\u770b" : "PC\u5ba2\u6237\u7aef\u89c2\u770b", this.dataset.$clientSpan.addClass(Txplayer.dataset.hideClass), a.showPlayBtn && this.dataset.$playBtn.removeClass(Txplayer.dataset.hideClass);
                    var r = this.dataset.$qqbrowserBtn, s = function (a) {
                        r.removeClass(Txplayer.dataset.hideClass);
                        var b = "\u6216${opName}\u6700\u65b0${showqq}Chrome\u6d4f\u89c8\u5668\u89c2\u770b";
                        b = b.replace("${opName}", a ? "\u4f7f\u7528" : "\u4e0b\u8f7d"), b = b.replace("${showqq}", f.os.mac ? "" : ' <a style="display:inline; margin: 16px 0 0 0;text-decoration: underline!important;">QQ\u6d4f\u89c8\u5668</a>/ '), r.html(b)
                    };
                    s(!0), j.detect().then(function (a) {
                        s(a.exist)
                    }, function () {
                    })
                } else this.dataset.$playBtn.addClass(Txplayer.dataset.hideClass), this.dataset.$clientSpan.removeClass(Txplayer.dataset.hideClass), this.dataset.$qqbrowserBtn.addClass(Txplayer.dataset.hideClass);
                if ("80.2" === p && (a.showClientBtn ? (this.dataset.$clientTitle.removeClass(Txplayer.dataset.hideClass), q = f.os.mac ? "Mac\u5ba2\u6237\u7aef\u89c2\u770b" : "PC\u5ba2\u6237\u7aef\u89c2\u770b") : this.dataset.$clientTitle.addClass(Txplayer.dataset.hideClass), this.dataset.$clientSpan.addClass(Txplayer.dataset.hideClass), q = f.os.mac ? "Mac\u5ba2\u6237\u7aef\u89c2\u770b" : "PC\u5ba2\u6237\u7aef\u89c2\u770b"), !this.dataset.$clientTitle.hasClass(Txplayer.dataset.hideClass)) {
                    var t = "\u7acb\u5373\u4e0b\u8f7d";
                    if (f.os.mac) q ? b.dataset.$clientBtn.text("\u6253\u5f00" + q) : b.dataset.$clientBtn.text(t); else try {
                        i(function (a) {
                            a && a.exist().done(function () {
                                t = "\u7acb\u5373\u6253\u5f00", "80.14" !== p && "69.4" !== p || (t = "\u7ee7\u7eed\u89c2\u770b"), q ? b.dataset.$clientBtn.text("\u6253\u5f00" + q) : b.dataset.$clientBtn.text(t)
                            }).fail(function () {
                                q ? b.dataset.$clientBtn.text("\u4e0b\u8f7d" + q) : b.dataset.$clientBtn.text(t)
                            })
                        })
                    } catch (l) {
                        q ? b.dataset.$clientBtn.text("\u4e0b\u8f7d" + q) : b.dataset.$clientBtn.text(t)
                    }
                }
                61 != a.code && 62 != a.code || b.dataset.$clientSpan.addClass(Txplayer.dataset.hideClass), f.os.linux && b.dataset.$clientTitle.addClass(Txplayer.dataset.hideClass)
            }, addEventListerner: function () {
                var a = this;
                this.dataset.eventsList = {}, this.dataset.eventsList[f.getUniqueMsgKey("videoPlaying")] = function () {
                    a.hide()
                }, this.dataset.eventsList[f.getUniqueMsgKey("vidChange")] = function () {
                    a.hide()
                }, e.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                }), this.dataset.$errorRefresh.off("click").on("click", function () {
                    window.location.reload()
                }), this.dataset.$changePlayer.off("click").on("click", function () {
                    a.setData("isUseFlash", 1), window.location.reload()
                }), this.dataset.$openNewPage.off("click").on("click", function () {
                    var b = a.context.config.otherVideoLink;
                    b && window.open(b)
                }), this.dataset.$clientBtn.off("click").on("click", function () {
                    a.report("playererror-clientbtn-clicked");
                    var b = a.context.dataset.vid || "", c = a.context.dataset.cid || "",
                        d = Math.max(a.context.dataset.currentTime - 5, 0), e = "web.playererror";
                    h({
                        support: !0,
                        atag: "playererror",
                        sso: "qqlive://sso/vbarid=" + c + "&videoid=" + b + "&start=" + d + "&atag=" + e,
                        success: function () {
                            a.report("playererror-clientbtn-play")
                        },
                        error: function () {
                            "80.14" !== a.dataset.errorcodeStr && "69.4" !== a.dataset.errorcodeStr || !f.os.mac ? location.href = "//node.video.qq.com/x/api/download_pc" : window.open("https://v.qq.com/download.html#mac", "_blank"), a.report("playererror-clientbtn-download")
                        }
                    })
                }), this.dataset.$qqbrowserBtn.off("click").on("click", "a", function () {
                    a.report("playererror-qqbrowser-clicked", "exist=" + j.exist), j.open(location.href)
                }), this.dataset.$playBtn.off("click").on("click", function () {
                    a.report("playererror-playbtn-clicked"), a.context.msg.broadcast("playControl", {
                        connectionPlayTime: a.context.dataset.connectionPlayTime,
                        playStartTime: a.context.dataset.playStartTime,
                        connectionPlayType: 1
                    }), a.context.msg.broadcast("userPlayPlayer"), a.hide()
                }), this.context.msg.on("error", function (b) {
                    b && e.inArray(b.type, ["film", "cgi", "init", "hls"]) === -1 || (a.context.dataset.disableHotKey = !0, b && 94 == b.code || (80 === b.code && 2 === b.exem ? a.get80_2Status().done(function (c) {
                        b.msg = c.msg, b.showClientBtn = !!c.showClientBtn, a.showErrorUiTips(b)
                    }).fail(function () {
                        a.showErrorUiTips(b)
                    }) : a.showErrorUiTips(b)))
                }), this.context.msg.on("switchDrmDefinitionError", function (b) {
                    a.context.msg.broadcast("pause"), a.context.msg.broadcast("userPausePlayer"), b.showPlayBtn = !0, a.showErrorUiTips(b)
                })
            }, get80_2Status: function () {
                function a(a) {
                    var b = Txplayer.$.Deferred(),
                        d = "//h5vv.video.qq.com/getextinfo?vid=${vid}&platform=${platfrom}&srcappid=webplayer&h5flag=4&otype=json";
                    return d = d.replace("${vid}", c.context.dataset.vid), d = d.replace("${platfrom}", a), e.ajax({
                        url: d,
                        dataType: "jsonp",
                        success: function (a) {
                            a && "o" === a.s ? b.resolve() : b.reject()
                        },
                        error: function (a) {
                            b.reject()
                        }
                    }), b
                }

                var b = Txplayer.$.Deferred(), c = this;
                return a(10204).done(function () {
                    b.resolve({
                        msg: "\u5f88\u62b1\u6b49\uff0c\u672c\u5185\u5bb9\u53d7\u7248\u6743\u65b9\u7ea6\u675f\uff0c\u6682\u4e0d\u652f\u6301\u6d4f\u89c8\u5668\u64ad\u653e\uff0c\u8bf7\u4e0b\u8f7d\u5ba2\u6237\u7aef\u89c2\u770b",
                        showClientBtn: !0
                    })
                }).fail(function () {
                    a(10303).done(function () {
                        b.resolve({msg: "\u5f88\u62b1\u6b49\uff0c\u5f53\u524d\u5e73\u53f0\u6682\u4e0d\u652f\u6301\u64ad\u653e\u672c\u5185\u5bb9\uff0c\u8bf7\u4f7f\u7528\u817e\u8baf\u89c6\u9891\u624b\u673a\u5ba2\u6237\u7aef\u89c2\u770b"})
                    }).fail(function () {
                        b.reject()
                    })
                }), b
            }, exportsModuleApis: function () {
                var a = this;
                this.dataset.privateApis = {}, this.dataset.privateApis.showErrorUiTips = this.showErrorUiTips.bind(this), e.each(this.dataset.privateApis, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }
        }, Txplayer.register("v4UiError", d)
    }, 305: function (a, b) {
        a.exports = '<txpdiv  data-role="<%=error%>" class="txp_video_error txp_none">\n  <img data-role="<%=errorTip%>" class="txp_error_pic" alt=""/>\n  <txpdiv class="txp_error_title">\n    <span data-role="<%=errorMsg%>">\u7f51\u7edc\u94fe\u63a5\u4f3c\u4e4e\u51fa\u73b0\u95ee\u9898\uff0c</span>\n    <span data-role="<%=errorRefresh%>">\n      \u4f60\u53ef\u4ee5 <button class="txp_btn">\u5237\u65b0</button>\n      <span data-role="<%=changePlayer%>"> \u6216 <button class="txp_btn">\u4f7f\u7528\u517c\u5bb9\u6a21\u5f0f\u64ad\u653e</button></span>\n      <span class="txp_none" data-role="<%=whenCoolOpen%>">\u8bd5\u8bd5</span>\n    </span>\n  </txpdiv >\n  <txpdiv class="txp_error_title2" data-role="<%=clientTitle%>">\n    <span data-role="<%=clientSpan%>">\u4f7f\u7528PC\u5ba2\u6237\u7aef\u64ad\u653e\u66f4\u7a33\u5b9a </span>\n    <a class="txp_link_btn" data-role="<%=clientBtn%>">\u7acb\u5373\u4e0b\u8f7d</a>\n    <txpdiv class="txp_error_title2 txp_link_btn txp_none" data-role="<%=playBtn%>" style="margin-right: 0;">\n      \u8fd4\u56de\u7ee7\u7eed\u64ad\u653e\n    </txpdiv>\n  </txpdiv>\n  <span class="txp_none" data-role="<%=qqbrowserBtn%>" style="margin: 16px 0 0 0;">\n    \u6216\u4f7f\u7528\u6700\u65b0 <a style="display:inline; margin: 16px 0 0 0;text-decoration: underline!important;">QQ\u6d4f\u89c8\u5668</a> / Chrome\u89c2\u770b\n  </span>\n  <txpdiv class="txp_error_code" ><span data-role="<%=errorCode%>">[ \u9519\u8bef\u7801: xx, xxx ]</span> <a href="//support.qq.com/products/2208" target="_blank">\u6211\u8981\u53cd\u9988</a></txpdiv >\n</txpdiv >\n'
    }, 306: function (a, b) {
        var c = Txplayer.$;
        a.exports = {
            exist: !1,
            minVersion: [10, 2, 2101, 400],
            isLastestChromeSupportDrm: function () {
                var a, b = Txplayer.util.os;
                return b.windows ? (a = parseFloat(b.version, 10), a > 6) : b.mac ? !Txplayer.util.browser.qqbrowser && (a = (b.version || "").split("."), a = parseFloat((a[0] || "0") + "." + (a[1] || "0"), 10), a > 10.1) : !b.linux && void 0
            },
            compareVersion: function (a) {
                var b = a.split("."), c = this.minVersion, d = !1;
                if (a === c.join(".")) d = !0; else if (4 === b.length) {
                    b.forEach(function (a, c) {
                        b[c] = parseInt(a, 10)
                    });
                    for (var e = 0; e < b.length; e++) {
                        if (b[e] > c[e]) {
                            d = !0;
                            break
                        }
                        if (b[e] < c[e]) {
                            d = !1;
                            break
                        }
                    }
                }
                return d
            },
            detect: function () {
                var a = this, b = c.Deferred(), d = c('<meta name="referrer" content="always" />');
                c("head").prepend(d);
                var e = this.isLastestChromeSupportDrm();
                return e ? c.ajax({
                    timeout: 5e3,
                    type: "POST",
                    url: "http://127.0.0.1:28653/api/handle",
                    dataType: "json",
                    data: JSON.stringify({action: "GetQBVersion", cmd: ""}),
                    success: function (c) {
                        d.remove();
                        var e = !1, f = c.result || "";
                        a.minVersion;
                        f && (e = a.compareVersion(f)), e ? (a.exist = !0, b.resolve({exist: !0})) : (a.exist = !1, b.resolve({exist: !1}))
                    },
                    error: function (c) {
                        d.remove(), a.exist = !1, b.resolve({exist: !1})
                    }
                }) : b.reject(), b
            },
            download: function () {
                try {
                    location.assign("http://dldir1.qq.com/invc/tt/QQBrowser_Setup_DRM.exe")
                } catch (a) {
                }
            },
            open: function (a) {
                if (this.exist) {
                    var b = c('<meta name="referrer" content="always" />');
                    c("head").prepend(b), c.ajax({
                        type: "POST",
                        url: "http://127.0.0.1:28653/api/handle",
                        dataType: "json",
                        data: JSON.stringify({action: "Open", cmd: encodeURIComponent(a)}),
                        success: function () {
                            b.remove()
                        },
                        error: function () {
                            b.remove()
                        }
                    })
                } else this.download()
            },
            text: {
                open: '\u6216\u4f7f\u7528\u6700\u65b0 <a style="display:inline; margin: 16px 0 0 0;text-decoration: underline!important;">QQ\u6d4f\u89c8\u5668</a> / Chrome \u89c2\u770b',
                download: '\u6216\u4e0b\u8f7d\u6700\u65b0 <a style="display:inline; margin: 16px 0 0 0;text-decoration: underline!important;">QQ\u6d4f\u89c8\u5668</a> / Chrome \u89c2\u770b'
            }
        }
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(248)
    }, 68: function (a, b) {
        var c = {unstarted: -1, ended: 0, playing: 1, paused: 2, buffering: 3, cued: 4, stop: 5}, d = {
            msd: "\u6d41\u7545180P",
            sd: "\u6807\u6e05270P",
            hd: "\u9ad8\u6e05480P",
            shd: "\u8d85\u6e05720P",
            fhd: "\u84dd\u51491080P",
            uhd: "4K"
        };
        a.exports = {playerstate: c, definitionMap: d}
    }, 248: function (a, b, c) {
        function d(a) {
            f = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = c(249), f = Txplayer.$, g = Txplayer.util, h = (Txplayer.apiList, c(68).definitionMap);
        d.prototype = {
            init: function () {
                this.write(), this.addEventListener(), this.exportsModuleApis()
            }, write: function () {
                var a = {
                    hide: Txplayer.dataset.hideClass,
                    tips: "txp-ui-tips",
                    text: "txp-ui-tips-text",
                    close: "txp-ui-tips-close"
                }, b = f.tmpl(e, a);
                this.context.dataset.$loading ? this.context.dataset.$loading.before(b) : this.context.dataset.$playermod.append(b), this.dataset.$tips = this.context.dataset.$playermod.find('[data-role="' + a.tips + '"]'), this.dataset.$text = this.context.dataset.$playermod.find('[data-role="' + a.text + '"]'), this.dataset.$close = this.context.dataset.$playermod.find('[data-role="' + a.close + '"]')
            }, remove: function () {
                this.dataset.$tips.remove()
            }, stopTips: function () {
                this.context.msg.broadcast("hideUiTips"), this.dataset.trialMovie_TIMER && (clearInterval(this.dataset.trialMovie_TIMER), this.dataset.trialMovie_TIMER = null)
            }, dealVipTip: function (a) {
                var b, c = this, d = 5, e = 0, f = function () {
                    if (e > d) return void clearInterval(c.dataset.trialMovie_TIMER);
                    e++;
                    try {
                        b = c.context.config.flashCallFn({type: c.context.dataset.trailerMode ? "trailerMode" : "getPayTip"})
                    } catch (a) {
                        g.showInfo("[updateTrialData.getTips.error]", a)
                    }
                    if (b) {
                        c.dataset.getTip_TIMER && (clearTimeout(c.dataset.getTip_TIMER), c.dataset.getTip_TIMER = null);
                        var h = b.match(/\[.*?\]/);
                        if (h) {
                            h = h[0];
                            var i = '<a href="javascript:;" data-action="openVIP" data-role="txp-ui-tips-openVIP">' + h.slice(1, -1) + "</a>";
                            b = b.replace(h, i)
                        }
                    } else c.dataset.getTip_TIMER && clearTimeout(c.dataset.getTip_TIMER), c.dataset.getTip_TIMER = setTimeout(function () {
                        b = f()
                    }, 1e3)
                }, h = function () {
                    c.context.dataset.isUiTipsShowing || c.context.dataset.isPlayingAd || (b || f(), b && c.context.msg.broadcast("showUiTips", {
                        text: b,
                        time: 300
                    }))
                };
                h(), this.dataset.trialMovie_TIMER && clearInterval(c.dataset.trialMovie_TIMER), this.dataset.trialMovie_TIMER = setInterval(function () {
                    h()
                }, 5e3)
            }, dealDujiaTip: function () {
                var a = this;
                this.context.msg.once(g.getUniqueMsgKey("videoPlaying"), function () {
                    a.hasShownDujia || (a.hasShownDujia = !0, a.context.msg.broadcast("showUiTips", {
                        text: "\u53ef\u8bd5\u770b1\u5206\u949f\u901f\u770b\u72ec\u5bb6\u5185\u5bb9",
                        time: 5,
                        hideClose: !0
                    }))
                }), this.context.msg.on(g.getUniqueMsgKey("vidChange"), function () {
                    a.hasShownDujia = !1
                }), this.context.msg.on(g.getUniqueMsgKey("beforeVideoRePlay"), function () {
                    a.hasShownDujia = !1
                })
            }, dealAdditionTip: function (a) {
                var b = this, c = a.duration || 0, d = parseInt((c - b.context.dataset.duration) / 60),
                    e = '<svg class="txp_alert_img" xmlns="http://www.w3.org/2000/svg" width="78" height="64" viewBox="0 0 78 64"><defs><linearGradient id="a" x1="2.35072545%" x2="97.4004585%" y1="26.1783854%" y2="26.1783868%"><stop offset="0%" stop-color="#FF6429"/><stop offset="100%" stop-color="#F6953E"/></linearGradient></defs><g fill="none" fill-rule="evenodd"><g fill-rule="nonzero"><path fill="#F7A741" d="M42.4245008 6.6705c.131 1.189 3.367 7.386 4.917 7.94 0 0 .727-.944.7925-1.6775l.0005.001c.198-.956.2825-2.4535-.1735-4.1175-.191-.696-.7235-1.103-.7235-1.103-1.7435-1.746-3.295-2.0525-3.295-2.0525.007.0245.0165.0495.024.0745-.499-.0045-1.637.078-1.542.935z"/><path fill="#FEE3D7" d="M46.404 24.7265s-3.038 12.2955-3.619 10.059c0 0-2.935 3.1645-5.5445 4.004-2.609.839-9.5575 1.595-12.5065.3385-2.9485-1.256-8.362-3.11-9.86-6.117 0 0-1.272.3365-2.6935-1.7625 1.414 1.1025-3.5215-3.4785-.1285-4.807l1.259 1.783s-2.13-6.8165-.954-10.011c0 0 7.692-13.2145 19.6405-12.671 0 0 17.19599995 4.29 14.4065 19.184z"/><path fill="#884C43" d="M38.9999994 13.123s-.669 7.598-19.3375 6.629c-.657-.7185.7105-3.2515 1.848-6.629 0 0-3.892 3.6375-5.544 11.3805-1.253 5.874 2.7485 9.355 5.5485 12.309l-1.045 2.994c-2.1675-.453-5.9065-3.61-5.9755-.5575-.0695 3.053-4.881 1.831-8.1825-1.6545 0 0-7.817-3.132-6.052-12.192 2.179-11.187 13.0295-22.6335 20.3265-24.6475 2.4375-.673 13.331-2.424 19.398 3.7935-1.808-1.8525 11.68849998 7.179 12.01549998 22.7605.2345 11.1885-7.0345 11.9245-8.4595 11.9465-2.72299998.0415-.3695-1.6605-4.90899998-.3915 0 0-7.16 1.2405.4335-4.887 6.41899998-5.1795 3.64549998-14.7095-.065-20.854z"/><path fill="#3ABA6B" d="M14.83999976 2.1595s1.424.61 1.2785 2.25c-.146 1.64-5.59499996 13.199-7.55899996 15.332 0 0-.5385 1.4275-3.0935-1.9515l9.37399996-15.6305z"/><path fill="#68E6A4" d="M13.43799917 1.748s2.548-.312 1.417 2.1075c0 0-5.1385 11.3505-7.71199997 13.7785 0 0-.863 1.1365-1.959-.124-1.0965-1.2605-3.673-7.871-2.743-9.8695.93-1.9985 4.3255-3.608 10.99699997-5.8925z"/><path fill="#FC9542" d="M15.1465007 5.6235s2.1425.159 2.4545 1.8715c.312 1.713-2.2975 9.4055-4.9445 10.362 0 0-2.6215-.5545-3.15-1.4415-.529-.887 5.64-10.792 5.64-10.792z"/><path fill="#F7A741" d="M15.14899947 5.549s-4.1655-.194-8.08849997 2.616c0 0-1.4355.6505-1.241 1.9895.4505 3.111 2.511 5.464 3.833 6.609 0 0 5.37299997-5.644 5.49649997-11.2145z"/><path fill="#F6B1A3" d="M17.594 29.078h2.75c1.0355 0 1.875-.8395 1.875-1.875 0-1.0355-.8395-1.875-1.875-1.875h-2.75c-1.036 0-1.875.8395-1.875 1.875 0 1.0355.839 1.875 1.875 1.875zm20.437 0h2.75c1.036 0 1.875-.8395 1.875-1.875 0-1.0355-.839-1.875-1.875-1.875h-2.75c-1.0355 0-1.875.8395-1.875 1.875 0 1.0355.8395 1.875 1.875 1.875z"/><path fill="#ED735B" d="M28.25 25.9845c-.1555.456-.25.9605-.25 1.5 0 1.933 1.1195 3.5 2.5 3.5s2.5-1.567 2.5-3.5c0-.5395-.0945-1.044-.25-1.5h-4.5z"/><path fill="#563C3B" d="M37 26.9845c1.1045 0 2-1.3435 2-3 0-1.657-.8955-3-2-3s-2 1.343-2 3c0 1.6565.8955 3 2 3zm-17.4840898-.9732736c.847-.113.8905-1.807 3.1255-2.0155 2.235-.209 2.207 2.04 3.045 1.266 1.28-1.1815-1.568-4.0985-4.1245-3.031-2.537 1.059-3.115 3.923-2.046 3.7805z"/></g><path fill="#FEE3D7" d="M49.7385176 22.25932683c1.27869925.0888412 2.38833683 1.09477949 2.2614824 3.74067336 1.00990039 1.98204108 4.35228745 8.37571337 4 9.99999997-.27983373 1.29022506-1.36322008 2.719475-5.00000006 3.00000006-.81021064.0624961-3.91448611 1.24308203-5 .99999996-1.886809-.42251816-1.73352652-2.47701646-1.99999992-2.99999995-.08227506-.1614739-.87704522-1.41743542.99999993-1.8599346 1.42146503-.33509971 5.64713936.12453104 5.59203223-1e-8-1.4782699-3.34059352-1.93627422-6.91777573-3.59203225-8.14006541-.42951148-.13955674-.85021187-1.49183833-.5422386-2.6546347l-1.5458273-1.71681524c-.3695507-.41042751-.33641342-1.0427248.07401414-1.41227542.41042755-.36955062 1.04272484-.33641334 1.41227546.07401422l1.33716578 1.485073c.0201374-.0117248.04039292-.02328804.06076096-.03468616l-.41476831-1.95133108c-.11482638-.54021604.23001993-1.07123286.77023593-1.18605932.540216-.11482647 1.07123285.23001993 1.18605932.77023592l.4008403 1.8858054z"/><path fill="#FFF" d="M38 35c.9333828 0 9.6023203-.5357031 11-1 .0665032-.0220918.3998366 2.6445749 1 8-4 2-7 3.3333333-9 4s-3-.3333333-3-3c-.6666667-5.3333333-.6666667-8 0-8z"/><path fill="url(#a)" d="M37 12h6v10h-9v2h5v6H4c-2.209139 0-4-1.790861-4-4V4c0-2.209139 1.790861-4 4-4h33v12zm3-12h8v8h-8V0zm5 22h6v5h-6v-5zm5-17h6v5h-6V5zm10-2h4v3h-4V3zm0 22h4v3h-4v-3zm6-12h3v2h-3v-2zm-14 2h5v4h-5v-4z" transform="translate(9 34)"/><path fill="#FFF" d="M26.5978254 47.4222938l5.1705843 3.8560439c.442726.3301698.5339708.9567257.203801 1.3994517a1.00000198 1.00000198 0 0 1-.203801.203801l-5.1705843 3.8560439c-.442726.3301699-1.0692819.2389251-1.3994518-.2038009C25.0695774 56.3611299 25 56.1514493 25 55.936008v-7.7120879c0-.5522847.4477153-1 1-1 .2154413 0 .4251219.0695774.5978254.1983737zM16 36h5l-3 6h-5l3-6zm10 0h5l-3 6h-5l3-6zm10 0h5l-3 6h-5l3-6z" opacity=".8"/><path fill="#FEE3D7" d="M9.11524516 42C4.2635276 49.38521401 2.89177921 54.385214 5 57c3.16233118 3.922179 5.2171776 6.922179 7 3 1.2973769-2.8542071-2.88475484-4.92607-2.88475484-4.92607V42z"/><path fill="#FFF" d="M9 53l-7-3c1.86666667-6 4.2-9 7-9v12z"/></g></svg>',
                    f = "";
                if ("end" == a.type) f = g.tpl(e + '\u53ee\u549a\uff01\u4f60\u6709\u4e00\u4e2a"\u8fdb\u5ea6\u6761\u52a0\u957f\u5305"\u5c1a\u672a\u4f7f\u7528\uff0c<a href="javascript:;" data-action="refresh" data-role="txp-ui-tips-refresh">\u3010\u70b9\u6b64\u67e5\u6536\u3011</a>', {addition: d}); else {
                    if (d <= 0) return;
                    f = g.tpl(e + '\u89c6\u9891\u8ffd\u52a0${addition}\u5206\u949f\u65b0\u5185\u5bb9\uff0c<a href="javascript:;" data-action="refresh" data-role="txp-ui-tips-refresh">\u5237\u65b0</a>\u770b\u65b0\u5185\u5bb9', {addition: d})
                }
                b.context.msg.broadcast("showUiTips", {
                    text: '<span class="txp_alert_info_complete">' + f + "</span>",
                    time: 10,
                    hideClose: !1
                })
            }, dealSeekTip: function (a) {
                var b, c = this;
                a && a.showTips ? "undefined" == typeof Txplayer.plugins["txp-history-plugin"] && (b = "<a>" + g.formatPlayTime(a.seekTime) + "</a>", c.context.msg.broadcast("showUiTips", {
                    text: "\u60a8\u4e0a\u6b21\u89c2\u770b\u81f3 " + b + " \u5904\uff0c\u6b63\u5728\u4e3a\u60a8\u7eed\u64ad",
                    time: 3,
                    hideClose: !0
                })) : a.connectionPlayTime ? "undefined" == typeof Txplayer.plugins["txp-history-plugin"] && (b = "<a>" + g.formatPlayTime(a.connectionPlayTime) + "</a>", c.context.msg.broadcast("showUiTips", {
                    text: "\u60a8\u4e0a\u6b21\u89c2\u770b\u81f3 " + b + " \u5904\uff0c\u6b63\u5728\u4e3a\u60a8\u7eed\u64ad",
                    time: 3,
                    hideClose: !0
                })) : a.playStartTime ? c.dataset.hasShowTips || (b = "<a>" + g.formatPlayTime(a.playStartTime) + "</a>", c.context.msg.broadcast("showUiTips", {
                    text: "\u817e\u8baf\u89c6\u9891\u5df2\u4e3a\u60a8\u8df3\u8fc7\u7247\u5934",
                    time: 3,
                    hideClose: !0
                })) : a.historyTime ? "undefined" == typeof Txplayer.plugins["txp-history-plugin"] && c.context.msg.broadcast("showUiTips", {
                    text: "\u60a8\u4e0a\u6b21\u89c2\u770b\u81f3 " + a.historyTime + " \u5904\uff0c\u6b63\u5728\u4e3a\u60a8\u7eed\u64ad",
                    time: 5
                }) : a.uiText && (c.context.msg.broadcast("showUiTips", {
                    text: a.uiText,
                    time: a.time,
                    hideClose: a.hideClose
                }), c.dataset.hasShowTips = !0)
            }, dealDenitionTip: function () {
                var a = this;
                this.dataset.eventsList[g.getUniqueMsgKey("setDefinitionStart")] = function (b, c) {
                    if (c) return void a.context.msg.broadcast("showUiTips", {
                        text: "\u6b63\u5728\u7f13\u51b2...",
                        time: 3,
                        hideClose: !0
                    });
                    var d = h[b];
                    d && (d = "<a>[" + d + "]</a>", a.context.msg.broadcast("showUiTips", {
                        text: "\u6b63\u5728\u4e3a\u60a8\u5207\u6362\u6e05\u6670\u5ea6" + d,
                        time: 10
                    }))
                }, this.dataset.eventsList[g.getUniqueMsgKey("setDefinitionDone")] = function (b) {
                    a.context.msg.broadcast("hideUiTips")
                }, this.dataset.eventsList[g.getUniqueMsgKey("setDefinitionFail")] = function (b) {
                    a.context.msg.broadcast("showUiTips", {
                        text: "sorry, \u5207\u6362\u6e05\u6670\u5ea6\u5931\u8d25, \u8bf7\u7a0d\u540e\u91cd\u8bd5",
                        time: 5
                    })
                }
            }, dealPlaybackRateTip: function (a) {
                if (!this.context.dataset.isPlayingAd) {
                    if (a >= 4) return void this.context.msg.broadcast("showUiTips", {
                        text: "\u64ad\u653e\u901f\u5ea6\u5df2\u7ecf\u8fbe\u5230\u6700\u9ad8\u503c",
                        time: 3,
                        hideClose: !0
                    });
                    if (a <= .4) return void this.context.msg.broadcast("showUiTips", {
                        text: "\u64ad\u653e\u901f\u5ea6\u5df2\u7ecf\u8fbe\u5230\u6700\u4f4e\u503c",
                        time: 3,
                        hideClose: !0
                    });
                    a = 1.25 == a ? a : a.toFixed(1), this.context.msg.broadcast("showUiTips", {
                        text: "\u6b63\u5728<a>" + a + "</a>\u500d\u901f\u5ea6\u64ad\u653e",
                        time: 3,
                        hideClose: !0
                    })
                }
            }, dealVolumeTip: function (a) {
                a.mute === !0 ? this.context.msg.broadcast("showUiTips", {
                    text: "\u89c6\u9891\u9759\u97f3",
                    time: 2,
                    hideClose: !0
                }) : a.mute === !1 ? this.context.msg.broadcast("showUiTips", {
                    text: "\u53d6\u6d88\u89c6\u9891\u9759\u97f3",
                    time: 2,
                    hideClose: !0
                }) : a.volume >= 0 && this.context.msg.broadcast("showUiTips", {
                    text: "\u5f53\u524d\u97f3\u91cf: <a>" + a.volume + "</a>",
                    time: 3,
                    hideClose: !0
                })
            }, dealConsoleReportTip: function (a) {
                this.context.msg.broadcast("showUiTips", {
                    text: "\u60a8\u7684\u53cd\u9988\u6211\u4eec\u5df2\u6536\u5230\uff0c\u611f\u8c22\u60a8\u7684\u652f\u6301~",
                    time: 5,
                    hideClose: !0
                })
            }, showVIPShareTips: function () {
                var a = "//vip.video.qq.com/fcgi-bin/comm_cgi?callback=?", b = f.jsonp || f.ajax, c = this,
                    d = function (a) {
                        var b = "\u8be5\u8d26\u53f7\u591a\u5730\u767b\u5f55\u5b58\u5728\u5b89\u5168\u9690\u60a3\uff0c\u5df2\u6682\u505c\u4f1a\u5458\u670d\u52a1\uff0c\u8bf7\u4fee\u6539\u5bc6\u7801\u5e76\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\u540e\u91cd\u8bd5\u3002";
                        a = a || {}, a.tips = a.tips || b;
                        var d = 0;
                        c.context.dataset.openAccountData = [], a.buttonlist && "array" === f.type(a.buttonlist) && f.each(a.buttonlist, function (b, e) {
                            e && (e.title && e.url && (a.tips += '&nbsp;<a href="javascript:;" data-action="shareVIP" data-click="' + d + '">' + e.title + "</a>&nbsp;", c.context.dataset.openAccountData.push(e)), d++)
                        }), c.context.msg.broadcast("showUiTips", {text: a.tips, time: 3e4})
                    };
                b({
                    url: a,
                    data: {name: "attack_account", cmd: 1},
                    timeout: 6e3,
                    callback: Txplayer.util.getJsonpCallbackName("getshareviptips")
                }).done(function (a) {
                    d(a)
                }).fail(function (a, b) {
                    d()
                })
            }, showUnOfficialLimitTips: function (a) {
                if (!this.context.dataset.isUiTipsShowing) {
                    var b = '\u53ef\u8bd5\u770b${min}\u5206\u949f\uff0c\u53bb\u817e\u8baf\u89c6\u9891\u89c2\u770b\u5b8c\u6574\u7248 <a target="_blank;" href="${href}">\u7acb\u5373\u524d\u5f80</a>';
                    a.sec > 0 && (b = '\u53ef\u8bd5\u770b${min}\u5206\u949f${sec}\u79d2\uff0c\u53bb\u817e\u8baf\u89c6\u9891\u89c2\u770b\u5b8c\u6574\u7248 <a target="_blank;" href="${href}">\u7acb\u5373\u524d\u5f80</a>'), a.min <= 0 && a.sec > 0 && (b = '\u53ef\u8bd5\u770b${sec}\u79d2\uff0c\u53bb\u817e\u8baf\u89c6\u9891\u89c2\u770b\u5b8c\u6574\u7248 <a target="_blank;" href="${href}">\u7acb\u5373\u524d\u5f80</a>'), this.context.msg.broadcast("showUiTips", {
                        text: g.tpl(b, a),
                        time: 9999,
                        hideClose: !0
                    })
                }
            }, addEventListener: function () {
                var a = this;
                this.dataset.$close.on("click", function () {
                    a.context.msg.broadcast("hideUiTips", {userAction: !0, tips: a.dataset.$text.html()})
                }), this.dataset.eventsList = {}, this.dealDenitionTip(), this.dataset.eventsList[g.getUniqueMsgKey("vidChange")] = function () {
                    a.stopTips(), a.dataset.hasShowTips = !1
                }, this.dataset.eventsList[g.getUniqueMsgKey("error")] = function (b) {
                    a.stopTips(), b && 94 == b.code && a.showVIPShareTips()
                }, f.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                }), a.context.msg.on("showUIVipGuide", function (b) {
                    a.stopTips()
                }), a.context.msg.on(g.getUniqueMsgKey("showDujiaDialog"), function () {
                    a.stopTips()
                }), a.context.msg.on(g.getUniqueMsgKey("adblockCannotSetDef"), function (b) {
                    a.context.msg.broadcast("showUiTips", {
                        text: '\u89c6\u9891\u6e05\u6670\u5ea6\u88ab\u8bef\u4f24\u4e86\uff0c\u6b63\u5e38\u89c2\u770b\u9700<a target="_blank;" href="javascript:;">\u5173\u95ed\u5e7f\u544a\u62e6\u622a\u63d2\u4ef6</a>',
                        time: 5,
                        hideClose: !0
                    })
                })
            }, exportsModuleApis: function () {
                var a = this;
                this.dataset.moduleApis = {}, this.dataset.moduleApis.showUiTips = function (b) {
                    b && b.text && (a.context.dataset.isSmallWindowMode || (b.time = b.time || 4, "undefined" === f.type(b.hideClose) && (b.hideClose = !1), b.hideClose ? a.dataset.$close.addClass(Txplayer.dataset.hideClass) : a.dataset.$close.removeClass(Txplayer.dataset.hideClass), a.dataset.$tips.removeClass(Txplayer.dataset.hideClass), a.dataset.$text.html(b.text), a.context.dataset.isUiTipsShowing = !a.dataset.$tips.hasClass(Txplayer.dataset.hideClass), a.dataset.hide_TIMER && clearTimeout(a.dataset.hide_TIMER), a.dataset.hide_TIMER = setTimeout(function () {
                        a.context.msg.broadcast("hideUiTips")
                    }, 1e3 * b.time)))
                }, this.dataset.moduleApis.hideUiTips = function (b) {
                    a.dataset.$tips.addClass(Txplayer.dataset.hideClass), a.context.dataset.isUiTipsShowing = !a.dataset.$tips.hasClass(Txplayer.dataset.hideClass)
                }, this.dataset.moduleApis.showUIVipTip = function (b) {
                    a.dealVipTip(b)
                }, this.dataset.moduleApis.showUIDujiaTip = function (b) {
                    a.dealDujiaTip(b)
                }, this.dataset.moduleApis.showAdditionTip = function (b) {
                    a.dealAdditionTip(b)
                }, this.dataset.moduleApis.showUiSeekTip = function (b) {
                    a.dealSeekTip(b)
                }, this.dataset.moduleApis.showUiRateTip = function (b) {
                    a.dealPlaybackRateTip(b)
                }, this.dataset.moduleApis.showUiPlaybackRateTip = function (b) {
                    a.dealPlaybackRateTip(b)
                }, this.dataset.moduleApis.showUiVolumeTip = function (b) {
                    a.dealVolumeTip(b)
                }, this.dataset.moduleApis.showConsoleReportTips = function (b) {
                    a.dealConsoleReportTip(b)
                }, this.dataset.moduleApis.showUnOfficialLimitTips = function (b) {
                    a.showUnOfficialLimitTips(b)
                }, f.each(this.dataset.moduleApis, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }
        }, Txplayer.register("UiTips", d)
    }, 249: function (a, b) {
        a.exports = '<txpdiv data-role="<%=tips%>" class="txp_alert_info <%=hide%>">\n  <txpdiv class="txp_alert_content">\n    <txpdiv data-role="<%=text%>" class="txp_alert_text"></txpdiv>\n    <button data-role="<%=close%>" class="txp_btn txp_btn_close" title="\u5173\u95ed"></button>\n  </txpdiv>\n</txpdiv>'
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(172)
    }, 172: function (a, b, c) {
        function d(a) {
            f = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = c(173), f = Txplayer.$, g = Txplayer.util;
        d.prototype = {
            init: function () {
                this.dataset.controlHideClass = "txp_autohide", this.context.dataset.isControlShow = !0, this.write(), this.addEventListener(), this.loadSubPlugins()
            }, write: function () {
                var a = {
                    controlWrap: "txp-control-wrap",
                    buttonsLeftRole: "txp-control-left",
                    buttonsRightRole: "txp-control-right",
                    buttonsCenterRole: "txp-control-center",
                    hide: Txplayer.dataset.hideClass,
                    autoHide: this.dataset.controlHideClass
                }, b = f.tmpl(e, a);
                this.context.dataset.$playermod.append(b), this.dataset.$playermod = this.context.dataset.$playermod, this.dataset.$controlWrap = this.context.dataset.$playermod.find('[data-role="' + a.controlWrap + '"]'), this.dataset.$buttonsleftmod = this.context.dataset.$playermod.find('[data-role="' + a.buttonsLeftRole + '"]'), this.dataset.$buttonsrightmod = this.context.dataset.$playermod.find('[data-role="' + a.buttonsRightRole + '"]'), this.dataset.$buttonscentermod = this.context.dataset.$playermod.find('[data-role="' + a.buttonsCenterRole + '"]'), (this.context.config.autoplay || g.mobile) && (this.context.dataset.$playermod.addClass(this.dataset.controlHideClass), this.uiControlVisibilityChange(!1), this.context.dataset.isControlShow = !1)
            }, remove: function () {
                this.dataset.$controlWrap.remove()
            }, loadSubPlugins: function () {
                var a = [];
                if (this.context.pluginConfig && "array" === f.type(this.context.pluginConfig.subPlugins) && (a = this.context.pluginConfig.subPlugins.slice(0)), !g.mobile && "v4" == this.context.config.version) for (var b = 0; b < a.length; b++) if (["UiControlPlay", "UiVolume", "UiDefinition"].indexOf(a[b]) != -1) {
                    if (g.inArray(this.context.config.removePluginsList, a[b]) != -1) continue;
                    a[b] = "v4" + a[b]
                }
                var c = {
                    msg: this.context.msg,
                    adApi: this.context.adApi,
                    userMsg: this.context.userMsg,
                    userApi: this.context.userApi,
                    privateApi: this.context.privateApi,
                    dataset: this.context.dataset,
                    config: this.context.config,
                    $mod: {
                        $playermod: this.dataset.$playermod,
                        $progressmod: this.dataset.$buttonscentermod,
                        $buttonsleftmod: this.dataset.$buttonsleftmod,
                        $buttonsrightmod: this.dataset.$buttonsrightmod
                    }
                };
                g.loadPlugins.call(this, a, c, this.context.config.settings)
            }, handlerUiControlShowHide: function () {
                function a(a) {
                    h.context.msg.on("ready", function () {
                        h.context.dataset.$shadow.on("touchend", function (e) {
                            c() ? b() : d(), a && e.preventDefault()
                        })
                    })
                }

                function b(a) {
                    if (a = a || {}, a && !a.force) {
                        if (1 !== h.context.dataset.playState && !h.context.dataset.isPlayingAd) return;
                        if (h.context.dataset.isSmallWindowMode) return;
                        if (h.context.dataset.isFocusVideoBufferIng) return;
                        if (h.context.dataset.isVideoSeeking) return;
                        if (h.dataset.isMouseHoverControl) return;
                        if (h.context.dataset.isRightClickMenu) return;
                        if (h.context.dataset.disableHideControl) return
                    }
                    h.context.dataset.$playermod.addClass(h.dataset.controlHideClass), h.uiControlVisibilityChange(!1), h.context.msg.broadcast("hideUiControl"), h.context.dataset.isControlShow = !1, h.dataset.hideControl_TIMER && (clearTimeout(h.dataset.hideControl_TIMER), h.dataset.hideControl_TIMER = null)
                }

                function c() {
                    return !h.context.dataset.$playermod.hasClass(h.dataset.controlHideClass)
                }

                function d(a) {
                    if (a = a || {}, a && !a.force) {
                        if (h.context.dataset.isSmallWindowMode) return;
                        if (h.dataset.errorcode) return
                    }
                    h.context.msg.broadcast("beforeUiControlShow"), h.context.dataset.$playermod.removeClass(h.dataset.controlHideClass), h.uiControlVisibilityChange(!0), h.context.dataset.isControlShow = !0, e()
                }

                function e() {
                    h.dataset.hideControl_TIMER && (clearTimeout(h.dataset.hideControl_TIMER), h.dataset.hideControl_TIMER = null), h.dataset.hideControl_TIMER = setTimeout(function () {
                        b()
                    }, 3e3)
                }

                var h = this;
                this.dataset.hideControl_TIMER = null, g.mobile ? a(!1) : (a(!0), this.dataset.$playermod.on("click mouseenter", function (a) {
                    d(a)
                }), this.dataset.$playermod.on("mouseleave", function (a) {
                    b(a)
                }), this.dataset.$playermod.on("mousemove", function (a) {
                    h.dataset.screenX == a.screenX && h.dataset.screenY == a.screenY || (h.dataset.screenX = a.screenX, h.dataset.screenY = a.screenY, d(a))
                })), this.dataset.eventsList[g.getUniqueMsgKey("videoPause")] = function (a) {
                    a && a.end || h.context.dataset.isPlayingAd || d()
                }, this.dataset.eventsList[g.getUniqueMsgKey("videoEnd")] = function (a) {
                    a && a.isAllEnd && d()
                }, this.dataset.eventsList[g.getUniqueMsgKey("error")] = function (a) {
                    a && 94 == a.code || (b({force: !0}), h.dataset.errorcode = a.code)
                }, this.dataset.eventsList[g.getUniqueMsgKey("videoPlaying")] = function () {
                    delete h.dataset.errorcode, e()
                }, this.dataset.eventsList[g.getUniqueMsgKey("smallWindowModeChange")] = function (a) {
                    a && a.isSmallWindow && b({force: !0})
                }, this.dataset.eventsList[g.getUniqueMsgKey("hideUicontrol")] = function (a) {
                    b()
                }, f.each(this.dataset.eventsList, function (a, b) {
                    h.context.msg.on(a, b)
                }), this.show = d, this.hide = b
            }, uiControlVisibilityChange: function (a) {
                try {
                    a !== this.dataset.uiControlVisibilityChangeState && (this.dataset.uiControlVisibilityChangeState = a, this.context.msg.broadcast("uiControlVisibilityChange", a), this.context.userMsg.broadcast("uiControlVisibilityChange", a))
                } catch (b) {
                }
            }, addEventListener: function () {
                var a = this;
                this.dataset.eventsList = {}, this.handlerUiControlShowHide(), this.dataset.eventsList[g.getUniqueMsgKey("userStopVideo")] = function (b) {
                    a.show()
                }, this.dataset.eventsList[g.getUniqueMsgKey("showUicontrol")] = function (b) {
                    a.context.dataset.isSmallWindowMode || (a.context.dataset.$playermod.removeClass(a.dataset.controlHideClass), a.uiControlVisibilityChange(!0), a.context.dataset.isControlShow = !0)
                }, this.dataset.eventsList[g.getUniqueMsgKey("videoEnd")] = function (b) {
                    if (b && b.isAllEnd) {
                        if (a.context.dataset.isSmallWindowMode) return;
                        a.context.dataset.$playermod.removeClass(a.dataset.controlHideClass), a.uiControlVisibilityChange(!0), a.context.dataset.isControlShow = !0
                    }
                }, this.dataset.$controlWrap.on("mouseenter", function () {
                    a.dataset.isMouseHoverControl = !0
                }).on("mouseleave", function () {
                    a.dataset.isMouseHoverControl = !1
                }), this.dataset.eventsList[g.getUniqueMsgKey("windowFullscreenChange")] = function (b) {
                    a.dataset.isMouseHoverControl = !1, setTimeout(function () {
                        a.dataset.isMouseHoverControl = !1, a.hide({force: !0})
                    }, 1e3)
                }, this.dataset.eventsList[g.getUniqueMsgKey("browserFullscreenChange")] = function (b) {
                    a.dataset.isMouseHoverControl = !1, setTimeout(function () {
                        a.dataset.isMouseHoverControl = !1, a.hide({force: !0})
                    }, 200)
                }, f.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }
        }, Txplayer.register("UiControl", d)
    }, 173: function (a, b) {
        a.exports = '<txpdiv data-role="<%=controlWrap%>" class="txp_bottom" style="overflow:initial;">\n  <txpdiv class="txp_controls">\n    <txpdiv class="txp_left_controls" data-role="<%=buttonsLeftRole%>"></txpdiv>\n    <txpdiv class="txp_progress_bar_container" data-role="<%=buttonsCenterRole%>"></txpdiv>\n    <txpdiv class="txp_right_controls" data-role="<%=buttonsRightRole%>"></txpdiv>\n  </txpdiv>\n</txpdiv>'
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(230)
    }, 230: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = (Txplayer.apiList, c(231));
        d.prototype = {
            init: function () {
                this.write(), this.addEventListerner()
            }, write: function () {
                var a = {
                    loadedProgress: "txp-control-load-progress",
                    playedProgress: "txp-control-play-progress",
                    playStartTimePoint: "txp-control-play-start-time-point",
                    playEndTimePoint: "txp-control-play-end-time-point",
                    playedPoint: "txp-control-play-point",
                    progressList: "txp-control-progress-list",
                    progressIndicator: "txp-control-progress-indicator",
                    tabindex: Txplayer.dataset.tabindex++,
                    hideClass: Txplayer.dataset.hideClass
                };
                this.dataset.renderData = a;
                var b = e.tmpl(g, a);
                this.context.$mod.$progressmod.append(b), this.dataset.$loadedProgress = this.context.$mod.$progressmod.find('[data-role="' + a.loadedProgress + '"]'), this.dataset.$playprogress = this.context.$mod.$progressmod.find('[data-role="' + a.playedProgress + '"]'), this.dataset.$playStartTimePoint = this.context.$mod.$progressmod.find('[data-role="' + a.playStartTimePoint + '"]'), this.dataset.$playEndTimePoint = this.context.$mod.$progressmod.find('[data-role="' + a.playEndTimePoint + '"]'), this.dataset.$playpoint = this.context.$mod.$progressmod.find('[data-role="' + a.playedPoint + '"]'), this.dataset.$progressIndicator = this.context.$mod.$progressmod.find('[data-role="' + a.progressIndicator + '"]'), this.dataset.$progressList = this.context.$mod.$progressmod.find('[data-role="' + a.progressList + '"]')
            }, remove: function () {
                this.dataset.$loadedProgress.remove(), this.dataset.$playprogress.remove(), this.dataset.$playpoint.remove(), this.dataset.$playStartTimePoint.remove(), this.dataset.$playEndTimePoint.remove(), this.dataset.$progressIndicator.remove(), this.dataset.$progressList.remove()
            }, isInProgressArea: function (a) {
                var b = this;
                if (1 != a.which) return !1;
                var c = e(a.target), d = c.data("role");
                return f.inArray([b.dataset.renderData.progressList, b.dataset.renderData.progressIndicator, b.dataset.renderData.playedPoint, b.dataset.renderData.playedProgress, b.dataset.renderData.loadedProgress, "txp-control-progress", "txp-control-center"], d) > -1 || c.hasClass("txp_interact_dot") || c.hasClass("txp_progress_role")
            }, progressOnMouseMove: function () {
                var a, b, c, d = !1, f = this, g = -1, h = !1, i = function (b) {
                    var d = f.dataset.$progressList.parent(), e = d && d[0] && d[0].offsetLeft || 0;
                    g = b.pageX - f.context.$mod.$playermod.offset().left - e, g !== -1 && (g > a ? g = a : g < 0 && (g = 0), c = parseInt(g / a * 1e4) / 100)
                }, j = function (b) {
                    var c = parseInt(g / a * 1e4) / 100;
                    0 === g ? 0 : parseInt(g / a * 1e4) / 100;
                    f.updateProgressWidth(c + "%"), "mousedown" == b && f.context.msg.broadcast("userSeekStart", {time: parseInt(f.context.dataset.duration * c / 100)}), "mouseup" == b && f.context.msg.broadcast("userSeekEnd", {time: parseInt(f.context.dataset.duration * c / 100)})
                };
                this.context.$mod.$progressmod.on("mouseenter", function () {
                    a = f.dataset.$progressList.width(), b = f.dataset.$progressIndicator.width();
                    var c = f.dataset.$playStartTimePoint, d = f.dataset.$playEndTimePoint;
                    f.context.dataset.skipPrelude ? (f.context.dataset.playStartTime && c.show(), f.context.dataset.playEndTime && d.show()) : (c.hide(), d.hide())
                }).on("mouseleave", function () {
                    f.dataset.$playStartTimePoint.hide(), f.dataset.$playEndTimePoint.hide()
                });
                var k = f.context.dataset.$playermod && f.context.dataset.$playermod.attr("id"), l = "";
                e("body").on("mousedown", function (a) {
                    f.context.dataset.isPlayingAd || f.isVideoCanNotPlay() || f.context.dataset.isImgAdLoadingShowing || f.isInProgressArea(a) && (f.context.dataset.isDisableProgress || (Object.keys && Object.keys(Txplayer.dataset._instance).length > 1 && (l = e(a.target).parents(".txp_player").attr("id")), k && l && l !== k || (h = !0, d = !0, f.context.dataset.isVideoSeeking = !0, f.context.msg.broadcast("pause"), i(a), j("mousedown"))))
                }).on("mousemove", function (a) {
                    f.context.dataset.isPlayingAd || f.context.dataset.isImgAdLoadingShowing || f.isVideoCanNotPlay() || k && l && l !== k || (i(a), h && d && j())
                }).on("mouseup", function (b) {
                    if (!f.context.dataset.duration) return void (h = !1);
                    if (!f.context.dataset.isPlayingAd && !f.context.dataset.isImgAdLoadingShowing && h && (!k || !l || l === k)) {
                        l = "";
                        f.context.dataset.playState;
                        i(b);
                        var c = parseInt(f.context.dataset.duration * (g / a));
                        j("mouseup"), f.context.msg.broadcast("seekTo", c), d = !1, h = !1
                    }
                })
            }, isVideoCanNotPlay: function () {
                var a = this.context.dataset.playState;
                return 0 === a || a === -1
            }, progressOnTouch: function () {
                var a, b, c, d, e = this, f = function (a) {
                    var f = parseInt(b / c * 1e4) / 100, g = parseInt((b - d / 2) / c * 1e4) / 100;
                    e.updateProgressWidth(g + "%"), e.context.msg.broadcast("progressUpdate", f), "touchstart" == a && e.context.msg.broadcast("userSeekStart", {time: parseInt(e.context.dataset.duration * f / 100)}), "touchend" == a && e.context.msg.broadcast("userSeekEnd", {time: parseInt(e.context.dataset.duration * f / 100)})
                };
                this.context.$mod.$progressmod.on("touchstart", function (g) {
                    e.context.dataset.isPlayingAd || (g = g.originalEvent ? g.originalEvent : g, g && g.touches && g.touches.length && (g = g.touches[0], a = e.dataset.$progressList.offset().left, b = g.pageX - a, c = e.dataset.$progressList.width(), d = e.dataset.$progressIndicator.width(), f("touchstart"), e.context.dataset.isControlTouch = !0, e.context.msg.broadcast("pause")))
                }).on("touchmove", function (c) {
                    e.context.dataset.isPlayingAd || (c = c.originalEvent ? c.originalEvent : c, c && c.touches && c.touches.length && (c.preventDefault(), c = c.touches[0], b = c.pageX - a, b > e.dataset.$progressList.width() ? b = e.dataset.$progressList.width() : b < 0 && (b = 0), f(), e.context.dataset.isControlTouch = !0))
                }).on("touchend", function (a) {
                    if (!e.context.dataset.isPlayingAd) {
                        var d = parseInt(e.context.dataset.duration * (b / c));
                        d >= e.context.dataset.duration && (d = e.context.dataset.duration - 1), f("touchend"), e.context.dataset.isControlTouch = !1, e.context.msg.broadcast("seekTo", d)
                    }
                })
            }, getCanplayTimeLimit: function () {
                var a;
                return "number" == e.type(this.context.dataset.canPlayTime) && this.context.dataset.duration && (a = this.context.dataset.canPlayTime / this.context.dataset.duration, a = 100 * a), a
            }, updateBufferedBar: function (a) {
                if (this.context.dataset.duration && "number" === e.type(a)) {
                    var b = parseInt(100 * a / this.context.dataset.duration);
                    b >= 99 && (b = 100), this.dataset.$loadedProgress.css({width: b + "%"})
                }
            }, updateProgressWidth: function (a) {
                var b = this.getCanplayTimeLimit();
                b && (a = parseFloat((a + "").replace("%", "")), a > b && (a = b), a += "%"), this.dataset.$playprogress.css("width", a), this.dataset.$playpoint.css("left", a)
            }, updateSkipPrelude: function () {
                var a = this.context.dataset, b = this.dataset.$playStartTimePoint, c = this.dataset.$playEndTimePoint,
                    d = a.playStartTime ? +a.playStartTime : 0, e = a.playEndTime ? +a.playEndTime : 0,
                    f = this.context.dataset.duration || 0;
                d ? b.css("left", d / f * 100 + "%").removeClass(Txplayer.dataset.hideClass) : b.addClass(Txplayer.dataset.hideClass), e ? c.css("left", e / f * 100 + "%").removeClass(Txplayer.dataset.hideClass) : c.addClass(Txplayer.dataset.hideClass)
            }, addEventListerner: function () {
                var a = this;
                this.dataset.eventsList = {}, a.context.dataset.duration ? a.updateSkipPrelude() : this.dataset.eventsList[f.getUniqueMsgKey("getVideoUrlSuccess")] = function () {
                    a.context.config.playEndTime && (a.context.dataset.playEndTime = parseInt(a.context.dataset.duration) - parseInt(a.context.config.playEndTime), a.context.dataset.playEndTime < 0 && (a.context.dataset.playEndTime = null)), a.updateSkipPrelude()
                }, this.dataset.eventsList[f.getUniqueMsgKey("seekStart")] = function (b) {
                    if (a.context.dataset.isControlShow && !a.context.dataset.isPlayingAd && a.context.dataset.duration) {
                        var c = b.seekTime / a.context.dataset.duration;
                        c = 100 * c + "%", a.updateProgressWidth(c), b.currentTimeWhenSeekStart && b.currentTimeWhenSeekStart > b.seekTime && a.updateBufferedBar(b.seekTime)
                    }
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoTimeUpdateWithHlsAd")] = function () {
                    if (!a.context.dataset.isPlayingAd && a.context.dataset.duration && !a.context.dataset.isVideoSeeking) {
                        var b = a.context.dataset.currentTimeWithHlsAd;
                        if (a.context.dataset.isControlShow || b % 5 === 0) {
                            var c = b / a.context.dataset.duration;
                            c = 100 * c + "%", a.updateProgressWidth(c), a.updateBufferedBar(a.context.dataset.bufferedTime)
                        }
                    }
                }, this.context.dataset.$playermod.on("mouseenter", function () {
                    if (!a.context.dataset.isPlayingAd && a.context.dataset.duration && !a.context.dataset.isVideoSeeking && 0 != a.context.dataset.playState) {
                        var b = a.context.dataset.currentTimeWithHlsAd, c = b / a.context.dataset.duration;
                        c = 100 * c + "%", a.updateProgressWidth(c), a.updateBufferedBar(a.context.dataset.bufferedTime)
                    }
                }), this.dataset.eventsList[f.getUniqueMsgKey("videoProgress")] = function () {
                    a.context.dataset.isControlShow && 1 === a.context.dataset.playState && a.updateBufferedBar(a.context.dataset.bufferedTime)
                }, this.dataset.eventsList[f.getUniqueMsgKey("vidChange")] = function () {
                    a.updateBufferedBar(0), a.updateProgressWidth(0)
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoPlaying")] = function (b) {
                    b && "endingad" === b.playListType && (a.context.dataset.bufferedTime = 0, a.updateBufferedBar(0), a.updateProgressWidth(0))
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoEnd")] = function (b) {
                    b && b.isAllEnd && (a.updateBufferedBar(0), a.updateProgressWidth(0))
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoEnd")] = function (b) {
                    b && b.isTheLastFilm && (a.updateBufferedBar(0), a.updateProgressWidth(0))
                }, this.dataset.eventsList[f.getUniqueMsgKey("beforeVideoPlay")] = function (b) {
                    a.updateBufferedBar(0), a.updateProgressWidth(0)
                }, this.dataset.eventsList[f.getUniqueMsgKey("speedyTouchmove")] = function (b) {
                    100 * b / a.context.dataset.duration + "%";
                    a.updateProgressWidth()
                }, this.dataset.eventsList[f.getUniqueMsgKey("userStopVideo")] = function (b) {
                    a.updateBufferedBar(0), a.updateProgressWidth(0)
                }, this.dataset.eventsList[f.getUniqueMsgKey("disableProgress")] = function (b) {
                    a.context.dataset.isDisableProgress = !0
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoPlaying")] = function (b) {
                    if (b && "film" === b.playListType) {
                        if (a.context.dataset.isDuringZcCountdown) return;
                        a.context.dataset.isDisableProgress = !1
                    }
                }, e.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                }), f.mobile ? this.progressOnTouch() : this.progressOnMouseMove()
            }
        }, Txplayer.register("UiProgress", d)
    }, 231: function (a, b) {
        a.exports = '<txpdiv class="txp_progress_list" data-role="<%=progressList%>" style="background-color: transparent;">\n  <txpdiv class="txp_progress_load" style="width:0%" data-role="<%=loadedProgress%>"></txpdiv>\n  <txpdiv class="txp_progress_play" style="width:0%" data-role="<%=playedProgress%>"></txpdiv>\n  <txpdiv class="txp_interact_progress_list">\n    <txpdiv class="txp_interact_dot <%= hideClass %>" data-role="<%=playStartTimePoint%>"></txpdiv>\n    <txpdiv class="txp_interact_dot <%= hideClass %>" data-role="<%=playEndTimePoint%>"></txpdiv>\n  </txpdiv>\n</txpdiv>\n\n<txpdiv class="txp_btn_scrubber" style="left:0%" data-role="<%=playedPoint%>">\n  <txpdiv class="txp_scrubber_indicator" data-role="<%=progressIndicator%>" style="left:0;top:0;"></txpdiv>\n</txpdiv>'
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(199)
    }, 199: function (a, b) {
        function c(a) {
            d = Txplayer.$, this.dataset = {}, this.context = a, this.addEventListerner()
        }

        var d = Txplayer.$, e = Txplayer.util;
        c.prototype = {
            renderList: function (a) {
                var b = this;
                b.dataset.list = a, b.dataset.$dots = [];
                var c = 0;
                this.dataset.popPointId = e.getUrlParam("videoMark"), a.length > 0 && this.context.msg.broadcast("reportUsrAction", {usr_action: "playpoint-view"}), d.each(a, function (a, e) {
                    e.pt && e.ti && (c = e.pt / 1e3 / b.context.dataset.duration * 100, c <= 100 && (d(".txp_interact_progress_list").append('<txpdiv class="txp_interact_dot" data-role="txp-control-progress-normal-dot" data-index="' + a + '"style="left:' + c + '%"></txpdiv>'), e.id == b.dataset.popPointId && b.dealPopPoint(a, c)))
                }), b.dataset.$dots = d(".txp_interact_progress_list").find('[data-role="txp-control-progress-normal-dot"]'), b.addDotsEvent()
            }, dealPopPoint: function (a, b) {
                var c = this;
                if (c.dataset.popPointIndex = a, c.dataset.list[a].ti) {
                    d(".txp_progress_bar_container").append('<txpdiv class="txp_interact_dot_tips txp_none" data-time="' + c.dataset.list[a].pt / 1e3 + '" data-per="' + b + '" style="left:' + b + '%"> <txpdiv class="txp_interact_dot_tips_text">' + c.dataset.list[a].ti + '</txpdiv> <txpdiv class="txp_interact_dot_tips_arrow"></txpdiv></txpdiv>'), c.dataset.dopTips = d(".txp_interact_dot_tips"), c.dataset.dopTipsArrow = d(".txp_interact_dot_tips_arrow");
                    var e = d(".txp_interact_dot_tips").outerWidth ? d(".txp_interact_dot_tips").outerWidth() / 2 : d(".txp_interact_dot_tips").width() / 2,
                        f = d(".txp_progress_bar_container").outerWidth ? d(".txp_progress_bar_container").outerWidth() : d(".txp_progress_bar_container").width() / 2,
                        g = e / f * 100, h = 100 - g, i = e;
                    b < g ? (i = b * f / 100, i < 16 && (i = 16), b = g) : b > h && (i = 2 * e - (f - b * f / 100), i > 2 * e - 16 && (i = 2 * e - 16), b = h), c.dataset.dopTips.css({left: b + "%"}), c.dataset.dopTipsArrow.css({left: i + "px"}), this.context.dataset.isPlayingAd ? c.context.msg.on("videoPlaying.dotTips", function (a) {
                        a && "film" == a.playListType && (c.context.msg.off("videoPlaying.dotTips"), c.showDopTips())
                    }) : c.showDopTips()
                }
            }, showDopTips: function () {
                var a = this;
                a.context.msg.broadcast("showUicontrol"), a.context.dataset.disableHideControl = !0, a.dataset.isShowDopTips = !0, d(".txp_interact_dot_tips").removeClass("txp_none"), setTimeout(function () {
                    a.context.dataset.disableHideControl = !1, a.context.msg.broadcast("hideUicontrol"), a.dataset.isShowDopTips = !1, d(".txp_interact_dot_tips").addClass("txp_none")
                }, 1e4), d(".txp_interact_dot_tips").on("click", function () {
                    var b = d(this).data("time");
                    a.context.dataset.disableHideControl = !1, a.dataset.isShowDopTips = !1, d(".txp_interact_dot_tips").addClass("txp_none"), a.context.msg.broadcast("seekTo", b)
                }), d(".txp_interact_dot_tips").on("mouseenter mouseleave mousemove", function (a) {
                    a.stopPropagation()
                })
            }, addDotsEvent: function () {
                var a = this;
                a.dataset.$dots.on("mouseenter", function () {
                    a.context.msg.broadcast("reportUsrAction", {usr_action: "playpoint-hover"});
                    var b = parseInt(d(this).data("index"));
                    return a.dataset.isShowDopTips && b == a.dataset.popPointIndex ? void (a.context.dataset.disableShowPreview = !0) : (d(".txp_interact_dot_tips").addClass("txp_none"), void (a.dataset.list && a.dataset.list[b] && (d(".txp_tooltip_preview .txp_tooltip_dot_text").removeClass("txp_none"), d(".txp_tooltip_preview .txp_tooltip_dot_text").html(e.xss(a.dataset.list[b].ti)))))
                }), a.dataset.$dots.on("mouseleave", function () {
                    a.context.dataset.disableShowPreview = !1, d(".txp_tooltip_preview .txp_tooltip_dot_text").addClass("txp_none"), d(".txp_tooltip_preview .txp_tooltip_dot_text").html("")
                })
            }, clearList: function () {
                this.dataset.$dots && this.dataset.$dots.length > 0 && this.dataset.$dots.remove(), this.dataset.dopTips && this.dataset.dopTips.remove()
            }, addEventListerner: function () {
                var a = this;
                this.dataset.eventsList = {}, this.dataset.eventsList["getVideoMarkDataReady.1"] = function (b) {
                    a.renderList(b)
                }, this.dataset.eventsList[e.getUniqueMsgKey("vidChange")] = function (b) {
                    a.clearList(), a.dataset = {}
                }, d.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                })
            }
        }, Txplayer.register("UiNormalPoint", c)
    }
});
/*! Txplayer - v3.0.0 - 2020-05-29 18:50:31
 * Copyright (c) 2020
 * Powered by Tencent-Video Web Front End Team
*/
!function (a) {
    function b(d) {
        if (c[d]) return c[d].exports;
        var e = c[d] = {exports: {}, id: d, loaded: !1};
        return a[d].call(e.exports, e, e.exports, b), e.loaded = !0, e.exports
    }

    var c = {};
    return b.m = a, b.c = c, b.p = "", b(0)
}({
    0: function (a, b, c) {
        a.exports = c(301)
    }, 175: function (a, b) {
        a.exports = '<txpdiv data-role="<%=playBtn%>" class="txp_btn txp_btn_play" data-status="play" aria-label="\u64ad\u653e/\u6682\u505c">\n  <% if(isUseH5Type){ %>\n  <svg class="txp_icon txp_icon_play" viewBox="0 0 60 60" >\n\t<use class="txp_svg_play" xlink:href="<%=svgPrefix%>#txp_svg_play" />\n\t<use class="txp_svg_pause" xlink:href="<%=svgPrefix%>#txp_svg_pause" />\n\t<use class="txp_svg_stop" xlink:href="<%=svgPrefix%>#txp_svg_stop" />\n\t<use class="txp_svg_replay" xlink:href="<%=svgPrefix%>#txp_svg_replay" />\n  </svg>\n  <% }else{%>\n  <svg class="txp_icon txp_icon_play" version="1.1" viewBox="0 0 36 36">\n    <use class="txp_svg_symbol txp_svg_play" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="<%=svgPrefix%>#txp_svg_play"></use>\n    <use class="txp_svg_symbol txp_svg_pause" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="<%=svgPrefix%>#txp_svg_pause"></use>\n    <use class="txp_svg_symbol txp_svg_stop" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="<%=svgPrefix%>#txp_svg_stop"></use>\n    <use class="txp_svg_symbol txp_svg_replay" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="<%=svgPrefix%>#txp_svg_replay"></use>\n  </svg>\n  <txpdiv data-role="<%=tips%>" class="txp_tooltip">\u64ad\u653e</txpdiv>\n  <% } %>\n</txpdiv>'
    }, 301: function (a, b, c) {
        function d(a) {
            e = Txplayer.$, this.dataset = {}, this.context = a, this.init()
        }

        var e = Txplayer.$, f = Txplayer.util, g = c(175), h = c(302);
        d.prototype = {
            init: function () {
                this.write(), this.addEventListener()
            }, write: function () {
                var a = {
                    playBtn: "txp-ui-control-playbtn",
                    tips: "txp-ui-control-playbtn-tips",
                    isUseH5Type: f.isUseH5Type(),
                    tabindex: Txplayer.dataset.tabindex++
                }, b = e.tmpl(g, a);
                if (this.context.config.enableStopButton) {
                    var c = {stopBtn: "txp-ui-control-stopbtn", tips: "txp-ui-control-stopbtn-tips"}, d = e.tmpl(h, c);
                    this.context.$mod.$buttonsleftmod.append(d), this.dataset.$stopbtn = this.context.$mod.$buttonsleftmod.find('[data-role="' + c.stopBtn + '"]')
                }
                this.context.$mod.$buttonsleftmod.append(b), this.dataset.$playbtn = this.context.$mod.$buttonsleftmod.find('[data-role="' + a.playBtn + '"]'), this.dataset.$tips = this.context.$mod.$buttonsleftmod.find('[data-role="' + a.tips + '"]')
            }, remove: function () {
                this.dataset.$playbtn.remove()
            }, initPlayState: function () {
                var a = this.context.dataset.playState;
                1 === a || 3 === a ? (this.dataset.$playbtn.attr("data-status", "pause"), this.dataset.$tips.html("\u6682\u505c")) : 0 === a ? (this.dataset.$playbtn.attr("data-status", "replay"), this.dataset.$tips.html("\u91cd\u65b0\u64ad\u653e")) : (this.dataset.$playbtn.attr("data-status", "play"), this.dataset.$tips.html("\u64ad\u653e"))
            }, bindMouseEvent: function () {
                var a = this;
                this.dataset.$playbtn.on("mouseenter", function () {
                    a.dataset.$playbtn.addClass(Txplayer.dataset.btnHoverClass)
                }).on("mouseleave", function () {
                    a.dataset.$playbtn.removeClass(Txplayer.dataset.btnHoverClass)
                })
            }, stopPauseTimer: function () {
                this.dataset.pauseTimer && (clearTimeout(this.dataset.pauseTimer), this.dataset.pauseTimer = null)
            }, addEventListener: function () {
                var a = this;
                this.initPlayState(), this.dataset.$stopbtn && this.dataset.$stopbtn.on(Txplayer.dataset.clickEventName, function () {
                    "function" == typeof a.context.userApi.stop && (a.context.userApi.stop(), a.context.userMsg.broadcast("userClickStopBtn"))
                }), this.dataset.$playbtn.on(Txplayer.dataset.clickEventName, function () {
                    var b = (e(this), a.context.dataset.isPlayingAd);
                    if (!b) {
                        a.context.msg.broadcast("reportUsrAction", {usr_action: a.dataset.$playbtn.attr("data-status")});
                        try {
                            a.context.userMsg.broadcast("userClickPlayBtn")
                        } catch (c) {
                        }
                        "pause" === a.dataset.$playbtn.attr("data-status") ? (a.context.msg.broadcast("pauseControl"), a.context.msg.broadcast("userPausePlayer"), a.context.userMsg.broadcast("pause")) : "replay" === a.dataset.$playbtn.attr("data-status") ? (a.context.dataset.connectionPlayTime = 0, a.context.msg.broadcast("beforeVideoRePlay"), a.context.msg.broadcast("playControl", {
                            vid: a.context.dataset.vid,
                            connectionPlayType: 1,
                            playStartTime: a.context.dataset.playStartTime,
                            playEndTime: a.context.dataset.playEndTime
                        }), a.context.msg.broadcast("userPlayPlayer")) : (a.context.msg.broadcast("playControl", {connectionPlayType: 1}), a.context.msg.broadcast("userPlayPlayer"))
                    }
                }), this.dataset.eventsList = {}, this.dataset.eventsList[f.getUniqueMsgKey("getVideoUrlSuccess")] = function () {
                    a.dataset.isAllEnd = !1
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoPlay")] = function () {
                    a.dataset.isAllEnd = !1, a.dataset.$playbtn.attr("data-status", "pause"), a.dataset.$tips.html("\u6682\u505c")
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoPause")] = function (b) {
                    b && "film" != b.playListType || a.context.dataset.isDefinitionSwitching && !a.context.dataset.useChromeHls || (a.stopPauseTimer(), a.dataset.pauseTimer = setTimeout(function () {
                        if (!a.context.dataset.isDefinitionSwitching || a.context.dataset.useChromeHls) {
                            if (a.dataset.isAllEnd) return a.dataset.$playbtn.attr("data-status", "replay"), a.dataset.$tips.html("\u91cd\u65b0\u64ad\u653e"), void a.context.msg.broadcast("hideLoading");
                            if (2 === a.context.dataset.playState) {
                                if (a.context.dataset.canPlayTime && a.context.dataset.currentTime >= a.context.dataset.canPlayTime) return a.dataset.isAllEnd = !0, a.dataset.$playbtn.attr("data-status", "replay"), a.dataset.$playbtn.removeClass("txp_disabled"), void a.dataset.$tips.html("\u91cd\u65b0\u64ad\u653e");
                                a.dataset.$playbtn.attr("data-status", "play"), a.dataset.$tips.html("\u64ad\u653e"), a.context.msg.broadcast("hideLoading")
                            }
                        }
                    }, 200))
                }, this.dataset.eventsList[f.getUniqueMsgKey("seekEnd")] = function (b) {
                    "h5" != a.context.config.playerType && 2 === a.context.dataset.playState && (!a.context.dataset.canPlayTime || a.context.dataset.currentTime < a.context.dataset.canPlayTime) && (a.dataset.$playbtn.attr("data-status", "play"), a.dataset.$tips.html("\u64ad\u653e"))
                }, this.dataset.eventsList[f.getUniqueMsgKey("showUIVipGuide")] = function (b) {
                    b && b.trialFinish && (f.v4log("v4UiControlPlay-\u91cd\u65b0\u64ad\u653e\u6309\u94ae"), a.dataset.$playbtn.attr("data-status", "replay"), a.dataset.$playbtn.removeClass("txp_disabled"), a.dataset.$tips.html("\u91cd\u65b0\u64ad\u653e"))
                }, this.dataset.eventsList[f.getUniqueMsgKey("showLoginGuide")] = function (b) {
                    a.dataset.$playbtn.attr("data-status", "play"), a.dataset.$tips.html("\u64ad\u653e")
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoEnd")] = function (b) {
                    b && b.isAllEnd && (a.dataset.isAllEnd = !0, a.context.msg.broadcast("pause"), a.dataset.$playbtn.attr("data-status", "replay"), a.dataset.$playbtn.removeClass("txp_disabled"), a.dataset.$tips.html("\u91cd\u65b0\u64ad\u653e"))
                }, this.dataset.eventsList[f.getUniqueMsgKey("vidChange")] = function (b) {
                    a.dataset.$playbtn.attr("data-status", "play"), a.dataset.$tips.html("\u64ad\u653e")
                }, this.dataset.eventsList[f.getUniqueMsgKey("beforeVideoPlay")] = function (b) {
                    a.dataset.isAllEnd = !1, a.dataset.$playbtn.attr("data-status", "play"), a.dataset.$playbtn.addClass("txp_disabled")
                }, this.dataset.eventsList[f.getUniqueMsgKey("videoPlaying")] = function (b) {
                    a.dataset.$playbtn.attr("data-status", "pause"), a.dataset.$tips.html("\u6682\u505c"), setTimeout(function () {
                        if ("film" != a.context.dataset.currentPlayListType) {
                            if (a.dataset.$playbtn.hasClass("txp_disabled")) return;
                            a.dataset.$playbtn.addClass("txp_disabled")
                        } else {
                            if (a.context.dataset.isDuringZcCountdown) return;
                            a.dataset.$playbtn.removeClass("txp_disabled")
                        }
                    }, 100)
                }, this.dataset.eventsList[f.getUniqueMsgKey("isPlayingAdStatusChange")] = function (b) {
                    if (f.v4log("isPlayingAdStatusChange-disablePlayBtn", {isPlayingAd: b}), b) {
                        if (a.dataset.$playbtn.attr("data-status", "pause"), a.dataset.$tips.html("\u6682\u505c"), a.dataset.$playbtn.hasClass("txp_disabled")) return;
                        a.dataset.$playbtn.addClass("txp_disabled")
                    } else a.dataset.$playbtn.removeClass("txp_disabled")
                }, this.dataset.eventsList[f.getUniqueMsgKey("userStopVideo")] = function (b) {
                    a.initPlayState(), a.dataset.$playbtn.removeClass("txp_disabled")
                }, this.dataset.eventsList[f.getUniqueMsgKey("disablePlayBtn")] = function (b) {
                    a.dataset.$playbtn.addClass("txp_disabled")
                }, e.each(this.dataset.eventsList, function (b, c) {
                    a.context.msg.on(b, c)
                }), f.mobile || this.bindMouseEvent()
            }
        }, Txplayer.register("v4UiControlPlay", d)
    }, 302: function (a, b) {
        a.exports = '<txpdiv data-role="<%=stopBtn%>" class="txp_btn txp_btn_play" data-status="stop" aria-label="\u505c\u6b62">\n    <svg class="txp_icon txp_icon_play" version="1.1" viewBox="0 0 36 36">\n    <use class="txp_svg_symbol txp_svg_stop" xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="<%=svgPrefix%>#txp_svg_stop"></use>\n  </svg>\n    <txpdiv data-role="<%=tips%>" class="txp_tooltip">\u505c\u6b62</txpdiv>\n</txpdiv>'
    }
});

// /tencentvideo/txpv5/creative/plugins/txp-creative-player.1.0.145.js
// /tencentvideo/txp/js/plugins/htmlframe.610df7.js
// v4hdplayer.95a573.js
// uishadow.935018.js
// hdadadapter.4aacd6.js
// uiposter.dbecc5.js
// v4h5report.99a36e.js
// v4hdplayerreport.2f151a.js
// uiloading.914c88.js
// uiloadingwithad.9b3274.js
// hdplayerhistory.7d5e73.js
// hlshelperp2pencrypt.3cbed1.js
// v4hdplayercontrol.df2643.js
// downloadmonitor.438f48.js
// v4uierror.1cae46.js
// uitips.5389af.js
// uicontrol.9c3b60.js
// uiprogress.1c8ba2.js
// uinormalpoint.dd890a.js
// v4uicontrolplay.51c9c5.js